<module name="UART3" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="UART_DLL" acronym="UART_DLL" offset="0x0" width="32" description="This register, with, stores the 14-bit divisor for generation of the baud clock in the baud rate generator. DLH stores the most-significant part of the divisor. DLL stores the least-significant part of the divisor.">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0. Write has no effect." range="" rwaccess="RW"/>
    <bitfield id="CLOCK_LSB" width="8" begin="7" end="0" resetval="0x00" description="Stores the 8-bit LSB divisor value" range="" rwaccess="RW"/>
  </register>
  <register id="UART_RHR" acronym="UART_RHR" offset="0x0" width="32" description="The receiver section consists of the receiver holding register (RHR) and the receiver shift register. The RHR is a 64-byte FIFO. The receiver shift register receives serial data from RX input. The data is converted to parallel data and moved to the RHR. If the FIFO is disabled, location 0 of the FIFO stores the single data character.Note:If an overflow occurs, the data in the RHR is not overwritten.">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0" range="" rwaccess="R"/>
    <bitfield id="RHR" width="8" begin="7" end="0" resetval="0x-" description="Receive holding register" range="" rwaccess="R"/>
  </register>
  <register id="UART_THR" acronym="UART_THR" offset="0x0" width="32" description="The transmitter section consists of the transmit holding register (THR) and the transmit shift register. The THR is a 64-byte FIFO. The local host (LH) writes data to the THR. The data is placed in the transmit shift register where it is shifted out serially on the TX output. If the FIFO is disabled, location 0 of the FIFO stores the data.">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Write has no effect." range="" rwaccess="W"/>
    <bitfield id="THR" width="8" begin="7" end="0" resetval="0x-" description="Transmit holding register" range="" rwaccess="W"/>
  </register>
  <register id="UART_DLH" acronym="UART_DLH" offset="0x4" width="32" description="This register, with, stores the 14-bit divisor for generating the baud clock in the baud rate generator. DLH stores the most-significant part of the divisor. DLL stores the least-significant part of the divisor.">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0. Write has no effect." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0x0" description="Read returns 0. Write has no effect." range="" rwaccess="RW"/>
    <bitfield id="CLOCK_MSB" width="6" begin="5" end="0" resetval="0x00" description="Stores the 6-bit MSB divisor value" range="" rwaccess="RW"/>
  </register>
  <register id="UART_IER" acronym="UART_IER" offset="0x4" width="32" description="Interrupt enable register">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0. Write has no effect." range="" rwaccess="RW"/>
    <bitfield id="CTS_IT" width="1" begin="7" end="7" resetval="0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="Disables_the_CTS*_interrupt" token="CTS_IT_0" description="Disables the CTS* interrupt"/>
      <bitenum value="1" id="Enables_the_CTS*_interrupt" token="CTS_IT_1" description="Enables the CTS* interrupt"/>
    </bitfield>
    <bitfield id="RTS_IT" width="1" begin="6" end="6" resetval="0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="Disables_the_RTS*_interrupt" token="RTS_IT_0" description="Disables the RTS* interrupt"/>
      <bitenum value="1" id="Enables_the_RTS*_interrupt" token="RTS_IT_1" description="Enables the RTS* interrupt"/>
    </bitfield>
    <bitfield id="XOFF_IT" width="1" begin="5" end="5" resetval="0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="Disables_the_XOFF_interrupt" token="XOFF_IT_0" description="Disables the XOFF interrupt"/>
      <bitenum value="1" id="Enables_the_XOFF_interrupt" token="XOFF_IT_1" description="Enables the XOFF interrupt"/>
    </bitfield>
    <bitfield id="SLEEP_MODE" width="1" begin="4" end="4" resetval="0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="Disables_sleep_mode" token="SLEEP_MODE_0" description="Disables sleep mode"/>
      <bitenum value="1" id="1" token="SLEEP_MODE_1" description="Enables sleep mode (stop baud rate clock when the module is inactive)"/>
    </bitfield>
    <bitfield id="MODEM_STS_IT" width="1" begin="3" end="3" resetval="0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="MODEM_STS_IT_0" description="Disables the modem status register interrupt"/>
      <bitenum value="1" id="1" token="MODEM_STS_IT_1" description="Enables the modem status register interrupt"/>
    </bitfield>
    <bitfield id="LINE_STS_IT" width="1" begin="2" end="2" resetval="0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="LINE_STS_IT_0" description="Disables the receiver line status interrupt"/>
      <bitenum value="1" id="1" token="LINE_STS_IT_1" description="Enables the receiver line status interrupt"/>
    </bitfield>
    <bitfield id="THR_IT" width="1" begin="1" end="1" resetval="0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="Disables_the_THR_interrupt" token="THR_IT_0" description="Disables the THR interrupt"/>
      <bitenum value="1" id="Enables_the_THR_interrupt" token="THR_IT_1" description="Enables the THR interrupt"/>
    </bitfield>
    <bitfield id="RHR_IT" width="1" begin="0" end="0" resetval="0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="RHR_0" token="RHR_IT_0" description="Disables the RHR interrupt and time-out interrupt"/>
      <bitenum value="1" id="RHR_1" token="RHR_IT_1" description="Enables the RHR interrupt and time-out interrupt"/>
    </bitfield>
  </register>
  <register id="UART_EFR" acronym="UART_EFR" offset="0x8" width="32" description="Enhanced feature register">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0. Write has no effect." range="" rwaccess="RW"/>
    <bitfield id="AUTO_CTS_EN" width="1" begin="7" end="7" resetval="0" description="Auto-CTS enable bit" range="" rwaccess="RW">
      <bitenum value="0" id="Normal_operation" token="AUTO_CTS_EN_0" description="Normal operation"/>
      <bitenum value="1" id="CTS*_1" token="AUTO_CTS_EN_1" description="Auto-CTS flow control is enabled. Transmission is halted when the CTS* pin is high (inactive)."/>
    </bitfield>
    <bitfield id="AUTO_RTS_EN" width="1" begin="6" end="6" resetval="0" description="Auto-RTS enable bit" range="" rwaccess="RW">
      <bitenum value="0" id="Normal_operation" token="AUTO_RTS_EN_0" description="Normal operation"/>
      <bitenum value="1" id="RTS*_RX_FIFO_HALT_RX_FIFO_RESTORE_1" token="AUTO_RTS_EN_1" description="Auto-RTS flow control is enabled. RTS* pin goes high (inactive) when the RX FIFO HALT trigger level,[3:0], is reached, and goes low (active) when the RX FIFO RESTORE transmission trigger level is reached."/>
    </bitfield>
    <bitfield id="SPECIAL_CHAR_DETECT" width="1" begin="5" end="5" resetval="0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="Normal_operation" token="SPECIAL_CHAR_DETECT_0" description="Normal operation"/>
      <bitenum value="1" id="XOFF2_RX_FIFO_1" token="SPECIAL_CHAR_DETECT_1" description="Special character detect enable. Received data is compared with XOFF2 data. If a match occurs, the received data is transferred to the RX FIFO and the[4] bit is set to 1 to indicate that a special character was detected."/>
    </bitfield>
    <bitfield id="ENHANCED_EN" width="1" begin="4" end="4" resetval="0" description="Enhanced functions write enable bit" range="" rwaccess="RW">
      <bitenum value="0" id="IER_0" token="ENHANCED_EN_0" description="Disables writing to IER bits 4-7, bits 4-5, and bits 5-7."/>
      <bitenum value="1" id="IER_1" token="ENHANCED_EN_1" description="Enables writing to IER bits 4-7, bits 4-5, and bits 5-7."/>
    </bitfield>
    <bitfield id="SW_FLOW_CONTROL" width="4" begin="3" end="0" resetval="0x0" description="Combinations of software flow control can be selected by programming bit 3 - bit 0. See." range="" rwaccess="RW"/>
  </register>
  <register id="UART_FCR" acronym="UART_FCR" offset="0x8" width="32" description="FIFO control register">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Write has no effect." range="" rwaccess="W"/>
    <bitfield id="RX_FIFO_TRIG" width="2" begin="7" end="6" resetval="0x0" description="Sets the trigger level for the RX FIFO: If UART_SCR[7] = 0 and UART_TLR[7:4] = 0000: 00: 8 characters 01: 16 characters 10: 56 characters 11: 60 characters If UART_SCR[7] = 0 and UART_TLR[7:4] != 0000, RX_FIFO_TRIG is not considered. If UART_SCR[7] = 1, RX_FIFO_TRIG is 2 LSBs of the trigger level (1-63 on 6 bits) with the granularity 1." range="" rwaccess="W"/>
    <bitfield id="TX_FIFO_TRIG" width="2" begin="5" end="4" resetval="0x0" description="Sets the trigger level for the TX FIFO: If UART_SCR[6] = 0 and UART_TLR[3:0] = 0000: 00: 8 spaces 01: 16 spaces 10: 32 spaces 11: 56 spaces If UART_SCR[6] = 0 and UART_TLR[3:0] != 0000, TX_FIFO_TRIG is not considered. If UART_SCR[6] = 1, TX_FIFO_TRIG is 2 LSBs of the trigger level (1-63 on 6 bits) with the granularity 1" range="" rwaccess="W"/>
    <bitfield id="DMA_MODE" width="1" begin="3" end="3" resetval="0" description="This register is considered ifUART_SCR[0] = 0." range="" rwaccess="W">
      <bitenum value="0" id="DMA_MODE_0_(No_DMA)" token="DMA_MODE_0_w" description="DMA_MODE 0 (No DMA)"/>
      <bitenum value="1" id="DMA_MODE_TX_RX_1" token="DMA_MODE_1_w" description="DMA_MODE 1 (UART_nDMA_REQ[0] in TX (UARTi_DREQ_TX), UART_nDMA_REQ[1] in RX (UARTi_DREQ_RX))"/>
    </bitfield>
    <bitfield id="TX_FIFO_CLEAR" width="1" begin="2" end="2" resetval="0" description="" range="" rwaccess="W">
      <bitenum value="0" id="No_change" token="TX_FIFO_CLEAR_0_w" description="No change"/>
      <bitenum value="1" id="TX_FIFO_FIFO._1" token="TX_FIFO_CLEAR_1_w" description="Clears the TX FIFO and resets its counter logic to 0. Returns to 0 after clearing FIFO."/>
    </bitfield>
    <bitfield id="RX_FIFO_CLEAR" width="1" begin="1" end="1" resetval="0" description="" range="" rwaccess="W">
      <bitenum value="0" id="No_change" token="RX_FIFO_CLEAR_0_w" description="No change"/>
      <bitenum value="1" id="RX_FIFO_FIFO._1" token="RX_FIFO_CLEAR_1_w" description="Clears the RX FIFO and resets its counter logic to 0. Returns to 0 after clearing FIFO."/>
    </bitfield>
    <bitfield id="FIFO_EN" width="1" begin="0" end="0" resetval="0" description="" range="" rwaccess="W">
      <bitenum value="0" id="RX_0" token="FIFO_EN_0_w" description="Disables the transmit and RX FIFOs. The transmit and receive holding registers are 1-byte FIFOs."/>
      <bitenum value="1" id="RX_1" token="FIFO_EN_1_w" description="Enables the transmit and RX FIFOs. The transmit and receive holding registers are 64-byte FIFOs."/>
    </bitfield>
  </register>
  <register id="UART_IIR" acronym="UART_IIR" offset="0x8" width="32" description="Interrupt identification register.">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0. Write has no effect." range="" rwaccess="R"/>
    <bitfield id="FCR_MIRROR" width="2" begin="7" end="6" resetval="0x0" description="Mirror the contents ofUART_FCR[0] on both bits." range="" rwaccess="R"/>
    <bitfield id="IT_TYPE" width="5" begin="5" end="1" resetval="0x00" description="Read 0x0: Modem interrupt. Priority = 4" range="" rwaccess="R">
      <bitenum value="1" id="THR_interrupt._Priority_=_3" token="IT_TYPE_1_r" description="THR interrupt. Priority = 3"/>
      <bitenum value="2" id="RHR_interrupt._Priority_=_2" token="IT_TYPE_2_r" description="RHR interrupt. Priority = 2"/>
      <bitenum value="3" id="3" token="IT_TYPE_3_r" description="Receiver line status error. Priority = 3"/>
      <bitenum value="6" id="Rx_time-out._Priority_=_2" token="IT_TYPE_6_r" description="Rx time-out. Priority = 2"/>
      <bitenum value="8" id="XOFF/special_character._Priority_=_5" token="IT_TYPE_8_r" description="XOFF/special character. Priority = 5"/>
      <bitenum value="16" id="CTS,_RTS,_DSR_16" token="IT_TYPE_16_r" description="CTS, RTS, DSR change state from active (low) to inactive (high) Priority = 6"/>
    </bitfield>
    <bitfield id="IT_PENDING" width="1" begin="0" end="0" resetval="1" description="Read 0x0: An interrupt is pending." range="" rwaccess="R">
      <bitenum value="1" id="No_interrupt_is_pending." token="IT_PENDING_1_r" description="No interrupt is pending."/>
    </bitfield>
  </register>
  <register id="UART_LCR" acronym="UART_LCR" offset="0xC" width="32" description="Line control register">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0. Write has no effect." range="" rwaccess="RW"/>
    <bitfield id="DIV_EN" width="1" begin="7" end="7" resetval="0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="Normal_operating_condition" token="DIV_EN_0" description="Normal operating condition"/>
      <bitenum value="1" id="1" token="DIV_EN_1" description="Divisor latch enable. Allows access to, , and other registers (see )."/>
    </bitfield>
    <bitfield id="BREAK_EN" width="1" begin="6" end="6" resetval="0" description="Break control bit" range="" rwaccess="RW">
      <bitenum value="0" id="Normal_operating_condition" token="BREAK_EN_0" description="Normal operating condition"/>
      <bitenum value="1" id="1" token="BREAK_EN_1" description="Forces the transmitter output to go low to alert the communication terminal"/>
    </bitfield>
    <bitfield id="PARITY_TYPE2" width="1" begin="5" end="5" resetval="0" description="Selects the forced parity format (ifUART_LCR[3] = 1). If UART_LCR[5] = 1 and UART_LCR[4] = 0, the parity bit is forced to 1 in the transmitted and received data. If UART_LCR[5] = 1 and UART_LCR[4] = 1, the parity bit is forced to 0 in the transmitted and received data." range="" rwaccess="RW"/>
    <bitfield id="PARITY_TYPE1" width="1" begin="4" end="4" resetval="0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="Odd_parity_is_generated_(if[3]_=_1)." token="PARITY_TYPE1_0" description="Odd parity is generated (if[3] = 1)."/>
      <bitenum value="1" id="Even_parity_is_generated_(if[3]_=_1)." token="PARITY_TYPE1_1" description="Even parity is generated (if[3] = 1)."/>
    </bitfield>
    <bitfield id="PARITY_EN" width="1" begin="3" end="3" resetval="0" description="0x0: No parity" range="" rwaccess="RW">
      <bitenum value="1" id="A_1" token="PARITY_EN_1" description="A parity bit is generated during transmission and the receiver checks for received parity."/>
    </bitfield>
    <bitfield id="NB_STOP" width="1" begin="2" end="2" resetval="0" description="Specifies the number of stop-bits" range="" rwaccess="RW">
      <bitenum value="0" id="1_stop-bit_(word_length_=_5,_6,_7,_8)" token="NB_STOP_0" description="1 stop-bit (word length = 5, 6, 7, 8)"/>
      <bitenum value="1" id="1" token="NB_STOP_1" description="1.5 stop-bits (word length = 5) 2 stop-bits (word length = 6, 7, 8)"/>
    </bitfield>
    <bitfield id="CHAR_LENGTH" width="2" begin="1" end="0" resetval="0x0" description="Specifies the word length to be transmitted or received" range="" rwaccess="RW">
      <bitenum value="0" id="5_bits" token="CHAR_LENGTH_0" description="5 bits"/>
      <bitenum value="1" id="6_bits" token="CHAR_LENGTH_1" description="6 bits"/>
      <bitenum value="2" id="7_bits" token="CHAR_LENGTH_2" description="7 bits"/>
      <bitenum value="3" id="8_bits" token="CHAR_LENGTH_3" description="8 bits"/>
    </bitfield>
  </register>
  <register id="UART_MCR" acronym="UART_MCR" offset="0x10" width="32" description="Modem control register">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0. Write has no effect." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0" description="Read returns 0. Write has no effect." range="" rwaccess="RW"/>
    <bitfield id="TCR_TLR" width="1" begin="6" end="6" resetval="0" description="0x0: No action" range="" rwaccess="RW">
      <bitenum value="1" id="Enables_access_to_the_and_registers" token="TCR_TLR_1" description="Enables access to the and registers"/>
    </bitfield>
    <bitfield id="XON_EN" width="1" begin="5" end="5" resetval="0" description="0x0: Disable XON any function." range="" rwaccess="RW">
      <bitenum value="1" id="Enable_XON_any_function." token="XON_EN_1" description="Enable XON any function."/>
    </bitfield>
    <bitfield id="LOOPBACK_EN" width="1" begin="4" end="4" resetval="0" description="0x0: Normal operating mode" range="" rwaccess="RW">
      <bitenum value="1" id="MCR[3:0]_1" token="LOOPBACK_EN_1" description="Enable local loopback mode (internal). In this mode, the MCR[3:0] signals are looped back into the[7:4] bit field. The transmit output is looped back to the receive input internally."/>
    </bitfield>
    <bitfield id="CD_STS_CH" width="1" begin="3" end="3" resetval="0" description="0x0: In loopback, forces DCD* input high and IRQ outputs to inactive state" range="" rwaccess="RW">
      <bitenum value="1" id="DCD*_IRQ_1" token="CD_STS_CH_1" description="In loopback, forces DCD* input low and IRQ outputs to inactive state"/>
    </bitfield>
    <bitfield id="RI_STS_CH" width="1" begin="2" end="2" resetval="0" description="0x0: In loopback, forces RI* input high" range="" rwaccess="RW">
      <bitenum value="1" id="In_loopback,_forces_RI*_input_low" token="RI_STS_CH_1" description="In loopback, forces RI* input low"/>
    </bitfield>
    <bitfield id="RTS" width="1" begin="1" end="1" resetval="0" description="In loopback, controls theUART_MSR[4] bit. If auto-RTS is enabled, the RTS* output is controlled by hardware flow control." range="" rwaccess="RW">
      <bitenum value="0" id="Force_RTS*_output_to_inactive_(high)." token="RTS_0" description="Force RTS* output to inactive (high)."/>
      <bitenum value="1" id="Force_RTS*_output_to_active_(low)." token="RTS_1" description="Force RTS* output to active (low)."/>
    </bitfield>
    <bitfield id="DTR" width="1" begin="0" end="0" resetval="0" description="0x0: Force DTR* output to inactive (high)." range="" rwaccess="RW">
      <bitenum value="1" id="Force_DTR*_output_to_active_(low)." token="DTR_1" description="Force DTR* output to active (low)."/>
    </bitfield>
  </register>
  <register id="UART_XON1_ADDR1" acronym="UART_XON1_ADDR1" offset="0x10" width="32" description="UART mode: XON1 character">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0. Write has no effect." range="" rwaccess="RW"/>
    <bitfield id="XON_WORD1" width="8" begin="7" end="0" resetval="0x00" description="Stores the 8-bit XON1 character in UART modes" range="" rwaccess="RW"/>
  </register>
  <register id="UART_LSR" acronym="UART_LSR" offset="0x14" width="32" description="Line status register">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0." range="" rwaccess="R"/>
    <bitfield id="RX_FIFO_STS" width="1" begin="7" end="7" resetval="0" description="Read 0x0: Normal operation" range="" rwaccess="R">
      <bitenum value="1" id="RX_FIFO._RX_FIFO._1" token="RX_FIFO_STS_1_r" description="At least one parity error, framing error, or break indication in the RX FIFO. Bit 7 is cleared when no more errors are present in the RX FIFO."/>
    </bitfield>
    <bitfield id="TX_SR_E" width="1" begin="6" end="6" resetval="1" description="Read 0x0: Transmitter hold (TX FIFO) and shift registers are not empty." range="" rwaccess="R">
      <bitenum value="1" id="(TX_FIFO)_1" token="TX_SR_E_1_r" description="Transmitter hold (TX FIFO) and shift registers are empty."/>
    </bitfield>
    <bitfield id="TX_FIFO_E" width="1" begin="5" end="5" resetval="1" description="Read 0x0: Transmit hold register (TX FIFO) is not empty." range="" rwaccess="R">
      <bitenum value="1" id="(TX_FIFO)_1" token="TX_FIFO_E_1_r" description="Transmit hold register (TX FIFO) is empty. The transmission is not necessarily complete."/>
    </bitfield>
    <bitfield id="RX_BI" width="1" begin="4" end="4" resetval="0" description="Read 0x0: No break condition" range="" rwaccess="R">
      <bitenum value="1" id="A_RX_FIFO_RX_1" token="RX_BI_1_r" description="A break was detected while the data from the RX FIFO was received (for example, RX input was low for one character + 1 bit time frame)."/>
    </bitfield>
    <bitfield id="RX_FE" width="1" begin="3" end="3" resetval="0" description="Read 0x0: No framing error in data RX FIFO" range="" rwaccess="R">
      <bitenum value="1" id="RX_FIFO_1" token="RX_FE_1_r" description="Framing error occurred in data from RX FIFO (received data did not have a valid stop-bit)."/>
    </bitfield>
    <bitfield id="RX_PE" width="1" begin="2" end="2" resetval="0" description="Read 0x0: No parity error in data from RX FIFO" range="" rwaccess="R">
      <bitenum value="1" id="Parity_error_in_data_from_RX_FIFO" token="RX_PE_1_r" description="Parity error in data from RX FIFO"/>
    </bitfield>
    <bitfield id="RX_OE" width="1" begin="1" end="1" resetval="0" description="Read 0x0: No overrun error" range="" rwaccess="R">
      <bitenum value="1" id="RX_FIFO._RX_FIFO_1" token="RX_OE_1_r" description="Overrun error occurred. Set when the character in the receive shift register is not transferred to the RX FIFO. This occurs only when the RX FIFO is full."/>
    </bitfield>
    <bitfield id="RX_FIFO_E" width="1" begin="0" end="0" resetval="0" description="Read 0x0: No data in the RX FIFO" range="" rwaccess="R">
      <bitenum value="1" id="RX_FIFO_1" token="RX_FIFO_E_1_r" description="At least one data character in the RX FIFO"/>
    </bitfield>
  </register>
  <register id="UART_XON2_ADDR2" acronym="UART_XON2_ADDR2" offset="0x14" width="32" description="Stores the 8-bit XON2 character in UART moldes">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0. Write has no effect." range="" rwaccess="RW"/>
    <bitfield id="XON_WORD2" width="8" begin="7" end="0" resetval="0x00" description="Stores the 8-bit XON2 character in UART modes" range="" rwaccess="RW"/>
  </register>
  <register id="UART_MSR" acronym="UART_MSR" offset="0x18" width="32" description="Modem status register.">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0." range="" rwaccess="R"/>
    <bitfield id="NCD_STS" width="1" begin="7" end="7" resetval="-" description="This bit is the complement of the DCD* input. In loopback mode, it is equivalent toUART_MCR[3]." range="" rwaccess="R"/>
    <bitfield id="NRI_STS" width="1" begin="6" end="6" resetval="-" description="This bit is the complement of the RI* input. In loopback mode, it is equivalent toUART_MCR[2]." range="" rwaccess="R"/>
    <bitfield id="NDSR_STS" width="1" begin="5" end="5" resetval="-" description="This bit is the complement of the DSR* input. In loopback mode, it is equivalent toUART_MCR[0]." range="" rwaccess="R"/>
    <bitfield id="NCTS_STS" width="1" begin="4" end="4" resetval="-" description="This bit is the complement of the CTS* input. In loopback mode, it is equivalent toUART_MCR[1]." range="" rwaccess="R"/>
    <bitfield id="DCD_STS" width="1" begin="3" end="3" resetval="0" description="Indicates that DCD* input (orUART_MCR[3] in loopback) changed. Cleared on a read." range="" rwaccess="R"/>
    <bitfield id="RI_STS" width="1" begin="2" end="2" resetval="0" description="Indicates that RI* input (orUART_MCR[2] in loopback) changed state from low to high. Cleared on a read." range="" rwaccess="R"/>
    <bitfield id="DSR_STS" width="1" begin="1" end="1" resetval="0" description="" range="" rwaccess="R">
      <bitenum value="1" id="DSR*_1" token="DSR_STS_1_r" description="Indicates that DSR* input (or[0] in loopback) changed state. Cleared on a read."/>
    </bitfield>
    <bitfield id="CTS_STS" width="1" begin="0" end="0" resetval="0" description="" range="" rwaccess="R">
      <bitenum value="1" id="CTS*_1" token="CTS_STS_1_r" description="Indicates that CTS* input (or[1] in loopback) changed state. Cleared on a read."/>
    </bitfield>
  </register>
  <register id="UART_TCR" acronym="UART_TCR" offset="0x18" width="32" description="Transmission control register">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0. Write has no effect." range="" rwaccess="RW"/>
    <bitfield id="RX_FIFO_TRIG_START" width="4" begin="7" end="4" resetval="0x0" description="RX FIFO trigger level to RESTORE transmission (0 - 60)" range="" rwaccess="RW"/>
    <bitfield id="RX_FIFO_TRIG_HALT" width="4" begin="3" end="0" resetval="0xF" description="RX FIFO trigger level to HALT transmission (0 - 60)" range="" rwaccess="RW"/>
  </register>
  <register id="UART_XOFF1" acronym="UART_XOFF1" offset="0x18" width="32" description="UART mode XOFF1 character">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0. Write has no effect." range="" rwaccess="RW"/>
    <bitfield id="XOFF_WORD1" width="8" begin="7" end="0" resetval="0x00" description="Stores the 8-bit XOFF1 character used in UART modes" range="" rwaccess="RW"/>
  </register>
  <register id="UART_SPR" acronym="UART_SPR" offset="0x1C" width="32" description="Scratchpad register">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0. Write has no effect." range="" rwaccess="RW"/>
    <bitfield id="SPR_WORD" width="8" begin="7" end="0" resetval="0x00" description="Scratchpad register" range="" rwaccess="RW"/>
  </register>
  <register id="UART_TLR" acronym="UART_TLR" offset="0x1C" width="32" description="Trigger level register">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0. Write has no effect." range="" rwaccess="RW"/>
    <bitfield id="RX_FIFO_TRIG_DMA" width="4" begin="7" end="4" resetval="0x0" description="Receive FIFO trigger level" range="" rwaccess="RW"/>
    <bitfield id="TX_FIFO_TRIG_DMA" width="4" begin="3" end="0" resetval="0x0" description="Transmit FIFO trigger level" range="" rwaccess="RW"/>
  </register>
  <register id="UART_XOFF2" acronym="UART_XOFF2" offset="0x1C" width="32" description="UART mode XOFF2 character">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0. Write has no effect." range="" rwaccess="RW"/>
    <bitfield id="XOFF_WORD2" width="8" begin="7" end="0" resetval="0x00" description="Stores the 8-bit XOFF2 character used in UART modes." range="" rwaccess="RW"/>
  </register>
  <register id="UART_MDR1" acronym="UART_MDR1" offset="0x20" width="32" description="Mode definition register 1">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0. Write has no effect." range="" rwaccess="RW"/>
    <bitfield id="FRAME_END_MODE" width="1" begin="7" end="7" resetval="0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="SIP_MODE" width="1" begin="6" end="6" resetval="0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="SCT" width="1" begin="5" end="5" resetval="0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="SET_TXIR" width="1" begin="4" end="4" resetval="0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="IR_SLEEP" width="1" begin="3" end="3" resetval="0" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="MODE_SELECT" width="3" begin="2" end="0" resetval="0x7" description="0x0: UART 16x mode" range="" rwaccess="RW">
      <bitenum value="1" id="Reserved" token="MODE_SELECT_1" description="Reserved"/>
      <bitenum value="2" id="UART_16x_auto-baud" token="MODE_SELECT_2" description="UART 16x auto-baud"/>
      <bitenum value="3" id="UART_13x_mode" token="MODE_SELECT_3" description="UART 13x mode"/>
      <bitenum value="4" id="Reserved" token="MODE_SELECT_4" description="Reserved"/>
      <bitenum value="5" id="Reserved" token="MODE_SELECT_5" description="Reserved"/>
      <bitenum value="6" id="Reserved" token="MODE_SELECT_6" description="Reserved"/>
      <bitenum value="7" id="Disable_(default_state)" token="MODE_SELECT_7" description="Disable (default state)"/>
    </bitfield>
  </register>
  <register id="UART_UASR" acronym="UART_UASR" offset="0x38" width="32" description="UART autobauding status register">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0." range="" rwaccess="R"/>
    <bitfield id="PARITY_TYPE" width="2" begin="7" end="6" resetval="0x0" description="Read 0x0: No parity identified" range="" rwaccess="R">
      <bitenum value="1" id="Parity_space" token="PARITY_TYPE_1_r" description="Parity space"/>
      <bitenum value="2" id="Even_parity" token="PARITY_TYPE_2_r" description="Even parity"/>
      <bitenum value="3" id="Odd_parity" token="PARITY_TYPE_3_r" description="Odd parity"/>
    </bitfield>
    <bitfield id="BIT_BY_CHAR" width="1" begin="5" end="5" resetval="0" description="Read 0x0: 7-bit character identified" range="" rwaccess="R">
      <bitenum value="1" id="8-bit_character_identified" token="BIT_BY_CHAR_1_r" description="8-bit character identified"/>
    </bitfield>
    <bitfield id="SPEED" width="5" begin="4" end="0" resetval="0x00" description="Used to report the speed identified" range="" rwaccess="R">
      <bitenum value="0" id="No_speed_identified" token="SPEED_0_r" description="No speed identified"/>
      <bitenum value="1" id="115,200_baud" token="SPEED_1_r" description="115,200 baud"/>
      <bitenum value="2" id="57,600_baud" token="SPEED_2_r" description="57,600 baud"/>
      <bitenum value="3" id="38,400_baud" token="SPEED_3_r" description="38,400 baud"/>
      <bitenum value="4" id="28,800_baud" token="SPEED_4_r" description="28,800 baud"/>
      <bitenum value="5" id="19,200_baud" token="SPEED_5_r" description="19,200 baud"/>
      <bitenum value="6" id="14,400_baud" token="SPEED_6_r" description="14,400 baud"/>
      <bitenum value="7" id="9,600_baud" token="SPEED_7_r" description="9,600 baud"/>
      <bitenum value="8" id="4,800_baud" token="SPEED_8_r" description="4,800 baud"/>
      <bitenum value="9" id="2,400_baud" token="SPEED_9_r" description="2,400 baud"/>
      <bitenum value="10" id="1,200_baud" token="SPEED_10_r" description="1,200 baud"/>
    </bitfield>
  </register>
  <register id="UART_SCR" acronym="UART_SCR" offset="0x40" width="32" description="Supplementary control register">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0. Write has no effect." range="" rwaccess="RW"/>
    <bitfield id="RX_TRIG_GRANU1" width="1" begin="7" end="7" resetval="0" description="0x0: Disables the granularity of 1 for trigger RX level" range="" rwaccess="RW">
      <bitenum value="1" id="RX_1" token="RX_TRIG_GRANU1_1" description="Enables the granularity of 1 for trigger RX level"/>
    </bitfield>
    <bitfield id="TX_TRIG_GRANU1" width="1" begin="6" end="6" resetval="0" description="0x0: Disables the granularity of 1 for trigger TX level" range="" rwaccess="RW">
      <bitenum value="1" id="TX_1" token="TX_TRIG_GRANU1_1" description="Enables the granularity of 1 for trigger TX level"/>
    </bitfield>
    <bitfield id="DSR_IT" width="1" begin="5" end="5" resetval="0" description="NOT USED IN THIS DEVICE" range="" rwaccess="RW"/>
    <bitfield id="RX_CTS_DSR_WAKE_UP_ENABLE" width="1" begin="4" end="4" resetval="0" description="0x0: Disables the wake-up interrupt and clears SSR[1]" range="" rwaccess="RW">
      <bitenum value="1" id="RX_CTS*_1" token="RX_CTS_DSR_WAKE_UP_ENABLE_1" description="Waits for a falling edge of pins RX or CTS* to generate an interrupt"/>
    </bitfield>
    <bitfield id="TX_EMPTY_CTL_IT" width="1" begin="3" end="3" resetval="0" description="0x0: Normal mode for THR interrupt (see UART mode interrupts table)" range="" rwaccess="RW">
      <bitenum value="1" id="THR_TX_FIFO_TX_1" token="TX_EMPTY_CTL_IT_1" description="The THR interrupt is generated when TX FIFO and TX shift register are empty."/>
    </bitfield>
    <bitfield id="DMA_MODE_2" width="2" begin="2" end="1" resetval="0x0" description="Used to specify the DMA mode valid if theUART_SCR[0] bit = 1" range="" rwaccess="RW">
      <bitenum value="0" id="DMA_mode_0_(no_DMA)" token="DMA_MODE_2_0" description="DMA mode 0 (no DMA)"/>
      <bitenum value="1" id="DMA_TX,_RX)_1" token="DMA_MODE_2_1" description="DMA mode 1 (UART_nDMA_REQ[0] in TX, UART_nDMA_REQ[1] in RX)"/>
      <bitenum value="2" id="DMA_mode_2_(UART_nDMA_REQ[0]_in_RX)" token="DMA_MODE_2_2" description="DMA mode 2 (UART_nDMA_REQ[0] in RX)"/>
      <bitenum value="3" id="DMA_mode_3_(UART_nDMA_REQ[0]_in_TX)" token="DMA_MODE_2_3" description="DMA mode 3 (UART_nDMA_REQ[0] in TX)"/>
    </bitfield>
    <bitfield id="DMA_MODE_CTL" width="1" begin="0" end="0" resetval="0" description="0x0: The DMA_MODE is set withUART_FCR[3]." range="" rwaccess="RW">
      <bitenum value="1" id="The_DMA_MODE_is_set_with[2:1]." token="DMA_MODE_CTL_1" description="The DMA_MODE is set with[2:1]."/>
    </bitfield>
  </register>
  <register id="UART_SSR" acronym="UART_SSR" offset="0x44" width="32" description="Supplementary status register">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0." range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="5" begin="7" end="3" resetval="0x00" description="Read returns 0." range="" rwaccess="R"/>
    <bitfield id="DMA_COUNTER_RST" width="1" begin="2" end="2" resetval="1" description="0x0: The DMA counter will not be reset if the corresponding FIFO is reset (throughUART_FCR[1] or UART_FCR[2])." range="" rwaccess="RW">
      <bitenum value="1" id="DMA_FIFO_1" token="DMA_COUNTER_RST_1" description="The DMA counter will be reset if corresponding FIFO is reset (through[1] or [2])."/>
    </bitfield>
    <bitfield id="RX_CTS_DSR_WAKE_UP_STS" width="1" begin="1" end="1" resetval="0" description="Read 0x0: No falling edge event on RX and CTS*." range="" rwaccess="R">
      <bitenum value="1" id="A_falling_edge_occurred_on_RX_or_CTS*." token="RX_CTS_DSR_WAKE_UP_STS_1_r" description="A falling edge occurred on RX or CTS*."/>
    </bitfield>
    <bitfield id="TX_FIFO_FULL" width="1" begin="0" end="0" resetval="0" description="Read 0x0: TX FIFO is not full." range="" rwaccess="R">
      <bitenum value="1" id="TX_FIFO_is_full." token="TX_FIFO_FULL_1_r" description="TX FIFO is full."/>
    </bitfield>
  </register>
  <register id="UART_MVR" acronym="UART_MVR" offset="0x50" width="32" description="Module version register">
    <bitfield id="REV" width="32" begin="31" end="0" resetval="0x-- TI internal data" description="Revision number" range="" rwaccess="R"/>
  </register>
  <register id="UART_SYSC" acronym="UART_SYSC" offset="0x54" width="32" description="System configuration register">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0. Write has no effect." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0x0" description="Read returns 0." range="" rwaccess="R"/>
    <bitfield id="IDLEMODE" width="2" begin="4" end="3" resetval="0x0" description="Power management req/ack control" range="" rwaccess="RW">
      <bitenum value="0" id="0" token="IDLEMODE_0" description="Force-idle: Idle request is acknowledged unconditionally."/>
      <bitenum value="1" id="1" token="IDLEMODE_1" description="No-idle: Idle request is never acknowledged."/>
      <bitenum value="2" id="2" token="IDLEMODE_2" description="Smart-idle: Idle request is acknowledged based in module internal activity."/>
      <bitenum value="3" id="3" token="IDLEMODE_3" description="Smart-idle Wake-up: Acknowledgement to an idle request is given based in the internal activity of the module. The module is allowed to generate wake-up request."/>
    </bitfield>
    <bitfield id="ENAWAKEUP" width="1" begin="2" end="2" resetval="0" description="Wake-up feature control" range="" rwaccess="RW">
      <bitenum value="0" id="Wakeup_is_disabled." token="ENAWAKEUP_0" description="Wakeup is disabled."/>
      <bitenum value="1" id="Wake-up_capability_is_enabled." token="ENAWAKEUP_1" description="Wake-up capability is enabled."/>
    </bitfield>
    <bitfield id="SOFTRESET" width="1" begin="1" end="1" resetval="0" description="Software reset. Set this bit to 1 to trigger a module reset. This bit is automatically reset by the hardware. Read returns 0." range="" rwaccess="RW">
      <bitenum value="0" id="Normal_mode" token="SOFTRESET_0" description="Normal mode"/>
      <bitenum value="1" id="The_module_is_reset." token="SOFTRESET_1" description="The module is reset."/>
    </bitfield>
    <bitfield id="AUTOIDLE" width="1" begin="0" end="0" resetval="0" description="Internal OCP clock gating strategy" range="" rwaccess="RW">
      <bitenum value="0" id="Clock_is_running." token="AUTOIDLE_0" description="Clock is running."/>
      <bitenum value="1" id="OCP_OCP_1" token="AUTOIDLE_1" description="Automatic OCP clock gating strategy is applied, based on OCP interface activity"/>
    </bitfield>
  </register>
  <register id="UART_SYSS" acronym="UART_SYSS" offset="0x58" width="32" description="System status register">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0." range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="7" begin="7" end="1" resetval="0x00" description="Read returns 0." range="" rwaccess="R"/>
    <bitfield id="RESETDONE" width="1" begin="0" end="0" resetval="0" description="Internal reset monitoring" range="" rwaccess="R">
      <bitenum value="0" id="Internal_module_reset_is_ongoing." token="RESETDONE_0_r" description="Internal module reset is ongoing."/>
      <bitenum value="1" id="Reset_complete" token="RESETDONE_1_r" description="Reset complete"/>
    </bitfield>
  </register>
  <register id="UART_WER" acronym="UART_WER" offset="0x5C" width="32" description="Wake-up enable register">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0. Write has no effect." range="" rwaccess="RW"/>
    <bitfield id="TX_WAKEUP_EN" width="1" begin="7" end="7" resetval="0" description="0x0: Event is not allowed to wake up the system." range="" rwaccess="RW">
      <bitenum value="1" id="THR_IT_TX_DMA_TX_SATUS_IT._1" token="TX_WAKEUP_EN_1" description="Event can wake up the system: it can be THR_IT or TX_DMA request and/or TX_SATUS_IT."/>
    </bitfield>
    <bitfield id="EVENT_6_RECEIVER_LINE_STATUS_INTERRUPT" width="1" begin="6" end="6" resetval="1" description="0x0: Event is not allowed to wake up the system." range="" rwaccess="RW">
      <bitenum value="1" id="Event_can_wake_up_the_system." token="EVENT_6_RECEIVER_LINE_STATUS_INTERRUPT_1" description="Event can wake up the system."/>
    </bitfield>
    <bitfield id="EVENT_5_RHR_INTERRUPT" width="1" begin="5" end="5" resetval="1" description="0x0: Event is not allowed to wake up the system." range="" rwaccess="RW">
      <bitenum value="1" id="Event_can_wake_up_the_system." token="EVENT_5_RHR_INTERRUPT_1" description="Event can wake up the system."/>
    </bitfield>
    <bitfield id="EVENT_4_RX_ACTIVITY" width="1" begin="4" end="4" resetval="1" description="0x0: Event is not allowed to wake up the system." range="" rwaccess="RW">
      <bitenum value="1" id="Event_can_wake_up_the_system." token="EVENT_4_RX_ACTIVITY_1" description="Event can wake up the system."/>
    </bitfield>
    <bitfield id="EVENT_3_DCD_CD_ACTIVITY" width="1" begin="3" end="3" resetval="1" description="0x0: Event is not allowed to wake up the system" range="" rwaccess="RW">
      <bitenum value="1" id="Event_can_wake_up_the_system" token="EVENT_3_DCD_CD_ACTIVITY_1" description="Event can wake up the system"/>
    </bitfield>
    <bitfield id="EVENT_2_RI_ACTIVITY" width="1" begin="2" end="2" resetval="1" description="0x0: Event is not allowed to wake up the system." range="" rwaccess="RW">
      <bitenum value="1" id="Event_can_wake_up_the_system." token="EVENT_2_RI_ACTIVITY_1" description="Event can wake up the system."/>
    </bitfield>
    <bitfield id="EVENT_1_DSR_ACTIVITY" width="1" begin="1" end="1" resetval="1" description="0x0: Event is not allowed to wake up the system." range="" rwaccess="RW">
      <bitenum value="1" id="Event_can_wake_up_the_system." token="EVENT_1_DSR_ACTIVITY_1" description="Event can wake up the system."/>
    </bitfield>
    <bitfield id="EVENT_0_CTS_ACTIVITY" width="1" begin="0" end="0" resetval="1" description="0x0: Event is not allowed to wake up the system." range="" rwaccess="RW">
      <bitenum value="1" id="Event_can_wake_up_the_system." token="EVENT_0_CTS_ACTIVITY_1" description="Event can wake up the system."/>
    </bitfield>
  </register>
  <register id="UART_RXFIFO_LVL" acronym="UART_RXFIFO_LVL" offset="0x64" width="32" description="Level of the RX FIFO">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0." range="" rwaccess="R"/>
    <bitfield id="RXFIFO_LVL" width="8" begin="7" end="0" resetval="0x00" description="Shows the number of received bytes in the RX FIFO" range="" rwaccess="R"/>
  </register>
  <register id="UART_TXFIFO_LVL" acronym="UART_TXFIFO_LVL" offset="0x68" width="32" description="Level of the TX FIFO">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x000000" description="Read returns 0." range="" rwaccess="R"/>
    <bitfield id="TXFIFO_LVL" width="8" begin="7" end="0" resetval="0x00" description="Shows the number of written bytes in the TX FIFO" range="" rwaccess="R"/>
  </register>
  <register id="UART_IER2" acronym="UART_IER2" offset="0x6C" width="32" description="Enables RX/TX FIFOs empty corresponding interrupts">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0000 0000" description="Read returns 0. Write has no effect." range="" rwaccess="RW"/>
    <bitfield id="EN_TXFIFO_EMPTY" width="1" begin="1" end="1" resetval="0" description="Enables TX FIFO empty corresponding interrupt" range="" rwaccess="RW">
      <bitenum value="0" id="Enables_EN_TXFIFO_EMPTY_interrupt" token="EN_TXFIFO_EMPTY_0" description="Enables EN_TXFIFO_EMPTY interrupt"/>
      <bitenum value="1" id="Disables_EN_TXFIFO_EMPTY_interrupt" token="EN_TXFIFO_EMPTY_1" description="Disables EN_TXFIFO_EMPTY interrupt"/>
    </bitfield>
    <bitfield id="EN_RXFIFO_EMPTY" width="1" begin="0" end="0" resetval="0" description="Enables RX FIFO empty corresponding interrupt" range="" rwaccess="RW">
      <bitenum value="0" id="Enables_EN_RXFIFO_EMPTY_interrupt" token="EN_RXFIFO_EMPTY_0" description="Enables EN_RXFIFO_EMPTY interrupt"/>
      <bitenum value="1" id="Disables_EN_RXFIFO_EMPTY_interrupt" token="EN_RXFIFO_EMPTY_1" description="Disables EN_RXFIFO_EMPTY interrupt"/>
    </bitfield>
  </register>
  <register id="UART_ISR2" acronym="UART_ISR2" offset="0x70" width="32" description="Status of RX/TX FIFOs empty corresponding interrupts">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0000 0000" description="Read returns 0. Write has no effect." range="" rwaccess="RW"/>
    <bitfield id="TXFIFO_EMPTY_STS" width="1" begin="1" end="1" resetval="1" description="Used to generate interrupt if the TX_FIFO is empty (software flow control)" range="" rwaccess="RW">
      <bitenum value="0" id="TXFIFO_EMPTY_interrupt_not_pending." token="TXFIFO_EMPTY_STS_0" description="TXFIFO_EMPTY interrupt not pending."/>
      <bitenum value="1" id="TXFIFO_EMPTY_interrupt_pending." token="TXFIFO_EMPTY_STS_1" description="TXFIFO_EMPTY interrupt pending."/>
    </bitfield>
    <bitfield id="RXFIFO_EMPTY_STS" width="1" begin="0" end="0" resetval="1" description="Used to generate interrupt if the RX_FIFO is empty (software flow control)" range="" rwaccess="RW">
      <bitenum value="0" id="RXFIFO_EMPTY_interrupt_not_pending." token="RXFIFO_EMPTY_STS_0" description="RXFIFO_EMPTY interrupt not pending."/>
      <bitenum value="1" id="RXFIFO_EMPTY_interrupt_pending." token="RXFIFO_EMPTY_STS_1" description="RXFIFO_EMPTY interrupt pending."/>
    </bitfield>
  </register>
  <register id="UART_FREQ_SEL" acronym="UART_FREQ_SEL" offset="0x74" width="32" description="Sample per bit selector">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0000 0000" description="Read returns 0. Write has no effect." range="" rwaccess="RW"/>
    <bitfield id="FREQ_SEL" width="8" begin="7" end="0" resetval="0x1A" description="Sets the sample per bit if nondefault frequency is used.UART_MDR3[1] must be set to 1 after this value is set. Must be equal to or higher then 6." range="" rwaccess="RW"/>
  </register>
  <register id="UART_MDR3" acronym="UART_MDR3" offset="0x80" width="32" description="Mode definition register 3">
    <bitfield id="RESERVED" width="29" begin="31" end="3" resetval="0x0000 0000" description="Read returns 0. Write has no effect." range="" rwaccess="RW"/>
    <bitfield id="SET_DMA_TX_THRESHOLD" width="1" begin="2" end="2" resetval="0" description="Enable to set different TXDMA threshold inUART_TX_DMA_THRESHOLD register." range="" rwaccess="RW"/>
    <bitfield id="NONDEFAULT_FREQ" width="1" begin="1" end="1" resetval="0" description="Used to enable the NONDEFAULT fclk frequencies." range="" rwaccess="RW">
      <bitenum value="0" id="NONDEFAULT_0" token="NONDEFAULT_FREQ_0" description="Disables using NONDEFAULT fclk frequencies."/>
      <bitenum value="1" id="NONDEFAULT_1" token="NONDEFAULT_FREQ_1" description="Enables using NONDEFAULT fclk frequencies (set and / )."/>
    </bitfield>
    <bitfield id="DISABLE_CIR_RX_DEMOD" width="1" begin="0" end="0" resetval="0" description="Used to enable CIR RX demodulation. CIR IS NOT SUPPORTED" range="" rwaccess="RW">
      <bitenum value="0" id="Enables_CIR_RX_demodulation." token="DISABLE_CIR_RX_DEMOD_0" description="Enables CIR RX demodulation."/>
      <bitenum value="1" id="Disables_CIR_RX_demodulation." token="DISABLE_CIR_RX_DEMOD_1" description="Disables CIR RX demodulation."/>
    </bitfield>
  </register>
  <register id="UART_TX_DMA_THRESHOLD" acronym="UART_TX_DMA_THRESHOLD" offset="0x84" width="32" description="Use to manually set the TX DMA threshold level. [2] SET_TX_DMA_THRESHOLD must be 1 and must be value + tx_trigger_level = 64 (TX FIFO size). If not, 64-tx_trigger_level will be used without modifying the value of this register.">
    <bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x0000000" description="Reserved" range="" rwaccess="RW"/>
    <bitfield id="TX_DMA_THRESHOLD" width="6" begin="5" end="0" resetval="0x00" description="Used to manually set the TX DMA threshold level" range="" rwaccess="RW"/>
  </register>
</module>
