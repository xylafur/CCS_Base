<module name="DISPC_GFX1" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="DISPC_GFX1_ATTRIBUTES" acronym="DISPC_GFX1_ATTRIBUTES" offset="0x0" width="32" description="The register configures the graphics attributes. Shadow register.">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="29" end="29" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="PREMULTIPLYALPHA" width="1" begin="28" end="28" resetval="0x0" description="The field configures the DISPC GFX to process incoming data as premultiplied alpha data or non premultiplied alpha data. Default setting is non premultiplied alpha data." range="" rwaccess="RW">
      <bitenum value="0" id="NONPREMULTIPLIEDALPHA" token="PREMULTIPLYALPHA_0" description="Non premultiplyalpha data color component"/>
      <bitenum value="1" id="PREMULTIPLIEDALPHA" token="PREMULTIPLYALPHA_1" description="Premultiplyalpha data color component"/>
    </bitfield>
    <bitfield id="ZORDER" width="3" begin="27" end="25" resetval="0x0" description="Z-Order defining the priority of the layer compared to others when overlaying. It is SW responsibility to ensure that each layer connected to the same overlay manager has a different z-order value." range="" rwaccess="RW">
      <bitenum value="1" id="ZORDER1" token="ZORDER_1" description="Z-order 1: layer above layer with z-order value of 0 and below layers with z-order values of 2 and 3"/>
      <bitenum value="0" id="ZORDER0" token="ZORDER_0" description="Z-order 0: layer above solid background color and below layer with higher Z-order values."/>
      <bitenum value="2" id="ZORDER2" token="ZORDER_2" description="Z-order 2: layer above layers with z-order value of 0 and 1 and below layer with z-order value of 3"/>
      <bitenum value="4" id="ZORDER4" token="ZORDER_4" description="Z-order 4: layer above layers with z-order value of 0, 1, 2 and 3 and below layer with z-order value of 5"/>
      <bitenum value="5" id="ZORDER5" token="ZORDER_5" description="Z-order 5: layer above all the other layers except cursor"/>
      <bitenum value="3" id="ZORDER3" token="ZORDER_3" description="Z-order 3: layer above layers with z-order value of 0, 1 and 2 and below layer with z-order value of 4"/>
    </bitfield>
    <bitfield id="ANTIFLICKER" width="1" begin="24" end="24" resetval="0x0" description="Anti-aliasing filtering using a 3-tap filter with hardcoded coefficients (1/4, 1/2, 1/4)" range="" rwaccess="RW">
      <bitenum value="0" id="AFDIS" token="ANTIFLICKER_0" description="Anti-aliasing disabled."/>
      <bitenum value="1" id="AFENB" token="ANTIFLICKER_1" description="Anti-aliasing enabled."/>
    </bitfield>
    <bitfield id="RESERVED" width="5" begin="23" end="19" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="18" end="18" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SELFREFRESHAUTO" width="1" begin="17" end="17" resetval="0x0" description="Automatic self refresh mode" range="" rwaccess="RW">
      <bitenum value="0" id="SELFREFRESHAUTODIS" token="SELFREFRESHAUTO_0" description="The transition from Selfrefresh 'disabled' to 'enabled' is controlled by SW"/>
      <bitenum value="1" id="SELFREFRESHAUTOEN" token="SELFREFRESHAUTO_1" description="The transition from Selfrefresh 'disabled' to 'enabled' is controlled only by HW"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="16" end="16" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SELFREFRESH" width="1" begin="15" end="15" resetval="0x0" description="Enables the self refresh of the graphics window from its own DMA buffer. This bit should be set only after havin set the GO bit of the channel and read back a zero in its field." range="" rwaccess="RW">
      <bitenum value="0" id="SELFREFRESHDIS" token="SELFREFRESH_0" description="The graphics pipeline accesses the interconnect to fetch data from the system memory."/>
      <bitenum value="1" id="SELFREFRESHENB" token="SELFREFRESH_1" description="The graphics pipeline does not need anymore to fetch data from memory. Only the graphics DMA buffer is used. It takes effect after the frame has been loaded in the DMA buffer."/>
    </bitfield>
    <bitfield id="ARBITRATION" width="1" begin="14" end="14" resetval="0x0" description="Determines the priority of the graphics pipeline. When the graphics pipeline is one of the high priority pipelines. The arbitration wheel gives always the priority first to the high priority pipelines using round-robin between them. When there is only normal priority pipelines sending requests, the round-robin applies between them." range="" rwaccess="RW">
      <bitenum value="0" id="NORMALPRIO" token="ARBITRATION_0" description="The graphics pipeline is one of the normal priority pipeline."/>
      <bitenum value="1" id="HIGHPRIO" token="ARBITRATION_1" description="The graphics pipeline is one of the high priority pipeline."/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="13" end="12" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="BUFPRELOAD" width="1" begin="11" end="11" resetval="0x0" description="Graphics Preload Value" range="" rwaccess="RW">
      <bitenum value="0" id="DEFVAL" token="BUFPRELOAD_0" description="H/W prefetches pixels up to the preload value defined in the preload register"/>
      <bitenum value="1" id="HIGHTHRES" token="BUFPRELOAD_1" description="H/W prefetches pixels up to high threshold value"/>
    </bitfield>
    <bitfield id="CHANNELOUT" width="3" begin="10" end="8" resetval="0x0" description="Graphics Channel Out configuration wr: immediate" range="" rwaccess="RW">
      <bitenum value="0" id="VP1SEL" token="CHANNELOUT_0" description="OVR1 (VP1)"/>
      <bitenum value="1" id="VP1SEL" token="CHANNELOUT_1" description="OVR2"/>
      <bitenum value="4" id="WBSEL" token="CHANNELOUT_4" description="WB"/>
    </bitfield>
    <bitfield id="NIBBLEMODE" width="1" begin="7" end="7" resetval="0x0" description="Graphics Nibble mode (only for 1-, 2- and 4-bpp)" range="" rwaccess="RW">
      <bitenum value="0" id="NIBBLEMODEDIS" token="NIBBLEMODE_0" description="Nibble mode is disabled"/>
      <bitenum value="1" id="NIBBLEMODEEN" token="NIBBLEMODE_1" description="Nibble mode is enabled"/>
    </bitfield>
    <bitfield id="FORMAT" width="6" begin="6" end="1" resetval="0x0" description="Graphics format. It defines the pixel format when fetching the graphics picture into memory." range="" rwaccess="RW">
      <bitenum value="9" id="RGBA32_8888" token="FORMAT_9" description="RGBA32-8888"/>
      <bitenum value="21" id="BITMAP8" token="FORMAT_21" description="BITMAP8 (CLUT is required)"/>
      <bitenum value="8" id="ABGR32_8888" token="FORMAT_8" description="ABGR32-8888"/>
      <bitenum value="5" id="ARGB16_1555" token="FORMAT_5" description="ARGB16-1555"/>
      <bitenum value="46" id="XRGB32_2101010" token="FORMAT_46" description="xRGB32-2101010"/>
      <bitenum value="2" id="RGBA16_4444" token="FORMAT_2" description="RGBA16-4444"/>
      <bitenum value="11" id="RGB24P_888" token="FORMAT_11" description="RGB24-888 (24-bit container)"/>
      <bitenum value="4" id="BGR16_565" token="FORMAT_4" description="BGR16-565"/>
      <bitenum value="50" id="RESERVED3" token="FORMAT_50" description="RESERVED3"/>
      <bitenum value="35" id="RESERVED1" token="FORMAT_35" description="RESERVED1"/>
      <bitenum value="1" id="ABGR16_4444" token="FORMAT_1" description="ABGR16-4444"/>
      <bitenum value="40" id="XBGR32_8888" token="FORMAT_40" description="xBGR32_8888"/>
      <bitenum value="0" id="ARGB16_4444" token="FORMAT_0" description="ARGB16-4444"/>
      <bitenum value="37" id="XRGB16_1555" token="FORMAT_37" description="xRGB16-1555"/>
      <bitenum value="32" id="XRGB16_4444" token="FORMAT_32" description="xRGB12-4444"/>
      <bitenum value="3" id="RGB16_565" token="FORMAT_3" description="RGB16-565"/>
      <bitenum value="48" id="XRGB64_16161616" token="FORMAT_48" description="xRGB64-16161616"/>
      <bitenum value="49" id="RGBX64_16161616" token="FORMAT_49" description="RGBX64_16161616"/>
      <bitenum value="17" id="RGBA64_16161616" token="FORMAT_17" description="RGBA64_16161616"/>
      <bitenum value="6" id="ABGR16_1555" token="FORMAT_6" description="ABGR16-1555"/>
      <bitenum value="47" id="XBGR32_2101010" token="FORMAT_47" description="xBGR32-2101010"/>
      <bitenum value="10" id="BGRA32_8888" token="FORMAT_10" description="BGRA32-8888"/>
      <bitenum value="38" id="XBGR16_1555" token="FORMAT_38" description="xBGR16-1555"/>
      <bitenum value="16" id="ARGB64_16161616" token="FORMAT_16" description="ARGB64-16161616"/>
      <bitenum value="33" id="XBGR16_4444" token="FORMAT_33" description="xBGR16-4444"/>
      <bitenum value="18" id="BITMAP1" token="FORMAT_18" description="BITMAP1 (CLUT is required)"/>
      <bitenum value="19" id="BITMAP2" token="FORMAT_19" description="BITMAP2 (CLUT is required)"/>
      <bitenum value="43" id="RESERVED2" token="FORMAT_43" description="RESERVED2"/>
      <bitenum value="20" id="BITMAP4" token="FORMAT_20" description="BITMAP4 (CLUT is required)"/>
      <bitenum value="14" id="ARGB32_2101010" token="FORMAT_14" description="ARGB32-2101010"/>
      <bitenum value="22" id="RESERVED" token="FORMAT_22" description="RESERVED"/>
      <bitenum value="42" id="BGRX32_8888" token="FORMAT_42" description="BGRX32_8888"/>
      <bitenum value="7" id="ARGB32_8888" token="FORMAT_7" description="ARGB32-8888"/>
      <bitenum value="39" id="XRGB32_8888" token="FORMAT_39" description="xRGB32-8888 (32-bit container)"/>
      <bitenum value="41" id="RGBX32_8888" token="FORMAT_41" description="RGBx32-8888 (24-bit RGB aligned on MSB of the 32-bit container)"/>
      <bitenum value="15" id="ABGR32_2101010" token="FORMAT_15" description="ABGR32-2101010"/>
      <bitenum value="12" id="RESERVED4" token="FORMAT_12" description="RESERVED4"/>
      <bitenum value="34" id="RGBX16_4444" token="FORMAT_34" description="RGBx16-4444"/>
    </bitfield>
    <bitfield id="ENABLE" width="1" begin="0" end="0" resetval="0x0" description="Graphics Enable" range="" rwaccess="RW">
      <bitenum value="0" id="GRAPHICSDIS" token="ENABLE_0" description="Graphics disabled (graphics pipeline inactive and graphics window not present)"/>
      <bitenum value="1" id="GRAPHICSENB" token="ENABLE_1" description="Graphics enabled (graphics pipeline active and graphics window present on the screen)"/>
    </bitfield>
  </register>
  <register id="DISPC_GFX1_ATTRIBUTES2" acronym="DISPC_GFX1_ATTRIBUTES2" offset="0x4" width="32" description="The register configures the graphics attributes. Shadow register.">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="TAGS" width="5" begin="30" end="26" resetval="0x1f" description="Number of OCP TAGS to be used for the pipeline (from 1 to 32)" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="25" end="25" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="REGION_BASED" width="1" begin="24" end="24" resetval="0x0" description="Enable region-based mechanism" range="" rwaccess="RW">
      <bitenum value="0" id="DISABLE" token="REGION_BASED_0" description="DISABLE"/>
      <bitenum value="1" id="ENABLE" token="REGION_BASED_1" description="ENABLE"/>
    </bitfield>
    <bitfield id="RESERVED" width="7" begin="23" end="17" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SECURE" width="1" begin="16" end="16" resetval="0x0" description="OCP requests corresponds to pipeline data are secure/unsecure. The bit-field can be modified only by secure transaction using MReqSecure qualifier." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="16" begin="15" end="0" resetval="0x0" description="" range="" rwaccess="R"/>
  </register>
  <register id="DISPC_GFX1_BA_j_0" acronym="DISPC_GFX1_BA_j_0" offset="0x8" width="32" description="The register configures the base address of the graphics buffer displayed in the graphics window (0 &amp;amp; 1 :for ping-pong mechanism with external trigger, based on the field polarity). Shadow register.">
    <bitfield id="BA" width="32" begin="31" end="0" resetval="0x0" description="Graphics base address When decompression is enabled bit[5:0] shall be set to 0. Base address of the graphics buffer (aligned on pixel size boundary) (in case of RGB24 packed format, 4-pixel alignment is required) When the TILER is addressed, the bits: [28:27] = 0x0 for 8-bit tiled [28:27] = 0x1 for 16-bit tiled [28:27] = 0x2 for 32-bit tiled [28:27] = 0x3 for page mode [31:29] = 0x0 for 0-degree view [31:29] = 0x1 for 180-degree view + mirroring [31:29] = 0x2 for 0-degree view + mirroring [31:29] = 0x3 for 180-degree view [31:29] = 0x4 for 270-degree view + mirroring [31:29] = 0x5 for 270-degree view [31:29] = 0x6 for 90-degree view [31:29] = 0x7 for 90-degree view + mirroring Otherwise the bits indicated the corresponding bit address to access the SDRAM." range="" rwaccess="RW"/>
  </register>
  <register id="DISPC_GFX1_BA_j_1" acronym="DISPC_GFX1_BA_j_1" offset="0xC" width="32" description="The register configures the base address of the graphics buffer displayed in the graphics window (0 &amp;amp; 1 :for ping-pong mechanism with external trigger, based on the field polarity). Shadow register.">
    <bitfield id="BA" width="32" begin="31" end="0" resetval="0x0" description="Graphics base address When decompression is enabled bit[5:0] shall be set to 0. Base address of the graphics buffer (aligned on pixel size boundary) (in case of RGB24 packed format, 4-pixel alignment is required) When the TILER is addressed, the bits: [28:27] = 0x0 for 8-bit tiled [28:27] = 0x1 for 16-bit tiled [28:27] = 0x2 for 32-bit tiled [28:27] = 0x3 for page mode [31:29] = 0x0 for 0-degree view [31:29] = 0x1 for 180-degree view + mirroring [31:29] = 0x2 for 0-degree view + mirroring [31:29] = 0x3 for 180-degree view [31:29] = 0x4 for 270-degree view + mirroring [31:29] = 0x5 for 270-degree view [31:29] = 0x6 for 90-degree view [31:29] = 0x7 for 90-degree view + mirroring Otherwise the bits indicated the corresponding bit address to access the SDRAM." range="" rwaccess="RW"/>
  </register>
  <register id="DISPC_GFX1_BUF_SIZE_STATUS" acronym="DISPC_GFX1_BUF_SIZE_STATUS" offset="0x10" width="32" description="The register defines the Graphics buffer size">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0" description="Write 0's for future compatibility. Reads return 0" range="" rwaccess="R"/>
    <bitfield id="BUFSIZE" width="16" begin="15" end="0" resetval="0xa00" description="DMA buffer Size in number of 128-bits" range="" rwaccess="R"/>
  </register>
  <register id="DISPC_GFX1_BUF_THRESHOLD" acronym="DISPC_GFX1_BUF_THRESHOLD" offset="0x14" width="32" description="The register configures the graphics buffer. Shadow register.">
    <bitfield id="BUFHIGHTHRESHOLD" width="16" begin="31" end="16" resetval="0x9ff" description="DMA buffer High Threshold Number of 128-bits defining the threshold value." range="" rwaccess="RW"/>
    <bitfield id="BUFLOWTHRESHOLD" width="16" begin="15" end="0" resetval="0x9f8" description="DMA buffer Low Threshold Number of 128-bits defining the threshold value." range="" rwaccess="RW"/>
  </register>
  <register id="DISPC_GFX1_GLOBAL_ALPHA" acronym="DISPC_GFX1_GLOBAL_ALPHA" offset="0x18" width="32" description="The register defines the global alpha value for the graphics pipeline. Shadow register.">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="GLOBALALPHA" width="8" begin="7" end="0" resetval="0xff" description="Global alpha value from 0 to 255. 0 corresponds to fully transparent and 255 to fully opaque." range="" rwaccess="RW"/>
  </register>
  <register id="DISPC_GFX1_IRQENABLE" acronym="DISPC_GFX1_IRQENABLE" offset="0x1C" width="32" description="This register allows to mask/unmask the module internal sources of interrupt, on an event-by-event basis">
    <bitfield id="RESERVED" width="28" begin="31" end="4" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="GFXREGIONBASEDPIPEEND_EN" width="1" begin="3" end="3" resetval="0x0" description="PIPE end window IRQ for region-based feature" range="" rwaccess="RW">
      <bitenum value="0" id="MASKED" token="GFXREGIONBASEDPIPEEND_EN_0" description="GFXREGIONBASEDPIPEEND is masked"/>
      <bitenum value="1" id="GENINT" token="GFXREGIONBASEDPIPEEND_EN_1" description="GFXREGIONBASEDPIPEEND generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="GFXREGIONBASEDPIPESTART_EN" width="1" begin="2" end="2" resetval="0x0" description="PIPE start window IRQ for region-based feature" range="" rwaccess="RW">
      <bitenum value="0" id="MASKED" token="GFXREGIONBASEDPIPESTART_EN_0" description="GFXREGIONBASEDPIPESTART is masked"/>
      <bitenum value="1" id="GENINT" token="GFXREGIONBASEDPIPESTART_EN_1" description="GFXREGIONBASEDPIPESTART generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="GFXENDWINDOW_EN" width="1" begin="1" end="1" resetval="0x0" description="The end of Gfx Window has been reached. It is detected by the overlay manager when the full graphics has been displayed." range="" rwaccess="RW">
      <bitenum value="0" id="MASKED" token="GFXENDWINDOW_EN_0" description="GfxEndWindow is masked"/>
      <bitenum value="1" id="GENINT" token="GFXENDWINDOW_EN_1" description="GfxEndWindow generates an interrupt when it occurs"/>
    </bitfield>
    <bitfield id="GFXBUFFERUNDERFLOW_EN" width="1" begin="0" end="0" resetval="0x0" description="Gfx DMA Buffer Underflow. The DMA buffer is not necessarly empty but required data are not present in the DMA buffer (due to out of order responses)" range="" rwaccess="RW">
      <bitenum value="0" id="MASKED" token="GFXBUFFERUNDERFLOW_EN_0" description="GfxBufferUnderflow is masked"/>
      <bitenum value="1" id="GENINT" token="GFXBUFFERUNDERFLOW_EN_1" description="GfxBufferUnderflow generates an interrupt when it occurs"/>
    </bitfield>
  </register>
  <register id="DISPC_GFX1_IRQSTATUS" acronym="DISPC_GFX1_IRQSTATUS" offset="0x20" width="32" description="This register regroups all the status of the module internal events that generate an interrupt. Write 1 to a given bit resets this bit">
    <bitfield id="RESERVED" width="28" begin="31" end="4" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="GFXREGIONBASEDPIPEEND_IRQ" width="1" begin="3" end="3" resetval="0x0" description="PIPE end window IRQ for region-based feature" range="" rwaccess="RW">
      <bitenum value="0" id="FALSE" token="GFXREGIONBASEDPIPEEND_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged."/>
      <bitenum value="1" id="TRUE" token="GFXREGIONBASEDPIPEEND_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="GFXREGIONBASEDPIPESTART_IRQ" width="1" begin="2" end="2" resetval="0x0" description="PIPE start window IRQ for region-based feature" range="" rwaccess="RW">
      <bitenum value="0" id="FALSE" token="GFXREGIONBASEDPIPESTART_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged."/>
      <bitenum value="1" id="TRUE" token="GFXREGIONBASEDPIPESTART_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="GFXENDWINDOW_IRQ" width="1" begin="1" end="1" resetval="0x0" description="The end of Gfx Window has been reached. It is detected by the overlay manager when the full graphics has been displayed." range="" rwaccess="RW">
      <bitenum value="0" id="FALSE" token="GFXENDWINDOW_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged."/>
      <bitenum value="1" id="TRUE" token="GFXENDWINDOW_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
    <bitfield id="GFXBUFFERUNDERFLOW_IRQ" width="1" begin="0" end="0" resetval="0x0" description="Gfx DMA Buffer Underflow. The DMA buffer is not necessarly empty but required data are not present in the DMA buffer (due to out of order responses)" range="" rwaccess="RW">
      <bitenum value="0" id="FALSE" token="GFXBUFFERUNDERFLOW_IRQ_0" description="READS: Event is false. WRITES: Status bit unchanged."/>
      <bitenum value="1" id="TRUE" token="GFXBUFFERUNDERFLOW_IRQ_1" description="READS: Event is true (pending). WRITES: Status bit is reset."/>
    </bitfield>
  </register>
  <register id="DISPC_GFX1_MFLAG_THRESHOLD" acronym="DISPC_GFX1_MFLAG_THRESHOLD" offset="0x24" width="32" description="">
    <bitfield id="HT_MFLAG" width="16" begin="31" end="16" resetval="0x0" description="" range="" rwaccess="RW"/>
    <bitfield id="LT_MFLAG" width="16" begin="15" end="0" resetval="0x0" description="" range="" rwaccess="RW"/>
  </register>
  <register id="DISPC_GFX1_PIXEL_INC" acronym="DISPC_GFX1_PIXEL_INC" offset="0x28" width="32" description="The register configures the number of bytes to increment between two pixels. Shadow register.">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0x0" description="Write 0's for future compatibility. Reads return 0" range="" rwaccess="R"/>
    <bitfield id="PIXELINC" width="8" begin="7" end="0" resetval="0x1" description="Number of bytes to increment between two pixels. Encoded unsigned value (from 1 to 255) to specify the number of bytes between two pixels in the graphics buffer. The value 0 is invalid. The value 1 means next pixel. The value 1+n*bpp means increment of n pixels." range="" rwaccess="RW"/>
  </register>
  <register id="DISPC_GFX1_POSITION" acronym="DISPC_GFX1_POSITION" offset="0x2C" width="32" description="The register configures the position of the graphics window. Shadow register.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="POSY" width="12" begin="27" end="16" resetval="0x0" description="Y position of the graphics window. Encoded value (from 0 to 4095) to specify the Y position of the graphics window on the screen. The line at the top has the Y-position 0." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="POSX" width="12" begin="11" end="0" resetval="0x0" description="X position of the graphics window. Encoded value (from 0 to 4095) to specify the X position of the graphics window on the screen. The first pixel on the left of the screen has the X-position 0." range="" rwaccess="RW"/>
  </register>
  <register id="DISPC_GFX1_PRELOAD" acronym="DISPC_GFX1_PRELOAD" offset="0x30" width="32" description="The register configures the graphics DMA buffer Shadow register.">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0x0" description="Write 0's for future compatibility. Reads return 0" range="" rwaccess="R"/>
    <bitfield id="PRELOAD" width="12" begin="11" end="0" resetval="0x100" description="DMA buffer preload value Number of 128-bit words defining the preload value." range="" rwaccess="RW"/>
  </register>
  <register id="DISPC_GFX1_ROW_INC" acronym="DISPC_GFX1_ROW_INC" offset="0x34" width="32" description="The register configures the number of bytes to increment at the end of the row. Shadow register.">
    <bitfield id="ROWINC" width="32" begin="31" end="0" resetval="0x1" description="Number of bytes to increment at the end of the row Encoded unsigned value to specify the number of bytes to increment at the end of the row in the graphics buffer. The value 0 is invalid. The value 1 means next pixel. The value 1+n*bpp means increment of n pixels. The value 1- (n+1)*bpp means decrement of n pixels." range="" rwaccess="RW"/>
  </register>
  <register id="DISPC_GFX1_SIZE" acronym="DISPC_GFX1_SIZE" offset="0x38" width="32" description="The register configures the size of the graphics window. Shadow register.">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SIZEY" width="12" begin="27" end="16" resetval="0x0" description="Number of lines of the graphics window. Encoded value (from 1 to 4096) to specify the number of lines of the graphics window (program size -1)." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SIZEX" width="12" begin="11" end="0" resetval="0x0" description="Number of pixels of the graphics window. Encoded value (from 1 to 4096) to specify the number of pixels per line of the graphics window (program size -1)." range="" rwaccess="RW"/>
  </register>
  <register id="DISPC_GFX1_CLUT" acronym="DISPC_GFX1_CLUT" offset="0x3C" width="32" description="The register configures the Color Look Up Table (CLUT) for GFX pipeline. CLUT is used in conjunction with bitmap formats">
    <bitfield id="INDEX" width="8" begin="31" end="24" resetval="0x0" description="Defines the location in the table where the bit-field VALUE is stored" range="" rwaccess="W"/>
    <bitfield id="VALUE_R" width="8" begin="23" end="16" resetval="0x0" description="8-bit value used to defined the value to store at the location in the table defined by the bit-field INDEX." range="" rwaccess="W"/>
    <bitfield id="VALUE_G" width="8" begin="15" end="8" resetval="0x0" description="8-bit value used to defined the value to store at the location in the table defined by the bit-field INDEX." range="" rwaccess="W"/>
    <bitfield id="VALUE_B" width="8" begin="7" end="0" resetval="0x0" description="8-bit value used to defined the value to store at the location in the table defined by the bit-field INDEX." range="" rwaccess="W"/>
  </register>
</module>
