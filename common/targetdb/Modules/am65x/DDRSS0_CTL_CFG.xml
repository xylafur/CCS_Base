<module name="DDRSS0_CTL_CFG" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="DDRCTL_MSTR" acronym="DDRCTL_MSTR" offset="0x0" width="32" description="Master Register0">
    <bitfield id="DEVICE_CONFIG" width="2" begin="31" end="30" resetval="0x0" description="Indicates the configuration of the device used in the system.- 00 - x4 device - 01 - x8 device - 10 - x16 device - 11 - x32 device Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="FREQUENCY_MODE" width="1" begin="29" end="29" resetval="0x0" description="Choose which registers are used.- 0 - Original registers - 1 - When UMCTL2_FREQUENCY_NUM=2: FREQ1 registers When UMCTL2_FREQUENCY_NUM&amp;amp;gt;2: Choosen by MSTR2.target_frequency register Programming Mode: Quasi-dynamic Group 2" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="28" end="26" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ACTIVE_RANKS" width="2" begin="25" end="24" resetval="0x3" description="Only present for multi-rank configurations.Each bit represents one rank. For two-rank configurations, only bits[25:24] are present. - 1 - populated - 0 - unpopulated LSB is the lowest rank number. For 2 ranks following combinations are legal: - 01 - One rank - 11 - Two ranks - Others - Reserved. For 4 ranks following combinations are legal: - 0001 - One rank - 0011 - Two ranks - 0111 - Three ranks - 1111 - Four ranks Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="23" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="BURST_RDWR" width="4" begin="19" end="16" resetval="0x4" description="SDRAM burst length used: -0001 - Burst length of 2 (only supported for mDDR) - 0010 - Burst length of 4 - 0100 - Burst length of 8 - 1000 - Burst length of 16 (only supported for mDDR, LPDDR2, and LPDDR4) All other values are reserved. This controls the burst size used to access the SDRAM. This must match the burst length mode register setting in the SDRAM. (For BC4/8 on-the-fly mode of DDR3 and DDR4, set this field to 0x0100) Burst length of 2 is not supported with AXI ports when MEMC_BURST_LENGTH is 8. Burst length of 2 is only supported when the controller is operating in 1:1 frequency mode. For DDR3, DDR4 and LPDDR3, this must be set to 0x0100 (BL8). For LPDDR4, this must be set to 0x1000 (BL16). Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="DLL_OFF_MODE" width="1" begin="15" end="15" resetval="0x0" description="Set to 1 when the uMCTL2 and DRAM has to be put in DLL-off mode for low frequency operation.Set to 0 to put uMCTL2 and DRAM in DLL-on mode for normal frequency operation. If DDR4 CRC/parity retry is enabled (DDRCTL_CRCPARCTL1.crc_parity_retry_enable = 1), dll_off_mode is not supported, and this bit must be set to '0'. Programming Mode: Quasi-dynamic Group 2" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="14" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DATA_BUS_WIDTH" width="2" begin="13" end="12" resetval="0x0" description="Selects proportion of DQ bus width that is used by the SDRAM -00 - Full DQ bus width to SDRAM - 01 - Half DQ bus width to SDRAM - 10 - Quarter DQ bus width to SDRAM - 11 - Reserved. Note that half bus width mode is only supported when the SDRAM bus width is a multiple of 16, and quarter bus width mode is only supported when the SDRAM bus width is a multiple of 32 and the configuration parameter MEMC_QBUS_SUPPORT is set. Bus width refers to DQ bus width (excluding any ECC width). Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="GEARDOWN_MODE" width="1" begin="11" end="11" resetval="0x0" description="1 indicates put the DRAM in geardown mode (2N) and 0 indicates put the DRAM in normal mode (1N).This register can be changed, only when the Controller is in self-refresh mode. This signal must be set the same value as MR3 bit A3. Note: Geardown mode is not supported if the configuration parameter MEMC_CMD_RTN2IDLE is set Note: Geardown mode is not supported if the configuration parameter UMCTL2_SHARED_AC is set (in Shared-AC mode) and the register value is don't care Programming Mode: Quasi-dynamic Group 2" range="" rwaccess="RW"/>
    <bitfield id="EN_2T_TIMING_MODE" width="1" begin="10" end="10" resetval="0x0" description="If 1, then uMCTL2 uses 2T timing.Otherwise, uses 1T timing. In 2T timing, all command signals (except chip select) are held for 2 clocks on the SDRAM bus. Chip select is asserted on the second cycle of the command Note: 2T timing is not supported in LPDDR2/LPDDR3/LPDDR4 mode Note: 2T timing is not supported if the configuration parameter MEMC_CMD_RTN2IDLE is set Note: 2T timing is not supported in DDR4 geardown mode. Note: 2T timing is not supported in Shared-AC dual channel mode and the register value is don't care. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="BURSTCHOP" width="1" begin="9" end="9" resetval="0x0" description="When set, enable burst-chop (BC4 or 8 on-the-fly) in DDR3/DDR4.Burst Chop for Reads is exercised only in HIF configurations (UMCTL2_INCL_ARB not set) and if in full bus width mode (DDRCTL_MSTR.data_bus_width = 00) and if MEMC_BURST_LENGTH=8 or 16. Burst Chop for Writes is exercised only if Partial Writes enabled (UMCTL2_PARTIAL_WR=1) and if CRC is disabled (DDRCTL_CRCPARCTL1.crc_enable = 0). If DDR4 CRC/parity retry is enabled (DDRCTL_CRCPARCTL1.crc_parity_retry_enable = 1), burst chop is not supported, and this bit must be set to '0'. BC4 (fixed) mode is not supported. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="BURST_MODE" width="1" begin="8" end="8" resetval="0x0" description="Indicates burst mode.0 - Sequential burst mode 1 - Interleaved burst mode For LPDDR3 and LPDDR4, this must be set to 0 (sequential mode). Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="LPDDR4" width="1" begin="5" end="5" resetval="0x0" description="Select LPDDR4 SDRAM -1 - LPDDR4 SDRAM device in use. - 0 - non-LPDDR4 device in use Present only in designs configured to support LPDDR4. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="DDR4" width="1" begin="4" end="4" resetval="0x0" description="Select DDR4 SDRAM -1 - DDR4 SDRAM device in use. - 0 - non-DDR4 device in use Present only in designs configured to support DDR4. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="LPDDR3" width="1" begin="3" end="3" resetval="0x0" description="Select LPDDR3 SDRAM -1 - LPDDR3 SDRAM device in use. - 0 - non-LPDDR3 device in use Present only in designs configured to support LPDDR3. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="LPDDR2" width="1" begin="2" end="2" resetval="0x0" description="Select LPDDR2 SDRAM -1 - LPDDR2 SDRAM device in use. - 0 - non-LPDDR2 device in use Present only in designs configured to support LPDDR2. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="1" end="1" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DDR3" width="1" begin="0" end="0" resetval="0x1" description="Select DDR3 SDRAM -1 - DDR3 SDRAM device in use - 0 - non-DDR3 SDRAM device in use Only present in designs that support DDR3. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_STAT" acronym="DDRCTL_STAT" offset="0x4" width="32" description="Operating Mode Status Register">
    <bitfield id="RESERVED" width="19" begin="31" end="13" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="SELFREF_CAM_NOT_EMPTY" width="1" begin="12" end="12" resetval="0x0" description="Self refresh with CAMs not empty.Set to 1 when Self Refresh is entered but CAMs are not drained. Cleared after exiting Self Refresh. Programming Mode: Dynamic" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="2" begin="11" end="10" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="SELFREF_STATE" width="2" begin="9" end="8" resetval="0x0" description="Self refresh state.This indicates self refresh or self refresh power down state for LPDDR4. This register is used for frequency change and MRR/MRW access during self refresh. - 00 - SDRAM is not in Self Refresh. - 01 - Self refresh 1 - 10 - Self refresh power down - 11 - Self refresh 2 Programming Mode: Dynamic" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="SELFREF_TYPE" width="2" begin="5" end="4" resetval="0x0" description="Flags if Self Refresh (except LPDDR4) or SR-Powerdown (LPDDR4) is entered and if it was under Automatic Self Refresh control only or not.- 00 - SDRAM is not in Self Refresh (except LPDDR4) or SR-Powerdown (LPDDR4). If retry is enabled by CRCPARCTRL1.crc_parity_retry_enable, this also indicates SRE command is still in parity error window or retry is in-progress. - 11 - SDRAM is in Self Refresh (except LPDDR4) or SR-Powerdown (LPDDR4), which was caused by Automatic Self Refresh only. If retry is enabled, this guarantees SRE command is executed correctly without parity error. - 10 - SDRAM is in Self Refresh (except LPDDR4) or SR-Powerdown (LPDDR4), which was not caused solely under Automatic Self Refresh control. It could have been caused by Hardware Low Power Interface and/or Software (DDRCTL_PWRCTL.selfref_sw). If retry is enabled, this guarantees SRE command is executed correctly without parity error. - 01 - SDRAM is in Self Refresh, which was caused by PHY Master Request. Programming Mode: Dynamic" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="OPERATING_MODE" width="3" begin="2" end="0" resetval="0x0" description="Operating mode.This is 3-bits wide in configurations with mDDR/LPDDR2/LPDDR3/LPDDR4/DDR4 support and 2-bits in all other configurations. non-mDDR/LPDDR2/LPDDR3/LPDDR4 and non-DDR4 designs: - 00 - Init - 01 - Normal - 10 - Power-down - 11 - Self refresh mDDR/LPDDR2/LPDDR3 or DDR4 designs: - 000 - Init - 001 - Normal - 010 - Power-down - 011 - Self refresh - 1XX - Deep power-down / Maximum Power Saving Mode LPDDR4 designs: - 000 - Init - 001 - Normal - 010 - Power-down - 011 - Self refresh / Self refresh power-down Programming Mode: Dynamic" range="" rwaccess="R"/>
  </register>
  <register id="DDRCTL_MRCTRL0" acronym="DDRCTL_MRCTRL0" offset="0x10" width="32" description="Mode Register Read/Write Control Register 0. Note: Do not enable more than one of the following fields simultaneously: - sw_init_int - pda_en - mpr_en">
    <bitfield id="MR_WR" width="1" begin="31" end="31" resetval="0x0" description="Setting this register bit to 1 triggers a mode register read or write operation.When the MR operation is complete, the uMCTL2 automatically clears this bit. The other register fields of this register must be written in a separate APB transaction, before setting this mr_wr bit. It is recommended NOT to set this signal if in Init, Deep power-down or MPSM operating modes. Programming Mode: Dynamic" range="" rwaccess="W1S"/>
    <bitfield id="PBA_MODE" width="1" begin="30" end="30" resetval="0x0" description="Indicates whether PBA access is executed.When setting this bit to 1 along with setting pda_en to 1, uMCTL2 initiates PBA access instead of PDA access. - 0 - Per DRAM Addressability mode - 1 - Per Buffer Addressability mode The completion of PBA access is confirmed by DDRCTL_MRSTAT.pda_done in the same way as PDA. Programming Mode: Dynamic" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="14" begin="29" end="16" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MR_ADDR" width="4" begin="15" end="12" resetval="0x0" description="Address of the mode register that is to be written to.- 0000 - MR0 - 0001 - MR1 - 0010 - MR2 - 0011 - MR3 - 0100 - MR4 - 0101 - MR5 - 0110 - MR6 - 0111 - MR7 Don't Care for LPDDR2/LPDDR3/LPDDR4 (see DDRCTL_MRCTRL1.mr_data for mode register addressing in LPDDR2/LPDDR3/LPDDR4) This signal is also used for writing to control words of the register chip on RDIMMs/LRDIMMs. In that case, it corresponds to the bank address bits sent to the RDIMM/LRDIMM In case of DDR4, the bit[3:2] corresponds to the bank group bits. Therefore, the bit[3] as well as the bit[2:0] must be set to an appropriate value which is considered both the Address Mirroring of UDIMMs/RDIMMs/LRDIMMs and the Output Inversion of RDIMMs/LRDIMMs. Programming Mode: Dynamic" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="11" end="6" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MR_RANK" width="2" begin="5" end="4" resetval="0x3" description="Controls which rank is accessed byDDRCTL_MRCTRL0.mr_wr. Normally, it is desired to access all ranks, so all bits should be set to 1. However, for multi-rank UDIMMs/RDIMMs/LRDIMMs which implement address mirroring, it may be necessary to access ranks individually. Examples (assume uMCTL2 is configured for 4 ranks): - 0x1 - select rank 0 only - 0x2 - select rank 1 only - 0x5 - select ranks 0 and 2 - 0xA - select ranks 1 and 3 - 0xF - select ranks 0, 1, 2 and 3 Programming Mode: Dynamic" range="" rwaccess="RW"/>
    <bitfield id="SW_INIT_INT" width="1" begin="3" end="3" resetval="0x0" description="Indicates whether Software intervention is allowed viaDDRCTL_MRCTRL0/DDRCTL_MRCTRL1 before automatic SDRAM initialization routine or not. For DDR4, this bit can be used to initialize the DDR4 RCD (MR7) before automatic SDRAM initialization. For LPDDR4, this bit can be used to program additional mode registers before automatic SDRAM initialization if necessary. In LPDDR4 dual channel mode, note that this must be programmed to both channels beforehand. Note that this must be cleared to 0 after completing Software operation. Otherwise, SDRAM initialization routine will not re-start. - 0 - Software intervention is not allowed - 1 - Software intervention is allowed Programming Mode: Dynamic" range="" rwaccess="RW"/>
    <bitfield id="PDA_EN" width="1" begin="2" end="2" resetval="0x0" description="Indicates whether the mode register operation is MRS in PDA mode or not -0 - MRS - 1 - MRS in Per DRAM Addressability mode Note that when pba_mode=1, PBA access is initiated instead of PDA access. Programming Mode: Dynamic" range="" rwaccess="RW"/>
    <bitfield id="MPR_EN" width="1" begin="1" end="1" resetval="0x0" description="Indicates whether the mode register operation is MRS or WR/RD for MPR (only supported for DDR4) -0 - MRS - 1 - WR/RD for MPR Programming Mode: Dynamic" range="" rwaccess="RW"/>
    <bitfield id="MR_TYPE" width="1" begin="0" end="0" resetval="0x0" description="Indicates whether the mode register operation is read or write.Only used for LPDDR2/LPDDR3/LPDDR4/DDR4. - 0 - Write - 1 - Read Programming Mode: Dynamic" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_MRCTRL1" acronym="DDRCTL_MRCTRL1" offset="0x14" width="32" description="Mode Register Read/Write Control Register 1">
    <bitfield id="RESERVED" width="14" begin="31" end="18" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MR_DATA" width="18" begin="17" end="0" resetval="0x0" description="Mode register write data for all non-LPDDR2/non-LPDDR3/non-LPDDR4 modes.For LPDDR2/LPDDR3/LPDDR4, DDRCTL_MRCTRL1[15:0] are interpreted as [15:8] MR Address [7:0] MR data for writes, don't care for reads. This is 18-bits wide in configurations with DDR4 support and 16-bits in all other configurations. Programming Mode: Dynamic" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_MRSTAT" acronym="DDRCTL_MRSTAT" offset="0x18" width="32" description="Mode Register Read/Write Status Register">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="PDA_DONE" width="1" begin="8" end="8" resetval="0x0" description="The SoC core may initiate a MR write operation in PDA/PBA mode only if this signal is low.This signal goes high when three consecutive MRS commands related to the PDA/PBA mode are issued to the SDRAM. This signal goes low when DDRCTL_MRCTRL0.pda_en becomes 0. Therefore, it is recommended to write DDRCTL_MRCTRL0.pda_en to 0 after this signal goes high in order to prepare to perform PDA operation next time. - 0 - Indicates that mode register write operation related to PDA/PBA is in progress or has not started yet. - 1 - Indicates that mode register write operation related to PDA/PBA has competed. Programming Mode: Dynamic" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="7" begin="7" end="1" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="MR_WR_BUSY" width="1" begin="0" end="0" resetval="0x0" description="The SoC core may initiate a MR write operation only if this signal is low.This signal goes high in the clock after the uMCTL2 accepts the MRW/MRR request. It goes low when the MRW/MRR command is issued to the SDRAM. It is recommended not to perform MRW/MRR commands when 'DDRCTL_MRSTAT.mr_wr_busy' is high. - 0 - Indicates that the SoC core can initiate a mode register write operation - 1 - Indicates that mode register write operation is in progress Programming Mode: Dynamic" range="" rwaccess="R"/>
  </register>
  <register id="DDRCTL_MRCTRL2" acronym="DDRCTL_MRCTRL2" offset="0x1C" width="32" description="Mode Register Read/Write Control Register 2">
    <bitfield id="MR_DEVICE_SEL" width="32" begin="31" end="0" resetval="0x0" description="Indicates the device(s) to be selected during the MRS that happens in PDA mode.Each bit is associated with one device. For example, bit[0] corresponds to Device 0, bit[1] to Device 1 etc. A '1' should be programmed to indicate that the MRS command should be applied to that device. A '0' indicates that the MRS commands should be skipped for that device. Programming Mode: Dynamic" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DERATEEN" acronym="DDRCTL_DERATEEN" offset="0x20" width="32" description="Temperature Derate Enable Register">
    <bitfield id="RESERVED" width="21" begin="31" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RC_DERATE_VALUE" width="3" begin="10" end="8" resetval="0x0" description="Derate value of tRC for LPDDR4 - 0 - Derating uses +1. - 1 - Derating uses +2. - 2 - Derating uses +3. - 3 - Derating uses +4. Present only in designs configured to support LPDDR4. The required number of cycles for derating can be determined by dividing 3.75ns by the core_ddrc_core_clk period, and rounding up the next integer. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="DERATE_BYTE" width="4" begin="7" end="4" resetval="0x0" description="Derate byte Present only in designs configured to support LPDDR2/LPDDR3/LPDDR4 Indicates which byte of the MRR data is used for derating.The maximum valid value depends on MEMC_DRAM_TOTAL_DATA_WIDTH. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DERATE_VALUE" width="2" begin="2" end="1" resetval="0x0" description="Derate value -0 - Derating uses +1. - 1 - Derating uses +2. Present only in designs configured to support LPDDR2/LPDDR3/LPDDR4 Set to 0 for all LPDDR2 speed grades as derating value of +1.875 ns is less than a core_ddrc_core_clk period. For LPDDR3/4, if the period of core_ddrc_core_clk is less than 1.875ns, this register field should be set to 1 otherwise it should be set to 0. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="DERATE_ENABLE" width="1" begin="0" end="0" resetval="0x0" description="Enables derating -0 - Timing parameter derating is disabled - 1 - Timing parameter derating is enabled using MR4 read value. Present only in designs configured to support LPDDR2/LPDDR3/LPDDR4 This field must be set to '0' for non-LPDDR2/LPDDR3/LPDDR4 mode. Programming Mode: Dynamic" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DERATEINT" acronym="DDRCTL_DERATEINT" offset="0x24" width="32" description="Temperature Derate Interval Register">
    <bitfield id="MR4_READ_INTERVAL" width="32" begin="31" end="0" resetval="0x00800000" description="Interval between two MR4 reads, used to derate the timing parameters.Present only in designs configured to support LPDDR2/LPDDR3/LPDDR4. This register must not be set to zero. Unit: DFI clock cycle. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_PWRCTL" acronym="DDRCTL_PWRCTL" offset="0x30" width="32" description="Low Power Control Register">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="LPDDR4_SR_ALLOWED" width="1" begin="8" end="8" resetval="0x0" description="Indicates whether transition from SR-PD to SR and back to SR-PD is allowed.This register field cannot be modified while DDRCTL_PWRCTL.selfref_sw==1. - 0 - SR-PD -&amp;amp;gt; SR -&amp;amp;gt; SR-PD not allowed - 1 - SR-PD -&amp;amp;gt; SR -&amp;amp;gt; SR-PD allowed Programming Mode: Dynamic" range="" rwaccess="RW"/>
    <bitfield id="DIS_CAM_DRAIN_SELFREF" width="1" begin="7" end="7" resetval="0x0" description="Indicates whether skipping CAM draining is allowed when entering Self-Refresh.This register field cannot be modified while DDRCTL_PWRCTL.selfref_sw==1. - 0 - CAMs must be empty before entering SR - 1 - CAMs are not emptied before entering SR Programming Mode: Dynamic" range="" rwaccess="RW"/>
    <bitfield id="STAY_IN_SELFREF" width="1" begin="6" end="6" resetval="0x0" description="Self refresh state is an intermediate state to enter to Self refresh power down state or exit Self refresh power down state for LPDDR4.This register controls transition from the Self refresh state. - 1 - Prohibit transition from Self refresh state - 0 - Allow transition from Self refresh state Programming Mode: Dynamic" range="" rwaccess="RW"/>
    <bitfield id="SELFREF_SW" width="1" begin="5" end="5" resetval="0x0" description="A value of 1 to this register causes system to move to Self Refresh state immediately, as long as it is not in INIT or DPD/MPSM operating_mode.This is referred to as Software Entry/Exit to Self Refresh. - 1 - Software Entry to Self Refresh - 0 - Software Exit from Self Refresh Programming Mode: Dynamic" range="" rwaccess="RW"/>
    <bitfield id="MPSM_EN" width="1" begin="4" end="4" resetval="0x0" description="When this is 1, the uMCTL2 puts the SDRAM into maximum power saving mode when the transaction store is empty.This register must be reset to '0' to bring uMCTL2 out of maximum power saving mode. Present only in designs configured to support DDR4. For non-DDR4, this register should not be set to 1. Note that MPSM is not supported when using a DWC DDR PHY, if the PHY parameter DWC_AC_CS_USE is disabled, as the MPSM exit sequence requires the chip-select signal to toggle. FOR PERFORMANCE ONLY. Programming Mode: Dynamic" range="" rwaccess="RW"/>
    <bitfield id="EN_DFI_DRAM_CLK_DISABLE" width="1" begin="3" end="3" resetval="0x0" description="Enable the assertion of dfi_dram_clk_disable whenever a clock is not required by the SDRAM.If set to 0, dfi_dram_clk_disable is never asserted. Assertion of dfi_dram_clk_disable is as follows: In DDR2/DDR3, can only be asserted in Self Refresh. In DDR4, can be asserted in following: - in Self Refresh. - in Maximum Power Saving Mode In mDDR/LPDDR2/LPDDR3, can be asserted in following: - in Self Refresh - in Power Down - in Deep Power Down - during Normal operation (Clock Stop) In LPDDR4, can be asserted in following: - in Self Refresh Power Down - in Power Down - during Normal operation (Clock Stop) Programming Mode: Dynamic" range="" rwaccess="RW"/>
    <bitfield id="DEEPPOWERDOWN_EN" width="1" begin="2" end="2" resetval="0x0" description="When this is 1, uMCTL2 puts the SDRAM into deep power-down mode when the transaction store is empty.This register must be reset to '0' to bring uMCTL2 out of deep power-down mode. Controller performs automatic SDRAM initialization on deep power-down exit. Present only in designs configured to support mDDR or LPDDR2 or LPDDR3. For non-mDDR/non-LPDDR2/non-LPDDR3, this register should not be set to 1. FOR PERFORMANCE ONLY. Programming Mode: Dynamic" range="" rwaccess="RW"/>
    <bitfield id="POWERDOWN_EN" width="1" begin="1" end="1" resetval="0x0" description="If true then the uMCTL2 goes into power-down after a programmable number of cycles 'maximum idle clocks before power down' (DDRCTL_PWRTMG.powerdown_to_x32). This register bit may be re-programmed during the course of normal operation. Programming Mode: Dynamic" range="" rwaccess="RW"/>
    <bitfield id="SELFREF_EN" width="1" begin="0" end="0" resetval="0x0" description="If true then the uMCTL2 puts the SDRAM into Self Refresh after a programmable number of cycles 'maximum idle clocks before Self Refresh (DDRCTL_PWRTMG.selfref_to_x32)'. This register bit may be re-programmed during the course of normal operation. Programming Mode: Dynamic" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_PWRTMG" acronym="DDRCTL_PWRTMG" offset="0x34" width="32" description="Low Power Timing Register">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="SELFREF_TO_X32" width="8" begin="23" end="16" resetval="0x40" description="After this many clocks of the DDRC command channel being idle the uMCTL2 automatically puts the SDRAM into Self Refresh.The DDRC command channel is considered idle when there are no HIF commands outstanding. This must be enabled in the DDRCTL_PWRCTL.selfref_en. Unit: Multiples of 32 DFI clocks. FOR PERFORMANCE ONLY. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="T_DPD_X4096" width="8" begin="15" end="8" resetval="0x20" description="Minimum deep power-down time.For mDDR, value from the JEDEC specification is 0 as mDDR exits from deep power-down mode immediately after DDRCTL_PWRCTL.deeppowerdown_en is de-asserted. For LPDDR2/LPDDR3, value from the JEDEC specification is 500us. Unit: Multiples of 4096 DFI clocks. Present only in designs configured to support mDDR, LPDDR2 or LPDDR3. FOR PERFORMANCE ONLY. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="POWERDOWN_TO_X32" width="5" begin="4" end="0" resetval="0x10" description="After this many clocks of the DDRC command channel being idle the uMCTL2 automatically puts the SDRAM into power-down.The DDRC command channel is considered idle when there are no HIF commands outstanding. This must be enabled in the DDRCTL_PWRCTL.powerdown_en. Unit: Multiples of 32 DFI clocks FOR PERFORMANCE ONLY. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_HWLPCTL" acronym="DDRCTL_HWLPCTL" offset="0x38" width="32" description="Hardware Low Power Control Register">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="HW_LP_IDLE_X32" width="12" begin="27" end="16" resetval="0x0" description="Hardware idle period.The cactive_ddrc output is driven low if the DDRC command channel is idle for hw_lp_idle * 32 cycles if not in INIT or DPD/MPSM operating_mode. The DDRC command channel is considered idle when there are no HIF commands outstanding. The hardware idle function is disabled when hw_lp_idle_x32=0. Unit: Multiples of 32 DFI clocks. FOR PERFORMANCE ONLY. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="14" begin="15" end="2" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="HW_LP_EXIT_IDLE_EN" width="1" begin="1" end="1" resetval="0x1" description="When this bit is programmed to 1 the cactive_in_ddrc pin of the DDRC can be used to exit from the automatic clock stop, automatic power down or automatic self-refresh modes.Note, it will not cause exit of Self-Refresh that was caused by Hardware Low Power Interface and/or Software (DDRCTL_PWRCTL.selfref_sw). Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="HW_LP_EN" width="1" begin="0" end="0" resetval="0x1" description="Enable for Hardware Low Power Interface.Programming Mode: Quasi-dynamic Group 3" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_RFSHCTL0" acronym="DDRCTL_RFSHCTL0" offset="0x50" width="32" description="Refresh Control Register 0">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="REFRESH_MARGIN" width="4" begin="23" end="20" resetval="0x2" description="Threshold value in number of DFI clock cycles before the critical refresh or page timer expires.A critical refresh is to be issued before this threshold is reached. It is recommended that this not be changed from the default value, currently shown as 0x2. It must always be less than internally used t_rfc_nom_x32. Note that, in LPDDR2/LPDDR3/LPDDR4, internally used t_rfc_nom_x32 may be equal to DDRCTL_RFSHTMG.t_rfc_nom_x32&amp;amp;gt;&amp;amp;gt;2 if derating is enabled (DDRCTL_DERATEEN.derate_enable=1). Otherwise, internally used t_rfc_nom_x32 will be equal to DDRCTL_RFSHTMG.t_rfc_nom_x32. Unit: Multiples of 32 DFI clocks. Programming Mode: Dynamic - Refresh Related" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="19" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="REFRESH_TO_X32" width="5" begin="16" end="12" resetval="0x10" description="If the refresh timer (tRFCnom, also known as tREFI) has expired at least once, but it has not expired (DDRCTL_RFSHCTL0.refresh_burst+1) times yet, then a speculative refresh may be performed. A speculative refresh is a refresh performed at a time when refresh would be useful, but before it is absolutely required. When the SDRAM bus is idle for a period of time determined by this DDRCTL_RFSHCTL0.refresh_to_x32 and the refresh timer has expired at least once since the last refresh, then a speculative refresh is performed. Speculative refreshes continues successively until there are no refreshes pending or until new reads or writes are issued to the uMCTL2. FOR PERFORMANCE ONLY. Unit: Multiples of 32 DFI clocks. Programming Mode: Dynamic - Refresh Related" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="11" end="9" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="REFRESH_BURST" width="5" begin="8" end="4" resetval="0x0" description="The programmed value + 1 is the number of refresh timeouts that is allowed to accumulate before traffic is blocked and the refreshes are forced to execute.Closing pages to perform a refresh is a one-time penalty that must be paid for each group of refreshes. Therefore, performing refreshes in a burst reduces the per-refresh penalty of these page closings. Higher numbers for RFSHCTL.refresh_burst slightly increases utilization lower numbers decreases the worst-case latency associated with refreshes. - 0 - single refresh - 1 - burst-of-2 refresh - 7 - burst-of-8 refresh For information on burst refresh feature refer to section 3.9 of DDR2 JEDEC specification - JESD79-2F.pdf. For DDR2/3, the refresh is always per-rank and not per-bank. The rank refresh can be accumulated over 8*tREFI cycles using the burst refresh feature. In DDR4 mode, according to Fine Granularity feature, 8 refreshes can be postponed in 1X mode, 16 refreshes in 2X mode and 32 refreshes in 4X mode. If using PHY-initiated updates, care must be taken in the setting of DDRCTL_RFSHCTL0.refresh_burst, to ensure that tRFCmax is not violated due to a PHY-initiated update occurring shortly before a refresh burst was due. In this situation, the refresh burst will be delayed until the PHY-initiated update is complete. Programming Mode: Dynamic - Refresh Related" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="PER_BANK_REFRESH" width="1" begin="2" end="2" resetval="0x0" description="-1 - Per bank refresh - 0 - All bank refresh. Per bank refresh allows traffic to flow to other banks. Per bank refresh is not supported by all LPDDR2 devices but should be supported by all LPDDR3/LPDDR4 devices. Present only in designs configured to support LPDDR2/LPDDR3/LPDDR4 Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="1" end="0" resetval="0xX" description="" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_RFSHCTL1" acronym="DDRCTL_RFSHCTL1" offset="0x54" width="32" description="Refresh Control Register 1">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="REFRESH_TIMER1_START_VALUE_X32" width="12" begin="27" end="16" resetval="0x0" description="Refresh timer start for rank 1 (only present in multi-rank configurations).This is useful in staggering the refreshes to multiple ranks to help traffic to proceed. This is explained in Refresh Controls section of architecture chapter. Unit: Multiples of 32 DFI clock cycles. FOR PERFORMANCE ONLY. Programming Mode: Dynamic - Refresh Related" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="REFRESH_TIMER0_START_VALUE_X32" width="12" begin="11" end="0" resetval="0x0" description="Refresh timer start for rank 0 (only present in multi-rank configurations).This is useful in staggering the refreshes to multiple ranks to help traffic to proceed. This is explained in Refresh Controls section of architecture chapter. Unit: Multiples of 32 DFI clock cycles. FOR PERFORMANCE ONLY. Programming Mode: Dynamic - Refresh Related" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_RFSHCTL3" acronym="DDRCTL_RFSHCTL3" offset="0x60" width="32" description="Refresh Control Register 3">
    <bitfield id="RESERVED" width="25" begin="31" end="7" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="REFRESH_MODE" width="3" begin="6" end="4" resetval="0x0" description="Fine Granularity Refresh Mode -000 - Fixed 1x (Normal mode) - 001 - Fixed 2x - 010 - Fixed 4x - 101 - Enable on the fly 2x (not supported) - 110 - Enable on the fly 4x (not supported) - Everything else - reserved Note: Only Fixed 1x mode is supported if DDRCTL_RFSHCTL3.dis_auto_refresh = 1. Note: The on-the-fly modes are not supported in this version of the uMCTL2. Note: This must be set up while the Controller is in reset or while the Controller is in self-refresh mode. Changing this during normal operation is not allowed. Making this a dynamic register will be supported in future version of the uMCTL2. Note: This register field has effect only if a DDR4 SDRAM device is in use (DDRCTL_MSTR.ddr4 = 1). Programming Mode: Quasi-dynamic Group 2" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="3" end="2" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="REFRESH_UPDATE_LEVEL" width="1" begin="1" end="1" resetval="0x0" description="Toggle this signal (either from 0 to 1 or from 1 to 0) to indicate that the refresh register(s) have been updated.refresh_update_level must not be toggled when the DDRC is in reset (core_ddrc_rstn = 0). The refresh register(s) are automatically updated when exiting reset. Programming Mode: Dynamic" range="" rwaccess="RW"/>
    <bitfield id="DIS_AUTO_REFRESH" width="1" begin="0" end="0" resetval="0x0" description="When '1', disable auto-refresh generated by the uMCTL2.When auto-refresh is disabled, the SoC core must generate refreshes using the registers DDRCTL_DBGCMD.rankn_refresh. When dis_auto_refresh transitions from 0 to 1, any pending refreshes are immediately scheduled by the uMCTL2. If DDR4 CRC/parity retry is enabled (DDRCTL_CRCPARCTL1.crc_parity_retry_enable = 1), disable auto-refresh is not supported, and this bit must be set to '0'. (DDR4 only) If FGR mode is enabled (DDRCTL_RFSHCTL3.refresh_mode &amp;amp;gt; 0), disable auto-refresh is not supported, and this bit must be set to '0'. This register field is changeable on the fly. Programming Mode: Dynamic - Refresh Related" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_RFSHTMG" acronym="DDRCTL_RFSHTMG" offset="0x64" width="32" description="Refresh Timing Register">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_RFC_NOM_X32" width="12" begin="27" end="16" resetval="0x62" description="tREFI: Average time interval between refreshes per rank (Specification: 7.8us for DDR2, DDR3 and DDR4.See JEDEC specification for mDDR, LPDDR2, LPDDR3 and LPDDR4). For LPDDR2/LPDDR3/LPDDR4: - if using all-bank refreshes (DDRCTL_RFSHCTL0.per_bank_refresh = 0), this register should be set to tREFIab - if using per-bank refreshes (DDRCTL_RFSHCTL0.per_bank_refresh = 1), this register should be set to tREFIpb When the controller is operating in 1:2 frequency ratio mode, program this to (tREFI/2), no rounding up. In DDR4 mode, tREFI value is different depending on the refresh mode. The user should program the appropriate value from the spec based on the value programmed in the refresh mode register. Note that DDRCTL_RFSHTMG.t_rfc_nom_x32 * 32 must be greater than DDRCTL_RFSHTMG.t_rfc_min, and DDRCTL_RFSHTMG.t_rfc_nom_x32 must be greater than 0x1. - Non-DDR4 or DDR4 Fixed 1x mode: DDRCTL_RFSHTMG.t_rfc_nom_x32 must be less than or equal to 0xFFE. - DDR4 Fixed 2x mode: DDRCTL_RFSHTMG.t_rfc_nom_x32 must be less than or equal to 0x7FF. - DDR4 Fixed 4x mode: DDRCTL_RFSHTMG.t_rfc_nom_x32 must be less than or equal to 0x3FF. Unit: Multiples of 32 clocks. Programming Mode: Dynamic - Refresh Related" range="" rwaccess="RW"/>
    <bitfield id="LPDDR3_TREFBW_EN" width="1" begin="15" end="15" resetval="0x0" description="Used only when LPDDR3 memory type is connected.Should only be changed when uMCTL2 is in reset. Specifies whether to use the tREFBW parameter (required by some LPDDR3 devices which comply with earlier versions of the LPDDR3 JEDEC specification) or not: - 0 - tREFBW parameter not used - 1 - tREFBW parameter used Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="14" end="10" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_RFC_MIN" width="10" begin="9" end="0" resetval="0x8C" description="tRFC (min): Minimum time from refresh to refresh or activate.When the controller is operating in 1:1 mode, t_rfc_min should be set to RoundUp(tRFCmin/tCK). When the controller is operating in 1:2 mode, t_rfc_min should be set to RoundUp(RoundUp(tRFCmin/tCK)/2). In LPDDR2/LPDDR3/LPDDR4 mode: - if using all-bank refreshes, the tRFCmin value in the above equations is equal to tRFCab - if using per-bank refreshes, the tRFCmin value in the above equations is equal to tRFCpb In DDR4 mode, the tRFCmin value in the above equations is different depending on the refresh mode (fixed 1X,2X,4X) and the device density. The user should program the appropriate value from the spec based on the 'refresh_mode' and the device density that is used. Unit: Clocks. Programming Mode: Dynamic - Refresh Related" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ECCCFG0" acronym="DDRCTL_ECCCFG0" offset="0x70" width="32" description="ECC Configuration Register 0">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DIS_SCRUB" width="1" begin="4" end="4" resetval="0x0" description="Disable ECC scrubs.Valid only when DDRCTL_ECCCFG0.ecc_mode = 3'b100 or 3'b101 and MEMC_USE_RMW is defined. Note: Scrub is not supported in inline ECC mode and the register value is don't care. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="TEST_MODE" width="1" begin="3" end="3" resetval="0x0" description="If this bit is set to 1, no ECC is performed, and the ECC byte is accessed directly from co_wu_rxdata_ecc and ra_co_resp_ecc_data.This test mode is only supported with the HIF interface - it is disabled if UMCTL2_INCL_ARB is enabled. This test mode is only supported in full bus width mode. In other words, if DDRCTL_MSTR.data_bus_width is non-zero, this test_mode field must be set to 0. If test_mode is set to 1, the ecc_mode field is ignored. If MEMC_ECC_SUPPORT is 2 (Advanced ECC mode), this test_mode field must be set to 0. Note: test_mode is not supported in inline ECC mode and the register value is don't care. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="ECC_MODE" width="3" begin="2" end="0" resetval="0x0" description="ECC mode indicator -000 - ECC disabled - 100 - ECC enabled - SEC/DED over 1 beat - 101 - ECC enabled - Advanced ECC - all other settings are reserved for future use Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ECCCFG1" acronym="DDRCTL_ECCCFG1" offset="0x74" width="32" description="ECC Configuration Register 1">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DATA_POISON_BIT" width="1" begin="1" end="1" resetval="0x0" description="Selects whether to poison 1 or 2 bits - if0 -&amp;amp;gt; 2-bit (uncorrectable) data poisoning, if 1 -&amp;amp;gt; 1-bit (correctable) data poisoning, if DDRCTL_ECCCFG1.data_poison_en=1. Valid only when MEMC_ECC_SUPPORT==1 (SECDED ECC mode) Programming Mode: Quasi-dynamic Group 3" range="" rwaccess="RW"/>
    <bitfield id="DATA_POISON_EN" width="1" begin="0" end="0" resetval="0x0" description="Enable ECC data poisoning - introduces ECC errors on writes to address specified by the" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ECCSTAT" acronym="DDRCTL_ECCSTAT" offset="0x78" width="32" description="SECDED ECC Status Register (Valid only in MEMC_ECC_SUPPORT==1 (SECDED ECC mode))">
    <bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="ECC_UNCORRECTED_ERR" width="4" begin="19" end="16" resetval="0x0" description="Double-bit error indicators.In sideband ECC mode, 1 bit per ECC lane. When the controller is operating in 1:1 frequency ratio mode, there are only two lanes, so only the lower two bits are used. In inline ECC mode, the register always is 1 bit to indicate uncorrectable error on any lane. Programming Mode: Dynamic" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="ECC_CORRECTED_ERR" width="4" begin="11" end="8" resetval="0x0" description="Single-bit error indicators.In sideband ECC mode, 1 bit per ECC lane. When the controller is operating in 1:1 frequency ratio mode, there are only two lanes, so only the lower two bits are used. In inline ECC mode, the register always is 1 bit to indicate correctable error on any lane. Programming Mode: Dynamic" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="ECC_CORRECTED_BIT_NUM" width="7" begin="6" end="0" resetval="0x0" description="Bit number corrected by single-bit ECC error.If more than one data lane has an error, the lower data lane is selected. This register is 7 bits wide in order to handle 72 bits of the data present in a single lane. Programming Mode: Static" range="" rwaccess="R"/>
  </register>
  <register id="DDRCTL_ECCCLR" acronym="DDRCTL_ECCCLR" offset="0x7C" width="32" description="ECC Clear Register">
    <bitfield id="RESERVED" width="28" begin="31" end="4" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ECC_CLR_UNCORR_ERR_CNT" width="1" begin="3" end="3" resetval="0x0" description="Setting this register bit to 1 clears the currently stored uncorrected ECC error count.The DDRCTL_ECCERRCNT.ecc_uncorr_err_cnt register is cleared by this operation. When the clear operation is complete, the uMCTL2 automatically clears this bit. Programming Mode: Dynamic" range="" rwaccess="RW1C"/>
    <bitfield id="ECC_CLR_CORR_ERR_CNT" width="1" begin="2" end="2" resetval="0x0" description="Setting this register bit to 1 clears the currently stored corrected ECC error count.The DDRCTL_ECCERRCNT.ecc_corr_err_cnt register is cleared by this operation. When the clear operation is complete, the uMCTL2 automatically clears this bit. Programming Mode: Dynamic" range="" rwaccess="RW1C"/>
    <bitfield id="ECC_CLR_UNCORR_ERR" width="1" begin="1" end="1" resetval="0x0" description="Setting this register bit to 1 clears the currently stored uncorrected ECC error.The DDRCTL_ECCSTAT.ecc_uncorrected_err, ADVECCSTAT.advecc_uncorrected_err, DDRCTL_ECCUADDR0, DDRCTL_ECCUADDR1, DDRCTL_ECCUSYN0, ECCUSYN1 and DDRCTL_ECCUSYN2 registers are cleared by this operation. When the clear operation is complete, the uMCTL2 automatically clears this bit. Programming Mode: Dynamic" range="" rwaccess="RW1C"/>
    <bitfield id="ECC_CLR_CORR_ERR" width="1" begin="0" end="0" resetval="0x0" description="Setting this register bit to 1 clears the currently stored corrected ECC error.The DDRCTL_ECCSTAT.ecc_corrected_err, DDRCTL_ECCSTAT.ecc_corrected_bit_num, ADVECCSTAT.advecc_corrected_err, ADVECCSTAT.advecc_num_err_symbol, ADVECCSTAT.advecc_err_symbol_pos, ADVECCSTAT.advecc_err_symbol_bits, DDRCTL_ECCCADDR0, DDRCTL_ECCCADDR1, DDRCTL_ECCCSYN0, ECCCSYN1, DDRCTL_ECCCSYN2, DDRCTL_ECCBITMASK0, ECCBITMASK1 and DDRCTL_ECCBITMASK2 registers are cleared by this operation. When the clear operation is complete, the uMCTL2 automatically clears this bit. Programming Mode: Dynamic" range="" rwaccess="RW1C"/>
  </register>
  <register id="DDRCTL_ECCERRCNT" acronym="DDRCTL_ECCERRCNT" offset="0x80" width="32" description="ECC Error Counter Register">
    <bitfield id="ECC_UNCORR_ERR_CNT" width="16" begin="31" end="16" resetval="0x0" description="Number of uncorrectable ECC errors detected.Note that the saturation behavior of this register is different, depending on whether SECDED ECC or advanced ECC is enabled. For advanced ECC, it saturates at 0xFFFF, while for SECDED ECC, it saturates at 0xFFFC or above. Programming Mode: Dynamic" range="" rwaccess="R"/>
    <bitfield id="ECC_CORR_ERR_CNT" width="16" begin="15" end="0" resetval="0x0" description="Number of correctable ECC errors detected.Note that the saturation behavior of this register is different, depending on whether SECDED ECC or advanced ECC is enabled. For advanced ECC, it saturates at 0xFFFF, while for SECDED ECC, it saturates at 0xFFFC or above. Programming Mode: Dynamic" range="" rwaccess="R"/>
  </register>
  <register id="DDRCTL_ECCCADDR0" acronym="DDRCTL_ECCCADDR0" offset="0x84" width="32" description="ECC Corrected Error Address Register 0">
    <bitfield id="RESERVED" width="7" begin="31" end="25" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="ECC_CORR_RANK" width="1" begin="24" end="24" resetval="0x0" description="Rank number of a read resulting in a corrected ECC error Programming Mode: Dynamic" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="6" begin="23" end="18" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="ECC_CORR_ROW" width="18" begin="17" end="0" resetval="0x0" description="Page/row number of a read resulting in a corrected ECC error.This is 18-bits wide in configurations with DDR4 support and 16-bits in all other configurations. Programming Mode: Dynamic" range="" rwaccess="R"/>
  </register>
  <register id="DDRCTL_ECCCADDR1" acronym="DDRCTL_ECCCADDR1" offset="0x88" width="32" description="ECC Corrected Error Address Register 1">
    <bitfield id="RESERVED" width="6" begin="31" end="26" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="ECC_CORR_BG" width="2" begin="25" end="24" resetval="0x0" description="Bank Group number of a read resulting in a corrected ECC error Programming Mode: Dynamic" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="5" begin="23" end="19" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="ECC_CORR_BANK" width="3" begin="18" end="16" resetval="0x0" description="Bank number of a read resulting in a corrected ECC error Programming Mode: Dynamic" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="ECC_CORR_COL" width="12" begin="11" end="0" resetval="0x0" description="Block number of a read resulting in a corrected ECC error (lowest bit not assigned here) Programming Mode: Dynamic" range="" rwaccess="R"/>
  </register>
  <register id="DDRCTL_ECCCSYN0" acronym="DDRCTL_ECCCSYN0" offset="0x8C" width="32" description="ECC Corrected Syndrome Register 0">
    <bitfield id="ECC_CORR_SYNDROMES_31_0" width="32" begin="31" end="0" resetval="0x0" description="Data pattern that resulted in a corrected error.For 16-bit ECC, only bits [15:0] are used Programming Mode: Dynamic" range="" rwaccess="R"/>
  </register>
  <register id="DDRCTL_ECCCSYN2" acronym="DDRCTL_ECCCSYN2" offset="0x94" width="32" description="ECC Corrected Syndrome Register 2">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="ECC_CORR_SYNDROMES_71_64" width="8" begin="7" end="0" resetval="0x0" description="Data pattern that resulted in a corrected error one for each ECC lane, all concatenated together This register refers to the ECC byte, which is bits[71:64] for 64-bit ECC, [39:32] for 32-bit ECC, or [23:16] for 16-bit ECC Programming Mode: Dynamic" range="" rwaccess="R"/>
  </register>
  <register id="DDRCTL_ECCBITMASK0" acronym="DDRCTL_ECCBITMASK0" offset="0x98" width="32" description="ECC Corrected Data Bit Mask Register 0">
    <bitfield id="ECC_CORR_BIT_MASK_31_0" width="32" begin="31" end="0" resetval="0x0" description="Mask for the corrected data portion - 1 on any bit indicates that the bit has been corrected by the ECC logic - 0 on any bit indicates that the bit has not been corrected by the ECC logic This register accumulates data over multiple ECC errors, to give an overall indication of which bits are being fixed.It is cleared by writing a 1 to DDRCTL_ECCCLR.ecc_clr_corr_err. For 16-bit ECC, only bits [15:0] are used Programming Mode: Dynamic" range="" rwaccess="R"/>
  </register>
  <register id="DDRCTL_ECCBITMASK2" acronym="DDRCTL_ECCBITMASK2" offset="0xA0" width="32" description="ECC Corrected Data Bit Mask Register 2">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="ECC_CORR_BIT_MASK_71_64" width="8" begin="7" end="0" resetval="0x0" description="Mask for the corrected data portion - 1 on any bit indicates that the bit has been corrected by the ECC logic - 0 on any bit indicates that the bit has not been corrected by the ECC logic This register accumulates data over multiple ECC errors, to give an overall indication of which bits are being fixed.It is cleared by writing a 1 to DDRCTL_ECCCLR.ecc_clr_corr_err. This register refers to the ECC byte, which is bits [71:64] for 64-bit ECC, [39:32] for 32-bit ECC, or [23:16] for 16-bit ECC Programming Mode: Dynamic" range="" rwaccess="R"/>
  </register>
  <register id="DDRCTL_ECCUADDR0" acronym="DDRCTL_ECCUADDR0" offset="0xA4" width="32" description="ECC Uncorrected Error Address Register 0">
    <bitfield id="RESERVED" width="7" begin="31" end="25" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="ECC_UNCORR_RANK" width="1" begin="24" end="24" resetval="0x0" description="Rank number of a read resulting in an uncorrected ECC error Programming Mode: Dynamic" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="6" begin="23" end="18" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="ECC_UNCORR_ROW" width="18" begin="17" end="0" resetval="0x0" description="Page/row number of a read resulting in an uncorrected ECC error.This is 18-bits wide in configurations with DDR4 support and 16-bits in all other configurations. Programming Mode: Dynamic" range="" rwaccess="R"/>
  </register>
  <register id="DDRCTL_ECCUADDR1" acronym="DDRCTL_ECCUADDR1" offset="0xA8" width="32" description="ECC Uncorrected Error Address Register 1">
    <bitfield id="RESERVED" width="6" begin="31" end="26" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="ECC_UNCORR_BG" width="2" begin="25" end="24" resetval="0x0" description="Bank Group number of a read resulting in an uncorrected ECC error Programming Mode: Dynamic" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="5" begin="23" end="19" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="ECC_UNCORR_BANK" width="3" begin="18" end="16" resetval="0x0" description="Bank number of a read resulting in an uncorrected ECC error Programming Mode: Dynamic" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="ECC_UNCORR_COL" width="12" begin="11" end="0" resetval="0x0" description="Block number of a read resulting in an uncorrected ECC error (lowest bit not assigned here) Programming Mode: Dynamic" range="" rwaccess="R"/>
  </register>
  <register id="DDRCTL_ECCUSYN0" acronym="DDRCTL_ECCUSYN0" offset="0xAC" width="32" description="ECC Uncorrected Syndrome Register 0">
    <bitfield id="ECC_UNCORR_SYNDROMES_31_0" width="32" begin="31" end="0" resetval="0x0" description="Data pattern that resulted in an uncorrected error, one for each ECC lane, all concatenated together.For 16-bit ECC, only bits [15:0] are used Programming Mode: Dynamic" range="" rwaccess="R"/>
  </register>
  <register id="DDRCTL_ECCUSYN2" acronym="DDRCTL_ECCUSYN2" offset="0xB4" width="32" description="ECC Uncorrected Syndrome Register 2">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="ECC_UNCORR_SYNDROMES_71_64" width="8" begin="7" end="0" resetval="0x0" description="Data pattern that resulted in an uncorrected error one for each ECC lane, all concatenated together.This register refers to the ECC byte, which is bits [71:64] for 64-bit ECC, [39:32] for 32-bit ECC, or [23:16] for 16-bit ECC Programming Mode: Dynamic" range="" rwaccess="R"/>
  </register>
  <register id="DDRCTL_ECCPOISONADDR0" acronym="DDRCTL_ECCPOISONADDR0" offset="0xB8" width="32" description="ECC Data Poisoning Address Register 0. If a HIF write data beat matches the address specified in this register, an ECC error will be introduced on that transaction (write/RMW), if .data_poison_en=1">
    <bitfield id="RESERVED" width="7" begin="31" end="25" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ECC_POISON_RANK" width="1" begin="24" end="24" resetval="0x0" description="Rank address for ECC poisoning Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="12" begin="23" end="12" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ECC_POISON_COL" width="12" begin="11" end="0" resetval="0x0" description="Column address for ECC poisoning.Note that this column address must be burst aligned: - In full bus width mode, ecc_poison_col[2:0] must be set to 0 - In half bus width mode, ecc_poison_col[3:0] must be set to 0 - In quarter bus width mode, ecc_poison_col[4:0] must be set to 0 Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ECCPOISONADDR1" acronym="DDRCTL_ECCPOISONADDR1" offset="0xBC" width="32" description="ECC Data Poisoning Address Register 1. If a HIF write data beat matches the address specified in this register, an ECC error will be introduced on that transaction (write/RMW), if .data_poison_en=1">
    <bitfield id="RESERVED" width="2" begin="31" end="30" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ECC_POISON_BG" width="2" begin="29" end="28" resetval="0x0" description="Bank Group address for ECC poisoning Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="27" end="27" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ECC_POISON_BANK" width="3" begin="26" end="24" resetval="0x0" description="Bank address for ECC poisoning Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="23" end="18" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ECC_POISON_ROW" width="18" begin="17" end="0" resetval="0x0" description="Row address for ECC poisoning.This is 18-bits wide in configurations with DDR4 support and 16-bits in all other configurations. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_CRCPARCTL0" acronym="DDRCTL_CRCPARCTL0" offset="0xC0" width="32" description="CRC Parity Control Register0">
    <bitfield id="RESERVED" width="13" begin="31" end="19" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RETRY_CTRLUPD_WAIT" width="3" begin="18" end="16" resetval="0x0" description="Additional wait time after dfi_ctrlupd_req for retry has occurred to ensure PHY's internals (FIFO pointers) have been reset correctly.Value used is 2^retry_ctrlupd_wait. Only used if DDRCTL_CRCPARCTL0.retry_ctrlupd_enable is enabled. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RETRY_CTRLUPD_ENABLE" width="1" begin="15" end="15" resetval="0x1" description="dfi_ctrlupd_req enable for retry.- 1: Enable to issue dfi_ctrlupd_req before starting retry sequence - 0: Disable to issue dfi_ctrlupd_req before starting retry sequence The DFI controller update can be used to reset PHY FIFO pointers. If both DDRCTL_CRCPARCTL0.retry_cfrlupd_enable and DDRCTL_CRCPARCTL1.alert_wait_for_sw are enabled, dfi_ctrlupd_req is issued just before software intervention time. If DDRCTL_CRCPARCTL0.retry_cfrlupd_enable is enabled, dfi_ctrlupd_req will be issued regardless of DDRCTL_DFIUPD0.dis_auto_ctrlupd. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="14" end="9" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_ALERT_ERR_MAX_REACHED_INT_CLR" width="1" begin="8" end="8" resetval="0x0" description="Interrupt clear bit for DFI alert counter saturation.If this bit is set, the alert error interrupt on DDRCTL_CRCPARSTAT.dfi_alert_err_max_reached_int is cleared. When the clear operation is complete, the uMCTL2 automatically clears this bit. Programming Mode: Dynamic" range="" rwaccess="RW1C"/>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_ALERT_ERR_FATL_INT_CLR" width="1" begin="4" end="4" resetval="0x0" description="Interrupt clear bit for dfi_alert_err_fatl_int.If this bit is set, the alert error interrupt on DDRCTL_CRCPARSTAT.dfi_alert_err_fatl_int is cleared. When the clear operation is complete, the uMCTL2 automatically clears this bit. Programming Mode: Dynamic" range="" rwaccess="RW1C"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_ALERT_ERR_CNT_CLR" width="1" begin="2" end="2" resetval="0x0" description="DFI alert error count clear.Clear bit for DFI alert error counter. Asserting this bit will clear the DFI alert error counter, DDRCTL_CRCPARSTAT.dfi_alert_err_cnt. When the clear operation is complete, the uMCTL2 automatically clears this bit. Programming Mode: Dynamic" range="" rwaccess="RW1C"/>
    <bitfield id="DFI_ALERT_ERR_INT_CLR" width="1" begin="1" end="1" resetval="0x0" description="Interrupt clear bit for DFI alert error.If this bit is set, the alert error interrupt on DDRCTL_CRCPARSTAT.dfi_alert_err_int will be cleared. When the clear operation is complete, the uMCTL2 automatically clears this bit. Programming Mode: Dynamic" range="" rwaccess="RW1C"/>
    <bitfield id="DFI_ALERT_ERR_INT_EN" width="1" begin="0" end="0" resetval="0x0" description="Interrupt enable bit for DFI alert error.If this bit is set, any parity/CRC error detected on the dfi_alert_n input will result in an interrupt being set on DDRCTL_CRCPARSTAT.dfi_alert_err_int. Programming Mode: Dynamic" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_CRCPARCTL1" acronym="DDRCTL_CRCPARCTL1" offset="0xC4" width="32" description="CRC Parity Control Register1">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_T_PHY_RDLAT" width="7" begin="30" end="24" resetval="0x10" description="The maximum time allowed from the assertion of the dfi_rddata_en signal to the assertion of each of the corresponding bits of the dfi_rddata_valid signal.This corresponds to the DFI timing parameter tphy_rdlat. Refer to PHY specification for correct value. This value it only used for detecting read data timeout when DDR4 retry is enabled by DDRCTL_CRCPARCTL1.crc_parity_retry_enable=1. When the controller is operating in 1:2 frequency ratio mode, program this to the DFI timing parameter tphy_rdlat/2, and round it up to the next integer value. Unit: DFI clock cycles. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="23" end="19" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RETRY_ADD_RD_LAT" width="3" begin="18" end="16" resetval="0x0" description="Retry additional read latency value.Delay value used is retry_add_rd_lat+1. Only used if DDRCTL_CRCPARCTL1.retry_add_rd_lat_en is enabled. Selects the number of pipeline stages to dfi_rddata_valid/dfi_rddata/dfi_rddata_dbi before rest of internal uMCTL2 logic observes it. Required to compensate for fact delay in PHY/PCB for generating dfi_alert_n for retry may be more than the delay in PHY/PCB on read data path. Recommended settings (in terms of core_ddrc_core_clk): (Maximum Alert delay through PHY/PCB from erroneous read command including tPAR_UNKNOWN) - (Minimum Read data delay through PHY/PCB from erroneous read command) + (PHY's max granularity of dfi_rddata beats that may be corrupted before erroneous Read) Note: This calculation depends on various items such as RL, tPAR_ALERT_ON/tPAR_UNKNOWN/RCD/PHY/PCB behavior. Unit: DFI clock cycles. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RETRY_ADD_RD_LAT_EN" width="1" begin="15" end="15" resetval="0x0" description="Retry additional read latency enable.Number of pipeline stages selected is defined as DDRCTL_CRCPARCTL1.retry_add_lat+1. Only set if DDRCTL_CRCPARCTL1.crc_parity_retry_enable = 1 Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="14" end="13" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CAPARITY_DISABLE_BEFORE_SR" width="1" begin="12" end="12" resetval="0x1" description="If DDR4-SDRAM's CA parity is enabled by DDRCTL_INIT6.mr5[2:0]!=0 and this register is set to 1, CA parity is automatically disabled before Self-Refresh entry and enabled after Self-Refresh exit by issuing MR5. - 1: CA parity is disabled before Self-Refresh entry - 0: CA parity is not disabled before Self-Refresh entry If Geardown is used by DDRCTL_MSTR.geardown_mode=1, this register must be set to 1. If this register set to 0, DDRCTL_DRAMTMG5.t_ckesr and DDRCTL_DRAMTMG5.t_cksre must be increased by PL(Parity latency) Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="11" end="10" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ALERT_WAIT_FOR_SW" width="1" begin="9" end="9" resetval="0x1" description="After a Parity or CRC error is flagged on dfi_alert_n signal, the software has an option to read the mode registers in the DRAM before the hardware begins the retry process -1: Wait for software to read/write the mode registers before hardware begins the retry. After software is done with its operations, it will clear the alert interrupt register bit - 0: Hardware can begin the retry right away after the dfi_alert_n pulse goes away. The value on this register is valid only when retry is enabled (CRCPARCTRL.crc_parity_retry_enable = 1) If this register is set to 1 and if the software doesn't clear the interrupt register after handling the parity/CRC error, then the hardware will not begin the retry process and the system will hang. In the case of Parity/CRC error, there are two possibilities when the software doesn't reset MR5[4] to 0. - (i) If 'Persistent parity' mode register bit is NOT set: the commands sent during retry and normal operation are executed without parity checking. The value in the Parity error log register MPR Page 1 is valid. - (ii) If 'Persistent parity' mode register bit is SET: Parity checking is done for commands sent during retry and normal operation. If multiple errors occur before MR5[4] is cleared, the error log in MPR Page 1 should be treated as 'Don't care'. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="CRC_PARITY_RETRY_ENABLE" width="1" begin="8" end="8" resetval="0x0" description="-1: Enable command retry mechanism in case of C/A Parity or CRC error - 0: Disable command retry mechanism when C/A Parity or CRC features are enabled. Note that retry functionality is not supported if burst chop is enabled (DDRCTL_MSTR.burstchop = 1) and/or disable auto-refresh is enabled (DDRCTL_RFSHCTL3.dis_auto_refresh = 1) Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="CRC_INC_DM" width="1" begin="7" end="7" resetval="0x0" description="CRC Calculation setting register -1: CRC includes DM signal - 0: CRC not includes DM signal Present only in designs configured to support DDR4. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="6" end="5" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CRC_ENABLE" width="1" begin="4" end="4" resetval="0x0" description="CRC enable Register -1: Enable generation of CRC - 0: Disable generation of CRC The setting of this register should match the CRC mode register setting in the DRAM. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="3" end="1" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="PARITY_ENABLE" width="1" begin="0" end="0" resetval="0x0" description="C/A Parity enable register -1: Enable generation of C/A parity and detection of C/A parity error - 0: Disable generation of C/A parity and disable detection of C/A parity error If RCD's parity error detection or SDRAM's parity detection is enabled, this register should be 1. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_CRCPARCTL2" acronym="DDRCTL_CRCPARCTL2" offset="0xC8" width="32" description="CRC Parity Control Register2">
    <bitfield id="RESERVED" width="7" begin="31" end="25" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_PAR_ALERT_PW_MAX" width="9" begin="24" end="16" resetval="0x30" description="Value from the DRAM spec indicating the maximum width of the dfi_alert_n pulse when a parity error occurs.Recommended values: - tPAR_ALERT_PW.MAX When the controller is operating in 1:2 frequency ratio mode, program this to tPAR_ALERT_PW.MAX/2 and round up to next integer value. Values of 0, 1 and 2 are illegal. This value must be greater than DDRCTL_CRCPARCTL2.t_crc_alert_pw_max. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="15" end="13" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CRC_ALERT_PW_MAX" width="5" begin="12" end="8" resetval="0x5" description="Value from the DRAM spec indicating the maximum width of the dfi_alert_n pulse when a CRC error occurs.Recommended values: - tCRC_ALERT_PW.MAX When the controller is operating in 1:2 frequency ratio mode, program this to tCRC_ALERT_PW.MAX/2 and round up to next integer value. Values of 0, 1 and 2 are illegal. This value must be less than DDRCTL_CRCPARCTL2.t_par_alert_pw_max. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RETRY_FIFO_MAX_HOLD_TIMER_X4" width="6" begin="5" end="0" resetval="0xC" description="Indicates the maximum duration in number of DRAM clock cycles for which a command should be held in the Command Retry FIFO before it is popped out.Every location in the Command Retry FIFO has an associated down counting timer that will use this register as the start value. The down counting starts when a command is loaded into the FIFO. The timer counts down every 4 DRAM cycles. When the counter reaches zero, the entry is popped from the FIFO. All the counters are frozen, if a C/A Parity or CRC error occurs before the counter reaches zero. The counter is reset to 0, after all the commands in the FIFO are retried. Recommended(minimum) values: - Only C/A Parity is enabled. RoundUp((PHY Command Latency(DRAM CLK) + CAL + RCD delay + tPAR_ALERT_ON.max + tPAR_UNKNOWN + PHY Alert Latency(DRAM CLK) + board delay + PHY's max granularity of dfi_rddata beats that may be corrupted before erroneous Read) / 4) + 2 - Only CRC is enabled. RoundUp((PHY Command Latency(DRAM CLK) + CAL + RCD delay + WL + 5(BL10)+ tCRC_ALERT.max + PHY Alert Latency(DRAM CLK) + board delay) / 4) + 2 - If both C/A Parity and CRC are enabled. Use max of (Only C/A Parity is enabled, Only CRC is enabled) Note 1: All value (e.g. tPAR_ALERT_ON) should be in terms of DRAM Clock and round up Note 2: Board delay(Command/Alert_n) should be considered. Note 3: Use the worst case(longer) value for PHY Latencies/Board delay Note 4: The Recommended values are minimum value to be set. Note 5: RCD delay above refers to RDIMMs and LRDIMMs. Note 6: PHY's max granularity of dfi_rddata beats that may be corrupted before erroneous Read is depends on the internal architecture of the PHY. Max value can be set to this register is defined below: - MEMC_BURST_LENGTH == 16 Full bus Mode (CRC=OFF) Max value = UMCTL2_RETRY_CMD_FIFO_DEPTH - 2 Full bus Mode (CRC=ON) Max value = UMCTL2_RETRY_CMD_FIFO_DEPTH - 3 Half bus Mode (CRC=OFF) Max value = UMCTL2_RETRY_CMD_FIFO_DEPTH - 4 Half bus Mode (CRC=ON) Max value = UMCTL2_RETRY_CMD_FIFO_DEPTH - 6 Quarter bus Mode (CRC=OFF) Max value = UMCTL2_RETRY_CMD_FIFO_DEPTH - 8 Quarter bus Mode (CRC=ON) Max value = UMCTL2_RETRY_CMD_FIFO_DEPTH - 12 - MEMC_BURST_LENGTH != 16 Full bus Mode (CRC=OFF) Max value = UMCTL2_RETRY_CMD_FIFO_DEPTH - 1 Full bus Mode (CRC=ON) Max value = UMCTL2_RETRY_CMD_FIFO_DEPTH - 2 Half bus Mode (CRC=OFF) Max value = UMCTL2_RETRY_CMD_FIFO_DEPTH - 2 Half bus Mode (CRC=ON) Max value = UMCTL2_RETRY_CMD_FIFO_DEPTH - 3 Quarter bus Mode (CRC=OFF) Max value = UMCTL2_RETRY_CMD_FIFO_DEPTH - 4 Quarter bus Mode (CRC=ON) Max value = UMCTL2_RETRY_CMD_FIFO_DEPTH - 6 Values of 0, 1 and 2 are illegal. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_CRCPARSTAT" acronym="DDRCTL_CRCPARSTAT" offset="0xCC" width="32" description="CRC Parity Status Register">
    <bitfield id="RESERVED" width="2" begin="31" end="30" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="CMD_IN_ERR_WINDOW" width="1" begin="29" end="29" resetval="0x0" description="Indicate if commands are in the parity/crc error window.- 0 - No command is in the parity/crc error window. - 1 - One or more commands are in the parity/crc error window or retry is in progress. This register is valid when CRCPARCTRL1.crc_parity_retry_enable=1. Programming Mode: Static" range="" rwaccess="R"/>
    <bitfield id="RETRY_OPERATING_MODE" width="1" begin="28" end="28" resetval="0x0" description="Operating mode of retry -0 - Normal - 1 - Retry due to CRC/Parity error is in progress Programming Mode: Static" range="" rwaccess="R"/>
    <bitfield id="RETRY_CURRENT_STATE" width="4" begin="27" end="24" resetval="0x0" description="Indicate current retry state for debug purposes only -0000 - IDLE:Retry is not enabled - 0001 - MON_DFI:Retry is enabled and monitoring DFI - 0010 - DETECTED ALERT:Detected dfi_alert_n - 0011 - WAKE_UP:Waking up from self-refresh state - 0100 - PRECHRGING:Pre-charging banks - 0101 - SEND_REF1:Sending extra REFs before software intervention time - 0110 - CTRLUPD:Issuing control update from retry logic - 0111 - WAIT_SW:Software intervention time - 1000 - SEND_REF2:Sending extra REFs before retrying commands - 1001 - RETRY_COMMANDS:Retrying commands - 1010 - RESTART_RETRY:Restarting retry due to alert_n detection during retry - 1111 - FATL_ERR:Fatal error detected FOR DEBUG PURPOSE ONLY Programming Mode: Static" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="23" end="23" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="DFI_ALERT_ERR_FATL_CODE" width="3" begin="22" end="20" resetval="0x0" description="Indicate reason of dfi_alert_err_fatl_int assertion - [22] MPSMX caused parity error.(RCD's parity error detection only) - [21] Parity error happens again during software intervention time - [20] MRS was in retry_fifo_max_hold_timer_x4 window from alert_n=0 or DDRCTL_STAT.operating_mode is Init. Two or more reason can be available at the same time It remains set until cleared by DDRCTL_CRCPARCTL0.dfi_alert_err_fatl_clr. Programming Mode: Static" range="" rwaccess="R"/>
    <bitfield id="DFI_ALERT_ERR_NO_SW" width="1" begin="19" end="19" resetval="0x0" description="Indicate whether software can perform MRS/MPR/PDA during software intervention time.- 0 - MRS/MPR/PDA can be performed during software intervention time - 1 - MRS/MPR/PDA can NOT be performed during software intervention time If DDRCTL_CRCPARCTL1.alert_wait_for_sw=1 and dfi_alert_err_no_sw=1, software can not perform MRS/MPR/PDA until dfi_alert_err_int is cleared by dfi_alert_err_int_clr. It remains set until cleared by DDRCTL_CRCPARCTL0.dfi_alert_err_int_clr. Programming Mode: Static" range="" rwaccess="R"/>
    <bitfield id="DFI_ALERT_ERR_MAX_REACHED_INT" width="1" begin="18" end="18" resetval="0x0" description="DFI alert error counter max reached interrupt.If the DDRCTL_CRCPARSTAT.dfi_alert_err_cnt reaches it maximum value, this interrupt bit is set. It remains set until cleared by DDRCTL_CRCPARCTL0.dfi_alert_err_int_clr Programming Mode: Static" range="" rwaccess="R"/>
    <bitfield id="DFI_ALERT_ERR_FATL_INT" width="1" begin="17" end="17" resetval="0x0" description="Fatal parity error interrupt.One or more these situation below happens, this interrupt bit is set. - MPSMX caused parity error. (RCD's parity error detection only) - Parity error happens again during software intervention time - MRS was in retry_fifo_max_hold_timer_x4 window from alert_n=0 or DDRCTL_STAT.operating_mode is Init. It remains set until cleared by DDRCTL_CRCPARCTL0.dfi_alert_err_fatl_clr. If this interrupt is asserted, system reset is strongly recommended. Programming Mode: Static" range="" rwaccess="R"/>
    <bitfield id="DFI_ALERT_ERR_INT" width="1" begin="16" end="16" resetval="0x0" description="DFI alert error interrupt.If a parity/CRC error is detected on dfi_alert_n, and the interrupt is enabled by DDRCTL_CRCPARCTL0.dfi_alert_err_int_en, this interrupt bit will be set. It will remain set until cleared by DDRCTL_CRCPARCTL0.dfi_alert_err_int_clr Programming Mode: Static" range="" rwaccess="R"/>
    <bitfield id="DFI_ALERT_ERR_CNT" width="16" begin="15" end="0" resetval="0x0" description="DFI alert error count.If a parity/CRC error is detected on dfi_alert_n, this counter be incremented. This is independent of the setting of DDRCTL_CRCPARCTL0.dfi_alert_err_int_en. It will saturate at 0xFFFF, and can be cleared by asserting DDRCTL_CRCPARCTL0.dfi_alert_err_cnt_clr. Programming Mode: Static" range="" rwaccess="R"/>
  </register>
  <register id="DDRCTL_INIT0" acronym="DDRCTL_INIT0" offset="0xD0" width="32" description="SDRAM Initialization Register 0">
    <bitfield id="SKIP_DRAM_INIT" width="2" begin="31" end="30" resetval="0x0" description="If lower bit is enabled the SDRAM initialization routine is skipped.The upper bit decides what state the controller starts up in when reset is removed - 00 - SDRAM Intialization routine is run after power-up - 01 - SDRAM Intialization routine is skipped after power-up. Controller starts up in Normal Mode - 11 - SDRAM Intialization routine is skipped after power-up. Controller starts up in Self-refresh Mode - 10 - SDRAM Intialization routine is run after power-up. Programming Mode: Quasi-dynamic Group 2" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="29" end="26" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="POST_CKE_X1024" width="10" begin="25" end="16" resetval="0x2" description="Cycles to wait after driving CKE high to start the SDRAM initialization sequence.Unit: 1024 DFI clock cycles. DDR2 typically requires a 400 ns delay, requiring this value to be programmed to 2 at all clock speeds. LPDDR2/LPDDR3 typically requires this to be programmed for a delay of 200 us. LPDDR4 typically requires this to be programmed for a delay of 2 us. When the controller is operating in 1:2 frequency ratio mode, program this to JEDEC spec value divided by 2, and round it up to the next integer value. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="PRE_CKE_X1024" width="12" begin="11" end="0" resetval="0x4E" description="Cycles to wait after reset before driving CKE high to start the SDRAM initialization sequence.Unit: 1024 DFI clock cycles. DDR2 specifications typically require this to be programmed for a delay of &amp;amp;gt;= 200 us. LPDDR2/LPDDR3: tINIT1 of 100 ns (min) LPDDR4: tINIT3 of 2 ms (min) When the controller is operating in 1:2 frequency ratio mode, program this to JEDEC spec value divided by 2, and round it up to the next integer value. For DDR3/DDR4 RDIMMs, this should include the time needed to satisfy tSTAB Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_INIT1" acronym="DDRCTL_INIT1" offset="0xD4" width="32" description="SDRAM Initialization Register 1">
    <bitfield id="RESERVED" width="7" begin="31" end="25" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DRAM_RSTN_X1024" width="9" begin="24" end="16" resetval="0x0" description="Number of cycles to assert SDRAM reset signal during init sequence.This is only present for designs supporting DDR3, DDR4 or LPDDR4 devices. For use with a DDR PHY, this should be set to a minimum of 1. When the controller is operating in 1:2 frequency ratio mode, program this to JEDEC spec value divided by 2, and round it up to the next integer value. Unit: 1024 DFI clock cycles. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="12" begin="15" end="4" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="PRE_OCD_X32" width="4" begin="3" end="0" resetval="0x0" description="Wait period before driving the OCD complete command to SDRAM.Unit: Counts of a global timer that pulses every 32 DFI clock cycles. There is no known specific requirement for this it may be set to zero. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_INIT2" acronym="DDRCTL_INIT2" offset="0xD8" width="32" description="SDRAM Initialization Register 2">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="IDLE_AFTER_RESET_X32" width="8" begin="15" end="8" resetval="0xD" description="Idle time after the reset command, tINIT4.Present only in designs configured to support LPDDR2. When the controller is operating in 1:2 frequency ratio mode, program this to JEDEC spec value divided by 2, and round it up to the next integer value. Unit: 32 DFI clock cycles. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MIN_STABLE_CLOCK_X1" width="4" begin="3" end="0" resetval="0x5" description="Time to wait after the first CKE high, tINIT2.Present only in designs configured to support LPDDR2/LPDDR3. LPDDR2/LPDDR3 typically requires 5 x tCK delay. When the controller is operating in 1:2 frequency ratio mode, program this to JEDEC spec value divided by 2, and round it up to the next integer value. Unit: DFI clock cycles. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_INIT3" acronym="DDRCTL_INIT3" offset="0xDC" width="32" description="SDRAM Initialization Register 3">
    <bitfield id="MR" width="16" begin="31" end="16" resetval="0x0" description="DDR2: Value to write to MR register. Bit 8 is for DLL and the setting here is ignored. The uMCTL2 sets this bit appropriately. DDR3/DDR4: Value loaded into MR0 register. mDDR: Value to write to MR register. LPDDR2/LPDDR3/LPDDR4 - Value to write to MR1 register Programming Mode: Quasi-dynamic Group 1 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="EMR" width="16" begin="15" end="0" resetval="0x510" description="DDR2: Value to write to EMR register. Bits 9:7 are for OCD and the setting in this register is ignored. The uMCTL2 sets those bits appropriately. DDR3/DDR4: Value to write to MR1 register Set bit 7 to 0. If PHY-evaluation mode training is enabled, this bit is set appropriately by the uMCTL2 during write leveling. mDDR: Value to write to EMR register. LPDDR2/LPDDR3/LPDDR4 - Value to write to MR2 register Programming Mode: Quasi-dynamic Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_INIT4" acronym="DDRCTL_INIT4" offset="0xE0" width="32" description="SDRAM Initialization Register 4">
    <bitfield id="EMR2" width="16" begin="31" end="16" resetval="0x0" description="DDR2: Value to write to EMR2 register. DDR3/DDR4: Value to write to MR2 register LPDDR2/LPDDR3/LPDDR4: Value to write to MR3 register mDDR: Unused Programming Mode: Quasi-dynamic Group 4" range="" rwaccess="RW"/>
    <bitfield id="EMR3" width="16" begin="15" end="0" resetval="0x0" description="DDR2: Value to write to EMR3 register. DDR3/DDR4: Value to write to MR3 register mDDR/LPDDR2/LPDDR3: Unused LPDDR4: Value to write to MR13 register Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_INIT5" acronym="DDRCTL_INIT5" offset="0xE4" width="32" description="SDRAM Initialization Register 5">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DEV_ZQINIT_X32" width="8" begin="23" end="16" resetval="0x10" description="ZQ initial calibration, tZQINIT.Present only in designs configured to support DDR3 or DDR4 or LPDDR2/LPDDR3. DDR3 typically requires 512 SDRAM clock cycles. DDR4 requires 1024 SDRAM clock cycles. LPDDR2/LPDDR3 requires 1 us. When the controller is operating in 1:2 frequency ratio mode, program this to JEDEC spec value divided by 2, and round it up to the next integer value. Unit: 32 DFI clock cycles. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="MAX_AUTO_INIT_X1024" width="10" begin="9" end="0" resetval="0x4" description="Maximum duration of the auto initialization, tINIT5.Present only in designs configured to support LPDDR2/LPDDR3. LPDDR2/LPDDR3 typically requires 10 us. Unit: 1024 DFI clock cycles. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_INIT6" acronym="DDRCTL_INIT6" offset="0xE8" width="32" description="SDRAM Initialization Register 6">
    <bitfield id="MR4" width="16" begin="31" end="16" resetval="0x0" description="DDR4- Value to be loaded into SDRAM MR4 registers. LPDDR4- Value to be loaded into SDRAM MR11 registers. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="MR5" width="16" begin="15" end="0" resetval="0x0" description="DDR4- Value to be loaded into SDRAM MR5 registers. LPDDR4- Value to be loaded into SDRAM MR12 registers. Programming Mode: Quasi-dynamic Group 1 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_INIT7" acronym="DDRCTL_INIT7" offset="0xEC" width="32" description="SDRAM Initialization Register 7">
    <bitfield id="MR22" width="16" begin="31" end="16" resetval="0x0" description="LPDDR4- Value to be loaded into SDRAM MR22 registers. Used in LPDDR4 designs only. Programming Mode: Quasi-dynamic Group 4" range="" rwaccess="RW"/>
    <bitfield id="MR6" width="16" begin="15" end="0" resetval="0x0" description="DDR4- Value to be loaded into SDRAM MR6 registers. LPDDR4- Value to be loaded into SDRAM MR14 registers. Programming Mode: Quasi-dynamic Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DIMMCTL" acronym="DDRCTL_DIMMCTL" offset="0xF0" width="32" description="DIMM Control Register">
    <bitfield id="RESERVED" width="25" begin="31" end="7" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="LRDIMM_BCOM_CMD_PROT" width="1" begin="6" end="6" resetval="0x0" description="Protects the timing restrictions (tBCW/tMRC) between consecutive BCOM commands defined in the Data Buffer specification.When using DDR4 LRDIMM, this bit must be set to 1. Otherwise, this bit must be set to 0. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="DIMM_DIS_BG_MIRRORING" width="1" begin="5" end="5" resetval="0x0" description="Disabling Address Mirroring for BG bits.When this is set to 1, BG0 and BG1 are NOT swapped even if Address Mirroring is enabled. This will be required for DDR4 DIMMs with x16 devices. - 1 - BG0 and BG1 are NOT swapped. - 0 - BG0 and BG1 are swapped if address mirroring is enabled. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="MRS_BG1_EN" width="1" begin="4" end="4" resetval="0x0" description="Enable for BG1 bit of MRS command.BG1 bit of the mode register address is specified as RFU (Reserved for Future Use) and must be programmed to 0 during MRS. In case where DRAMs which do not have BG1 are attached and both the CA parity and the Output Inversion are enabled, this must be set to 0, so that the calculation of CA parity will not include BG1 bit. Note: This has no effect on the address of any other memory accesses, or of software-driven mode register accesses. If address mirroring is enabled, this is applied to BG1 of even ranks and BG0 of odd ranks. - 1 - Enabled - 0 - Disabled Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="MRS_A17_EN" width="1" begin="3" end="3" resetval="0x0" description="Enable for A17 bit of MRS command.A17 bit of the mode register address is specified as RFU (Reserved for Future Use) and must be programmed to 0 during MRS. In case where DRAMs which do not have A17 are attached and the Output Inversion are enabled, this must be set to 0, so that the calculation of CA parity will not include A17 bit. Note: This has no effect on the address of any other memory accesses, or of software-driven mode register accesses. - 1 - Enabled - 0 - Disabled Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="DIMM_OUTPUT_INV_EN" width="1" begin="2" end="2" resetval="0x0" description="Output Inversion Enable (for DDR4 RDIMM/LRDIMM implementations only).DDR4 RDIMM/LRDIMM implements the Output Inversion feature by default, which means that the following address, bank address and bank group bits of B-side DRAMs are inverted: A3-A9, A11, A13, A17, BA0-BA1, BG0-BG1. Setting this bit ensures that, for mode register accesses generated by the uMCTL2 during the automatic initialization routine and enabling of a particular DDR4 feature, separate A-side and B-side mode register accesses are generated. For B-side mode register accesses, these bits are inverted within the uMCTL2 to compensate for this RDIMM/LRDIMM inversion. It is recommended to set this bit always, if using DDR4 RDIMMs/LRDIMMs. Note: This has no effect on the address of any other memory accesses, or of software-driven mode register accesses. - 1 - Implement output inversion for B-side DRAMs. - 0 - Do not implement output inversion for B-side DRAMs. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="DIMM_ADDR_MIRR_EN" width="1" begin="1" end="1" resetval="0x0" description="Address Mirroring Enable (for multi-rank UDIMM implementations and multi-rank DDR4 RDIMM/LRDIMM implementations).Some UDIMMs and DDR4 RDIMMs/LRDIMMs implement address mirroring for odd ranks, which means that the following address, bank address and bank group bits are swapped: (A3, A4), (A5, A6), (A7, A8), (BA0, BA1) and also (A11, A13), (BG0, BG1) for the DDR4. Setting this bit ensures that, for mode register accesses during the automatic initialization routine, these bits are swapped within the uMCTL2 to compensate for this UDIMM/RDIMM/LRDIMM swapping. In addition to the automatic initialization routine, in case of DDR4 UDIMM/RDIMM/LRDIMM, they are swapped during the automatic MRS access to enable/disable of a particular DDR4 feature. Note: This has no effect on the address of any other memory accesses, or of software-driven mode register accesses. This is not supported for mDDR, LPDDR2, LPDDR3 or LPDDR4 SDRAMs. Note: In case of x16 DDR4 DIMMs, BG1 output of MRS for the odd ranks is same as BG0 because BG1 is invalid, hence dimm_dis_bg_mirroring register must be set to 1. - 1 - For odd ranks, implement address mirroring for MRS commands to during initialization and for any automatic DDR4 MRS commands (to be used if UDIMM/RDIMM/LRDIMM implements address mirroring) - 0 - Do not implement address mirroring Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="DIMM_STAGGER_CS_EN" width="1" begin="0" end="0" resetval="0x0" description="Staggering enable for multi-rank accesses (for multi-rank UDIMM, RDIMM and LRDIMM implementations only).This is not supported for mDDR, LPDDR2, LPDDR3 or LPDDR4 SDRAMs. Note: Even if this bit is set it does not take care of software driven MR commands (via DDRCTL_MRCTRL0/DDRCTL_MRCTRL1), where software is responsible to send them to seperate ranks as appropriate. - 1 - (DDR4) Send MRS commands to each ranks seperately - 1 - (non-DDR4) Send all commands to even and odd ranks seperately - 0 - Do not stagger accesses Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_RANKCTL" acronym="DDRCTL_RANKCTL" offset="0xF4" width="32" description="Rank Control Register">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DIFF_RANK_WR_GAP" width="4" begin="11" end="8" resetval="0x6" description="Only present for multi-rank configurations.Indicates the number of clocks of gap in data responses when performing consecutive writes to different ranks. This is used to switch the delays in the PHY to match the rank requirements. This value should consider both PHY requirement and ODT requirement. - PHY requirement: tphy_wrcsgap If CRC feature is enabled, should be increased by 1. If write preamble is set to 2tCK(DDR4 only), should be increased by 1. If write postamble is set to 1.5tCK(LPDDR4 only), should be increased by 1. - ODT requirement: The value programmed in this register takes care of the ODT switch off timing requirement when switching ranks during writes. For LPDDR4, the requirement is ODTLoff - ODTLon - BL/2 + 1 When the controller is operating in 1:1 mode, program this to the larger of PHY requirement or ODT requirement. When the controller is operating in 1:2 mode, program this to the larger value divided by two and round it up to the next integer. Note that, if using DDR4-LRDIMM, refer to TWRWR timing requirements in JEDEC DDR4 Data Buffer (DDR4DB01) Specification. Programming Mode: Quasi-dynamic Group 2" range="" rwaccess="RW"/>
    <bitfield id="DIFF_RANK_RD_GAP" width="4" begin="7" end="4" resetval="0x6" description="Only present for multi-rank configurations.Indicates the number of clocks of gap in data responses when performing consecutive reads to different ranks. This is used to switch the delays in the PHY to match the rank requirements. This value should consider both PHY requirement and ODT requirement. - PHY requirement: tphy_rdcsgap If read preamble is set to 2tCK(DDR4 only), should be increased by 1. If read postamble is set to 1.5tCK(LPDDR4 only), should be increased by 1. - ODT requirement: The value programmed in this register takes care of the ODT switch off timing requirement when switching ranks during reads. When the controller is operating in 1:1 mode, program this to the larger of PHY requirement or ODT requirement. When the controller is operating in 1:2 mode, program this to the larger value divided by two and round it up to the next integer. Note that, if using DDR4-LRDIMM, refer to TRDRD timing requirements in JEDEC DDR4 Data Buffer (DDR4DB01) Specification. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="MAX_RANK_RD" width="4" begin="3" end="0" resetval="0xF" description="Only present for multi-rank configurations.Background: Reads to the same rank can be performed back-to-back. Reads to different ranks require additional gap dictated by the register DDRCTL_RANKCTL.diff_rank_rd_gap. This is to avoid possible data bus contention as well as to give PHY enough time to switch the delay when changing ranks. The uMCTL2 arbitrates for bus access on a cycle-by-cycle basis therefore after a read is scheduled, there are few clock cycles (determined by the value on DDRCTL_RANKCTL.diff_rank_rd_gap register) in which only reads from the same rank are eligible to be scheduled. This prevents reads from other ranks from having fair access to the data bus. This parameter represents the maximum number of reads that can be scheduled consecutively to the same rank. After this number is reached, a delay equal to DDRCTL_RANKCTL.diff_rank_rd_gap is inserted by the scheduler to allow all ranks a fair opportunity to be scheduled. Higher numbers increase bandwidth utilization, lower numbers increase fairness. This feature can be DISABLED by setting this register to 0. When set to 0, the Controller will stay on the same rank as long as commands are available for it. Minimum programmable value is 0 (feature disabled) and maximum programmable value is 0xF. FOR PERFORMANCE ONLY. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG0" acronym="DDRCTL_DRAMTMG0" offset="0x100" width="32" description="SDRAM Timing Register 0">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="WR2PRE" width="7" begin="30" end="24" resetval="0xF" description="Minimum time between write and precharge to same bank.Unit: Clocks Specifications: WL + BL/2 + tWR = approximately 8 cycles + 15 ns = 14 clocks MHz and less for lower frequencies where: - WL = write latency - BL = burst length. This must match the value programmed in the BL bit of the mode register to the SDRAM. BST (burst terminate) is not supported at present. - tWR = Write recovery time. This comes directly from the SDRAM specification. Add one extra cycle for LPDDR2/LPDDR3/LPDDR4 for this parameter. When the controller is operating in 1:2 frequency ratio mode, 1T mode, divide the above value by 2. No rounding up. When the controller is operating in 1:2 frequency ratio mode, 2T mode or LPDDR4 mode, divide the above value by 2 and round it up to the next integer value. Note that, depending on the PHY, if using LRDIMM, it may be necessary to adjust the value of this parameter to compensate for the extra cycle of latency through the LRDIMM. Programming Mode: Quasi-dynamic Group 1 and Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="23" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_FAW" width="6" begin="21" end="16" resetval="0x10" description="tFAW Valid only when 8 or more banks(or banks x bank groups) are present.In 8-bank design, at most 4 banks must be activated in a rolling window of tFAW cycles. When the controller is operating in 1:2 frequency ratio mode, program this to (tFAW/2) and round up to next integer value. In a 4-bank design, set this register to 0x1 independent of the 1:1/1:2 frequency mode. Unit: Clocks Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="15" end="15" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_RAS_MAX" width="7" begin="14" end="8" resetval="0x1B" description="tRAS(max): Maximum time between activate and precharge to same bank.This is the maximum time that a page can be kept open Minimum value of this register is 1. Zero is invalid. When the controller is operating in 1:2 frequency ratio mode, program this to (tRAS(max)-1)/2. No rounding up. Unit: Multiples of 1024 clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_RAS_MIN" width="6" begin="5" end="0" resetval="0xF" description="tRAS(min): Minimum time between activate and precharge to the same bank.When the controller is operating in 1:2 frequency mode, 1T mode, program this to tRAS(min)/2. No rounding up. When the controller is operating in 1:2 frequency ratio mode, 2T mode or LPDDR4 mode, program this to (tRAS(min)/2) and round it up to the next integer value. Unit: Clocks Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG1" acronym="DDRCTL_DRAMTMG1" offset="0x104" width="32" description="SDRAM Timing Register 1">
    <bitfield id="RESERVED" width="11" begin="31" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_XP" width="5" begin="20" end="16" resetval="0x8" description="tXP: Minimum time after power-down exit to any operation.For DDR3, this should be programmed to tXPDLL if slow powerdown exit is selected in MR0[12]. If C/A parity for DDR4 is used, set to (tXP+PL) instead. If LPDDR4 is selected and its spec has tCKELPD parameter, set to the larger of tXP and tCKELPD instead. When the controller is operating in 1:2 frequency ratio mode, program this to (tXP/2) and round it up to the next integer value. Units: Clocks Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="15" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RD2PRE" width="6" begin="13" end="8" resetval="0x4" description="tRTP: Minimum time from read to precharge of same bank.- DDR2: tAL + BL/2 + max(tRTP, 2) - 2 - DDR3: tAL + max (tRTP, 4) - DDR4: Max of following two equations: tAL + max (tRTP, 4) or, RL + BL/2 - tRP (*). - mDDR: BL/2 - LPDDR2: Depends on if it's LPDDR2-S2 or LPDDR2-S4: LPDDR2-S2: BL/2 + tRTP - 1. LPDDR2-S4: BL/2 + max(tRTP,2) - 2. - LPDDR3: BL/2 + max(tRTP,4) - 4 - LPDDR4: BL/2 + max(tRTP,8) - 8 (*) When both DDR4 SDRAM and ST-MRAM are used simultaneously, use SDRAM's tRP value for calculation. When the controller is operating in 1:2 mode, 1T mode, divide the above value by 2. No rounding up. When the controller is operating in 1:2 mode, 2T mode or LPDDR4 mode, divide the above value by 2 and round it up to the next integer value. Unit: Clocks. Programming Mode: Quasi-dynamic Group 1 and Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_RC" width="7" begin="6" end="0" resetval="0x14" description="tRC: Minimum time between activates to same bank.When the controller is operating in 1:2 frequency ratio mode, program this to (tRC/2) and round up to next integer value. Unit: Clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG2" acronym="DDRCTL_DRAMTMG2" offset="0x108" width="32" description="SDRAM Timing Register 2">
    <bitfield id="RESERVED" width="2" begin="31" end="30" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="WRITE_LATENCY" width="6" begin="29" end="24" resetval="0x3" description="Set to WL Time from write command to write data on SDRAM interface.This must be set to WL. For mDDR, it should normally be set to 1. Note that, depending on the PHY, if using RDIMM/LRDIMM, it may be necessary to adjust the value of WL to compensate for the extra cycle of latency through the RDIMM/LRDIMM. When the controller is operating in 1:2 frequency ratio mode, divide the value calculated using the above equation by 2, and round it up to next integer. This register field is not required for DDR2 and DDR3 (except if MEMC_TRAINING is set), as the DFI read and write latencies defined in DDRCTL_DFITMG0 and DDRCTL_DFITMG1 are sufficient for those protocols Unit: clocks Programming Mode: Quasi-dynamic Group 1 and Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="23" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="READ_LATENCY" width="6" begin="21" end="16" resetval="0x5" description="Set to RL Time from read command to read data on SDRAM interface.This must be set to RL. Note that, depending on the PHY, if using RDIMM/LRDIMM, it may be necessary to adjust the value of RL to compensate for the extra cycle of latency through the RDIMM/LRDIMM. When the controller is operating in 1:2 frequency ratio mode, divide the value calculated using the above equation by 2, and round it up to next integer. This register field is not required for DDR2 and DDR3 (except if MEMC_TRAINING is set), as the DFI read and write latencies defined in DDRCTL_DFITMG0 and DDRCTL_DFITMG1 are sufficient for those protocols Unit: clocks Programming Mode: Quasi-dynamic Group 1 and Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="15" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RD2WR" width="6" begin="13" end="8" resetval="0x6" description="DDR2/3/mDDR: RL + BL/2 +2 - WL DDR4: RL + BL/2 + 1 + WR_PREAMBLE - WL LPDDR2/LPDDR3: RL + BL/2 + RU(tDQSCKmax/tCK) + 1 - WL LPDDR4(DQ ODT is Disabled): RL + BL/2 + RU(tDQSCKmax/tCK) + WR_PREAMBLE + RD_POSTAMBLE - WL LPDDR4(DQ ODT is Enabled) : RL + BL/2 + RU(tDQSCKmax/tCK) + RD_POSTAMBLE - ODTLon - RU(tODTon(min)/tCK) Minimum time from read command to write command. Include time for bus turnaround and all per-bank, per-rank, and global constraints. Unit: Clocks. Where: - WL = write latency - BL = burst length. This must match the value programmed in the BL bit of the mode register to the SDRAM - RL = read latency = CAS latency - WR_PREAMBLE = write preamble. This is unique to DDR4 and LPDDR4. - RD_POSTAMBLE = read postamble. This is unique to LPDDR4. For LPDDR2/LPDDR3/LPDDR4, if derating is enabled (DDRCTL_DERATEEN.derate_enable=1), derated tDQSCKmax should be used. When the controller is operating in 1:2 frequency ratio mode, divide the value calculated using the above equation by 2, and round it up to next integer. Note that, depending on the PHY, if using LRDIMM, it may be necessary to adjust the value of this parameter to compensate for the extra cycle of latency through the LRDIMM. Programming Mode: Quasi-dynamic Group 1 and Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="WR2RD" width="6" begin="5" end="0" resetval="0xD" description="DDR4: CWL + PL + BL/2 + tWTR_L LPDDR2/3/4: WL + BL/2 + tWTR + 1 Others: CWL + BL/2 + tWTR In DDR4, minimum time from write command to read command for same bank group. In others, minimum time from write command to read command. Includes time for bus turnaround, recovery times, and all per-bank, per-rank, and global constraints. Unit: Clocks. Where: - CWL = CAS write latency - WL = Write latency - PL = Parity latency - BL = burst length. This must match the value programmed in the BL bit of the mode register to the SDRAM - tWTR_L = internal write to read command delay for same bank group. This comes directly from the SDRAM specification. - tWTR = internal write to read command delay. This comes directly from the SDRAM specification. Add one extra cycle for LPDDR2/LPDDR3/LPDDR4 operation. When the controller is operating in 1:2 mode, divide the value calculated using the above equation by 2, and round it up to next integer. Programming Mode: Quasi-dynamic Group 1 and Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG3" acronym="DDRCTL_DRAMTMG3" offset="0x10C" width="32" description="SDRAM Timing Register 3">
    <bitfield id="RESERVED" width="2" begin="31" end="30" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_MRW" width="10" begin="29" end="20" resetval="0x5" description="Time to wait after a mode register write or read (MRW or MRR).Present only in designs configured to support LPDDR2, LPDDR3 or LPDDR4. LPDDR2 typically requires value of 5. LPDDR3 typically requires value of 10. LPDDR4: Set this to the larger of tMRW and tMRWCKEL. For LPDDR2, this register is used for the time from a MRW/MRR to all other commands. When the controller is operating in 1:2 frequency ratio mode, program this to the above values divided by 2 and round it up to the next integer value. For LDPDR3, this register is used for the time from a MRW/MRR to a MRW/MRR. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="19" end="18" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_MRD" width="6" begin="17" end="12" resetval="0x4" description="tMRD: Cycles to wait after a mode register write or read.Depending on the connected SDRAM, tMRD represents: DDR2/mDDR: Time from MRS to any command DDR3/4: Time from MRS to MRS command LPDDR2: not used LPDDR3/4: Time from MRS to non-MRS command. When the controller is operating in 1:2 frequency ratio mode, program this to (tMRD/2) and round it up to the next integer value. If C/A parity for DDR4 is used, set to tMRD_PAR(tMOD+PL) instead. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="11" end="10" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_MOD" width="10" begin="9" end="0" resetval="0xC" description="tMOD: Parameter used only in DDR3 and DDR4.Cycles between load mode command and following non-load mode command. If C/A parity for DDR4 is used, set to tMOD_PAR(tMOD+PL) instead. If MPR writes for DDR4 are used, set to tMOD + AL (or tMPD_PAR + AL if C/A parity is also used). Set to tMOD if controller is operating in 1:1 frequency ratio mode, or tMOD/2 (rounded up to next integer) if controller is operating in 1:2 frequency ratio mode. Note that if using RDIMM/LRDIMM, depending on the PHY, it may be necessary to adjust the value of this parameter to compensate for the extra cycle of latency applied to mode register writes by the RDIMM/LRDIMM chip. Also note that if using LRDIMM, the minimum value of this register is tMRD_L2 if controller is operating in 1:1 frequency ratio mode, or tMRD_L2/2 (rounded up to next integer) if controller is operating in 1:2 frequency ratio mode. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG4" acronym="DDRCTL_DRAMTMG4" offset="0x110" width="32" description="SDRAM Timing Register 4">
    <bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_RCD" width="5" begin="28" end="24" resetval="0x5" description="tRCD - tAL: Minimum time from activate to read or write command to same bank.When the controller is operating in 1:2 frequency ratio mode, program this to ((tRCD - tAL)/2) and round it up to the next integer value. Minimum value allowed for this register is 1, which implies minimum (tRCD - tAL) value to be 2 when the controller is operating in 1:2 frequency ratio mode. Unit: Clocks. Programming Mode: Quasi-dynamic Group 1 and Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="23" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CCD" width="4" begin="19" end="16" resetval="0x4" description="DDR4: tCCD_L: This is the minimum time between two reads or two writes for same bank group. Others: tCCD: This is the minimum time between two reads or two writes. When the controller is operating in 1:2 frequency ratio mode, program this to (tCCD_L/2 or tCCD/2) and round it up to the next integer value. Unit: clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_RRD" width="4" begin="11" end="8" resetval="0x4" description="DDR4: tRRD_L: Minimum time between activates from bank 'a' to bank 'b' for same bank group. Others: tRRD: Minimum time between activates from bank 'a' to bank 'b' When the controller is operating in 1:2 frequency ratio mode, program this to (tRRD_L/2 or tRRD/2) and round it up to the next integer value. Unit: Clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_RP" width="5" begin="4" end="0" resetval="0x5" description="tRP: Minimum time from precharge to activate of same bank.When the controller is operating in 1:1 frequency ratio mode, t_rp should be set to RoundUp(tRP/tCK). When the controller is operating in 1:2 frequency ratio mode, t_rp should be set to RoundDown(RoundUp(tRP/tCK)/2) + 1. When the controller is operating in 1:2 frequency ratio mode in LPDDR4, t_rp should be set to RoundUp(RoundUp(tRP/tCK)/2). Unit: Clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG5" acronym="DDRCTL_DRAMTMG5" offset="0x114" width="32" description="SDRAM Timing Register 5">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CKSRX" width="4" begin="27" end="24" resetval="0x5" description="This is the time before Self Refresh Exit that CK is maintained as a valid clock before issuing SRX.Specifies the clock stable time before SRX. Recommended settings: - mDDR: 1 - LPDDR2: 2 - LPDDR3: 2 - LPDDR4: tCKCKEH - DDR2: 1 - DDR3: tCKSRX - DDR4: tCKSRX When the controller is operating in 1:2 frequency ratio mode, program this to recommended value divided by two and round it up to next integer. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="23" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CKSRE" width="4" begin="19" end="16" resetval="0x5" description="This is the time after Self Refresh Down Entry that CK is maintained as a valid clock.Specifies the clock disable delay after SRE. Recommended settings: - mDDR: 0 - LPDDR2: 2 - LPDDR3: 2 - LPDDR4: tCKELCK - DDR2: 1 - DDR3: max (10 ns, 5 tCK) - DDR4: max (10 ns, 5 tCK) (+ PL(parity latency)(*)) (*)Only if DDRCTL_CRCPARCTL1.caparity_disable_before_sr=0, this register should be increased by PL. When the controller is operating in 1:2 frequency ratio mode, program this to recommended value divided by two and round it up to next integer. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="15" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CKESR" width="6" begin="13" end="8" resetval="0x4" description="Minimum CKE low width for Self refresh or Self refresh power down entry to exit timing in memory clock cycles.Recommended settings: - mDDR: tRFC - LPDDR2: tCKESR - LPDDR3: tCKESR - LPDDR4: max(tCKE, tSR) - DDR2: tCKE - DDR3: tCKE + 1 - DDR4: tCKE + 1 (+ PL(parity latency)(*)) (*)Only if DDRCTL_CRCPARCTL1.caparity_disable_before_sr=0, this register should be increased by PL. When the controller is operating in 1:2 frequency ratio mode, program this to recommended value divided by two and round it up to next integer. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CKE" width="5" begin="4" end="0" resetval="0x3" description="Minimum number of cycles of CKE HIGH/LOW during power-down and self refresh.- LPDDR2/LPDDR3 mode: Set this to the larger of tCKE or tCKESR - LPDDR4 mode: Set this to the larger of tCKE or tSR. - Non-LPDDR2/non-LPDDR3/non-LPDDR4 designs: Set this to tCKE value. When the controller is operating in 1:2 frequency ratio mode, program this to (value described above)/2 and round it up to the next integer value. Unit: Clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG6" acronym="DDRCTL_DRAMTMG6" offset="0x118" width="32" description="SDRAM Timing Register 6">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CKDPDE" width="4" begin="27" end="24" resetval="0x2" description="This is the time after Deep Power Down Entry that CK is maintained as a valid clock.Specifies the clock disable delay after DPDE. Recommended settings: - mDDR: 0 - LPDDR2: 2 - LPDDR3: 2 When the controller is operating in 1:2 frequency ratio mode, program this to recommended value divided by two and round it up to next integer. This is only present for designs supporting mDDR or LPDDR2/LPDDR3 devices. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="23" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CKDPDX" width="4" begin="19" end="16" resetval="0x2" description="This is the time before Deep Power Down Exit that CK is maintained as a valid clock before issuing DPDX.Specifies the clock stable time before DPDX. Recommended settings: - mDDR: 1 - LPDDR2: 2 - LPDDR3: 2 When the controller is operating in 1:2 frequency ratio mode, program this to recommended value divided by two and round it up to next integer. This is only present for designs supporting mDDR or LPDDR2 devices. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="12" begin="15" end="4" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CKCSX" width="4" begin="3" end="0" resetval="0x5" description="This is the time before Clock Stop Exit that CK is maintained as a valid clock before issuing Clock Stop Exit.Specifies the clock stable time before next command after Clock Stop Exit. Recommended settings: - mDDR: 1 - LPDDR2: tXP + 2 - LPDDR3: tXP + 2 - LPDDR4: tXP + 2 When the controller is operating in 1:2 frequency ratio mode, program this to recommended value divided by two and round it up to next integer. This is only present for designs supporting mDDR or LPDDR2/LPDDR3/LPDDR4 devices. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG7" acronym="DDRCTL_DRAMTMG7" offset="0x11C" width="32" description="SDRAM Timing Register 7">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CKPDE" width="4" begin="11" end="8" resetval="0x2" description="This is the time after Power Down Entry that CK is maintained as a valid clock.Specifies the clock disable delay after PDE. Recommended settings: - mDDR: 0 - LPDDR2: 2 - LPDDR3: 2 - LPDDR4: tCKELCK When using DDR2/3/4 SDRAM, this register should be set to the same value as DDRCTL_DRAMTMG5.t_cksre. When the controller is operating in 1:2 frequency ratio mode, program this to recommended value divided by two and round it up to next integer. This is only present for designs supporting mDDR or LPDDR2/LPDDR3/LPDDR4 devices. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CKPDX" width="4" begin="3" end="0" resetval="0x2" description="This is the time before Power Down Exit that CK is maintained as a valid clock before issuing PDX.Specifies the clock stable time before PDX. Recommended settings: - mDDR: 0 - LPDDR2: 2 - LPDDR3: 2 - LPDDR4: 2 When using DDR2/3/4 SDRAM, this register should be set to the same value as DDRCTL_DRAMTMG5.t_cksrx. When the controller is operating in 1:2 frequency ratio mode, program this to recommended value divided by two and round it up to next integer. This is only present for designs supporting mDDR or LPDDR2/LPDDR3/LPDDR4 devices. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG8" acronym="DDRCTL_DRAMTMG8" offset="0x120" width="32" description="SDRAM Timing Register 8">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_XS_FAST_X32" width="7" begin="30" end="24" resetval="0x3" description="tXS_FAST: Exit Self Refresh to ZQCL, ZQCS and MRS (only CL, WR, RTP and Geardown mode).When the controller is operating in 1:2 frequency ratio mode, program this to the above value divided by 2 and round up to next integer value. Unit: Multiples of 32 clocks. Note: This is applicable to only ZQCL/ZQCS commands. Note: Ensure this is less than or equal to t_xs_x32. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="23" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_XS_ABORT_X32" width="7" begin="22" end="16" resetval="0x3" description="tXS_ABORT: Exit Self Refresh to commands not requiring a locked DLL in Self Refresh Abort.When the controller is operating in 1:2 frequency ratio mode, program this to the above value divided by 2 and round up to next integer value. Unit: Multiples of 32 clocks. Note: Ensure this is less than or equal to t_xs_x32. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="15" end="15" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_XS_DLL_X32" width="7" begin="14" end="8" resetval="0x44" description="tXSDLL: Exit Self Refresh to commands requiring a locked DLL.When the controller is operating in 1:2 frequency ratio mode, program this to the above value divided by 2 and round up to next integer value. Unit: Multiples of 32 clocks. Note: Used only for DDR2, DDR3 and DDR4 SDRAMs. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_XS_X32" width="7" begin="6" end="0" resetval="0x5" description="tXS: Exit Self Refresh to commands not requiring a locked DLL.When the controller is operating in 1:2 frequency ratio mode, program this to the above value divided by 2 and round up to next integer value. Unit: Multiples of 32 clocks. Note: Used only for DDR2, DDR3 and DDR4 SDRAMs. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG9" acronym="DDRCTL_DRAMTMG9" offset="0x124" width="32" description="SDRAM Timing Register 9">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DDR4_WR_PREAMBLE" width="1" begin="30" end="30" resetval="0x0" description="DDR4 Write preamble mode -0: 1tCK preamble - 1: 2tCK preamble Present only with MEMC_FREQ_RATIO=2 Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="11" begin="29" end="19" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CCD_S" width="3" begin="18" end="16" resetval="0x4" description="tCCD_S: This is the minimum time between two reads or two writes for different bank group.For bank switching (from bank 'a' to bank 'b'), the minimum time is this value + 1. When the controller is operating in 1:2 frequency ratio mode, program this to (tCCD_S/2) and round it up to the next integer value. Present only in designs configured to support DDR4. Unit: clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_RRD_S" width="4" begin="11" end="8" resetval="0x4" description="tRRD_S: Minimum time between activates from bank 'a' to bank 'b' for different bank group.When the controller is operating in 1:2 frequency ratio mode, program this to (tRRD_S/2) and round it up to the next integer value. Present only in designs configured to support DDR4. Unit: Clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="WR2RD_S" width="6" begin="5" end="0" resetval="0xD" description="CWL + PL + BL/2 + tWTR_S Minimum time from write command to read command for different bank group.Includes time for bus turnaround, recovery times, and all per-bank, per-rank, and global constraints. Present only in designs configured to support DDR4. Unit: Clocks. Where: - CWL = CAS write latency - PL = Parity latency - BL = burst length. This must match the value programmed in the BL bit of the mode register to the SDRAM - tWTR_S = internal write to read command delay for different bank group. This comes directly from the SDRAM specification. When the controller is operating in 1:2 mode, divide the value calculated using the above equation by 2, and round it up to next integer. Programming Mode: Quasi-dynamic Group 1 and Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG10" acronym="DDRCTL_DRAMTMG10" offset="0x128" width="32" description="SDRAM Timing Register 10">
    <bitfield id="RESERVED" width="11" begin="31" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_SYNC_GEAR" width="5" begin="20" end="16" resetval="0x1C" description="Indicates the time between MRS command and the sync pulse time.This must be even number of clocks. For DDR4-2666 and DDR4-3200, this parameter is defined as tMOD(min)+4nCK tMOD(min) is greater of 24nCK or 15ns 15ns / .625ns = 24 Max value for this register is 24+4 = 28 When the controller is operating in 1:2 mode, program this to (tSYNC_GEAR/2) and round it up to the next integer value. Unit: Clocks Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="15" end="13" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CMD_GEAR" width="5" begin="12" end="8" resetval="0x18" description="Sync pulse to first valid command.For DDR4-2666 and DDR4-3200, this parameter is defined as tMOD(min) tMOD(min) is greater of 24nCK or 15ns 15ns / .625ns = 24 Max value for this register is 24 When the controller is operating in 1:2 mode, program this to (tCMD_GEAR/2) and round it up to the next integer value. Unit: Clocks Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_GEAR_SETUP" width="2" begin="3" end="2" resetval="0x2" description="Geardown setup time.Minimum value of this register is 1. Zero is invalid. For DDR4-2666 and DDR4-3200, this parameter is defined as 2 clks When the controller is operating in 1:2 frequency ratio mode, program this to (tGEAR_setup/2) and round it up to the next integer value. Unit: Clocks Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="T_GEAR_HOLD" width="2" begin="1" end="0" resetval="0x2" description="Geardown hold time.Minimum value of this register is 1. Zero is invalid. For DDR4-2666 and DDR4-3200, this parameter is defined as 2 clks When the controller is operating in 1:2 frequency ratio mode, program this to (tGEAR_hold/2) and round it up to the next integer value. Unit: Clocks Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG11" acronym="DDRCTL_DRAMTMG11" offset="0x12C" width="32" description="SDRAM Timing Register 11">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="POST_MPSM_GAP_X32" width="7" begin="30" end="24" resetval="0x44" description="tXMPDLL: This is the minimum Exit MPSM to commands requiring a locked DLL.When the controller is operating in 1:2 frequency ratio mode, program this to (tXMPDLL/2) and round it up to the next integer value. Present only in designs configured to support DDR4. Unit: Multiples of 32 clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="23" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_MPX_LH" width="5" begin="20" end="16" resetval="0xC" description="tMPX_LH: This is the minimum CS_n Low hold time to CKE rising edge.When the controller is operating in 1:2 frequency ratio mode, program this to RoundUp(tMPX_LH/2)+1. Present only in designs configured to support DDR4. Unit: clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_MPX_S" width="2" begin="9" end="8" resetval="0x2" description="tMPX_S: Minimum time CS setup time to CKE.When the controller is operating in 1:2 frequency ratio mode, program this to (tMPX_S/2) and round it up to the next integer value. Present only in designs configured to support DDR4. Unit: Clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CKMPE" width="5" begin="4" end="0" resetval="0x1C" description="tCKMPE: Minimum valid clock requirement after MPSM entry.Present only in designs configured to support DDR4. Unit: Clocks. When the controller is operating in 1:2 frequency ratio mode, divide the value calculated using the above equation by 2, and round it up to next integer. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG12" acronym="DDRCTL_DRAMTMG12" offset="0x130" width="32" description="SDRAM Timing Register 12">
    <bitfield id="RESERVED" width="14" begin="31" end="18" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CMDCKE" width="2" begin="17" end="16" resetval="0x2" description="tCMDCKE: Delay from valid command to CKE input LOW.Set this to the larger of tESCKE or tCMDCKE When the controller is operating in 1:2 frequency ratio mode, program this to (max(tESCKE, tCMDCKE)/2) and round it up to the next integer value. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="11" begin="15" end="5" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_MRD_PDA" width="5" begin="4" end="0" resetval="0x10" description="tMRD_PDA: This is the Mode Register Set command cycle time in PDA mode.When the controller is operating in 1:2 frequency ratio mode, program this to (tMRD_PDA/2) and round it up to the next integer value. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG13" acronym="DDRCTL_DRAMTMG13" offset="0x134" width="32" description="SDRAM Timing Register 13">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ODTLOFF" width="7" begin="30" end="24" resetval="0x1C" description="LPDDR4: tODTLoff: This is the latency from CAS-2 command to tODToff reference. When the controller is operating in 1:2 frequency ratio mode, program this to (tODTLoff/2) and round it up to the next integer value. Unit: Clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="23" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CCD_MW" width="6" begin="21" end="16" resetval="0x20" description="LPDDR4: tCCDMW: This is the minimum time from write or masked write to masked write command for same bank. When the controller is operating in 1:2 frequency ratio mode, program this to (tCCDMW/2) and round it up to the next integer value. Unit: Clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="13" begin="15" end="3" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_PPD" width="3" begin="2" end="0" resetval="0x4" description="LPDDR4: tPPD: This is the minimum time from precharge to precharge command. When the controller is operating in 1:2 frequency ratio mode, program this to (tPPD/2) and round it up to the next integer value. Unit: Clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG14" acronym="DDRCTL_DRAMTMG14" offset="0x138" width="32" description="SDRAM Timing Register 14">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_XSR" width="12" begin="11" end="0" resetval="0xA0" description="tXSR: Exit Self Refresh to any command.When the controller is operating in 1:2 frequency ratio mode, program this to the above value divided by 2 and round up to next integer value. Note: Used only for mDDR/LPDDR2/LPDDR3/LPDDR4 mode. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG15" acronym="DDRCTL_DRAMTMG15" offset="0x13C" width="32" description="SDRAM Timing Register 15">
    <bitfield id="EN_DFI_LP_T_STAB" width="1" begin="31" end="31" resetval="0x0" description="-1 - Enable using tSTAB when exiting DFI LP. Needs to be set when the PHY is stopping the clock during DFI LP to save maximum power. - 0 - Disable using tSTAB when exiting DFI LP Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="23" begin="30" end="8" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_STAB_X32" width="8" begin="7" end="0" resetval="0x0" description="tSTAB: Stabilization time.It is required in the following two cases for DDR3/DDR4 RDIMM : - when exiting power saving mode, if the clock was stopped, after re-enabling it the clock must be stable for a time specified by tSTAB - in the case of input clock frequency change (DDR4) - after issuing control words that refers to clock timing (Specification: 6us for DDR3, 5us for DDR4) When the controller is operating in 1:2 frequency ratio mode, program this to recommended value divided by two and round it up to next integer. Unit: Multiples of 32 clock cycles. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ZQCTL0" acronym="DDRCTL_ZQCTL0" offset="0x180" width="32" description="ZQ Control Register 0">
    <bitfield id="DIS_AUTO_ZQ" width="1" begin="31" end="31" resetval="0x0" description="-1 - Disable uMCTL2 generation of ZQCS/MPC(ZQ calibration) command. Register DDRCTL_DBGCMD.zq_calib_short can be used instead to issue ZQ calibration request from APB module. - 0 - Internally generate ZQCS/MPC(ZQ calibration) commands based on DDRCTL_ZQCTL1.t_zq_short_interval_x1024. This is only present for designs supporting DDR3/DDR4 or LPDDR2/LPDDR3/LPDDR4 devices. Programming Mode: Dynamic" range="" rwaccess="RW"/>
    <bitfield id="DIS_SRX_ZQCL" width="1" begin="30" end="30" resetval="0x0" description="-1 - Disable issuing of ZQCL/MPC(ZQ calibration) command at Self-Refresh/SR-Powerdown exit. Only applicable when run in DDR3 or DDR4 or LPDDR2 or LPDDR3 or LPDDR4 mode. - 0 - Enable issuing of ZQCL/MPC(ZQ calibration) command at Self-Refresh/SR-Powerdown exit. Only applicable when run in DDR3 or DDR4 or LPDDR2 or LPDDR3 or LPDDR4 mode. This is only present for designs supporting DDR3/DDR4 or LPDDR2/LPDDR3/LPDDR4 devices. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="ZQ_RESISTOR_SHARED" width="1" begin="29" end="29" resetval="0x0" description="-1 - Denotes that ZQ resistor is shared between ranks. Means ZQinit/ZQCL/ZQCS/MPC(ZQ calibration) commands are sent to one rank at a time with tZQinit/tZQCL/tZQCS/tZQCAL/tZQLAT timing met between commands so that commands to different ranks do not overlap. - 0 - ZQ resistor is not shared. This is only present for designs supporting DDR3/DDR4 or LPDDR2/LPDDR3/LPDDR4 devices. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="DIS_MPSMX_ZQCL" width="1" begin="28" end="28" resetval="0x0" description="-1 - Disable issuing of ZQCL command at Maximum Power Saving Mode exit. Only applicable when run in DDR4 mode. - 0 - Enable issuing of ZQCL command at Maximum Power Saving Mode exit. Only applicable when run in DDR4 mode. This is only present for designs supporting DDR4 devices. Note: Do not issue ZQCL command at Maximum Power Save Mode exit if the UMCTL2_SHARED_AC configuration parameter is set. Program it to 1'b1. The software can send ZQCS after exiting MPSM mode. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="27" end="27" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_ZQ_LONG_NOP" width="11" begin="26" end="16" resetval="0x200" description="tZQoper for DDR3/DDR4, tZQCL for LPDDR2/LPDDR3, tZQCAL for LPDDR4: Number of DFI clock cycles of NOP required after a ZQCL (ZQ calibration long)/MPC(ZQ Start) command is issued to SDRAM. When the controller is operating in 1:2 frequency ratio mode: DDR3/DDR4: program this to tZQoper/2 and round it up to the next integer value. LPDDR2/LPDDR3: program this to tZQCL/2 and round it up to the next integer value. LPDDR4: program this to tZQCAL/2 and round it up to the next integer value. This is only present for designs supporting DDR3/DDR4 or LPDDR2/LPDDR3/LPDDR4 devices. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_ZQ_SHORT_NOP" width="10" begin="9" end="0" resetval="0x40" description="tZQCS for DDR3/DD4/LPDDR2/LPDDR3, tZQLAT for LPDDR4: Number of DFI clock cycles of NOP required after a ZQCS (ZQ calibration short)/MPC(ZQ Latch) command is issued to SDRAM. When the controller is operating in 1:2 frequency ratio mode, program this to tZQCS/2 and round it up to the next integer value. This is only present for designs supporting DDR3/DDR4 or LPDDR2/LPDDR3/LPDDR4 devices. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ZQCTL1" acronym="DDRCTL_ZQCTL1" offset="0x184" width="32" description="ZQ Control Register 1">
    <bitfield id="RESERVED" width="2" begin="31" end="30" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_ZQ_RESET_NOP" width="10" begin="29" end="20" resetval="0x20" description="tZQReset: Number of DFI clock cycles of NOP required after a ZQReset (ZQ calibration Reset) command is issued to SDRAM.When the controller is operating in 1:2 frequency ratio mode, program this to tZQReset/2 and round it up to the next integer value. This is only present for designs supporting LPDDR2/LPDDR3/LPDDR4 devices. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="T_ZQ_SHORT_INTERVAL_X1024" width="20" begin="19" end="0" resetval="0x100" description="Average interval to wait between automatically issuing ZQCS (ZQ calibration short)/MPC(ZQ calibration) commands to DDR3/DDR4/LPDDR2/LPDDR3/LPDDR4 devices.Meaningless, if DDRCTL_ZQCTL0.dis_auto_zq=1. Unit: 1024 DFI clock cycles. This is only present for designs supporting DDR3/DDR4 or LPDDR2/LPDDR3/LPDDR4 devices. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ZQCTL2" acronym="DDRCTL_ZQCTL2" offset="0x188" width="32" description="ZQ Control Register 2">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0xX" description="" range="" rwaccess="W"/>
    <bitfield id="ZQ_RESET" width="1" begin="0" end="0" resetval="0x0" description="Setting this register bit to 1 triggers a ZQ Reset operation.When the ZQ Reset operation is complete, the uMCTL2 automatically clears this bit. It is recommended NOT to set this signal if in Init, Self-Refresh(except LPDDR4) or SR-Powerdown(LPDDR4) or Deep power-down operating modes. This is only present for designs supporting LPDDR2/LPDDR3/LPDDR4 devices. Programming Mode: Dynamic" range="" rwaccess="W1S"/>
  </register>
  <register id="DDRCTL_ZQSTAT" acronym="DDRCTL_ZQSTAT" offset="0x18C" width="32" description="ZQ Status Register">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="ZQ_RESET_BUSY" width="1" begin="0" end="0" resetval="0x0" description="SoC core may initiate a ZQ Reset operation only if this signal is low.This signal goes high in the clock after the uMCTL2 accepts the ZQ Reset request. It goes low when the ZQ Reset command is issued to the SDRAM and the associated NOP period is over. It is recommended not to perform ZQ Reset commands when this signal is high. - 0 - Indicates that the SoC core can initiate a ZQ Reset operation - 1 - Indicates that ZQ Reset operation is in progress Programming Mode: Dynamic" range="" rwaccess="R"/>
  </register>
  <register id="DDRCTL_DFITMG0" acronym="DDRCTL_DFITMG0" offset="0x190" width="32" description="DFI Timing Register 0">
    <bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_T_CTRL_DELAY" width="5" begin="28" end="24" resetval="0x7" description="Specifies the number of DFI clock cycles after an assertion or de-assertion of the DFI control signals that the control signals at the PHY-DRAM interface reflect the assertion or de-assertion.If the DFI clock and the memory clock are not phase-aligned, this timing parameter should be rounded up to the next integer value. Note that if using RDIMM/LRDIMM, it is necessary to increment this parameter by RDIMM's/LRDIMM's extra cycle of latency in terms of DFI clock. Programming Mode: Quasi-dynamic Group 4" range="" rwaccess="RW"/>
    <bitfield id="DFI_RDDATA_USE_DFI_PHY_CLK" width="1" begin="23" end="23" resetval="0x0" description="Defines whether dfi_rddata_en/dfi_rddata/dfi_rddata_valid is generated using HDR (DFI clock) or SDR (DFI PHY clock) values.Selects whether value in DDRCTL_DFITMG0.dfi_t_rddata_en is in terms of HDR (DFI clock) or SDR (DFI PHY clock) cycles: - 0 in terms of HDR (DFI clock) cycles - 1 in terms of SDR (DFI PHY clock) cycles Refer to PHY specification for correct value. If using a DWC DDR3/2 PHY, DWC DDR2/3-Lite/mDDR PHY, DWC DDR multiPHY or DWC Gen2 DDR multiPHY, this field must be set to 0 otherwise: - If MEMC_PROG_FREQ_RATIO=1 and DDRCTL_MSTR.frequency_ratio=1, this field should be set to 0 - Else, it must be set to 1 Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="DFI_T_RDDATA_EN" width="7" begin="22" end="16" resetval="0x2" description="Time from the assertion of a read command on the DFI interface to the assertion of the dfi_rddata_en signal.Refer to PHY specification for correct value. This corresponds to the DFI parameter trddata_en. Note that, depending on the PHY, if using RDIMM/LRDIMM, it may be necessary to use the adjusted value of CL in the calculation of trddata_en. This is to compensate for the extra cycle(s) of latency through the RDIMM/LRDIMM. Unit: DFI clock cycles or DFI PHY clock cycles, depending on DDRCTL_DFITMG0.dfi_rddata_use_dfi_phy_clk. Programming Mode: Quasi-dynamic Group 1 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="DFI_WRDATA_USE_DFI_PHY_CLK" width="1" begin="15" end="15" resetval="0x0" description="Defines whether dfi_wrdata_en/dfi_wrdata/dfi_wrdata_mask is generated using HDR (DFI clock) or SDR (DFI PHY clock) values Selects whether value inDDRCTL_DFITMG0.dfi_tphy_wrlat is in terms of HDR (DFI clock) or SDR (DFI PHY clock) cycles Selects whether value in DDRCTL_DFITMG0.dfi_tphy_wrdata is in terms of HDR (DFI clock) or SDR (DFI PHY clock) cycles - 0 in terms of HDR (DFI clock) cycles - 1 in terms of SDR (DFI PHY clock) cycles Refer to PHY specification for correct value. If using a DWC DDR3/2 PHY, DWC DDR2/3-Lite/mDDR PHY, DWC DDR multiPHY or DWC Gen2 DDR multiPHY, this field must be set to 0 otherwise: - If MEMC_PROG_FREQ_RATIO=1 and DDRCTL_MSTR.frequency_ratio=1, this field should be set to 0 - Else, it must be set to 1 Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="14" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_TPHY_WRDATA" width="6" begin="13" end="8" resetval="0x0" description="Specifies the number of clock cycles between when dfi_wrdata_en is asserted to when the associated write data is driven on the dfi_wrdata signal.This corresponds to the DFI timing parameter tphy_wrdata. Refer to PHY specification for correct value. Note, max supported value is 8. Unit: DFI clock cycles or DFI PHY clock cycles, depending on DDRCTL_DFITMG0.dfi_wrdata_use_dfi_phy_clk. Programming Mode: Quasi-dynamic Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_TPHY_WRLAT" width="6" begin="5" end="0" resetval="0x2" description="Write latency Number of clocks from the write command to write data enable (dfi_wrdata_en).This corresponds to the DFI timing parameter tphy_wrlat. Refer to PHY specification for correct value.Note that, depending on the PHY, if using RDIMM/LRDIMM, it may be necessary to use the adjusted value of CL in the calculation of tphy_wrlat. This is to compensate for the extra cycle(s) of latency through the RDIMM/LRDIMM. For LPDDR4, dfi_tphy_wrlat&amp;amp;gt;60 is not supported. Unit: DFI clock cycles or DFI PHY clock cycles, depending on DDRCTL_DFITMG0.dfi_wrdata_use_dfi_phy_clk. Programming Mode: Quasi-dynamic Group 1 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DFITMG1" acronym="DDRCTL_DFITMG1" offset="0x194" width="32" description="DFI Timing Register 1">
    <bitfield id="DFI_T_CMD_LAT" width="4" begin="31" end="28" resetval="0x0" description="Specifies the number of DFI PHY clock cycles between when the dfi_cs signal is asserted and when the associated command is driven.This field is used for CAL mode, should be set to '0' or the value which matches the CAL mode register setting in the DRAM. If the PHY can add the latency for CAL mode, this should be set to '0'. Valid Range: 0, 3, 4, 5, 6, and 8 Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="27" end="26" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_T_PARIN_LAT" width="2" begin="25" end="24" resetval="0x0" description="Specifies the number of DFI PHY clock cycles between when the dfi_cs signal is asserted and when the associated dfi_parity_in signal is driven.Programming Mode: Quasi-dynamic Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="23" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_T_WRDATA_DELAY" width="5" begin="20" end="16" resetval="0x0" description="Specifies the number of DFI clock cycles between when the dfi_wrdata_en signal is asserted and when the corresponding write data transfer is completed on the DRAM bus.This corresponds to the DFI timing parameter twrdata_delay. Refer to PHY specification for correct value. For DFI 3.0 PHY, set to twrdata_delay, a new timing parameter introduced in DFI 3.0. For DFI 2.1 PHY, set to tphy_wrdata + (delay of DFI write data to the DRAM). Value to be programmed is in terms of DFI clocks, not PHY clocks. In FREQ_RATIO=2, divide PHY's value by 2 and round up to next integer. If using DDRCTL_DFITMG0.dfi_wrdata_use_dfi_phy_clk=1, add 1 to the value. Unit: Clocks Programming Mode: Quasi-dynamic Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="15" end="13" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_T_DRAM_CLK_DISABLE" width="5" begin="12" end="8" resetval="0x4" description="Specifies the number of DFI clock cycles from the assertion of the dfi_dram_clk_disable signal on the DFI until the clock to the DRAM memory devices, at the PHY-DRAM boundary, maintains a low value.If the DFI clock and the memory clock are not phase aligned, this timing parameter should be rounded up to the next integer value. Programming Mode: Quasi-dynamic Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_T_DRAM_CLK_ENABLE" width="5" begin="4" end="0" resetval="0x4" description="Specifies the number of DFI clock cycles from the de-assertion of the dfi_dram_clk_disable signal on the DFI until the first valid rising edge of the clock to the DRAM memory devices, at the PHY-DRAM boundary.If the DFI clock and the memory clock are not phase aligned, this timing parameter should be rounded up to the next integer value. Programming Mode: Quasi-dynamic Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DFILPCFG0" acronym="DDRCTL_DFILPCFG0" offset="0x198" width="32" description="DFI Low Power Configuration Register 0">
    <bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_TLP_RESP" width="5" begin="28" end="24" resetval="0x7" description="Setting in DFI clock cycles for DFI's tlp_resp time.Same value is used for both Power Down, Self Refresh, Deep Power Down and Maximum Power Saving modes. DFI 2.1 specification onwards, recommends using a fixed value of 7 always. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="DFI_LP_WAKEUP_DPD" width="4" begin="23" end="20" resetval="0x0" description="Value in DFI clock cycles to drive on dfi_lp_wakeup signal when Deep Power Down mode is entered.Determines the DFI's tlp_wakeup time: - 0x0 - 16 cycles - 0x1 - 32 cycles - 0x2 - 64 cycles - 0x3 - 128 cycles - 0x4 - 256 cycles - 0x5 - 512 cycles - 0x6 - 1024 cycles - 0x7 - 2048 cycles - 0x8 - 4096 cycles - 0x9 - 8192 cycles - 0xA - 16384 cycles - 0xB - 32768 cycles - 0xC - 65536 cycles - 0xD - 131072 cycles - 0xE - 262144 cycles - 0xF - Unlimited This is only present for designs supporting mDDR or LPDDR2/LPDDR3 devices. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="19" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_LP_EN_DPD" width="1" begin="16" end="16" resetval="0x0" description="Enables DFI Low Power interface handshaking during Deep Power Down Entry/Exit.- 0 - Disabled - 1 - Enabled This is only present for designs supporting mDDR or LPDDR2/LPDDR3 devices. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="DFI_LP_WAKEUP_SR" width="4" begin="15" end="12" resetval="0x0" description="Value in DFI clpck cycles to drive on dfi_lp_wakeup signal when Self Refresh mode is entered.Determines the DFI's tlp_wakeup time: - 0x0 - 16 cycles - 0x1 - 32 cycles - 0x2 - 64 cycles - 0x3 - 128 cycles - 0x4 - 256 cycles - 0x5 - 512 cycles - 0x6 - 1024 cycles - 0x7 - 2048 cycles - 0x8 - 4096 cycles - 0x9 - 8192 cycles - 0xA - 16384 cycles - 0xB - 32768 cycles - 0xC - 65536 cycles - 0xD - 131072 cycles - 0xE - 262144 cycles - 0xF - Unlimited Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="11" end="9" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_LP_EN_SR" width="1" begin="8" end="8" resetval="0x0" description="Enables DFI Low Power interface handshaking during Self Refresh Entry/Exit.- 0 - Disabled - 1 - Enabled Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="DFI_LP_WAKEUP_PD" width="4" begin="7" end="4" resetval="0x0" description="Value in DFI clock cycles to drive on dfi_lp_wakeup signal when Power Down mode is entered.Determines the DFI's tlp_wakeup time: - 0x0 - 16 cycles - 0x1 - 32 cycles - 0x2 - 64 cycles - 0x3 - 128 cycles - 0x4 - 256 cycles - 0x5 - 512 cycles - 0x6 - 1024 cycles - 0x7 - 2048 cycles - 0x8 - 4096 cycles - 0x9 - 8192 cycles - 0xA - 16384 cycles - 0xB - 32768 cycles - 0xC - 65536 cycles - 0xD - 131072 cycles - 0xE - 262144 cycles - 0xF - Unlimited Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="3" end="1" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_LP_EN_PD" width="1" begin="0" end="0" resetval="0x0" description="Enables DFI Low Power interface handshaking during Power Down Entry/Exit.- 0 - Disabled - 1 - Enabled Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DFILPCFG1" acronym="DDRCTL_DFILPCFG1" offset="0x19C" width="32" description="DFI Low Power Configuration Register 1">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_LP_WAKEUP_MPSM" width="4" begin="7" end="4" resetval="0x0" description="Value in DFI clock cycles to drive on dfi_lp_wakeup signal when Maximum Power Saving Mode is entered.Determines the DFI's tlp_wakeup time: - 0x0 - 16 cycles - 0x1 - 32 cycles - 0x2 - 64 cycles - 0x3 - 128 cycles - 0x4 - 256 cycles - 0x5 - 512 cycles - 0x6 - 1024 cycles - 0x7 - 2048 cycles - 0x8 - 4096 cycles - 0x9 - 8192 cycles - 0xA - 16384 cycles - 0xB - 32768 cycles - 0xC - 65536 cycles - 0xD - 131072 cycles - 0xE - 262144 cycles - 0xF - Unlimited This is only present for designs supporting DDR4 devices. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="3" end="1" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_LP_EN_MPSM" width="1" begin="0" end="0" resetval="0x0" description="Enables DFI Low Power interface handshaking during Maximum Power Saving Mode Entry/Exit.- 0 - Disabled - 1 - Enabled This is only present for designs supporting DDR4 devices. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DFIUPD0" acronym="DDRCTL_DFIUPD0" offset="0x1A0" width="32" description="DFI Update Register 0">
    <bitfield id="DIS_AUTO_CTRLUPD" width="1" begin="31" end="31" resetval="0x0" description="When '1', disable the automatic dfi_ctrlupd_req generation by the uMCTL2.The core must issue the dfi_ctrlupd_req signal using register DDRCTL_DBGCMD.ctrlupd. When '0', uMCTL2 issues dfi_ctrlupd_req periodically. Programming Mode: Quasi-dynamic Group 3" range="" rwaccess="RW"/>
    <bitfield id="DIS_AUTO_CTRLUPD_SRX" width="1" begin="30" end="30" resetval="0x0" description="When '1', disable the automatic dfi_ctrlupd_req generation by the uMCTL2 at self-refresh exit.When '0', uMCTL2 issues a dfi_ctrlupd_req before or after exiting self-refresh, depending on DDRCTL_DFIUPD0.ctrlupd_pre_srx. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="CTRLUPD_PRE_SRX" width="1" begin="29" end="29" resetval="0x0" description="Selects dfi_ctrlupd_req requirements at SRX: -0 : send ctrlupd after SRX - 1 : send ctrlupd before SRX If DDRCTL_DFIUPD0.dis_auto_ctrlupd_srx=1, this register has no impact, because no dfi_ctrlupd_req will be issued when SRX. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="28" end="26" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_T_CTRLUP_MAX" width="10" begin="25" end="16" resetval="0x40" description="Specifies the maximum number of DFI clock cycles that the dfi_ctrlupd_req signal can assert.Lowest value to assign to this variable is 0x40. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_T_CTRLUP_MIN" width="10" begin="9" end="0" resetval="0x3" description="Specifies the minimum number of DFI clock cycles that the dfi_ctrlupd_req signal must be asserted.The uMCTL2 expects the PHY to respond within this time. If the PHY does not respond, the uMCTL2 will de-assert dfi_ctrlupd_req after dfi_t_ctrlup_min + 2 cycles. Lowest value to assign to this variable is 0x3. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DFIUPD1" acronym="DDRCTL_DFIUPD1" offset="0x1A4" width="32" description="DFI Update Register 1">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_T_CTRLUPD_INTERVAL_MIN_X1024" width="8" begin="23" end="16" resetval="0x1" description="This is the minimum amount of time between uMCTL2 initiated DFI update requests (which is executed whenever the uMCTL2 is idle).Set this number higher to reduce the frequency of update requests, which can have a small impact on the latency of the first read request when the uMCTL2 is idle. Minimum allowed value for this field is 1. Unit: 1024 DFI clock cycles Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="8" begin="15" end="8" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_T_CTRLUPD_INTERVAL_MAX_X1024" width="8" begin="7" end="0" resetval="0x1" description="This is the maximum amount of time between uMCTL2 initiated DFI update requests.This timer resets with each update request when the timer expires dfi_ctrlupd_req is sent and traffic is blocked until the dfi_ctrlupd_ackx is received. PHY can use this idle time to recalibrate the delay lines to the DLLs. The DFI controller update is also used to reset PHY FIFO pointers in case of data capture errors. Updates are required to maintain calibration over PVT, but frequent updates may impact performance. Minimum allowed value for this field is 1. Note: Value programmed for DDRCTL_DFIUPD1.dfi_t_ctrlupd_interval_max_x1024 must be greater than DDRCTL_DFIUPD1.dfi_t_ctrlupd_interval_min_x1024. Unit: 1024 DFI clock cycles Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DFIUPD2" acronym="DDRCTL_DFIUPD2" offset="0x1A8" width="32" description="DFI Update Register 2">
    <bitfield id="DFI_PHYUPD_EN" width="1" begin="31" end="31" resetval="0x1" description="Enables the support for acknowledging PHY-initiated updates: -0 - Disabled - 1 - Enabled Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="31" begin="30" end="0" resetval="0xX" description="" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DFIMISC" acronym="DDRCTL_DFIMISC" offset="0x1B0" width="32" description="DFI Miscellaneous Control Register">
    <bitfield id="RESERVED" width="19" begin="31" end="13" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_FREQUENCY" width="5" begin="12" end="8" resetval="0x0" description="Indicates the operating frequency of the system.The number of supported frequencies and the mapping of signal values to clock frequencies are defined by the PHY. Programming Mode: Quasi-dynamic Group 1" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_INIT_START" width="1" begin="5" end="5" resetval="0x0" description="PHY init start request signal.When asserted it triggers the PHY init start request Programming Mode: Quasi-dynamic Group 3" range="" rwaccess="RW"/>
    <bitfield id="CTL_IDLE_EN" width="1" begin="4" end="4" resetval="0x0" description="Enables support of ctl_idle signal, which is non-DFI related pin.See signal description of ctl_idle signal for further details of ctl_idle functionality. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_DATA_CS_POLARITY" width="1" begin="2" end="2" resetval="0x0" description="Defines polarity of dfi_wrdata_cs and dfi_rddata_cs signals.- 0: Signals are active low - 1: Signals are active high Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="PHY_DBI_MODE" width="1" begin="1" end="1" resetval="0x0" description="DBI implemented in DDRC or PHY.- 0 - DDRC implements DBI functionality. - 1 - PHY implements DBI functionality. Present only in designs configured to support DDR4 and LPDDR4. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="DFI_INIT_COMPLETE_EN" width="1" begin="0" end="0" resetval="0x1" description="PHY initialization complete enable signal.When asserted the dfi_init_complete signal can be used to trigger SDRAM initialisation Programming Mode: Quasi-dynamic Group 3" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DFITMG2" acronym="DDRCTL_DFITMG2" offset="0x1B4" width="32" description="DFI Timing Register 2">
    <bitfield id="RESERVED" width="17" begin="31" end="15" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_TPHY_RDCSLAT" width="7" begin="14" end="8" resetval="0x2" description="Number of DFI PHY clock cycles between when a read command is sent on the DFI control interface and when the associated dfi_rddata_cs signal is asserted.This corresponds to the DFI timing parameter tphy_rdcslat. Refer to PHY specification for correct value. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_TPHY_WRCSLAT" width="6" begin="5" end="0" resetval="0x2" description="Number of DFI PHY clock cycles between when a write command is sent on the DFI control interface and when the associated dfi_wrdata_cs signal is asserted.This corresponds to the DFI timing parameter tphy_wrcslat. Refer to PHY specification for correct value. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DFITMG3" acronym="DDRCTL_DFITMG3" offset="0x1B8" width="32" description="DFI Timing Register 3">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_T_GEARDOWN_DELAY" width="5" begin="4" end="0" resetval="0x0" description="The delay from dfi_geardown_en assertion to the time of the PHY being ready to receive commands.Refer to PHY specification for correct value. When the controller is operating in 1:2 frequency ratio mode, program this to (tgeardown_delay/2) and round it up to the next integer value. Unit: Clocks Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DFISTAT" acronym="DDRCTL_DFISTAT" offset="0x1BC" width="32" description="DFI Status Register">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="DFI_LP_ACK" width="1" begin="1" end="1" resetval="0x0" description="Stores the value of the dfi_lp_ack input to the controller.Programming Mode: Dynamic" range="" rwaccess="R"/>
    <bitfield id="DFI_INIT_COMPLETE" width="1" begin="0" end="0" resetval="0x0" description="The status flag register which announces when the DFI initialization has been completed.The DFI INIT triggered by dfi_init_start signal and then the dfi_init_complete flag is polled to know when the initialization is done. Programming Mode: Dynamic" range="" rwaccess="R"/>
  </register>
  <register id="DDRCTL_DBICTL" acronym="DDRCTL_DBICTL" offset="0x1C0" width="32" description="DM/DBI Control Register">
    <bitfield id="RESERVED" width="29" begin="31" end="3" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RD_DBI_EN" width="1" begin="2" end="2" resetval="0x0" description="Read DBI enable signal in DDRC.- 0 - Read DBI is disabled. - 1 - Read DBI is enabled. This signal must be set the same value as DRAM's mode register. - DDR4: MR5 bit A12. When x4 devices are used, this signal must be set to 0. - LPDDR4: MR3[6] Programming Mode: Quasi-dynamic Group 1" range="" rwaccess="RW"/>
    <bitfield id="WR_DBI_EN" width="1" begin="1" end="1" resetval="0x0" description="Write DBI enable signal in DDRC.- 0 - Write DBI is disabled. - 1 - Write DBI is enabled. This signal must be set the same value as DRAM's mode register. - DDR4: MR5 bit A11. When x4 devices are used, this signal must be set to 0. - LPDDR4: MR3[7] Programming Mode: Quasi-dynamic Group 1" range="" rwaccess="RW"/>
    <bitfield id="DM_EN" width="1" begin="0" end="0" resetval="0x1" description="DM enable signal in DDRC.- 0 - DM is disabled. - 1 - DM is enabled. This signal must be set the same logical value as DRAM's mode register. - DDR4: Set this to same value as MR5 bit A10. When x4 devices are used, this signal must be set to 0. - LPDDR4: Set this to inverted value of MR13[5] which is opposite polarity from this signal Programming Mode: Quasi-dynamic Group 3" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DFIPHYMSTR" acronym="DDRCTL_DFIPHYMSTR" offset="0x1C4" width="32" description="DFI PHY Master">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_PHYMSTR_EN" width="1" begin="0" end="0" resetval="0x1" description="Enables the PHY Master Interface: -0 - Disabled - 1 - Enabled Programming Mode: Dynamic" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ADDRMAP0" acronym="DDRCTL_ADDRMAP0" offset="0x200" width="32" description="Address Map Register 0">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_CS_BIT0" width="5" begin="4" end="0" resetval="0x0" description="Selects the HIF address bit used as rank address bit 0.Valid Range: 0 to 29, and 31 Internal Base: 6 The selected HIF address bit is determined by adding the internal base to the value of this field. If unused, set to 31 and then rank address bit 0 is set to 0. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ADDRMAP1" acronym="DDRCTL_ADDRMAP1" offset="0x204" width="32" description="Address Map Register 1">
    <bitfield id="RESERVED" width="10" begin="31" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_BANK_B2" width="6" begin="21" end="16" resetval="0x0" description="Selects the HIF address bit used as bank address bit 2.Valid Range: 0 to 31 and 63 Internal Base: 4 The selected HIF address bit is determined by adding the internal base to the value of this field. If unused, set to 63 and then bank address bit 2 is set to 0. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="15" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_BANK_B1" width="6" begin="13" end="8" resetval="0x0" description="Selects the HIF address bits used as bank address bit 1.Valid Range: 0 to 32 and 63 Internal Base: 3 The selected HIF address bit for each of the bank address bits is determined by adding the internal base to the value of this field. If unused, set to 63 and then bank address bit 1 is set to 0. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_BANK_B0" width="6" begin="5" end="0" resetval="0x0" description="Selects the HIF address bits used as bank address bit 0.Valid Range: 0 to 32 and 63 Internal Base: 2 The selected HIF address bit for each of the bank address bits is determined by adding the internal base to the value of this field. If unused, set to 63 and then bank address bit 0 is set to 0. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ADDRMAP2" acronym="DDRCTL_ADDRMAP2" offset="0x208" width="32" description="Address Map Register 2">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_COL_B5" width="4" begin="27" end="24" resetval="0x0" description="- Full bus width mode: Selects the HIF address bit used as column address bit 5.- Half bus width mode: Selects the HIF address bit used as column address bit 6. - Quarter bus width mode: Selects the HIF address bit used as column address bit 7 . Valid Range: 0 to 7, and 15 Internal Base: 5 The selected HIF address bit is determined by adding the internal base to the value of this field. If unused, set to 15 and then this column address bit is set to 0. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="23" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_COL_B4" width="4" begin="19" end="16" resetval="0x0" description="- Full bus width mode: Selects the HIF address bit used as column address bit 4.- Half bus width mode: Selects the HIF address bit used as column address bit 5. - Quarter bus width mode: Selects the HIF address bit used as column address bit 6. Valid Range: 0 to 7, and 15 Internal Base: 4 The selected HIF address bit is determined by adding the internal base to the value of this field. If unused, set to 15 and then this column address bit is set to 0. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_COL_B3" width="4" begin="11" end="8" resetval="0x0" description="- Full bus width mode: Selects the HIF address bit used as column address bit 3.- Half bus width mode: Selects the HIF address bit used as column address bit 4. - Quarter bus width mode: Selects the HIF address bit used as column address bit 5. Valid Range: 0 to 7 Internal Base: 3 The selected HIF address bit is determined by adding the internal base to the value of this field. Note, if UMCTL2_INCL_ARB=1, MEMC_BURST_LENGTH=16, Full bus width (DDRCTL_MSTR.data_bus_width=00) and BL16 (DDRCTL_MSTR.burst_rdwr=1000), it is recommended to program this to 0. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_COL_B2" width="4" begin="3" end="0" resetval="0x0" description="- Full bus width mode: Selects the HIF address bit used as column address bit 2.- Half bus width mode: Selects the HIF address bit used as column address bit 3. - Quarter bus width mode: Selects the HIF address bit used as column address bit 4. Valid Range: 0 to 7 Internal Base: 2 The selected HIF address bit is determined by adding the internal base to the value of this field. Note, if UMCTL2_INCL_ARB=1 and MEMC_BURST_LENGTH=8, it is required to program this to 0 unless: - in Half or Quarter bus width (DDRCTL_MSTR.data_bus_width!=00) and - PCCFG.bl_exp_mode==1 and either - In DDR4 and DDRCTL_ADDRMAP8.addrmap_bg_b0==0 or - In LPDDR4 and DDRCTL_ADDRMAP1.addrmap_bank_b0==0 If UMCTL2_INCL_ARB=1 and MEMC_BURST_LENGTH=16, it is required to program this to 0 unless: - in Half or Quarter bus width (DDRCTL_MSTR.data_bus_width!=00) and - PCCFG.bl_exp_mode==1 and - In DDR4 and DDRCTL_ADDRMAP8.addrmap_bg_b0==0 Otherwise, if MEMC_BURST_LENGTH=8 and Full Bus Width (DDRCTL_MSTR.data_bus_width==00), it is recommended to program this to 0 so that HIF[2] maps to column address bit 2. If MEMC_BURST_LENGTH=16 and Full Bus Width (DDRCTL_MSTR.data_bus_width==00), it is recommended to program this to 0 so that HIF[2] maps to column address bit 2. If MEMC_BURST_LENGTH=16 and Half Bus Width (DDRCTL_MSTR.data_bus_width==01), it is recommended to program this to 0 so that HIF[2] maps to column address bit 3. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ADDRMAP3" acronym="DDRCTL_ADDRMAP3" offset="0x20C" width="32" description="Address Map Register 3">
    <bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_COL_B9" width="5" begin="28" end="24" resetval="0x0" description="- Full bus width mode: Selects the HIF address bit used as column address bit 9.- Half bus width mode: Selects the HIF address bit used as column address bit 11 (10 in LPDDR2/LPDDR3 mode). - Quarter bus width mode: Selects the HIF address bit used as column address bit 13 (11 in LPDDR2/LPDDR3 mode). Valid Range: 0 to 7, x, and 31. x indicate a valid value in inline ECC configuration. Internal Base: 9 The selected HIF address bit is determined by adding the internal base to the value of this field. If unused, set to 31 and then this column address bit is set to 0. Note: Per JEDEC DDR2/3/mDDR specification, column address bit 10 is reserved for indicating auto-precharge, and hence no source address bit can be mapped to column address bit 10. In LPDDR2/LPDDR3, there is a dedicated bit for auto-precharge in the CA bus and hence column bit 10 is used. In Inline ECC configuration (MEMC_INLINE_ECC=1) and ECC is enabled (DDRCTL_ECCCFG0.ecc_mode&amp;amp;gt;0), the highest 3 column address bits must map to the highest 3 valid HIF address bits. If column bit 9 is the highest column address bit, it must map to the highest valid HIF address bit. (x = the highest valid HIF address bit - internal base) If column bit 9 is the second highest column address bit, it must map to the second highest valid HIF address bit. (x = the highest valid HIF address bit - 1 - internal base) If column bit 9 is the third highest column address bit, it must map to the third highest valid HIF address bit. (x = the highest valid HIF address bit - 2 - internal base) if it is unused, set to 31. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="23" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_COL_B8" width="5" begin="20" end="16" resetval="0x0" description="- Full bus width mode: Selects the HIF address bit used as column address bit 8.- Half bus width mode: Selects the HIF address bit used as column address bit 9. - Quarter bus width mode: Selects the HIF address bit used as column address bit 11 (10 in LPDDR2/LPDDR3 mode). Valid Range: 0 to 7, x, and 31. x indicate a valid value in inline ECC configuration. Internal Base: 8 The selected HIF address bit is determined by adding the internal base to the value of this field. If unused, set to 31 and then this column address bit is set to 0. Note: Per JEDEC DDR2/3/mDDR specification, column address bit 10 is reserved for indicating auto-precharge, and hence no source address bit can be mapped to column address bit 10. In LPDDR2/LPDDR3, there is a dedicated bit for auto-precharge in the CA bus and hence column bit 10 is used. In Inline ECC configuration (MEMC_INLINE_ECC=1) and ECC is enabled (DDRCTL_ECCCFG0.ecc_mode&amp;amp;gt;0), the highest 3 column address bits must map to the highest 3 valid HIF address bits. If column bit 8 is the second highest column address bit, it must map to the second highest valid HIF address bit. (x = the highest valid HIF address bit - 1 - internal base) If column bit 8 is the third highest column address bit, it must map to the third highest valid HIF address bit. (x = the highest valid HIF address bit - 2 - internal base) if it is unused, set to 31. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="15" end="13" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_COL_B7" width="5" begin="12" end="8" resetval="0x0" description="- Full bus width mode: Selects the HIF address bit used as column address bit 7.- Half bus width mode: Selects the HIF address bit used as column address bit 8. - Quarter bus width mode: Selects the HIF address bit used as column address bit 9. Valid Range: 0 to 7, x, and 31. x indicate a valid value in inline ECC configuration. Internal Base: 7 The selected HIF address bit is determined by adding the internal base to the value of this field. If unused, set to 31 and then this column address bit is set to 0. In Inline ECC configuration (MEMC_INLINE_ECC=1) and ECC is enabled (DDRCTL_ECCCFG0.ecc_mode&amp;amp;gt;0), the highest 3 column address bits must map to the highest 3 valid HIF address bits. If column bit 7 is the third highest column address bit, it must map to the third highest valid HIF address bit. (x = the highest valid HIF address bit - 2 - internal base) if it is unused, set to 31. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_COL_B6" width="4" begin="3" end="0" resetval="0x0" description="- Full bus width mode: Selects the HIF address bit used as column address bit 6.- Half bus width mode: Selects the HIF address bit used as column address bit 7. - Quarter bus width mode: Selects the HIF address bit used as column address bit 8. Valid Range: 0 to 7, and 15 Internal Base: 6 The selected HIF address bit is determined by adding the internal base to the value of this field. If unused, set to 15 and then this column address bit is set to 0. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ADDRMAP4" acronym="DDRCTL_ADDRMAP4" offset="0x210" width="32" description="Address Map Register 4">
    <bitfield id="RESERVED" width="19" begin="31" end="13" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_COL_B11" width="5" begin="12" end="8" resetval="0x0" description="- Full bus width mode: Selects the HIF address bit used as column address bit 13 (11 in LPDDR2/LPDDR3 mode).- Half bus width mode: Unused. To make it unused, this should be tied to 4'hF. - Quarter bus width mode: Unused. To make it unused, this must be tied to 4'hF. Valid Range: 0 to 7, x, and 31. x indicate a valid value in inline ECC configuration. Internal Base: 11 The selected HIF address bit is determined by adding the internal base to the value of this field. If unused, set to 31 and then this column address bit is set to 0. Note: Per JEDEC DDR2/3/mDDR specification, column address bit 10 is reserved for indicating auto-precharge, and hence no source address bit can be mapped to column address bit 10. In LPDDR2/LPDDR3, there is a dedicated bit for auto-precharge in the CA bus and hence column bit 10 is used. In Inline ECC configuration (MEMC_INLINE_ECC=1) and ECC is enabled (DDRCTL_ECCCFG0.ecc_mode&amp;amp;gt;0), the highest 3 column address bits must map to the highest 3 valid HIF address bits. If column bit 11 is the highest column address bit, it must map to the highest valid HIF address bit. (x = the highest valid HIF address bit - internal base) If column bit 11 is the second highest column address bit, it must map to the second highest valid HIF address bit. (x = the highest valid HIF address bit - 1 - internal base) If column bit 11 is the third highest column address bit, it must map to the third highest valid HIF address bit. (x = the highest valid HIF address bit - 2 - internal base) if it is unused, set to 31. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_COL_B10" width="5" begin="4" end="0" resetval="0x0" description="- Full bus width mode: Selects the HIF address bit used as column address bit 11 (10 in LPDDR2/LPDDR3 mode).- Half bus width mode: Selects the HIF address bit used as column address bit 13 (11 in LPDDR2/LPDDR3 mode). - Quarter bus width mode: UNUSED. To make it unused, this must be tied to 4'hF. Valid Range: 0 to 7, x, and 31. x indicate a valid value in inline ECC configuration. Internal Base: 10 The selected HIF address bit is determined by adding the internal base to the value of this field. If unused, set to 31 and then this column address bit is set to 0. Note: Per JEDEC DDR2/3/mDDR specification, column address bit 10 is reserved for indicating auto-precharge, and hence no source address bit can be mapped to column address bit 10. In LPDDR2/LPDDR3, there is a dedicated bit for auto-precharge in the CA bus and hence column bit 10 is used. In Inline ECC configuration (MEMC_INLINE_ECC=1) and ECC is enabled (DDRCTL_ECCCFG0.ecc_mode&amp;amp;gt;0), the highest 3 column address bits must map to the highest 3 valid HIF address bits. If column bit 10 is the highest column address bit, it must map to the highest valid HIF address bit. (x = the highest valid HIF address bit - internal base) If column bit 10 is the second highest column address bit, it must map to the second highest valid HIF address bit. (x = the highest valid HIF address bit - 1 - internal base) If column bit 10 is the third highest column address bit, it must map to the third highest valid HIF address bit. (x = the highest valid HIF address bit - 2 - internal base) if it is unused, set to 31. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ADDRMAP5" acronym="DDRCTL_ADDRMAP5" offset="0x214" width="32" description="Address Map Register 5">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_ROW_B11" width="4" begin="27" end="24" resetval="0x0" description="Selects the HIF address bit used as row address bit 11.Valid Range: 0 to 11, and 15 Internal Base: 17 The selected HIF address bit is determined by adding the internal base to the value of this field. If unused, set to 15 and then row address bit 11 is set to 0. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="23" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_ROW_B2_10" width="4" begin="19" end="16" resetval="0x0" description="Selects the HIF address bits used as row address bits 2 to 10.Valid Range: 0 to 11, and 15 Internal Base: 8 (for row address bit 2), 9 (for row address bit 3), 10 (for row address bit 4) etc increasing to 16 (for row address bit 10) The selected HIF address bit for each of the row address bits is determined by adding the internal base to the value of this field. When value 15 is used the values of row address bits 2 to 10 are defined by registers DDRCTL_ADDRMAP9, DDRCTL_ADDRMAP10, DDRCTL_ADDRMAP11. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_ROW_B1" width="4" begin="11" end="8" resetval="0x0" description="Selects the HIF address bits used as row address bit 1.Valid Range: 0 to 11 Internal Base: 7 The selected HIF address bit for each of the row address bits is determined by adding the internal base to the value of this field. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_ROW_B0" width="4" begin="3" end="0" resetval="0x0" description="Selects the HIF address bits used as row address bit 0.Valid Range: 0 to 11 Internal Base: 6 The selected HIF address bit for each of the row address bits is determined by adding the internal base to the value of this field. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ADDRMAP6" acronym="DDRCTL_ADDRMAP6" offset="0x218" width="32" description="Address Map Register 6">
    <bitfield id="LPDDR3_6GB_12GB" width="1" begin="31" end="31" resetval="0x0" description="Set this to 1 if there is an LPDDR3 SDRAM 6Gb or 12Gb device in use.- 1 - LPDDR3 SDRAM 6Gb/12Gb device in use. Every address having row[14:13]==2'b11 is considered as invalid - 0 - non-LPDDR3 6Gb/12Gb device in use. All addresses are valid Present only in designs configured to support LPDDR3. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="LPDDR4_6GB_12GB_24GB" width="2" begin="30" end="29" resetval="0x0" description="Indicates what type of LPDDR4 SDRAM device is in use.- 2'b00: No LPDDR4 SDRAM 6Gb/12Gb/24Gb device in use. All addresses are valid - 2'b01: LPDDR4 SDRAM 6Gb device in use. Every address having row[14:13]==2'b11 is considered as invalid - 2'b10: LPDDR4 SDRAM 12Gb device in use. Every address having row[15:14]==2'b11 is considered as invalid - 2'b11: LPDDR4 SDRAM 24Gb device in use. Unsupported Present only in designs configured to support LPDDR4. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="28" end="28" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_ROW_B15" width="4" begin="27" end="24" resetval="0x0" description="Selects the HIF address bit used as row address bit 15.Valid Range: 0 to 11, and 15 Internal Base: 21 The selected HIF address bit is determined by adding the internal base to the value of this field. If unused, set to 15 and then row address bit 15 is set to 0. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="23" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_ROW_B14" width="4" begin="19" end="16" resetval="0x0" description="Selects the HIF address bit used as row address bit 14.Valid Range: 0 to 11, and 15 Internal Base: 20 The selected HIF address bit is determined by adding the internal base to the value of this field. If unused, set to 15 and then row address bit 14 is set to 0. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_ROW_B13" width="4" begin="11" end="8" resetval="0x0" description="Selects the HIF address bit used as row address bit 13.Valid Range: 0 to 11, and 15 Internal Base: 19 The selected HIF address bit is determined by adding the internal base to the value of this field. If unused, set to 15 and then row address bit 13 is set to 0. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_ROW_B12" width="4" begin="3" end="0" resetval="0x0" description="Selects the HIF address bit used as row address bit 12.Valid Range: 0 to 11, and 15 Internal Base: 18 The selected HIF address bit is determined by adding the internal base to the value of this field. If unused, set to 15 and then row address bit 12 is set to 0. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ADDRMAP7" acronym="DDRCTL_ADDRMAP7" offset="0x21C" width="32" description="Address Map Register 7">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_ROW_B17" width="4" begin="11" end="8" resetval="0x0" description="Selects the HIF address bit used as row address bit 17.Valid Range: 0 to 11, and 15 Internal Base: 23 The selected HIF address bit is determined by adding the internal base to the value of this field. If unused, set to 15 and then row address bit 17 is set to 0. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_ROW_B16" width="4" begin="3" end="0" resetval="0x0" description="Selects the HIF address bit used as row address bit 16.Valid Range: 0 to 11, and 15 Internal Base: 22 The selected HIF address bit is determined by adding the internal base to the value of this field. If unused, set to 15 and then row address bit 16 is set to 0. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ADDRMAP8" acronym="DDRCTL_ADDRMAP8" offset="0x220" width="32" description="Address Map Register 8">
    <bitfield id="RESERVED" width="18" begin="31" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_BG_B1" width="6" begin="13" end="8" resetval="0x0" description="Selects the HIF address bits used as bank group address bit 1.Valid Range: 0 to 32, and 63 Internal Base: 3 The selected HIF address bit for each of the bank group address bits is determined by adding the internal base to the value of this field. If unused, set to 63 and then bank group address bit 1 is set to 0. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_BG_B0" width="6" begin="5" end="0" resetval="0x0" description="Selects the HIF address bits used as bank group address bit 0.Valid Range: 0 to 32 and 63 Internal Base: 2 The selected HIF address bit for each of the bank group address bits is determined by adding the internal base to the value of this field. If unused, set to 63 and then bank group address bit 0 is set to 0. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ADDRMAP9" acronym="DDRCTL_ADDRMAP9" offset="0x224" width="32" description="Address Map Register 9">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_ROW_B5" width="4" begin="27" end="24" resetval="0x0" description="Selects the HIF address bits used as row address bit 5.Valid Range: 0 to 11 Internal Base: 11 The selected HIF address bit for each of the row address bits is determined by adding the internal base to the value of this field. This register field is used only when DDRCTL_ADDRMAP5.addrmap_row_b2_10 is set to value 15. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="23" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_ROW_B4" width="4" begin="19" end="16" resetval="0x0" description="Selects the HIF address bits used as row address bit 4.Valid Range: 0 to 11 Internal Base: 10 The selected HIF address bit for each of the row address bits is determined by adding the internal base to the value of this field. This register field is used only when DDRCTL_ADDRMAP5.addrmap_row_b2_10 is set to value 15. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_ROW_B3" width="4" begin="11" end="8" resetval="0x0" description="Selects the HIF address bits used as row address bit 3.Valid Range: 0 to 11 Internal Base: 9 The selected HIF address bit for each of the row address bits is determined by adding the internal base to the value of this field. This register field is used only when DDRCTL_ADDRMAP5.addrmap_row_b2_10 is set to value 15. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_ROW_B2" width="4" begin="3" end="0" resetval="0x0" description="Selects the HIF address bits used as row address bit 2.Valid Range: 0 to 11 Internal Base: 8 The selected HIF address bit for each of the row address bits is determined by adding the internal base to the value of this field. This register field is used only when DDRCTL_ADDRMAP5.addrmap_row_b2_10 is set to value 15. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ADDRMAP10" acronym="DDRCTL_ADDRMAP10" offset="0x228" width="32" description="Address Map Register 10">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_ROW_B9" width="4" begin="27" end="24" resetval="0x0" description="Selects the HIF address bits used as row address bit 9.Valid Range: 0 to 11 Internal Base: 15 The selected HIF address bit for each of the row address bits is determined by adding the internal base to the value of this field. This register field is used only when DDRCTL_ADDRMAP5.addrmap_row_b2_10 is set to value 15. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="23" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_ROW_B8" width="4" begin="19" end="16" resetval="0x0" description="Selects the HIF address bits used as row address bit 8.Valid Range: 0 to 11 Internal Base: 14 The selected HIF address bit for each of the row address bits is determined by adding the internal base to the value of this field. This register field is used only when DDRCTL_ADDRMAP5.addrmap_row_b2_10 is set to value 15. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_ROW_B7" width="4" begin="11" end="8" resetval="0x0" description="Selects the HIF address bits used as row address bit 7.Valid Range: 0 to 11 Internal Base: 13 The selected HIF address bit for each of the row address bits is determined by adding the internal base to the value of this field. This register field is used only when DDRCTL_ADDRMAP5.addrmap_row_b2_10 is set to value 15. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_ROW_B6" width="4" begin="3" end="0" resetval="0x0" description="Selects the HIF address bits used as row address bit 6.Valid Range: 0 to 11 Internal Base: 12 The selected HIF address bit for each of the row address bits is determined by adding the internal base to the value of this field. This register field is used only when DDRCTL_ADDRMAP5.addrmap_row_b2_10 is set to value 15. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ADDRMAP11" acronym="DDRCTL_ADDRMAP11" offset="0x22C" width="32" description="Address Map Register 11">
    <bitfield id="RESERVED" width="28" begin="31" end="4" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ADDRMAP_ROW_B10" width="4" begin="3" end="0" resetval="0x0" description="Selects the HIF address bits used as row address bit 10.Valid Range: 0 to 11 Internal Base: 16 The selected HIF address bit for each of the row address bits is determined by adding the internal base to the value of this field. This register field is used only when DDRCTL_ADDRMAP5.addrmap_row_b2_10 is set to value 15. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ODTCFG" acronym="DDRCTL_ODTCFG" offset="0x240" width="32" description="ODT Configuration Register">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="WR_ODT_HOLD" width="4" begin="27" end="24" resetval="0x4" description="DFI PHY clock cycles to hold ODT for a write command.The minimum supported value is 2. Recommended values: DDR2: - BL8: 0x5 (DDR2-400/533/667), 0x6 (DDR2-800), 0x7 (DDR2-1066) - BL4: 0x3 (DDR2-400/533/667), 0x4 (DDR2-800), 0x5 (DDR2-1066) DDR3: - BL8: 0x6 DDR4: - BL8: 5 + WR_PREAMBLE + CRC_MODE WR_PREAMBLE = 1 (1tCK write preamble), 2 (2tCK write preamble) CRC_MODE = 0 (not CRC mode), 1 (CRC mode) LPDDR3: - BL8: 7 + RU(tODTon(max)/tCK) Programming Mode: Quasi-dynamic Group 1 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="23" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="WR_ODT_DELAY" width="5" begin="20" end="16" resetval="0x0" description="The delay, in DFI PHY clock cycles, from issuing a write command to setting ODT values associated with that command.ODT setting must remain constant for the entire time that DQS is driven by the uMCTL2. Recommended values: DDR2: - CWL + AL - 3 (DDR2-400/533/667), CWL + AL - 4 (DDR2-800), CWL + AL - 5 (DDR2-1066) If (CWL + AL - 3 &amp;amp;lt; 0), uMCTL2 does not support ODT for write operation. DDR3: - 0x0 DDR4: - DDRCTL_DFITMG1.dfi_t_cmd_lat (to adjust for CAL mode) LPDDR3: - WL - 1 - RU(tODTon(max)/tCK)" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RD_ODT_HOLD" width="4" begin="11" end="8" resetval="0x4" description="DFI PHY clock cycles to hold ODT for a read command.The minimum supported value is 2. Recommended values: DDR2: - BL8: 0x6 (not DDR2-1066), 0x7 (DDR2-1066) - BL4: 0x4 (not DDR2-1066), 0x5 (DDR2-1066) DDR3: - BL8 - 0x6 DDR4: - BL8: 5 + RD_PREAMBLE RD_PREAMBLE = 1 (1tCK write preamble), 2 (2tCK write preamble) LPDDR3: - BL8: 5 + RU(tDQSCK(max)/tCK) - RD(tDQSCK(min)/tCK) + RU(tODTon(max)/tCK) Programming Mode: Quasi-dynamic Group 1 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RD_ODT_DELAY" width="5" begin="6" end="2" resetval="0x0" description="The delay, in DFI PHY clock cycles, from issuing a read command to setting ODT values associated with that command.ODT setting must remain constant for the entire time that DQS is driven by the uMCTL2. Recommended values: DDR2: - CL + AL - 4 (not DDR2-1066), CL + AL - 5 (DDR2-1066) If (CL + AL - 4 &amp;amp;lt; 0), uMCTL2 does not support ODT for read operation. DDR3: - CL - CWL DDR4: - CL - CWL - RD_PREAMBLE + WR_PREAMBLE + DDRCTL_DFITMG1.dfi_t_cmd_lat (to adjust for CAL mode) WR_PREAMBLE = 1 (1tCK write preamble), 2 (2tCK write preamble) RD_PREAMBLE = 1 (1tCK write preamble), 2 (2tCK write preamble) If (CL - CWL - RD_PREAMBLE + WR_PREAMBLE) &amp;amp;lt; 0, uMCTL2 does not support ODT for read operation. LPDDR3: - RL + RD(tDQSCK(min)/tCK) - 1 - RU(tODTon(max)/tCK) Programming Mode: Quasi-dynamic Group 1 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="1" end="0" resetval="0xX" description="" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ODTMAP" acronym="DDRCTL_ODTMAP" offset="0x244" width="32" description="ODT/Rank Map Register">
    <bitfield id="RESERVED" width="18" begin="31" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RANK1_RD_ODT" width="2" begin="13" end="12" resetval="0x2" description="Indicates which remote ODTs must be turned on during a read from rank 1.Each rank has a remote ODT (in the SDRAM) which can be turned on by setting the appropriate bit here. Rank 0 is controlled by the LSB rank 1 is controlled by bit next to the LSB, etc. For each rank, set its bit to 1 to enable its ODT. Present only in configurations that have 2 or more ranks Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="11" end="10" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RANK1_WR_ODT" width="2" begin="9" end="8" resetval="0x2" description="Indicates which remote ODTs must be turned on during a write to rank 1.Each rank has a remote ODT (in the SDRAM) which can be turned on by setting the appropriate bit here. Rank 0 is controlled by the LSB rank 1 is controlled by bit next to the LSB, etc. For each rank, set its bit to 1 to enable its ODT. Present only in configurations that have 2 or more ranks Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RANK0_RD_ODT" width="2" begin="5" end="4" resetval="0x1" description="Indicates which remote ODTs must be turned on during a read from rank 0.Each rank has a remote ODT (in the SDRAM) which can be turned on by setting the appropriate bit here. Rank 0 is controlled by the LSB rank 1 is controlled by bit next to the LSB, etc. For each rank, set its bit to 1 to enable its ODT. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="3" end="2" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RANK0_WR_ODT" width="2" begin="1" end="0" resetval="0x1" description="Indicates which remote ODTs must be turned on during a write to rank 0.Each rank has a remote ODT (in the SDRAM) which can be turned on by setting the appropriate bit here. Rank 0 is controlled by the LSB rank 1 is controlled by bit next to the LSB, etc. For each rank, set its bit to 1 to enable its ODT. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_SCHED" acronym="DDRCTL_SCHED" offset="0x250" width="32" description="Scheduler Control Register">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RDWR_IDLE_GAP" width="7" begin="30" end="24" resetval="0x0" description="When the preferred transaction store is empty for these many clock cycles, switch to the alternate transaction store if it is non-empty.The read transaction store (both high and low priority) is the default preferred transaction store and the write transaction store is the alternative store. When prefer write over read is set this is reversed. 0x0 is a legal value for this register. When set to 0x0, the transaction store switching will happen immediately when the switching conditions become true. FOR PERFORMANCE ONLY Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="GO2CRITICAL_HYSTERESIS" width="8" begin="23" end="16" resetval="0x0" description="UNUSED Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="15" end="13" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="LPR_NUM_ENTRIES" width="5" begin="12" end="8" resetval="0x10" description="Number of entries in the low priority transaction store is this value + 1.(MEMC_NO_OF_ENTRY - (DDRCTL_SCHED.lpr_num_entries + 1)) is the number of entries available for the high priority transaction store. Setting this to maximum value allocates all entries to low priority transaction store. Setting this to 0 allocates 1 entry to low priority transaction store and the rest to high priority transaction store. Note: In ECC configurations, the numbers of write and low priority read credits issued is one less than in the non-ECC case. One entry each is reserved in the write and low-priority read CAMs for storing the RMW requests arising out of single bit error correction RMW operation. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="7" end="3" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="PAGECLOSE" width="1" begin="2" end="2" resetval="0x1" description="If true, bank is kept open only while there are page hit transactions available in the CAM to that bank.The last read or write command in the CAM with a bank and page hit will be executed with auto-precharge if DDRCTL_SCHED1.pageclose_timer=0. Even if this register set to 1 and DDRCTL_SCHED1.pageclose_timer is set to 0, explicit precharge (and not auto-precharge) may be issued in some cases where there is a mode switch between Write and Read or between LPR and HPR. The Read and Write commands that are executed as part of the ECC scrub requests are also executed without auto-precharge. If false, the bank remains open until there is a need to close it (to open a different page, or for page timeout or refresh timeout) - also known as open page policy. The open page policy can be overridden by setting the per-command-autopre bit on the HIF interface (hif_cmd_autopre). The pageclose feature provids a midway between Open and Close page policies. FOR PERFORMANCE ONLY. Programming Mode: Quasi-dynamic Group 3" range="" rwaccess="RW"/>
    <bitfield id="PREFER_WRITE" width="1" begin="1" end="1" resetval="0x0" description="If set then the bank selector prefers writes over reads.FOR DEBUG ONLY. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="FORCE_LOW_PRI_N" width="1" begin="0" end="0" resetval="0x1" description="Active low signal.When asserted ('0'), all incoming transactions are forced to low priority. This implies that all High Priority Read (HPR) and Variable Priority Read commands (VPR) will be treated as Low Priority Read (LPR) commands. On the write side, all Variable Priority Write (VPW) commands will be treated as Normal Priority Write (NPW) commands. Forcing the incoming transactions to low priority implicitly turns off Bypass path for read commands. FOR PERFORMANCE ONLY. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_SCHED1" acronym="DDRCTL_SCHED1" offset="0x254" width="32" description="Scheduler Control Register 1">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="PAGECLOSE_TIMER" width="8" begin="7" end="0" resetval="0x0" description="This field works in conjunction withDDRCTL_SCHED.pageclose. It only has meaning if DDRCTL_SCHED.pageclose==1. If DDRCTL_SCHED.pageclose==1 and pageclose_timer==0, then an auto-precharge may be scheduled for last read or write command in the CAM with a bank and page hit. Note, sometimes an explicit precharge is scheduled instead of the auto-precharge. See DDRCTL_SCHED.pageclose for details of when this may happen. If DDRCTL_SCHED.pageclose==1 and pageclose_timer&amp;amp;gt;0, then an auto-precharge is not scheduled for last read or write command in the CAM with a bank and page hit. Instead, a timer is started, with pageclose_timer as the initial value. There is a timer on a per bank basis. The timer decrements unless the next read or write in the CAM to a bank is a page hit. It gets reset to pageclose_timer value if the next read or write in the CAM to a bank is a page hit. Once the timer has reached zero, an explcit precharge will be attempted to be scheduled. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_PERFHPR1" acronym="DDRCTL_PERFHPR1" offset="0x25C" width="32" description="High Priority Read CAM Register 1">
    <bitfield id="HPR_XACT_RUN_LENGTH" width="8" begin="31" end="24" resetval="0xF" description="Number of transactions that are serviced once the HPR queue goes critical is the smaller of: - (a) This number - (b) Number of transactions available.Unit: Transaction. FOR PERFORMANCE ONLY. Programming Mode: Quasi-dynamic Group 3" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="8" begin="23" end="16" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="HPR_MAX_STARVE" width="16" begin="15" end="0" resetval="0x1" description="Number of DFI clocks that the HPR queue can be starved before it goes critical.The minimum valid functional value for this register is 0x1. Programming it to 0x0 will disable the starvation functionality during normal operation, this function should not be disabled as it will cause excessive latencies. FOR PERFORMANCE ONLY. Programming Mode: Quasi-dynamic Group 3" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_PERFLPR1" acronym="DDRCTL_PERFLPR1" offset="0x264" width="32" description="Low Priority Read CAM Register 1">
    <bitfield id="LPR_XACT_RUN_LENGTH" width="8" begin="31" end="24" resetval="0xF" description="Number of transactions that are serviced once the LPR queue goes critical is the smaller of: - (a) This number - (b) Number of transactions available.Unit: Transaction. FOR PERFORMANCE ONLY. Programming Mode: Quasi-dynamic Group 3" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="8" begin="23" end="16" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="LPR_MAX_STARVE" width="16" begin="15" end="0" resetval="0x7F" description="Number of DFI clocks that the LPR queue can be starved before it goes critical.The minimum valid functional value for this register is 0x1. Programming it to 0x0 will disable the starvation functionality during normal operation, this function should not be disabled as it will cause excessive latencies. FOR PERFORMANCE ONLY. Programming Mode: Quasi-dynamic Group 3" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_PERFWR1" acronym="DDRCTL_PERFWR1" offset="0x26C" width="32" description="Write CAM Register 1">
    <bitfield id="W_XACT_RUN_LENGTH" width="8" begin="31" end="24" resetval="0xF" description="Number of transactions that are serviced once the WR queue goes critical is the smaller of: - (a) This number - (b) Number of transactions available.Unit: Transaction. FOR PERFORMANCE ONLY. Programming Mode: Quasi-dynamic Group 3" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="8" begin="23" end="16" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="W_MAX_STARVE" width="16" begin="15" end="0" resetval="0x7F" description="Number of DFI clocks that the WR queue can be starved before it goes critical.The minimum valid functional value for this register is 0x1. Programming it to 0x0 will disable the starvation functionality during normal operation, this function should not be disabled as it will cause excessive latencies. FOR PERFORMANCE ONLY. Programming Mode: Quasi-dynamic Group 3" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DQMAP0" acronym="DDRCTL_DQMAP0" offset="0x280" width="32" description="DQ Map Register 0">
    <bitfield id="DQ_NIBBLE_MAP_12_15" width="8" begin="31" end="24" resetval="0x0" description="DQ nibble map for DQ bits[12-15] Present only in designs configured to support DDR4. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="DQ_NIBBLE_MAP_8_11" width="8" begin="23" end="16" resetval="0x0" description="DQ nibble map for DQ bits[8-11] Present only in designs configured to support DDR4. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="DQ_NIBBLE_MAP_4_7" width="8" begin="15" end="8" resetval="0x0" description="DQ nibble map for DQ bits[4-7] Present only in designs configured to support DDR4. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="DQ_NIBBLE_MAP_0_3" width="8" begin="7" end="0" resetval="0x0" description="DQ nibble map for DQ bits[0-3] Present only in designs configured to support DDR4. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DQMAP1" acronym="DDRCTL_DQMAP1" offset="0x284" width="32" description="DQ Map Register 1">
    <bitfield id="DQ_NIBBLE_MAP_28_31" width="8" begin="31" end="24" resetval="0x0" description="DQ nibble map for DQ bits[28-31] Present only in designs configured to support DDR4. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="DQ_NIBBLE_MAP_24_27" width="8" begin="23" end="16" resetval="0x0" description="DQ nibble map for DQ bits[24-27] Present only in designs configured to support DDR4. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="DQ_NIBBLE_MAP_20_23" width="8" begin="15" end="8" resetval="0x0" description="DQ nibble map for DQ bits[20-23] Present only in designs configured to support DDR4. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="DQ_NIBBLE_MAP_16_19" width="8" begin="7" end="0" resetval="0x0" description="DQ nibble map for DQ bits[16-19] Present only in designs configured to support DDR4. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DQMAP4" acronym="DDRCTL_DQMAP4" offset="0x290" width="32" description="DQ Map Register 4">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DQ_NIBBLE_MAP_CB_4_7" width="8" begin="15" end="8" resetval="0x0" description="DQ nibble map for DIMM ECC check bits[4-7] Present only in designs configured to support DDR4. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="DQ_NIBBLE_MAP_CB_0_3" width="8" begin="7" end="0" resetval="0x0" description="DQ nibble map for DIMM ECC check bits[0-3] Present only in designs configured to support DDR4. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DQMAP5" acronym="DDRCTL_DQMAP5" offset="0x294" width="32" description="DQ Map Register 5">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DIS_DQ_RANK_SWAP" width="1" begin="0" end="0" resetval="0x0" description="All even ranks have the same DQ mapping controled by DQMAP0-4 register as rank 0. This register provides DQ swap function for all odd ranks to support CRC feature. rank based DQ swapping is: swap bit 0 with 1, swap bit 2 with 3, swap bit 4 with 5 and swap bit 6 with 7. 1: Disable rank based DQ swapping 0: Enable rank based DQ swapping Present only in designs configured to support DDR4. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DBG0" acronym="DDRCTL_DBG0" offset="0x300" width="32" description="Debug Register 0">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DIS_COLLISION_PAGE_OPT" width="1" begin="4" end="4" resetval="0x0" description="When this is set to '0', auto-precharge is disabled for the flushed command in a collision case.Collision cases are write followed by read to same address, read followed by write to same address, or write followed by write to same address with DDRCTL_DBG0.dis_wc bit = 1 (where same address comparisons exclude the two address bits representing critical word). FOR DEBUG ONLY. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="3" end="1" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DIS_WC" width="1" begin="0" end="0" resetval="0x0" description="When 1, disable write combine.FOR DEBUG ONLY Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DBG1" acronym="DDRCTL_DBG1" offset="0x304" width="32" description="Debug Register 1">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DIS_HIF" width="1" begin="1" end="1" resetval="0x0" description="When 1, uMCTL2 asserts the HIF command signal hif_cmd_stall.uMCTL2 will ignore the hif_cmd_valid and all other associated request signals. This bit is intended to be switched on-the-fly. Programming Mode: Dynamic" range="" rwaccess="RW"/>
    <bitfield id="DIS_DQ" width="1" begin="0" end="0" resetval="0x0" description="When 1, uMCTL2 will not de-queue any transactions from the CAM.Bypass is also disabled. All transactions are queued in the CAM. No reads or writes are issued to SDRAM as long as this is asserted. This bit may be used to prevent reads or writes being issued by the uMCTL2, which makes it safe to modify certain register fields associated with reads and writes. After setting this bit, it is strongly recommended to poll DDRCTL_DBGCAM.wr_data_pipeline_empty and DDRCTL_DBGCAM.rd_data_pipeline_empty, before making changes to any registers which affect reads and writes. This will ensure that the relevant logic in the DDRC is idle. This bit is intended to be switched on-the-fly. Programming Mode: Dynamic" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DBGCAM" acronym="DDRCTL_DBGCAM" offset="0x308" width="32" description="CAM Debug Register">
    <bitfield id="RESERVED" width="2" begin="31" end="30" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="WR_DATA_PIPELINE_EMPTY" width="1" begin="29" end="29" resetval="0x0" description="This bit indicates that the write data pipeline on the DFI interface is empty.This register is intended to be polled at least twice after setting DDRCTL_DBG1.dis_dq, to ensure that all remaining commands/data have completed. Programming Mode: Dynamic" range="" rwaccess="R"/>
    <bitfield id="RD_DATA_PIPELINE_EMPTY" width="1" begin="28" end="28" resetval="0x0" description="This bit indicates that the read data pipeline on the DFI interface is empty.This register is intended to be polled at least twice after setting DDRCTL_DBG1.dis_dq, to ensure that all remaining commands/data have completed. Programming Mode: Dynamic" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="27" end="27" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="DBG_WR_Q_EMPTY" width="1" begin="26" end="26" resetval="0x0" description="When 1, all the Write command queues and Write data buffers inside DDRC are empty.This register is to be used for debug purpose. An example use-case scenario: When Controller enters Self-Refresh using the Low-Power entry sequence, Controller is expected to have executed all the commands in its queues and the write and read data drained. Hence this register should be 1 at that time. FOR DEBUG ONLY Programming Mode: Dynamic" range="" rwaccess="R"/>
    <bitfield id="DBG_RD_Q_EMPTY" width="1" begin="25" end="25" resetval="0x0" description="When 1, all the Read command queues and Read data buffers inside DDRC are empty.This register is to be used for debug purpose. An example use-case scenario: When Controller enters Self-Refresh using the Low-Power entry sequence, Controller is expected to have executed all the commands in its queues and the write and read data drained. Hence this register should be 1 at that time. FOR DEBUG ONLY Programming Mode: Dynamic" range="" rwaccess="R"/>
    <bitfield id="DBG_STALL" width="1" begin="24" end="24" resetval="0x0" description="Stall FOR DEBUG ONLY Programming Mode: Dynamic" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="2" begin="23" end="22" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="DBG_W_Q_DEPTH" width="6" begin="21" end="16" resetval="0x0" description="Write queue depth The last entry of WR queue is reserved for ECC SCRUB operation.This entry is not included in the calculation of the queue depth. FOR DEBUG ONLY Programming Mode: Dynamic" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="2" begin="15" end="14" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="DBG_LPR_Q_DEPTH" width="6" begin="13" end="8" resetval="0x0" description="Low priority read queue depth The last entry of Lpr queue is reserved for ECC SCRUB operation.This entry is not included in the calculation of the queue depth. FOR DEBUG ONLY Programming Mode: Dynamic" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="DBG_HPR_Q_DEPTH" width="6" begin="5" end="0" resetval="0x0" description="High priority read queue depth FOR DEBUG ONLY Programming Mode: Dynamic" range="" rwaccess="R"/>
  </register>
  <register id="DDRCTL_DBGCMD" acronym="DDRCTL_DBGCMD" offset="0x30C" width="32" description="Command Debug Register">
    <bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0xX" description="" range="" rwaccess="W"/>
    <bitfield id="CTRLUPD" width="1" begin="5" end="5" resetval="0x0" description="Setting this register bit to 1 indicates to the uMCTL2 to issue a dfi_ctrlupd_req to the PHY.When this request is stored in the uMCTL2, the bit is automatically cleared. This operation must only be performed when DDRCTL_DFIUPD0.dis_auto_ctrlupd=1. Programming Mode: Dynamic" range="" rwaccess="W1S"/>
    <bitfield id="ZQ_CALIB_SHORT" width="1" begin="4" end="4" resetval="0x0" description="Setting this register bit to 1 indicates to the uMCTL2 to issue a ZQCS (ZQ calibration short)/MPC(ZQ calibration) command to the SDRAM.When this request is stored in the uMCTL2, the bit is automatically cleared. This operation can be performed only when DDRCTL_ZQCTL0.dis_auto_zq=1. It is recommended NOT to set this register bit if in Init operating mode. This register bit is ignored when in Self-Refresh(except LPDDR4) and SR-Powerdown(LPDDR4) and Deep power-down operating modes and Maximum Power Saving Mode. Programming Mode: Dynamic" range="" rwaccess="W1S"/>
    <bitfield id="RESERVED" width="2" begin="3" end="2" resetval="0xX" description="" range="" rwaccess="W"/>
    <bitfield id="RANK1_REFRESH" width="1" begin="1" end="1" resetval="0x0" description="Setting this register bit to 1 indicates to the uMCTL2 to issue a refresh to rank 1.Writing to this bit causes DDRCTL_DBGSTAT.rank1_refresh_busy to be set. When DDRCTL_DBGSTAT.rank1_refresh_busy is cleared, the command has been stored in uMCTL2. For 3DS configuration, refresh is sent to rank index 1. This operation can be performed only when DDRCTL_RFSHCTL3.dis_auto_refresh=1. It is recommended NOT to set this register bit if in Init or Deep power-down operating modes or Maximum Power Saving Mode. Programming Mode: Dynamic" range="" rwaccess="W1S"/>
    <bitfield id="RANK0_REFRESH" width="1" begin="0" end="0" resetval="0x0" description="Setting this register bit to 1 indicates to the uMCTL2 to issue a refresh to rank 0.Writing to this bit causes DDRCTL_DBGSTAT.rank0_refresh_busy to be set. When DDRCTL_DBGSTAT.rank0_refresh_busy is cleared, the command has been stored in uMCTL2. For 3DS configuration, refresh is sent to rank index 0. This operation can be performed only when DDRCTL_RFSHCTL3.dis_auto_refresh=1. It is recommended NOT to set this register bit if in Init or Deep power-down operating modes or Maximum Power Saving Mode. Programming Mode: Dynamic" range="" rwaccess="W1S"/>
  </register>
  <register id="DDRCTL_DBGSTAT" acronym="DDRCTL_DBGSTAT" offset="0x310" width="32" description="Status Debug Register">
    <bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="CTRLUPD_BUSY" width="1" begin="5" end="5" resetval="0x0" description="SoC core may initiate a ctrlupd operation only if this signal is low.This signal goes high in the clock after the uMCTL2 accepts the ctrlupd request. It goes low when the ctrlupd operation is initiated in the uMCTL2. It is recommended not to perform ctrlupd operations when this signal is high. - 0 - Indicates that the SoC core can initiate a ctrlupd operation - 1 - Indicates that ctrlupd operation has not been initiated yet in the uMCTL2 Programming Mode: Dynamic" range="" rwaccess="R"/>
    <bitfield id="ZQ_CALIB_SHORT_BUSY" width="1" begin="4" end="4" resetval="0x0" description="SoC core may initiate a ZQCS (ZQ calibration short) operation only if this signal is low.This signal goes high in the clock after the uMCTL2 accepts the ZQCS request. It goes low when the ZQCS operation is initiated in the uMCTL2. It is recommended not to perform ZQCS operations when this signal is high. - 0 - Indicates that the SoC core can initiate a ZQCS operation - 1 - Indicates that ZQCS operation has not been initiated yet in the uMCTL2 Programming Mode: Dynamic" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="2" begin="3" end="2" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="RANK1_REFRESH_BUSY" width="1" begin="1" end="1" resetval="0x0" description="SoC core may initiate a rank1_refresh operation (refresh operation to rank 1) only if this signal is low.This signal goes high in the clock after DDRCTL_DBGCMD.rank1_refresh is set to one. It goes low when the rank1_refresh operation is stored in the uMCTL2. It is recommended not to perform rank1_refresh operations when this signal is high. - 0 - Indicates that the SoC core can initiate a rank1_refresh operation - 1 - Indicates that rank1_refresh operation has not been stored yet in the uMCTL2 Programming Mode: Dynamic" range="" rwaccess="R"/>
    <bitfield id="RANK0_REFRESH_BUSY" width="1" begin="0" end="0" resetval="0x0" description="SoC core may initiate a rank0_refresh operation (refresh operation to rank 0) only if this signal is low.This signal goes high in the clock after DDRCTL_DBGCMD.rank0_refresh is set to one. It goes low when the rank0_refresh operation is stored in the uMCTL2. It is recommended not to perform rank0_refresh operations when this signal is high. - 0 - Indicates that the SoC core can initiate a rank0_refresh operation - 1 - Indicates that rank0_refresh operation has not been stored yet in the uMCTL2 Programming Mode: Dynamic" range="" rwaccess="R"/>
  </register>
  <register id="DDRCTL_SWCTL" acronym="DDRCTL_SWCTL" offset="0x320" width="32" description="Software Register Programming Control Enable">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="SW_DONE" width="1" begin="0" end="0" resetval="0x1" description="Enable quasi-dynamic register programming outside reset.Program register to 0 to enable quasi-dynamic programming. Set back register to 1 once programming is done. Programming Mode: Dynamic" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_SWSTAT" acronym="DDRCTL_SWSTAT" offset="0x324" width="32" description="Software Register Programming Control Status">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="SW_DONE_ACK" width="1" begin="0" end="0" resetval="0x1" description="Register programming done.This register is the echo of DDRCTL_SWCTL.sw_done. Wait for sw_done value 1 to propagate to sw_done_ack at the end of the programming sequence to ensure that the correct registers values are propagated to the destination clock domains. Programming Mode: Static" range="" rwaccess="R"/>
  </register>
  <register id="DDRCTL_ADVECCINDEX" acronym="DDRCTL_ADVECCINDEX" offset="0x374" width="32" description="Advanced ECC Index Register">
    <bitfield id="RESERVED" width="23" begin="31" end="9" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ECC_POISON_BEATS_SEL" width="4" begin="8" end="5" resetval="0x0" description="Selector of which DRAM beat's poison pattern will be set byDDRCTL_ECCPOISONPAT0/1/2 registers. For frequency ratio 1:1 mode, 2 DRAM beats can be poisoned. Set ecc_poison_beats_sel to 0 and given DDRCTL_ECCPOISONPAT0/1/2 to set 1st beat's poison pattern set ecc_poison_beats_sel to 1 and given DDRCTL_ECCPOISONPAT0/1/2 to set 2nd beat's poison pattern. For frequency ratio 1:2 mode, 4 DRAM beats can be poisoned. Set ecc_poison_beats_sel from 0~3 to set 1st to 4th beat's poison pattern. The other value is reserved. Programming Mode: Quasi-dynamic Group 1" range="" rwaccess="RW"/>
    <bitfield id="ECC_ERR_SYMBOL_SEL" width="2" begin="4" end="3" resetval="0x0" description="Selector of which error symbol's status output to ADVECCSTAT.advecc_err_symbol_pos and advecc_err_symbol_bits.The default is first error symbol. The value should be less than ADVECCSTAT.advecc_num_err_symbol. Programming Mode: Quasi-dynamic Group 1" range="" rwaccess="RW"/>
    <bitfield id="ECC_SYNDROME_SEL" width="3" begin="2" end="0" resetval="0x0" description="Selector of which DRAM beat data output toDDRCTL_ECCCSYN0/1/2 as well as ECCUCSYN. In Advanced ECC, the syndrome consist of number of DRAM beats. This register select which beats of data will be output to DDRCTL_ECCCSYN0/1/2 and ECCUCSYN0/1/2 registers. Programming Mode: Quasi-dynamic Group 1" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ECCPOISONPAT0" acronym="DDRCTL_ECCPOISONPAT0" offset="0x37C" width="32" description="ECC Poison Pattern 0 Register">
    <bitfield id="ECC_POISON_DATA_31_0" width="32" begin="31" end="0" resetval="0x0" description="Poison pattern for DRAM data[31:0].Only bit is set to 1 indicate poison (invert) corresponding DRAM bit. It is indirect register. Selector is DDRCTL_ADVECCINDEX.ecc_poison_beats_sel. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ECCPOISONPAT2" acronym="DDRCTL_ECCPOISONPAT2" offset="0x384" width="32" description="ECC Poison Pattern 2 Register">
    <bitfield id="RESERVED" width="24" begin="31" end="8" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ECC_POISON_DATA_71_64" width="8" begin="7" end="0" resetval="0x0" description="Poison pattern for DRAM data[71:64]. Only bit is set to 1 indicate poison (invert) corresponding DRAM bit. It is indirect register. Selector is DDRCTL_ADVECCINDEX.ecc_poison_beats_sel. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_CAPARPOISONCTL" acronym="DDRCTL_CAPARPOISONCTL" offset="0x3A0" width="32" description="CA parity poison contrl Register">
    <bitfield id="RESERVED" width="22" begin="31" end="10" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CAPAR_POISON_CMDTYPE" width="2" begin="9" end="8" resetval="0x0" description="Command type to be poisoned.- 0 - Write or Read command - 1 - Write command - 2 - Read command - 3 - Reserved Programming Mode: Dynamic" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="7" begin="7" end="1" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="CAPAR_POISON_INJECT_EN" width="1" begin="0" end="0" resetval="0x0" description="Setting this register bit to 1 triggers the CA parity poisoning.Once parity is poisoned to a command which is specified by DDRCTL_CAPARPOISONCTL.capar_poison_cmd_type, the CA parity poisoning is completed automatically and DDRCTL_CAPARPOISONSTAT.capar_poison_complete becomes 1. Please make sure that DDRCTL_CAPARPOISONSTAT.capar_poison_complete==0 before writing this register to 1. This feature only supports DDR4 SDRAM. Programming Mode: Dynamic" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_CAPARPOISONSTAT" acronym="DDRCTL_CAPARPOISONSTAT" offset="0x3A4" width="32" description="CA parity poison status Register">
    <bitfield id="RESERVED" width="31" begin="31" end="1" resetval="0xX" description="" range="" rwaccess="R"/>
    <bitfield id="CAPAR_POISON_COMPLETE" width="1" begin="0" end="0" resetval="0x0" description="Indicates CA parity poisoning operation is done.- 0 - CA parity poisoning is not completed - 1 - CA parity poisoning is completed Programming Mode: Dynamic" range="" rwaccess="R"/>
  </register>
  <register id="DDRCTL_DERATEEN_SHDW" acronym="DDRCTL_DERATEEN_SHDW" offset="0x2020" width="32" description="[FREQ1] Temperature Derate Enable Register">
    <bitfield id="RESERVED" width="21" begin="31" end="11" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RC_DERATE_VALUE" width="3" begin="10" end="8" resetval="0x0" description="Derate value of tRC for LPDDR4 - 0 - Derating uses +1. - 1 - Derating uses +2. - 2 - Derating uses +3. - 3 - Derating uses +4. Present only in designs configured to support LPDDR4. The required number of cycles for derating can be determined by dividing 3.75ns by the core_ddrc_core_clk period, and rounding up the next integer. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="DERATE_BYTE" width="4" begin="7" end="4" resetval="0x0" description="Derate byte Present only in designs configured to support LPDDR2/LPDDR3/LPDDR4 Indicates which byte of the MRR data is used for derating.The maximum valid value depends on MEMC_DRAM_TOTAL_DATA_WIDTH. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DERATE_VALUE" width="2" begin="2" end="1" resetval="0x0" description="Derate value -0 - Derating uses +1. - 1 - Derating uses +2. Present only in designs configured to support LPDDR2/LPDDR3/LPDDR4 Set to 0 for all LPDDR2 speed grades as derating value of +1.875 ns is less than a core_ddrc_core_clk period. For LPDDR3/4, if the period of core_ddrc_core_clk is less than 1.875ns, this register field should be set to 1 otherwise it should be set to 0. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="DERATE_ENABLE" width="1" begin="0" end="0" resetval="0x0" description="Enables derating -0 - Timing parameter derating is disabled - 1 - Timing parameter derating is enabled using MR4 read value. Present only in designs configured to support LPDDR2/LPDDR3/LPDDR4 This field must be set to '0' for non-LPDDR2/LPDDR3/LPDDR4 mode. Programming Mode: Dynamic" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DERATEINT_SHDW" acronym="DDRCTL_DERATEINT_SHDW" offset="0x2024" width="32" description="[FREQ1] Temperature Derate Interval Register">
    <bitfield id="MR4_READ_INTERVAL" width="32" begin="31" end="0" resetval="0x00800000" description="Interval between two MR4 reads, used to derate the timing parameters.Present only in designs configured to support LPDDR2/LPDDR3/LPDDR4. This register must not be set to zero. Unit: DFI clock cycle. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_RFSHCTL0_SHDW" acronym="DDRCTL_RFSHCTL0_SHDW" offset="0x2050" width="32" description="[FREQ1] Refresh Control Register 0">
    <bitfield id="RESERVED" width="8" begin="31" end="24" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="REFRESH_MARGIN" width="4" begin="23" end="20" resetval="0x2" description="Threshold value in number of DFI clock cycles before the critical refresh or page timer expires.A critical refresh is to be issued before this threshold is reached. It is recommended that this not be changed from the default value, currently shown as 0x2. It must always be less than internally used t_rfc_nom_x32. Note that, in LPDDR2/LPDDR3/LPDDR4, internally used t_rfc_nom_x32 may be equal to DDRCTL_RFSHTMG.t_rfc_nom_x32&amp;amp;gt;&amp;amp;gt;2 if derating is enabled (DDRCTL_DERATEEN.derate_enable=1). Otherwise, internally used t_rfc_nom_x32 will be equal to DDRCTL_RFSHTMG.t_rfc_nom_x32. Unit: Multiples of 32 DFI clocks. Programming Mode: Dynamic - Refresh Related" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="19" end="17" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="REFRESH_TO_X32" width="5" begin="16" end="12" resetval="0x10" description="If the refresh timer (tRFCnom, also known as tREFI) has expired at least once, but it has not expired (DDRCTL_RFSHCTL0.refresh_burst+1) times yet, then a speculative refresh may be performed. A speculative refresh is a refresh performed at a time when refresh would be useful, but before it is absolutely required. When the SDRAM bus is idle for a period of time determined by this DDRCTL_RFSHCTL0.refresh_to_x32 and the refresh timer has expired at least once since the last refresh, then a speculative refresh is performed. Speculative refreshes continues successively until there are no refreshes pending or until new reads or writes are issued to the uMCTL2. FOR PERFORMANCE ONLY. Unit: Multiples of 32 DFI clocks. Programming Mode: Dynamic - Refresh Related" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="11" end="9" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="REFRESH_BURST" width="5" begin="8" end="4" resetval="0x0" description="The programmed value + 1 is the number of refresh timeouts that is allowed to accumulate before traffic is blocked and the refreshes are forced to execute.Closing pages to perform a refresh is a one-time penalty that must be paid for each group of refreshes. Therefore, performing refreshes in a burst reduces the per-refresh penalty of these page closings. Higher numbers for RFSHCTL.refresh_burst slightly increases utilization lower numbers decreases the worst-case latency associated with refreshes. - 0 - single refresh - 1 - burst-of-2 refresh - 7 - burst-of-8 refresh For information on burst refresh feature refer to section 3.9 of DDR2 JEDEC specification - JESD79-2F.pdf. For DDR2/3, the refresh is always per-rank and not per-bank. The rank refresh can be accumulated over 8*tREFI cycles using the burst refresh feature. In DDR4 mode, according to Fine Granularity feature, 8 refreshes can be postponed in 1X mode, 16 refreshes in 2X mode and 32 refreshes in 4X mode. If using PHY-initiated updates, care must be taken in the setting of DDRCTL_RFSHCTL0.refresh_burst, to ensure that tRFCmax is not violated due to a PHY-initiated update occurring shortly before a refresh burst was due. In this situation, the refresh burst will be delayed until the PHY-initiated update is complete. Programming Mode: Dynamic - Refresh Related" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="3" end="3" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="PER_BANK_REFRESH" width="1" begin="2" end="2" resetval="0x0" description="-1 - Per bank refresh - 0 - All bank refresh. Per bank refresh allows traffic to flow to other banks. Per bank refresh is not supported by all LPDDR2 devices but should be supported by all LPDDR3/LPDDR4 devices. Present only in designs configured to support LPDDR2/LPDDR3/LPDDR4 Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="1" end="0" resetval="0xX" description="" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_RFSHTMG_SHDW" acronym="DDRCTL_RFSHTMG_SHDW" offset="0x2064" width="32" description="[FREQ1] Refresh Timing Register">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_RFC_NOM_X32" width="12" begin="27" end="16" resetval="0x62" description="tREFI: Average time interval between refreshes per rank (Specification: 7.8us for DDR2, DDR3 and DDR4.See JEDEC specification for mDDR, LPDDR2, LPDDR3 and LPDDR4). For LPDDR2/LPDDR3/LPDDR4: - if using all-bank refreshes (DDRCTL_RFSHCTL0.per_bank_refresh = 0), this register should be set to tREFIab - if using per-bank refreshes (DDRCTL_RFSHCTL0.per_bank_refresh = 1), this register should be set to tREFIpb When the controller is operating in 1:2 frequency ratio mode, program this to (tREFI/2), no rounding up. In DDR4 mode, tREFI value is different depending on the refresh mode. The user should program the appropriate value from the spec based on the value programmed in the refresh mode register. Note that DDRCTL_RFSHTMG.t_rfc_nom_x32 * 32 must be greater than DDRCTL_RFSHTMG.t_rfc_min, and DDRCTL_RFSHTMG.t_rfc_nom_x32 must be greater than 0x1. - Non-DDR4 or DDR4 Fixed 1x mode: DDRCTL_RFSHTMG.t_rfc_nom_x32 must be less than or equal to 0xFFE. - DDR4 Fixed 2x mode: DDRCTL_RFSHTMG.t_rfc_nom_x32 must be less than or equal to 0x7FF. - DDR4 Fixed 4x mode: DDRCTL_RFSHTMG.t_rfc_nom_x32 must be less than or equal to 0x3FF. Unit: Multiples of 32 clocks. Programming Mode: Dynamic - Refresh Related" range="" rwaccess="RW"/>
    <bitfield id="LPDDR3_TREFBW_EN" width="1" begin="15" end="15" resetval="0x0" description="Used only when LPDDR3 memory type is connected.Should only be changed when uMCTL2 is in reset. Specifies whether to use the tREFBW parameter (required by some LPDDR3 devices which comply with earlier versions of the LPDDR3 JEDEC specification) or not: - 0 - tREFBW parameter not used - 1 - tREFBW parameter used Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="5" begin="14" end="10" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_RFC_MIN" width="10" begin="9" end="0" resetval="0x8C" description="tRFC (min): Minimum time from refresh to refresh or activate.When the controller is operating in 1:1 mode, t_rfc_min should be set to RoundUp(tRFCmin/tCK). When the controller is operating in 1:2 mode, t_rfc_min should be set to RoundUp(RoundUp(tRFCmin/tCK)/2). In LPDDR2/LPDDR3/LPDDR4 mode: - if using all-bank refreshes, the tRFCmin value in the above equations is equal to tRFCab - if using per-bank refreshes, the tRFCmin value in the above equations is equal to tRFCpb In DDR4 mode, the tRFCmin value in the above equations is different depending on the refresh mode (fixed 1X,2X,4X) and the device density. The user should program the appropriate value from the spec based on the 'refresh_mode' and the device density that is used. Unit: Clocks. Programming Mode: Dynamic - Refresh Related" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_INIT3_SHDW" acronym="DDRCTL_INIT3_SHDW" offset="0x20DC" width="32" description="[FREQ1] SDRAM Initialization Register 3">
    <bitfield id="MR" width="16" begin="31" end="16" resetval="0x0" description="DDR2: Value to write to MR register. Bit 8 is for DLL and the setting here is ignored. The uMCTL2 sets this bit appropriately. DDR3/DDR4: Value loaded into MR0 register. mDDR: Value to write to MR register. LPDDR2/LPDDR3/LPDDR4 - Value to write to MR1 register Programming Mode: Quasi-dynamic Group 1 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="EMR" width="16" begin="15" end="0" resetval="0x510" description="DDR2: Value to write to EMR register. Bits 9:7 are for OCD and the setting in this register is ignored. The uMCTL2 sets those bits appropriately. DDR3/DDR4: Value to write to MR1 register Set bit 7 to 0. If PHY-evaluation mode training is enabled, this bit is set appropriately by the uMCTL2 during write leveling. mDDR: Value to write to EMR register. LPDDR2/LPDDR3/LPDDR4 - Value to write to MR2 register Programming Mode: Quasi-dynamic Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_INIT4_SHDW" acronym="DDRCTL_INIT4_SHDW" offset="0x20E0" width="32" description="[FREQ1] SDRAM Initialization Register 4">
    <bitfield id="EMR2" width="16" begin="31" end="16" resetval="0x0" description="DDR2: Value to write to EMR2 register. DDR3/DDR4: Value to write to MR2 register LPDDR2/LPDDR3/LPDDR4: Value to write to MR3 register mDDR: Unused Programming Mode: Quasi-dynamic Group 4" range="" rwaccess="RW"/>
    <bitfield id="EMR3" width="16" begin="15" end="0" resetval="0x0" description="DDR2: Value to write to EMR3 register. DDR3/DDR4: Value to write to MR3 register mDDR/LPDDR2/LPDDR3: Unused LPDDR4: Value to write to MR13 register Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_INIT6_SHDW" acronym="DDRCTL_INIT6_SHDW" offset="0x20E8" width="32" description="[FREQ1] SDRAM Initialization Register 6">
    <bitfield id="MR4" width="16" begin="31" end="16" resetval="0x0" description="DDR4- Value to be loaded into SDRAM MR4 registers. LPDDR4- Value to be loaded into SDRAM MR11 registers. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="MR5" width="16" begin="15" end="0" resetval="0x0" description="DDR4- Value to be loaded into SDRAM MR5 registers. LPDDR4- Value to be loaded into SDRAM MR12 registers. Programming Mode: Quasi-dynamic Group 1 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_INIT7_SHDW" acronym="DDRCTL_INIT7_SHDW" offset="0x20EC" width="32" description="[FREQ1] SDRAM Initialization Register 7">
    <bitfield id="MR22" width="16" begin="31" end="16" resetval="0x0" description="LPDDR4- Value to be loaded into SDRAM MR22 registers. Used in LPDDR4 designs only. Programming Mode: Quasi-dynamic Group 4" range="" rwaccess="RW"/>
    <bitfield id="MR6" width="16" begin="15" end="0" resetval="0x0" description="DDR4- Value to be loaded into SDRAM MR6 registers. LPDDR4- Value to be loaded into SDRAM MR14 registers. Programming Mode: Quasi-dynamic Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG0_SHDW" acronym="DDRCTL_DRAMTMG0_SHDW" offset="0x2100" width="32" description="[FREQ1] SDRAM Timing Register 0">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="WR2PRE" width="7" begin="30" end="24" resetval="0xF" description="Minimum time between write and precharge to same bank.Unit: Clocks Specifications: WL + BL/2 + tWR = approximately 8 cycles + 15 ns = 14 clocks MHz and less for lower frequencies where: - WL = write latency - BL = burst length. This must match the value programmed in the BL bit of the mode register to the SDRAM. BST (burst terminate) is not supported at present. - tWR = Write recovery time. This comes directly from the SDRAM specification. Add one extra cycle for LPDDR2/LPDDR3/LPDDR4 for this parameter. When the controller is operating in 1:2 frequency ratio mode, 1T mode, divide the above value by 2. No rounding up. When the controller is operating in 1:2 frequency ratio mode, 2T mode or LPDDR4 mode, divide the above value by 2 and round it up to the next integer value. Note that, depending on the PHY, if using LRDIMM, it may be necessary to adjust the value of this parameter to compensate for the extra cycle of latency through the LRDIMM. Programming Mode: Quasi-dynamic Group 1 and Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="23" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_FAW" width="6" begin="21" end="16" resetval="0x10" description="tFAW Valid only when 8 or more banks(or banks x bank groups) are present.In 8-bank design, at most 4 banks must be activated in a rolling window of tFAW cycles. When the controller is operating in 1:2 frequency ratio mode, program this to (tFAW/2) and round up to next integer value. In a 4-bank design, set this register to 0x1 independent of the 1:1/1:2 frequency mode. Unit: Clocks Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="15" end="15" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_RAS_MAX" width="7" begin="14" end="8" resetval="0x1B" description="tRAS(max): Maximum time between activate and precharge to same bank.This is the maximum time that a page can be kept open Minimum value of this register is 1. Zero is invalid. When the controller is operating in 1:2 frequency ratio mode, program this to (tRAS(max)-1)/2. No rounding up. Unit: Multiples of 1024 clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_RAS_MIN" width="6" begin="5" end="0" resetval="0xF" description="tRAS(min): Minimum time between activate and precharge to the same bank.When the controller is operating in 1:2 frequency mode, 1T mode, program this to tRAS(min)/2. No rounding up. When the controller is operating in 1:2 frequency ratio mode, 2T mode or LPDDR4 mode, program this to (tRAS(min)/2) and round it up to the next integer value. Unit: Clocks Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG1_SHDW" acronym="DDRCTL_DRAMTMG1_SHDW" offset="0x2104" width="32" description="[FREQ1] SDRAM Timing Register 1">
    <bitfield id="RESERVED" width="11" begin="31" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_XP" width="5" begin="20" end="16" resetval="0x8" description="tXP: Minimum time after power-down exit to any operation.For DDR3, this should be programmed to tXPDLL if slow powerdown exit is selected in MR0[12]. If C/A parity for DDR4 is used, set to (tXP+PL) instead. If LPDDR4 is selected and its spec has tCKELPD parameter, set to the larger of tXP and tCKELPD instead. When the controller is operating in 1:2 frequency ratio mode, program this to (tXP/2) and round it up to the next integer value. Units: Clocks Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="15" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RD2PRE" width="6" begin="13" end="8" resetval="0x4" description="tRTP: Minimum time from read to precharge of same bank.- DDR2: tAL + BL/2 + max(tRTP, 2) - 2 - DDR3: tAL + max (tRTP, 4) - DDR4: Max of following two equations: tAL + max (tRTP, 4) or, RL + BL/2 - tRP (*). - mDDR: BL/2 - LPDDR2: Depends on if it's LPDDR2-S2 or LPDDR2-S4: LPDDR2-S2: BL/2 + tRTP - 1. LPDDR2-S4: BL/2 + max(tRTP,2) - 2. - LPDDR3: BL/2 + max(tRTP,4) - 4 - LPDDR4: BL/2 + max(tRTP,8) - 8 (*) When both DDR4 SDRAM and ST-MRAM are used simultaneously, use SDRAM's tRP value for calculation. When the controller is operating in 1:2 mode, 1T mode, divide the above value by 2. No rounding up. When the controller is operating in 1:2 mode, 2T mode or LPDDR4 mode, divide the above value by 2 and round it up to the next integer value. Unit: Clocks. Programming Mode: Quasi-dynamic Group 1 and Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_RC" width="7" begin="6" end="0" resetval="0x14" description="tRC: Minimum time between activates to same bank.When the controller is operating in 1:2 frequency ratio mode, program this to (tRC/2) and round up to next integer value. Unit: Clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG2_SHDW" acronym="DDRCTL_DRAMTMG2_SHDW" offset="0x2108" width="32" description="[FREQ1] SDRAM Timing Register 2">
    <bitfield id="RESERVED" width="2" begin="31" end="30" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="WRITE_LATENCY" width="6" begin="29" end="24" resetval="0x3" description="Set to WL Time from write command to write data on SDRAM interface.This must be set to WL. For mDDR, it should normally be set to 1. Note that, depending on the PHY, if using RDIMM/LRDIMM, it may be necessary to adjust the value of WL to compensate for the extra cycle of latency through the RDIMM/LRDIMM. When the controller is operating in 1:2 frequency ratio mode, divide the value calculated using the above equation by 2, and round it up to next integer. This register field is not required for DDR2 and DDR3 (except if MEMC_TRAINING is set), as the DFI read and write latencies defined in DDRCTL_DFITMG0 and DDRCTL_DFITMG1 are sufficient for those protocols Unit: clocks Programming Mode: Quasi-dynamic Group 1 and Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="23" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="READ_LATENCY" width="6" begin="21" end="16" resetval="0x5" description="Set to RL Time from read command to read data on SDRAM interface.This must be set to RL. Note that, depending on the PHY, if using RDIMM/LRDIMM, it may be necessary to adjust the value of RL to compensate for the extra cycle of latency through the RDIMM/LRDIMM. When the controller is operating in 1:2 frequency ratio mode, divide the value calculated using the above equation by 2, and round it up to next integer. This register field is not required for DDR2 and DDR3 (except if MEMC_TRAINING is set), as the DFI read and write latencies defined in DDRCTL_DFITMG0 and DDRCTL_DFITMG1 are sufficient for those protocols Unit: clocks Programming Mode: Quasi-dynamic Group 1 and Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="15" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RD2WR" width="6" begin="13" end="8" resetval="0x6" description="DDR2/3/mDDR: RL + BL/2 +2 - WL DDR4: RL + BL/2 + 1 + WR_PREAMBLE - WL LPDDR2/LPDDR3: RL + BL/2 + RU(tDQSCKmax/tCK) + 1 - WL LPDDR4(DQ ODT is Disabled): RL + BL/2 + RU(tDQSCKmax/tCK) + WR_PREAMBLE + RD_POSTAMBLE - WL LPDDR4(DQ ODT is Enabled) : RL + BL/2 + RU(tDQSCKmax/tCK) + RD_POSTAMBLE - ODTLon - RU(tODTon(min)/tCK) Minimum time from read command to write command. Include time for bus turnaround and all per-bank, per-rank, and global constraints. Unit: Clocks. Where: - WL = write latency - BL = burst length. This must match the value programmed in the BL bit of the mode register to the SDRAM - RL = read latency = CAS latency - WR_PREAMBLE = write preamble. This is unique to DDR4 and LPDDR4. - RD_POSTAMBLE = read postamble. This is unique to LPDDR4. For LPDDR2/LPDDR3/LPDDR4, if derating is enabled (DDRCTL_DERATEEN.derate_enable=1), derated tDQSCKmax should be used. When the controller is operating in 1:2 frequency ratio mode, divide the value calculated using the above equation by 2, and round it up to next integer. Note that, depending on the PHY, if using LRDIMM, it may be necessary to adjust the value of this parameter to compensate for the extra cycle of latency through the LRDIMM. Programming Mode: Quasi-dynamic Group 1 and Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="WR2RD" width="6" begin="5" end="0" resetval="0xD" description="DDR4: CWL + PL + BL/2 + tWTR_L LPDDR2/3/4: WL + BL/2 + tWTR + 1 Others: CWL + BL/2 + tWTR In DDR4, minimum time from write command to read command for same bank group. In others, minimum time from write command to read command. Includes time for bus turnaround, recovery times, and all per-bank, per-rank, and global constraints. Unit: Clocks. Where: - CWL = CAS write latency - WL = Write latency - PL = Parity latency - BL = burst length. This must match the value programmed in the BL bit of the mode register to the SDRAM - tWTR_L = internal write to read command delay for same bank group. This comes directly from the SDRAM specification. - tWTR = internal write to read command delay. This comes directly from the SDRAM specification. Add one extra cycle for LPDDR2/LPDDR3/LPDDR4 operation. When the controller is operating in 1:2 mode, divide the value calculated using the above equation by 2, and round it up to next integer. Programming Mode: Quasi-dynamic Group 1 and Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG3_SHDW" acronym="DDRCTL_DRAMTMG3_SHDW" offset="0x210C" width="32" description="[FREQ1] SDRAM Timing Register 3">
    <bitfield id="RESERVED" width="2" begin="31" end="30" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_MRW" width="10" begin="29" end="20" resetval="0x5" description="Time to wait after a mode register write or read (MRW or MRR).Present only in designs configured to support LPDDR2, LPDDR3 or LPDDR4. LPDDR2 typically requires value of 5. LPDDR3 typically requires value of 10. LPDDR4: Set this to the larger of tMRW and tMRWCKEL. For LPDDR2, this register is used for the time from a MRW/MRR to all other commands. When the controller is operating in 1:2 frequency ratio mode, program this to the above values divided by 2 and round it up to the next integer value. For LDPDR3, this register is used for the time from a MRW/MRR to a MRW/MRR. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="19" end="18" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_MRD" width="6" begin="17" end="12" resetval="0x4" description="tMRD: Cycles to wait after a mode register write or read.Depending on the connected SDRAM, tMRD represents: DDR2/mDDR: Time from MRS to any command DDR3/4: Time from MRS to MRS command LPDDR2: not used LPDDR3/4: Time from MRS to non-MRS command. When the controller is operating in 1:2 frequency ratio mode, program this to (tMRD/2) and round it up to the next integer value. If C/A parity for DDR4 is used, set to tMRD_PAR(tMOD+PL) instead. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="11" end="10" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_MOD" width="10" begin="9" end="0" resetval="0xC" description="tMOD: Parameter used only in DDR3 and DDR4.Cycles between load mode command and following non-load mode command. If C/A parity for DDR4 is used, set to tMOD_PAR(tMOD+PL) instead. If MPR writes for DDR4 are used, set to tMOD + AL (or tMPD_PAR + AL if C/A parity is also used). Set to tMOD if controller is operating in 1:1 frequency ratio mode, or tMOD/2 (rounded up to next integer) if controller is operating in 1:2 frequency ratio mode. Note that if using RDIMM/LRDIMM, depending on the PHY, it may be necessary to adjust the value of this parameter to compensate for the extra cycle of latency applied to mode register writes by the RDIMM/LRDIMM chip. Also note that if using LRDIMM, the minimum value of this register is tMRD_L2 if controller is operating in 1:1 frequency ratio mode, or tMRD_L2/2 (rounded up to next integer) if controller is operating in 1:2 frequency ratio mode. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG4_SHDW" acronym="DDRCTL_DRAMTMG4_SHDW" offset="0x2110" width="32" description="[FREQ1] SDRAM Timing Register 4">
    <bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_RCD" width="5" begin="28" end="24" resetval="0x5" description="tRCD - tAL: Minimum time from activate to read or write command to same bank.When the controller is operating in 1:2 frequency ratio mode, program this to ((tRCD - tAL)/2) and round it up to the next integer value. Minimum value allowed for this register is 1, which implies minimum (tRCD - tAL) value to be 2 when the controller is operating in 1:2 frequency ratio mode. Unit: Clocks. Programming Mode: Quasi-dynamic Group 1 and Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="23" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CCD" width="4" begin="19" end="16" resetval="0x4" description="DDR4: tCCD_L: This is the minimum time between two reads or two writes for same bank group. Others: tCCD: This is the minimum time between two reads or two writes. When the controller is operating in 1:2 frequency ratio mode, program this to (tCCD_L/2 or tCCD/2) and round it up to the next integer value. Unit: clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_RRD" width="4" begin="11" end="8" resetval="0x4" description="DDR4: tRRD_L: Minimum time between activates from bank 'a' to bank 'b' for same bank group. Others: tRRD: Minimum time between activates from bank 'a' to bank 'b' When the controller is operating in 1:2 frequency ratio mode, program this to (tRRD_L/2 or tRRD/2) and round it up to the next integer value. Unit: Clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_RP" width="5" begin="4" end="0" resetval="0x5" description="tRP: Minimum time from precharge to activate of same bank.When the controller is operating in 1:1 frequency ratio mode, t_rp should be set to RoundUp(tRP/tCK). When the controller is operating in 1:2 frequency ratio mode, t_rp should be set to RoundDown(RoundUp(tRP/tCK)/2) + 1. When the controller is operating in 1:2 frequency ratio mode in LPDDR4, t_rp should be set to RoundUp(RoundUp(tRP/tCK)/2). Unit: Clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG5_SHDW" acronym="DDRCTL_DRAMTMG5_SHDW" offset="0x2114" width="32" description="[FREQ1] SDRAM Timing Register 5">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CKSRX" width="4" begin="27" end="24" resetval="0x5" description="This is the time before Self Refresh Exit that CK is maintained as a valid clock before issuing SRX.Specifies the clock stable time before SRX. Recommended settings: - mDDR: 1 - LPDDR2: 2 - LPDDR3: 2 - LPDDR4: tCKCKEH - DDR2: 1 - DDR3: tCKSRX - DDR4: tCKSRX When the controller is operating in 1:2 frequency ratio mode, program this to recommended value divided by two and round it up to next integer. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="23" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CKSRE" width="4" begin="19" end="16" resetval="0x5" description="This is the time after Self Refresh Down Entry that CK is maintained as a valid clock.Specifies the clock disable delay after SRE. Recommended settings: - mDDR: 0 - LPDDR2: 2 - LPDDR3: 2 - LPDDR4: tCKELCK - DDR2: 1 - DDR3: max (10 ns, 5 tCK) - DDR4: max (10 ns, 5 tCK) (+ PL(parity latency)(*)) (*)Only if DDRCTL_CRCPARCTL1.caparity_disable_before_sr=0, this register should be increased by PL. When the controller is operating in 1:2 frequency ratio mode, program this to recommended value divided by two and round it up to next integer. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="15" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CKESR" width="6" begin="13" end="8" resetval="0x4" description="Minimum CKE low width for Self refresh or Self refresh power down entry to exit timing in memory clock cycles.Recommended settings: - mDDR: tRFC - LPDDR2: tCKESR - LPDDR3: tCKESR - LPDDR4: max(tCKE, tSR) - DDR2: tCKE - DDR3: tCKE + 1 - DDR4: tCKE + 1 (+ PL(parity latency)(*)) (*)Only if DDRCTL_CRCPARCTL1.caparity_disable_before_sr=0, this register should be increased by PL. When the controller is operating in 1:2 frequency ratio mode, program this to recommended value divided by two and round it up to next integer. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CKE" width="5" begin="4" end="0" resetval="0x3" description="Minimum number of cycles of CKE HIGH/LOW during power-down and self refresh.- LPDDR2/LPDDR3 mode: Set this to the larger of tCKE or tCKESR - LPDDR4 mode: Set this to the larger of tCKE or tSR. - Non-LPDDR2/non-LPDDR3/non-LPDDR4 designs: Set this to tCKE value. When the controller is operating in 1:2 frequency ratio mode, program this to (value described above)/2 and round it up to the next integer value. Unit: Clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG6_SHDW" acronym="DDRCTL_DRAMTMG6_SHDW" offset="0x2118" width="32" description="[FREQ1] SDRAM Timing Register 6">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CKDPDE" width="4" begin="27" end="24" resetval="0x2" description="This is the time after Deep Power Down Entry that CK is maintained as a valid clock.Specifies the clock disable delay after DPDE. Recommended settings: - mDDR: 0 - LPDDR2: 2 - LPDDR3: 2 When the controller is operating in 1:2 frequency ratio mode, program this to recommended value divided by two and round it up to next integer. This is only present for designs supporting mDDR or LPDDR2/LPDDR3 devices. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="23" end="20" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CKDPDX" width="4" begin="19" end="16" resetval="0x2" description="This is the time before Deep Power Down Exit that CK is maintained as a valid clock before issuing DPDX.Specifies the clock stable time before DPDX. Recommended settings: - mDDR: 1 - LPDDR2: 2 - LPDDR3: 2 When the controller is operating in 1:2 frequency ratio mode, program this to recommended value divided by two and round it up to next integer. This is only present for designs supporting mDDR or LPDDR2 devices. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="12" begin="15" end="4" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CKCSX" width="4" begin="3" end="0" resetval="0x5" description="This is the time before Clock Stop Exit that CK is maintained as a valid clock before issuing Clock Stop Exit.Specifies the clock stable time before next command after Clock Stop Exit. Recommended settings: - mDDR: 1 - LPDDR2: tXP + 2 - LPDDR3: tXP + 2 - LPDDR4: tXP + 2 When the controller is operating in 1:2 frequency ratio mode, program this to recommended value divided by two and round it up to next integer. This is only present for designs supporting mDDR or LPDDR2/LPDDR3/LPDDR4 devices. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG7_SHDW" acronym="DDRCTL_DRAMTMG7_SHDW" offset="0x211C" width="32" description="[FREQ1] SDRAM Timing Register 7">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CKPDE" width="4" begin="11" end="8" resetval="0x2" description="This is the time after Power Down Entry that CK is maintained as a valid clock.Specifies the clock disable delay after PDE. Recommended settings: - mDDR: 0 - LPDDR2: 2 - LPDDR3: 2 - LPDDR4: tCKELCK When using DDR2/3/4 SDRAM, this register should be set to the same value as DDRCTL_DRAMTMG5.t_cksre. When the controller is operating in 1:2 frequency ratio mode, program this to recommended value divided by two and round it up to next integer. This is only present for designs supporting mDDR or LPDDR2/LPDDR3/LPDDR4 devices. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CKPDX" width="4" begin="3" end="0" resetval="0x2" description="This is the time before Power Down Exit that CK is maintained as a valid clock before issuing PDX.Specifies the clock stable time before PDX. Recommended settings: - mDDR: 0 - LPDDR2: 2 - LPDDR3: 2 - LPDDR4: 2 When using DDR2/3/4 SDRAM, this register should be set to the same value as DDRCTL_DRAMTMG5.t_cksrx. When the controller is operating in 1:2 frequency ratio mode, program this to recommended value divided by two and round it up to next integer. This is only present for designs supporting mDDR or LPDDR2/LPDDR3/LPDDR4 devices. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG8_SHDW" acronym="DDRCTL_DRAMTMG8_SHDW" offset="0x2120" width="32" description="[FREQ1] SDRAM Timing Register 8">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_XS_FAST_X32" width="7" begin="30" end="24" resetval="0x3" description="tXS_FAST: Exit Self Refresh to ZQCL, ZQCS and MRS (only CL, WR, RTP and Geardown mode).When the controller is operating in 1:2 frequency ratio mode, program this to the above value divided by 2 and round up to next integer value. Unit: Multiples of 32 clocks. Note: This is applicable to only ZQCL/ZQCS commands. Note: Ensure this is less than or equal to t_xs_x32. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="23" end="23" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_XS_ABORT_X32" width="7" begin="22" end="16" resetval="0x3" description="tXS_ABORT: Exit Self Refresh to commands not requiring a locked DLL in Self Refresh Abort.When the controller is operating in 1:2 frequency ratio mode, program this to the above value divided by 2 and round up to next integer value. Unit: Multiples of 32 clocks. Note: Ensure this is less than or equal to t_xs_x32. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="15" end="15" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_XS_DLL_X32" width="7" begin="14" end="8" resetval="0x44" description="tXSDLL: Exit Self Refresh to commands requiring a locked DLL.When the controller is operating in 1:2 frequency ratio mode, program this to the above value divided by 2 and round up to next integer value. Unit: Multiples of 32 clocks. Note: Used only for DDR2, DDR3 and DDR4 SDRAMs. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_XS_X32" width="7" begin="6" end="0" resetval="0x5" description="tXS: Exit Self Refresh to commands not requiring a locked DLL.When the controller is operating in 1:2 frequency ratio mode, program this to the above value divided by 2 and round up to next integer value. Unit: Multiples of 32 clocks. Note: Used only for DDR2, DDR3 and DDR4 SDRAMs. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG9_SHDW" acronym="DDRCTL_DRAMTMG9_SHDW" offset="0x2124" width="32" description="[FREQ1] SDRAM Timing Register 9">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DDR4_WR_PREAMBLE" width="1" begin="30" end="30" resetval="0x0" description="DDR4 Write preamble mode -0: 1tCK preamble - 1: 2tCK preamble Present only with MEMC_FREQ_RATIO=2 Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="11" begin="29" end="19" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CCD_S" width="3" begin="18" end="16" resetval="0x4" description="tCCD_S: This is the minimum time between two reads or two writes for different bank group.For bank switching (from bank 'a' to bank 'b'), the minimum time is this value + 1. When the controller is operating in 1:2 frequency ratio mode, program this to (tCCD_S/2) and round it up to the next integer value. Present only in designs configured to support DDR4. Unit: clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_RRD_S" width="4" begin="11" end="8" resetval="0x4" description="tRRD_S: Minimum time between activates from bank 'a' to bank 'b' for different bank group.When the controller is operating in 1:2 frequency ratio mode, program this to (tRRD_S/2) and round it up to the next integer value. Present only in designs configured to support DDR4. Unit: Clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="WR2RD_S" width="6" begin="5" end="0" resetval="0xD" description="CWL + PL + BL/2 + tWTR_S Minimum time from write command to read command for different bank group.Includes time for bus turnaround, recovery times, and all per-bank, per-rank, and global constraints. Present only in designs configured to support DDR4. Unit: Clocks. Where: - CWL = CAS write latency - PL = Parity latency - BL = burst length. This must match the value programmed in the BL bit of the mode register to the SDRAM - tWTR_S = internal write to read command delay for different bank group. This comes directly from the SDRAM specification. When the controller is operating in 1:2 mode, divide the value calculated using the above equation by 2, and round it up to next integer. Programming Mode: Quasi-dynamic Group 1 and Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG10_SHDW" acronym="DDRCTL_DRAMTMG10_SHDW" offset="0x2128" width="32" description="[FREQ1] SDRAM Timing Register 10">
    <bitfield id="RESERVED" width="11" begin="31" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_SYNC_GEAR" width="5" begin="20" end="16" resetval="0x1C" description="Indicates the time between MRS command and the sync pulse time.This must be even number of clocks. For DDR4-2666 and DDR4-3200, this parameter is defined as tMOD(min)+4nCK tMOD(min) is greater of 24nCK or 15ns 15ns / .625ns = 24 Max value for this register is 24+4 = 28 When the controller is operating in 1:2 mode, program this to (tSYNC_GEAR/2) and round it up to the next integer value. Unit: Clocks Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="15" end="13" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CMD_GEAR" width="5" begin="12" end="8" resetval="0x18" description="Sync pulse to first valid command.For DDR4-2666 and DDR4-3200, this parameter is defined as tMOD(min) tMOD(min) is greater of 24nCK or 15ns 15ns / .625ns = 24 Max value for this register is 24 When the controller is operating in 1:2 mode, program this to (tCMD_GEAR/2) and round it up to the next integer value. Unit: Clocks Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_GEAR_SETUP" width="2" begin="3" end="2" resetval="0x2" description="Geardown setup time.Minimum value of this register is 1. Zero is invalid. For DDR4-2666 and DDR4-3200, this parameter is defined as 2 clks When the controller is operating in 1:2 frequency ratio mode, program this to (tGEAR_setup/2) and round it up to the next integer value. Unit: Clocks Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="T_GEAR_HOLD" width="2" begin="1" end="0" resetval="0x2" description="Geardown hold time.Minimum value of this register is 1. Zero is invalid. For DDR4-2666 and DDR4-3200, this parameter is defined as 2 clks When the controller is operating in 1:2 frequency ratio mode, program this to (tGEAR_hold/2) and round it up to the next integer value. Unit: Clocks Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG11_SHDW" acronym="DDRCTL_DRAMTMG11_SHDW" offset="0x212C" width="32" description="[FREQ1] SDRAM Timing Register 11">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="POST_MPSM_GAP_X32" width="7" begin="30" end="24" resetval="0x44" description="tXMPDLL: This is the minimum Exit MPSM to commands requiring a locked DLL.When the controller is operating in 1:2 frequency ratio mode, program this to (tXMPDLL/2) and round it up to the next integer value. Present only in designs configured to support DDR4. Unit: Multiples of 32 clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="23" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_MPX_LH" width="5" begin="20" end="16" resetval="0xC" description="tMPX_LH: This is the minimum CS_n Low hold time to CKE rising edge.When the controller is operating in 1:2 frequency ratio mode, program this to RoundUp(tMPX_LH/2)+1. Present only in designs configured to support DDR4. Unit: clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_MPX_S" width="2" begin="9" end="8" resetval="0x2" description="tMPX_S: Minimum time CS setup time to CKE.When the controller is operating in 1:2 frequency ratio mode, program this to (tMPX_S/2) and round it up to the next integer value. Present only in designs configured to support DDR4. Unit: Clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CKMPE" width="5" begin="4" end="0" resetval="0x1C" description="tCKMPE: Minimum valid clock requirement after MPSM entry.Present only in designs configured to support DDR4. Unit: Clocks. When the controller is operating in 1:2 frequency ratio mode, divide the value calculated using the above equation by 2, and round it up to next integer. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG12_SHDW" acronym="DDRCTL_DRAMTMG12_SHDW" offset="0x2130" width="32" description="[FREQ1] SDRAM Timing Register 12">
    <bitfield id="RESERVED" width="14" begin="31" end="18" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CMDCKE" width="2" begin="17" end="16" resetval="0x2" description="tCMDCKE: Delay from valid command to CKE input LOW.Set this to the larger of tESCKE or tCMDCKE When the controller is operating in 1:2 frequency ratio mode, program this to (max(tESCKE, tCMDCKE)/2) and round it up to the next integer value. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="11" begin="15" end="5" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_MRD_PDA" width="5" begin="4" end="0" resetval="0x10" description="tMRD_PDA: This is the Mode Register Set command cycle time in PDA mode.When the controller is operating in 1:2 frequency ratio mode, program this to (tMRD_PDA/2) and round it up to the next integer value. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG13_SHDW" acronym="DDRCTL_DRAMTMG13_SHDW" offset="0x2134" width="32" description="[FREQ1] SDRAM Timing Register 13">
    <bitfield id="RESERVED" width="1" begin="31" end="31" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="ODTLOFF" width="7" begin="30" end="24" resetval="0x1C" description="LPDDR4: tODTLoff: This is the latency from CAS-2 command to tODToff reference. When the controller is operating in 1:2 frequency ratio mode, program this to (tODTLoff/2) and round it up to the next integer value. Unit: Clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="23" end="22" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_CCD_MW" width="6" begin="21" end="16" resetval="0x20" description="LPDDR4: tCCDMW: This is the minimum time from write or masked write to masked write command for same bank. When the controller is operating in 1:2 frequency ratio mode, program this to (tCCDMW/2) and round it up to the next integer value. Unit: Clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="13" begin="15" end="3" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_PPD" width="3" begin="2" end="0" resetval="0x4" description="LPDDR4: tPPD: This is the minimum time from precharge to precharge command. When the controller is operating in 1:2 frequency ratio mode, program this to (tPPD/2) and round it up to the next integer value. Unit: Clocks. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG14_SHDW" acronym="DDRCTL_DRAMTMG14_SHDW" offset="0x2138" width="32" description="[FREQ1] SDRAM Timing Register 14">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_XSR" width="12" begin="11" end="0" resetval="0xA0" description="tXSR: Exit Self Refresh to any command.When the controller is operating in 1:2 frequency ratio mode, program this to the above value divided by 2 and round up to next integer value. Note: Used only for mDDR/LPDDR2/LPDDR3/LPDDR4 mode. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DRAMTMG15_SHDW" acronym="DDRCTL_DRAMTMG15_SHDW" offset="0x213C" width="32" description="[FREQ1] SDRAM Timing Register 15">
    <bitfield id="EN_DFI_LP_T_STAB" width="1" begin="31" end="31" resetval="0x0" description="-1 - Enable using tSTAB when exiting DFI LP. Needs to be set when the PHY is stopping the clock during DFI LP to save maximum power. - 0 - Disable using tSTAB when exiting DFI LP Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="23" begin="30" end="8" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_STAB_X32" width="8" begin="7" end="0" resetval="0x0" description="tSTAB: Stabilization time.It is required in the following two cases for DDR3/DDR4 RDIMM : - when exiting power saving mode, if the clock was stopped, after re-enabling it the clock must be stable for a time specified by tSTAB - in the case of input clock frequency change (DDR4) - after issuing control words that refers to clock timing (Specification: 6us for DDR3, 5us for DDR4) When the controller is operating in 1:2 frequency ratio mode, program this to recommended value divided by two and round it up to next integer. Unit: Multiples of 32 clock cycles. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ZQCTL0_SHDW" acronym="DDRCTL_ZQCTL0_SHDW" offset="0x2180" width="32" description="[FREQ1] ZQ Control Register 0">
    <bitfield id="DIS_AUTO_ZQ" width="1" begin="31" end="31" resetval="0x0" description="-1 - Disable uMCTL2 generation of ZQCS/MPC(ZQ calibration) command. Register DDRCTL_DBGCMD.zq_calib_short can be used instead to issue ZQ calibration request from APB module. - 0 - Internally generate ZQCS/MPC(ZQ calibration) commands based on DDRCTL_ZQCTL1.t_zq_short_interval_x1024. This is only present for designs supporting DDR3/DDR4 or LPDDR2/LPDDR3/LPDDR4 devices. Programming Mode: Dynamic" range="" rwaccess="RW"/>
    <bitfield id="DIS_SRX_ZQCL" width="1" begin="30" end="30" resetval="0x0" description="-1 - Disable issuing of ZQCL/MPC(ZQ calibration) command at Self-Refresh/SR-Powerdown exit. Only applicable when run in DDR3 or DDR4 or LPDDR2 or LPDDR3 or LPDDR4 mode. - 0 - Enable issuing of ZQCL/MPC(ZQ calibration) command at Self-Refresh/SR-Powerdown exit. Only applicable when run in DDR3 or DDR4 or LPDDR2 or LPDDR3 or LPDDR4 mode. This is only present for designs supporting DDR3/DDR4 or LPDDR2/LPDDR3/LPDDR4 devices. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="ZQ_RESISTOR_SHARED" width="1" begin="29" end="29" resetval="0x0" description="-1 - Denotes that ZQ resistor is shared between ranks. Means ZQinit/ZQCL/ZQCS/MPC(ZQ calibration) commands are sent to one rank at a time with tZQinit/tZQCL/tZQCS/tZQCAL/tZQLAT timing met between commands so that commands to different ranks do not overlap. - 0 - ZQ resistor is not shared. This is only present for designs supporting DDR3/DDR4 or LPDDR2/LPDDR3/LPDDR4 devices. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="DIS_MPSMX_ZQCL" width="1" begin="28" end="28" resetval="0x0" description="-1 - Disable issuing of ZQCL command at Maximum Power Saving Mode exit. Only applicable when run in DDR4 mode. - 0 - Enable issuing of ZQCL command at Maximum Power Saving Mode exit. Only applicable when run in DDR4 mode. This is only present for designs supporting DDR4 devices. Note: Do not issue ZQCL command at Maximum Power Save Mode exit if the UMCTL2_SHARED_AC configuration parameter is set. Program it to 1'b1. The software can send ZQCS after exiting MPSM mode. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="27" end="27" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_ZQ_LONG_NOP" width="11" begin="26" end="16" resetval="0x200" description="tZQoper for DDR3/DDR4, tZQCL for LPDDR2/LPDDR3, tZQCAL for LPDDR4: Number of DFI clock cycles of NOP required after a ZQCL (ZQ calibration long)/MPC(ZQ Start) command is issued to SDRAM. When the controller is operating in 1:2 frequency ratio mode: DDR3/DDR4: program this to tZQoper/2 and round it up to the next integer value. LPDDR2/LPDDR3: program this to tZQCL/2 and round it up to the next integer value. LPDDR4: program this to tZQCAL/2 and round it up to the next integer value. This is only present for designs supporting DDR3/DDR4 or LPDDR2/LPDDR3/LPDDR4 devices. Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="6" begin="15" end="10" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="T_ZQ_SHORT_NOP" width="10" begin="9" end="0" resetval="0x40" description="tZQCS for DDR3/DD4/LPDDR2/LPDDR3, tZQLAT for LPDDR4: Number of DFI clock cycles of NOP required after a ZQCS (ZQ calibration short)/MPC(ZQ Latch) command is issued to SDRAM. When the controller is operating in 1:2 frequency ratio mode, program this to tZQCS/2 and round it up to the next integer value. This is only present for designs supporting DDR3/DDR4 or LPDDR2/LPDDR3/LPDDR4 devices. Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DFITMG0_SHDW" acronym="DDRCTL_DFITMG0_SHDW" offset="0x2190" width="32" description="[FREQ1] DFI Timing Register 0">
    <bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_T_CTRL_DELAY" width="5" begin="28" end="24" resetval="0x7" description="Specifies the number of DFI clock cycles after an assertion or de-assertion of the DFI control signals that the control signals at the PHY-DRAM interface reflect the assertion or de-assertion.If the DFI clock and the memory clock are not phase-aligned, this timing parameter should be rounded up to the next integer value. Note that if using RDIMM/LRDIMM, it is necessary to increment this parameter by RDIMM's/LRDIMM's extra cycle of latency in terms of DFI clock. Programming Mode: Quasi-dynamic Group 4" range="" rwaccess="RW"/>
    <bitfield id="DFI_RDDATA_USE_DFI_PHY_CLK" width="1" begin="23" end="23" resetval="0x0" description="Defines whether dfi_rddata_en/dfi_rddata/dfi_rddata_valid is generated using HDR (DFI clock) or SDR (DFI PHY clock) values.Selects whether value in DDRCTL_DFITMG0.dfi_t_rddata_en is in terms of HDR (DFI clock) or SDR (DFI PHY clock) cycles: - 0 in terms of HDR (DFI clock) cycles - 1 in terms of SDR (DFI PHY clock) cycles Refer to PHY specification for correct value. If using a DWC DDR3/2 PHY, DWC DDR2/3-Lite/mDDR PHY, DWC DDR multiPHY or DWC Gen2 DDR multiPHY, this field must be set to 0 otherwise: - If MEMC_PROG_FREQ_RATIO=1 and DDRCTL_MSTR.frequency_ratio=1, this field should be set to 0 - Else, it must be set to 1 Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="DFI_T_RDDATA_EN" width="7" begin="22" end="16" resetval="0x2" description="Time from the assertion of a read command on the DFI interface to the assertion of the dfi_rddata_en signal.Refer to PHY specification for correct value. This corresponds to the DFI parameter trddata_en. Note that, depending on the PHY, if using RDIMM/LRDIMM, it may be necessary to use the adjusted value of CL in the calculation of trddata_en. This is to compensate for the extra cycle(s) of latency through the RDIMM/LRDIMM. Unit: DFI clock cycles or DFI PHY clock cycles, depending on DDRCTL_DFITMG0.dfi_rddata_use_dfi_phy_clk. Programming Mode: Quasi-dynamic Group 1 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="DFI_WRDATA_USE_DFI_PHY_CLK" width="1" begin="15" end="15" resetval="0x0" description="Defines whether dfi_wrdata_en/dfi_wrdata/dfi_wrdata_mask is generated using HDR (DFI clock) or SDR (DFI PHY clock) values Selects whether value inDDRCTL_DFITMG0.dfi_tphy_wrlat is in terms of HDR (DFI clock) or SDR (DFI PHY clock) cycles Selects whether value in DDRCTL_DFITMG0.dfi_tphy_wrdata is in terms of HDR (DFI clock) or SDR (DFI PHY clock) cycles - 0 in terms of HDR (DFI clock) cycles - 1 in terms of SDR (DFI PHY clock) cycles Refer to PHY specification for correct value. If using a DWC DDR3/2 PHY, DWC DDR2/3-Lite/mDDR PHY, DWC DDR multiPHY or DWC Gen2 DDR multiPHY, this field must be set to 0 otherwise: - If MEMC_PROG_FREQ_RATIO=1 and DDRCTL_MSTR.frequency_ratio=1, this field should be set to 0 - Else, it must be set to 1 Programming Mode: Static" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="14" end="14" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_TPHY_WRDATA" width="6" begin="13" end="8" resetval="0x0" description="Specifies the number of clock cycles between when dfi_wrdata_en is asserted to when the associated write data is driven on the dfi_wrdata signal.This corresponds to the DFI timing parameter tphy_wrdata. Refer to PHY specification for correct value. Note, max supported value is 8. Unit: DFI clock cycles or DFI PHY clock cycles, depending on DDRCTL_DFITMG0.dfi_wrdata_use_dfi_phy_clk. Programming Mode: Quasi-dynamic Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_TPHY_WRLAT" width="6" begin="5" end="0" resetval="0x2" description="Write latency Number of clocks from the write command to write data enable (dfi_wrdata_en).This corresponds to the DFI timing parameter tphy_wrlat. Refer to PHY specification for correct value.Note that, depending on the PHY, if using RDIMM/LRDIMM, it may be necessary to use the adjusted value of CL in the calculation of tphy_wrlat. This is to compensate for the extra cycle(s) of latency through the RDIMM/LRDIMM. For LPDDR4, dfi_tphy_wrlat&amp;amp;gt;60 is not supported. Unit: DFI clock cycles or DFI PHY clock cycles, depending on DDRCTL_DFITMG0.dfi_wrdata_use_dfi_phy_clk. Programming Mode: Quasi-dynamic Group 1 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DFITMG1_SHDW" acronym="DDRCTL_DFITMG1_SHDW" offset="0x2194" width="32" description="[FREQ1] DFI Timing Register 1">
    <bitfield id="DFI_T_CMD_LAT" width="4" begin="31" end="28" resetval="0x0" description="Specifies the number of DFI PHY clock cycles between when the dfi_cs signal is asserted and when the associated command is driven.This field is used for CAL mode, should be set to '0' or the value which matches the CAL mode register setting in the DRAM. If the PHY can add the latency for CAL mode, this should be set to '0'. Valid Range: 0, 3, 4, 5, 6, and 8 Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="27" end="26" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_T_PARIN_LAT" width="2" begin="25" end="24" resetval="0x0" description="Specifies the number of DFI PHY clock cycles between when the dfi_cs signal is asserted and when the associated dfi_parity_in signal is driven.Programming Mode: Quasi-dynamic Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="23" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_T_WRDATA_DELAY" width="5" begin="20" end="16" resetval="0x0" description="Specifies the number of DFI clock cycles between when the dfi_wrdata_en signal is asserted and when the corresponding write data transfer is completed on the DRAM bus.This corresponds to the DFI timing parameter twrdata_delay. Refer to PHY specification for correct value. For DFI 3.0 PHY, set to twrdata_delay, a new timing parameter introduced in DFI 3.0. For DFI 2.1 PHY, set to tphy_wrdata + (delay of DFI write data to the DRAM). Value to be programmed is in terms of DFI clocks, not PHY clocks. In FREQ_RATIO=2, divide PHY's value by 2 and round up to next integer. If using DDRCTL_DFITMG0.dfi_wrdata_use_dfi_phy_clk=1, add 1 to the value. Unit: Clocks Programming Mode: Quasi-dynamic Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="15" end="13" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_T_DRAM_CLK_DISABLE" width="5" begin="12" end="8" resetval="0x4" description="Specifies the number of DFI clock cycles from the assertion of the dfi_dram_clk_disable signal on the DFI until the clock to the DRAM memory devices, at the PHY-DRAM boundary, maintains a low value.If the DFI clock and the memory clock are not phase aligned, this timing parameter should be rounded up to the next integer value. Programming Mode: Quasi-dynamic Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_T_DRAM_CLK_ENABLE" width="5" begin="4" end="0" resetval="0x4" description="Specifies the number of DFI clock cycles from the de-assertion of the dfi_dram_clk_disable signal on the DFI until the first valid rising edge of the clock to the DRAM memory devices, at the PHY-DRAM boundary.If the DFI clock and the memory clock are not phase aligned, this timing parameter should be rounded up to the next integer value. Programming Mode: Quasi-dynamic Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DFITMG2_SHDW" acronym="DDRCTL_DFITMG2_SHDW" offset="0x21B4" width="32" description="[FREQ1] DFI Timing Register 2">
    <bitfield id="RESERVED" width="17" begin="31" end="15" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_TPHY_RDCSLAT" width="7" begin="14" end="8" resetval="0x2" description="Number of DFI PHY clock cycles between when a read command is sent on the DFI control interface and when the associated dfi_rddata_cs signal is asserted.This corresponds to the DFI timing parameter tphy_rdcslat. Refer to PHY specification for correct value. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="7" end="6" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_TPHY_WRCSLAT" width="6" begin="5" end="0" resetval="0x2" description="Number of DFI PHY clock cycles between when a write command is sent on the DFI control interface and when the associated dfi_wrdata_cs signal is asserted.This corresponds to the DFI timing parameter tphy_wrcslat. Refer to PHY specification for correct value. Programming Mode: Quasi-dynamic Group 2 and Group 4" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_DFITMG3_SHDW" acronym="DDRCTL_DFITMG3_SHDW" offset="0x21B8" width="32" description="[FREQ1] DFI Timing Register 3">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="DFI_T_GEARDOWN_DELAY" width="5" begin="4" end="0" resetval="0x0" description="The delay from dfi_geardown_en assertion to the time of the PHY being ready to receive commands.Refer to PHY specification for correct value. When the controller is operating in 1:2 frequency ratio mode, program this to (tgeardown_delay/2) and round it up to the next integer value. Unit: Clocks Programming Mode: Static" range="" rwaccess="RW"/>
  </register>
  <register id="DDRCTL_ODTCFG_SHDW" acronym="DDRCTL_ODTCFG_SHDW" offset="0x2240" width="32" description="[FREQ1] ODT Configuration Register">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="WR_ODT_HOLD" width="4" begin="27" end="24" resetval="0x4" description="DFI PHY clock cycles to hold ODT for a write command.The minimum supported value is 2. Recommended values: DDR2: - BL8: 0x5 (DDR2-400/533/667), 0x6 (DDR2-800), 0x7 (DDR2-1066) - BL4: 0x3 (DDR2-400/533/667), 0x4 (DDR2-800), 0x5 (DDR2-1066) DDR3: - BL8: 0x6 DDR4: - BL8: 5 + WR_PREAMBLE + CRC_MODE WR_PREAMBLE = 1 (1tCK write preamble), 2 (2tCK write preamble) CRC_MODE = 0 (not CRC mode), 1 (CRC mode) LPDDR3: - BL8: 7 + RU(tODTon(max)/tCK) Programming Mode: Quasi-dynamic Group 1 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="23" end="21" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="WR_ODT_DELAY" width="5" begin="20" end="16" resetval="0x0" description="The delay, in DFI PHY clock cycles, from issuing a write command to setting ODT values associated with that command.ODT setting must remain constant for the entire time that DQS is driven by the uMCTL2. Recommended values: DDR2: - CWL + AL - 3 (DDR2-400/533/667), CWL + AL - 4 (DDR2-800), CWL + AL - 5 (DDR2-1066) If (CWL + AL - 3 &amp;amp;lt; 0), uMCTL2 does not support ODT for write operation. DDR3: - 0x0 DDR4: - DDRCTL_DFITMG1.dfi_t_cmd_lat (to adjust for CAL mode) LPDDR3: - WL - 1 - RU(tODTon(max)/tCK)" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RD_ODT_HOLD" width="4" begin="11" end="8" resetval="0x4" description="DFI PHY clock cycles to hold ODT for a read command.The minimum supported value is 2. Recommended values: DDR2: - BL8: 0x6 (not DDR2-1066), 0x7 (DDR2-1066) - BL4: 0x4 (not DDR2-1066), 0x5 (DDR2-1066) DDR3: - BL8 - 0x6 DDR4: - BL8: 5 + RD_PREAMBLE RD_PREAMBLE = 1 (1tCK write preamble), 2 (2tCK write preamble) LPDDR3: - BL8: 5 + RU(tDQSCK(max)/tCK) - RD(tDQSCK(min)/tCK) + RU(tODTon(max)/tCK) Programming Mode: Quasi-dynamic Group 1 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="1" begin="7" end="7" resetval="0xX" description="" range="" rwaccess="RW"/>
    <bitfield id="RD_ODT_DELAY" width="5" begin="6" end="2" resetval="0x0" description="The delay, in DFI PHY clock cycles, from issuing a read command to setting ODT values associated with that command.ODT setting must remain constant for the entire time that DQS is driven by the uMCTL2. Recommended values: DDR2: - CL + AL - 4 (not DDR2-1066), CL + AL - 5 (DDR2-1066) If (CL + AL - 4 &amp;amp;lt; 0), uMCTL2 does not support ODT for read operation. DDR3: - CL - CWL DDR4: - CL - CWL - RD_PREAMBLE + WR_PREAMBLE + DDRCTL_DFITMG1.dfi_t_cmd_lat (to adjust for CAL mode) WR_PREAMBLE = 1 (1tCK write preamble), 2 (2tCK write preamble) RD_PREAMBLE = 1 (1tCK write preamble), 2 (2tCK write preamble) If (CL - CWL - RD_PREAMBLE + WR_PREAMBLE) &amp;amp;lt; 0, uMCTL2 does not support ODT for read operation. LPDDR3: - RL + RD(tDQSCK(min)/tCK) - 1 - RU(tODTon(max)/tCK) Programming Mode: Quasi-dynamic Group 1 and Group 4" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="2" begin="1" end="0" resetval="0xX" description="" range="" rwaccess="RW"/>
  </register>
</module>
