<module name="RTI0" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="RTI_GCTRL" acronym="RTI_GCTRL" offset="0x0" width="32" description="">
    <bitfield id="RESERVED" width="12" begin="31" end="20" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="4" begin="19" end="16" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="COS" width="1" begin="15" end="15" resetval="0x0" description="Continue On Suspend. This bit determines if both counters are stopped when the device goes into debug mode or if they continue counting. User and privilege mode (read): 0 = counters are stopped while in debug mode 1 = counters are running while in debug mode Privilege mode (write): 0 = stop counters in debug mode 1 = continue counting in debug mode" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="13" begin="14" end="2" resetval="0x0" description="Reserved." range="" rwaccess="R"/>
    <bitfield id="CNT1EN" width="1" begin="1" end="1" resetval="0x0" description="Counter 1 Enable. The CNT1EN bit starts and stops the operation of counter block1 (UC1 and FRC1). User and privilege mode (read): 0 = counters are stopped 1 = counters are running Privilege mode (write): 0 = stop counters 1 = start counters" range="" rwaccess="RW"/>
    <bitfield id="CNT0EN" width="1" begin="0" end="0" resetval="0x0" description="Counter 0 Enable. The CNT0EN bit starts and stops the operation of counter block0 (UC0 and FRC0). User and privilege mode (read): 0 = counters are stopped 1 = counters are running Privilege mode (write): 0 = stop counters 1 = start counters" range="" rwaccess="RW"/>
  </register>
  <register id="RTI_TBCTRL" acronym="RTI_TBCTRL" offset="0x4" width="32" description="">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INC" width="1" begin="1" end="1" resetval="0x0" description="This bit determines whether the Free Running Counter 0 is automatically incremented if a failing clock on the NTUx signal is detected. User and privilege mode (read): 0 = FRC0 will not be incremented 1 = FRC0 will be incremented Privilege mode (write): 0 = Do not increment FRC0 on failing external clock 1 = Increment FRC0 on failing external clock" range="" rwaccess="RW"/>
    <bitfield id="TBEXT" width="1" begin="0" end="0" resetval="0x0" description="The Timebase External bit selects whether the Free Running Counter 0 is clocked by the internal Up Counter 0 or from the external signal NTUx. Since setting the TBEXT bit to 1 resets Up Counter 0, Free Running Counter 0 will not be incremented in this occurence. The only source which is able to increment Free Running Counter 0 is NTUx. When the Timebase Supervisor circuit detects a missing clockedge, then the TBEXT bit is reset. The selection if the external signal should be used, can only be done by software. User and privilege mode (read): 0 = UC0 clocks FRC0 1 = NTUx clocks FRC0 Privilege mode (write): 0 = MUX is switched to internal UC0 clocking scheme 1 = MUX is switched to external NTUx clocking scheme" range="" rwaccess="RW"/>
  </register>
  <register id="RTI_CAPCTRL" acronym="RTI_CAPCTRL" offset="0x8" width="32" description="">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="CAPCNTR1" width="1" begin="1" end="1" resetval="0x0" description="Capture Counter 0." range="" rwaccess="RW"/>
    <bitfield id="CAPCNTR0" width="1" begin="0" end="0" resetval="0x0" description="Capture Counter 0. This bit determines, which external interrupt source triggers a capture event of both UC0 and FRC0. User and privilege mode (read): 0 = capture event is triggered by Capture Event Source 0 1 = capture event is triggered by Capture Event Source 1 Privilege mode (write): 0 = enable capture event triggered by Capture Event Source 0 1 = enable capture event triggered by Capture Event Source 1" range="" rwaccess="RW"/>
  </register>
  <register id="RTI_COMPCTRL" acronym="RTI_COMPCTRL" offset="0xC" width="32" description="">
    <bitfield id="RESERVED" width="19" begin="31" end="13" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="COMPSEL3" width="1" begin="12" end="12" resetval="0x0" description="Compare Select 3. This bit determines the counter with which the compare value hold in compare register 3 is compared. User and privilege mode (read): 0 = value will be compared with FRC 0 1 = value will be compared with FRC 1 Privilege mode (write): 0 = enable compare with FRC 0 1 = enable compare with FRC 1" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="11" end="9" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="COMPSEL2" width="1" begin="8" end="8" resetval="0x0" description="Compare Select 2. This bit determines the counter with which the compare value hold in compare register 2 is compared. User and privilege mode (read): 0 = value will be compared with FRC 0 1 = value will be compared with FRC 1 Privilege mode (write): 0 = enable compare with FRC 0 1 = enable compare with FRC 1" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="7" end="5" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="COMPSEL1" width="1" begin="4" end="4" resetval="0x0" description="Compare Select 1. This bit determines the counter with which the compare value hold in compare register 1 is compared. User and privilege mode (read): 0 = value will be compared with FRC 0 1 = value will be compared with FRC 1 Privilege mode (write): 0 = enable compare with FRC 0 1 = enable compare with FRC 1" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="3" end="1" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="COMPSEL0" width="1" begin="0" end="0" resetval="0x0" description="Compare Select 0. This bit determines the counter with which the compare value hold in compare register 0 is compared. User and privilege mode (read): 0 = value will be compared with FRC 0 1 = value will be compared with FRC 1 Privilege mode (write): 0 = enable compare with FRC 0 1 = enable compare with FRC 1" range="" rwaccess="RW"/>
  </register>
  <register id="RTI_FRC0" acronym="RTI_FRC0" offset="0x10" width="32" description="This registers holds the current value of the Free Running Counter 0 and will be updated continuously.">
    <bitfield id="FRC0" width="32" begin="31" end="0" resetval="0x0" description="Free Running Counter 0. User and privilege mode (read): current value of the counter Privilege mode (write): The counter can be preset by writing to this register. The counter increments then from this written value upwards. Presetting counters, If counters have to be preset, they have to be stopped from counting in the" range="" rwaccess="RW"/>
  </register>
  <register id="RTI_UC0" acronym="RTI_UC0" offset="0x14" width="32" description="">
    <bitfield id="UC0" width="32" begin="31" end="0" resetval="0x0" description="Up Counter 0. User and privilege mode (read): value of the counter when the Free Running Counter 0 was read Privilege mode (write): the counter can be preset by writing to this register. The counter increments then from this written value upwards. Presetting counters: If counters have to be preset, they have to be stopped from counting in the" range="" rwaccess="RW"/>
  </register>
  <register id="RTI_CPUC0" acronym="RTI_CPUC0" offset="0x18" width="32" description="">
    <bitfield id="CPUC0" width="32" begin="31" end="0" resetval="0x0" description="Compare Up Counter 0. ARRAY(0x1f04380) ARRAY(0x1f04410) User and privilege mode (read): current compare value Privilege mode (write when TBEXT = 0): the compare value is updated Privilege mode (write when TBEXT = 1): the compare value is not changed" range="" rwaccess="RW"/>
  </register>
  <register id="RTI_CAFRC0" acronym="RTI_CAFRC0" offset="0x20" width="32" description="">
    <bitfield id="CAFRC0" width="32" begin="31" end="0" resetval="0x0" description="Capture Free Running Counter 0. User and privilege mode (read): value of Free Running Counter 0 on a capture event" range="" rwaccess="R"/>
  </register>
  <register id="RTI_CAUC0" acronym="RTI_CAUC0" offset="0x24" width="32" description="">
    <bitfield id="CAUC0" width="32" begin="31" end="0" resetval="0x0" description="Capture Up Counter 0. User and privilege mode (read): value of Up Counter 0 on a capture event" range="" rwaccess="R"/>
  </register>
  <register id="RTI_FRC1" acronym="RTI_FRC1" offset="0x30" width="32" description="">
    <bitfield id="FRC1" width="32" begin="31" end="0" resetval="0x0" description="Free Running Counter 1. User and privilege mode (read): current value of the counter Privilege mode (write): the counter can be preset by writing to this register. The counter increments then from this written value upwards. If counters have to be preset, they have to be stopped from counting in the" range="" rwaccess="RW"/>
  </register>
  <register id="RTI_UC1" acronym="RTI_UC1" offset="0x34" width="32" description="">
    <bitfield id="UC1" width="32" begin="31" end="0" resetval="0x0" description="Up Counter 1. User and privilege mode (read): value of the counter when the Free Running Counter 1 was read Privilege mode (write): the counter can be preset by writing to this register. The counter increments then from this written value upwards. Presetting counters: If counters have to be preset, they have to be disabled in the" range="" rwaccess="RW"/>
  </register>
  <register id="RTI_CPUC1" acronym="RTI_CPUC1" offset="0x38" width="32" description="">
    <bitfield id="CPUC1" width="32" begin="31" end="0" resetval="0x0" description="Compare Up Counter 1. ARRAY(0x1f1c750) ARRAY(0x1f1c7e0) User and privilege mode (read): current compare value Privilege mode (write): the compare value is updated" range="" rwaccess="RW"/>
  </register>
  <register id="RTI_CAFRC1" acronym="RTI_CAFRC1" offset="0x40" width="32" description="">
    <bitfield id="CAFRC1" width="32" begin="31" end="0" resetval="0x0" description="Capture Free Running Counter 1. User and privilege mode (read): value of Free Running Counter 1 on a capture event" range="" rwaccess="R"/>
  </register>
  <register id="RTI_CAUC1" acronym="RTI_CAUC1" offset="0x44" width="32" description="">
    <bitfield id="CAUC1" width="32" begin="31" end="0" resetval="0x0" description="Capture Up Counter 1. User and privilege mode (read): value of Up Counter 1 on a capture event" range="" rwaccess="R"/>
  </register>
  <register id="RTI_COMP0" acronym="RTI_COMP0" offset="0x50" width="32" description="">
    <bitfield id="COMP0" width="32" begin="31" end="0" resetval="0x0" description="Compare 0. User and privilege mode (read): current compare value Privilege mode (write): update of the compare register with a new compare value Reset behavior: A reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled." range="" rwaccess="RW"/>
  </register>
  <register id="RTI_UDCP0" acronym="RTI_UDCP0" offset="0x54" width="32" description="">
    <bitfield id="UDCP0" width="32" begin="31" end="0" resetval="0x0" description="Update Compare 0 Register. User and privilege mode (read): value to be added to the compare 0 register on the next compare match Privilege mode (write): new update value" range="" rwaccess="RW"/>
  </register>
  <register id="RTI_COMP1" acronym="RTI_COMP1" offset="0x58" width="32" description="">
    <bitfield id="COMP1" width="32" begin="31" end="0" resetval="0x0" description="Compare 1. User and privilege mode (read): current compare value Privilege mode (write): update of the compare register with a new compare value Reset behavior: A reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled." range="" rwaccess="RW"/>
  </register>
  <register id="RTI_UDCP1" acronym="RTI_UDCP1" offset="0x5C" width="32" description="">
    <bitfield id="UDCP1" width="32" begin="31" end="0" resetval="0x0" description="Update Compare 1 Register. User and privilege mode (read): value to be added to the compare 1 register on the next compare match Privilege mode (write): new update value" range="" rwaccess="RW"/>
  </register>
  <register id="RTI_COMP2" acronym="RTI_COMP2" offset="0x60" width="32" description="">
    <bitfield id="COMP2" width="32" begin="31" end="0" resetval="0x0" description="Compare 2. User and privilege mode (read): current compare value Privilege mode (write): update of the compare register with a new compare value Reset behavior: A reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled." range="" rwaccess="RW"/>
  </register>
  <register id="RTI_UDCP2" acronym="RTI_UDCP2" offset="0x64" width="32" description="This registers holds a value, which is added to the value in the compare 2 register each time a compare matches. This gives the possibility to generate periodic interrupts without software intervention.">
    <bitfield id="UDCP2" width="32" begin="31" end="0" resetval="0x0" description="Update Compare 2 Register. User and privilege mode (read): value to be added to the compare 2 register on the next compare match Privilege mode (write): new update value" range="" rwaccess="RW"/>
  </register>
  <register id="RTI_COMP3" acronym="RTI_COMP3" offset="0x68" width="32" description="">
    <bitfield id="COMP3" width="32" begin="31" end="0" resetval="0x0" description="Compare 3. User and privilege mode (read): current compare value Privilege mode (write): update of the compare register with a new compare value Reset behavior: A reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled." range="" rwaccess="RW"/>
  </register>
  <register id="RTI_UDCP3" acronym="RTI_UDCP3" offset="0x6C" width="32" description="">
    <bitfield id="UDCP3" width="32" begin="31" end="0" resetval="0x0" description="Update Compare 3 Register. User and privilege mode (read): value to be added to the compare 3 register on the next compare match Privilege mode (write): new update value" range="" rwaccess="RW"/>
  </register>
  <register id="RTI_TBLCOMP" acronym="RTI_TBLCOMP" offset="0x70" width="32" description="">
    <bitfield id="UDCP3" width="32" begin="31" end="0" resetval="0x0" description="Update Compare 3 Register. User and privilege mode (read): value to be added to the compare 3 register on the next compare match Privilege mode (write): new update value" range="" rwaccess="RW"/>
  </register>
  <register id="RTI_TBHCOMP" acronym="RTI_TBHCOMP" offset="0x74" width="32" description="">
    <bitfield id="TBHCOMP" width="32" begin="31" end="0" resetval="0x0" description="This value determines when the edge detection circuit will stop monitoring the NTUx signal. It will be compared with Up Counter 0." range="" rwaccess="RW"/>
  </register>
  <register id="RTI_SETINT" acronym="RTI_SETINT" offset="0x80" width="32" description="This register prevents the necessity of a read-modify-write operation if a particular interrupt should be enabled. Some of the RTI features described in this section may not be supported on this family of devices. For more information, see , RTI Not Supported Features.">
    <bitfield id="RESERVED" width="13" begin="31" end="19" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="SETOVL1INT" width="1" begin="18" end="18" resetval="0x0" description="Set Free Running Counter 1 Overflow Interrupt. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt" range="" rwaccess="RW"/>
    <bitfield id="SETOVL0INT" width="1" begin="17" end="17" resetval="0x0" description="Set Free Running Counter 0 Overflow Interrupt. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt" range="" rwaccess="RW"/>
    <bitfield id="SETTBINT" width="1" begin="16" end="16" resetval="0x0" description="User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="SETDMA3" width="1" begin="11" end="11" resetval="0x0" description="Set Compare DMA Request 3. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable DMA request" range="" rwaccess="RW"/>
    <bitfield id="SETDMA2" width="1" begin="10" end="10" resetval="0x0" description="Set Compare DMA Request 2. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable DMA request" range="" rwaccess="RW"/>
    <bitfield id="SETDMA1" width="1" begin="9" end="9" resetval="0x0" description="Set Compare DMA Request 1. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable DMA request" range="" rwaccess="RW"/>
    <bitfield id="SETDMA0" width="1" begin="8" end="8" resetval="0x0" description="Set Compare DMA Request 0. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable DMA request" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="SETINT3" width="1" begin="3" end="3" resetval="0x0" description="Set Compare Interrupt 3. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt" range="" rwaccess="RW"/>
    <bitfield id="SETINT2" width="1" begin="2" end="2" resetval="0x0" description="Set Compare Interrupt 2. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt" range="" rwaccess="RW"/>
    <bitfield id="SETINT1" width="1" begin="1" end="1" resetval="0x0" description="Set Compare Interrupt 1. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt" range="" rwaccess="RW"/>
    <bitfield id="SETINT0" width="1" begin="0" end="0" resetval="0x0" description="Set Compare Interrupt 0. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = enable interrupt" range="" rwaccess="RW"/>
  </register>
  <register id="RTI_CLEARINT" acronym="RTI_CLEARINT" offset="0x84" width="32" description="This register prevents the necessity of a read-modify-write operation if a particular interrupt should be disabled. Some of the RTI features described in this section may not be supported on this family of devices. For more information, see , RTI Not Supported Features.">
    <bitfield id="RESERVED" width="13" begin="31" end="19" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="CLEAROVL1INT" width="1" begin="18" end="18" resetval="0x0" description="Clear Free Running Counter 1 Overflow Interrupt. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt" range="" rwaccess="RW"/>
    <bitfield id="CLEAROVL0INT" width="1" begin="17" end="17" resetval="0x0" description="Clear Free Running Counter 0 Overflow Interrupt. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt" range="" rwaccess="RW"/>
    <bitfield id="CLEARTBINT" width="1" begin="16" end="16" resetval="0x0" description="User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="CLEARDMA3" width="1" begin="11" end="11" resetval="0x0" description="Clear Compare DMA Request 3. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable DMA request" range="" rwaccess="RW"/>
    <bitfield id="CLEARDMA2" width="1" begin="10" end="10" resetval="0x0" description="Clear Compare DMA Request 2. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable DMA request" range="" rwaccess="RW"/>
    <bitfield id="CLEARDMA1" width="1" begin="9" end="9" resetval="0x0" description="Clear Compare DMA Request 1. User and privilege mode (read): 0 = DMA request is disabled 1 = DMA request is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable DMA request" range="" rwaccess="RW"/>
    <bitfield id="CLEARDMA0" width="1" begin="8" end="8" resetval="0x0" description="Clear Compare DMA Request 0." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="CLEARINT3" width="1" begin="3" end="3" resetval="0x0" description="Clear Compare Interrupt 3. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt" range="" rwaccess="RW"/>
    <bitfield id="CLEARINT2" width="1" begin="2" end="2" resetval="0x0" description="Clear Compare Interrupt 2. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt" range="" rwaccess="RW"/>
    <bitfield id="CLEARINT1" width="1" begin="1" end="1" resetval="0x0" description="Clear Compare Interrupt 1." range="" rwaccess="RW"/>
    <bitfield id="CLEARINT0" width="1" begin="0" end="0" resetval="0x0" description="Clear Compare Interrupt 0. User and privilege mode (read): 0 = interrupt is disabled 1 = interrupt is enabled Privilege mode (write): 0 = leaves the corresponding bit unchanged 1 = disable interrupt" range="" rwaccess="RW"/>
  </register>
  <register id="RTI_INTFLAG" acronym="RTI_INTFLAG" offset="0x88" width="32" description="The corresponding flags are set at every compare match of Free Running Counterx and RTICOMPx value, regardless if the interrupt is enabled or not.">
    <bitfield id="RESERVED" width="13" begin="31" end="19" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="OVL1INT" width="1" begin="18" end="18" resetval="0x0" description="Free Running Counter 1 Overflow Interrupt Flag. User and privilege mode (read): determines if an interrupt is pending 0 = no interrupt pending 1 = interrupt pending Privilege mode (write): 0 = leaves the bit unchanged 1 = set the bit to 0" range="" rwaccess="R"/>
    <bitfield id="OVL0INT" width="1" begin="17" end="17" resetval="0x0" description="Free Running Counter 0 Overflow Interrupt Flag. User and privilege mode (read): determines if an interrupt is pending 0 = no interrupt pending 1 = interrupt pending Privilege mode (write): 0 = leaves the bit unchanged 1 = set the bit to 0" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="1" begin="16" end="16" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="12" begin="15" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INT3" width="1" begin="3" end="3" resetval="0x0" description="Interrupt Flag 3. User and privilege mode (read): determines if an interrupt is pending 0 = no interrupt pending 1 = interrupt pending Privilege mode (write): 0 = leaves the bit unchanged 1 = set the bit to 0" range="" rwaccess="R"/>
    <bitfield id="INT2" width="1" begin="2" end="2" resetval="0x0" description="Interrupt Flag 2. User and privilege mode (read): determines if an interrupt is pending 0 = no interrupt pending 1 = interrupt pending Privilege mode (write): 0 = leaves the bit unchanged 1 = set the bit to 0" range="" rwaccess="R"/>
    <bitfield id="INT1" width="1" begin="1" end="1" resetval="0x0" description="Interrupt Flag 1. User and privilege mode (read): determines if an interrupt is pending 0 = no interrupt pending 1 = interrupt pending Privilege mode (write): 0 = leaves the bit unchanged 1 = set the bit to 0" range="" rwaccess="R"/>
    <bitfield id="INT0" width="1" begin="0" end="0" resetval="0x0" description="Interrupt Flag 0. User and privilege mode (read): determines if an interrupt is pending 0 = no interrupt pending 1 = interrupt pending Privilege mode (write): 0 = leaves the bit unchanged 1 = set the bit to 0" range="" rwaccess="R"/>
  </register>
  <register id="RTI_DWDCTRL" acronym="RTI_DWDCTRL" offset="0x90" width="32" description="Some of the RTI features described in this section may not be supported on this family of devices. For more information, see , RTI Not Supported Features. This register's functionality is dependent on whether the DWD is implemented to be always enabled or not. If the DWD is always enabled, then the DWD is automatically enabled after system reset is released and cannot be disabled by software. In that case, this register is redundant and any writes to this register have no effect on the DWD functionality. If, however, the DWD is not enabled upon release of system reset, then the software has to write to the DWDCTRL field in order to enable the DWD, as described below. Once enabled, the watchdog can only be disabled by a system reset. The application cannot disable the watchdog. The register also implements a one-time-write constraint. That is, once the application writes to this register to enable the watchdog, all further writes are ignored.">
    <bitfield id="DWDCTRL" width="32" begin="31" end="0" resetval="0x5312ACED" description="Digital Watchdog Control. User and privilege mode (read): 5312ACEDh = DWD counter is disabled. This is the default value. A98559DAh = DWD counter is enabled Any other value = DWD counter state is unchanged (enabled or disabled) Privilege mode (write): A98559DAh = DWD counter is enabled Any other value = State of DWD counter is unchanged (stays enabled or disabled) One-Write Functionality of DWDCTRL Register: The" range="" rwaccess="RW"/>
  </register>
  <register id="RTI_DWDPRLD" acronym="RTI_DWDPRLD" offset="0x94" width="32" description="Some of the RTI features described in this section may not be supported on this family of devices. For more information, see , RTI Not Supported Features.">
    <bitfield id="RESERVED" width="20" begin="31" end="12" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="DWDPRLD" width="12" begin="11" end="0" resetval="0xFFF" description="Digital Watchdog Preload Value. User and privilege mode (read): A read from this register in any CPU mode returns the current preload value. Privilege mode (write): If the DWD is always enabled after reset is released: The DWD starts counting down from the reset value of the counter, that is, 0x002DFFFF. The application can configure the DWD preload register any time before this down counter expires. When the application services the DWD, the preload register contents are copied left-justified into the DWD down counter and it starts counting down from that value. If the DWD is implemented such that the down counter is enabled by software: The DWD preload register can be configured only when the DWD is disabled. Therefore, the application can only configure the DWD preload register before it enables the DWD down counter. The expiration time of the DWD Down Counter can be determined with following equation: ARRAY(0x1F75D70) where:" range="" rwaccess="RW"/>
  </register>
  <register id="RTI_WDSTATUS" acronym="RTI_WDSTATUS" offset="0x98" width="32" description="Some of the RTI features described in this section may not be supported on this family of devices. For more information, see , RTI Not Supported Features. The values of the following status bits will not be affected by a system reset. These bits are cleared by a power up reset, or by the application.">
    <bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="DWWD_ST" width="1" begin="5" end="5" resetval="0x0" description="Windowed Watchdog Status. This bit denotes whether the time-window defined by the windowed watchdog configuration has been violated, or if a wrong key or key sequence was written to service the watchdog. User and privilege mode (read): 0 = no time-window violation has occurred. 1 = a time-window violation has occurred. The watchdog will generate either a system reset or a non-maskable interrupt to the CPU in this case. Privilege mode (write): 0 = leaves the current value unchanged. 1 = clears the bit to 0. This will also clear all other status flags in the" range="" rwaccess="R"/>
    <bitfield id="END_TIME_VIOL" width="1" begin="4" end="4" resetval="0x0" description="Windowed Watchdog End Time Violation Status. This bit denotes whether the end-time defined by the windowed watchdog configuration has been violated. This bit is effectively a copy of the DWD ST status flag. User and priviledge mode (read): 0 = no end-time window violation has occurred. 1 = the end-time defined by the windowed watchdog configuration has been violated. Priviledge mode (write): 0 = leaves the current value unchanged. 1 = clears the bit to 0." range="" rwaccess="R"/>
    <bitfield id="START_TIME_VIOL" width="1" begin="3" end="3" resetval="0x0" description="Windowed Watchdog End Time Violation Status. This bit denotes whether the start-time defined by the windowed watchdog configuration has been violated. This indicates that the WWD was serviced before the service window was opened. User and priviledge mode (read): 0 = no start-time window violation has occurred. 1 = the start-time defined by the windowed watchdog configuration has been violated. Priviledge mode (write): 0 = leaves the current value unchanged. 1 = clears the bit to 0." range="" rwaccess="R"/>
    <bitfield id="KEYST" width="1" begin="2" end="2" resetval="0x0" description="Watchdog KeyStatus." range="" rwaccess="R"/>
    <bitfield id="DWDST" width="1" begin="1" end="1" resetval="0x0" description="Digital Watchdog Status." range="" rwaccess="R"/>
    <bitfield id="AWDST" width="1" begin="0" end="0" resetval="0x0" description="Analog Watchdog Status." range="" rwaccess="R"/>
  </register>
  <register id="RTI_WDKEY" acronym="RTI_WDKEY" offset="0x9C" width="32" description="Some of the RTI features described in this section may not be supported on this family of devices. For more information, see , RTI Not Supported Features.">
    <bitfield id="RESERVED" width="16" begin="31" end="16" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="WDKEY" width="16" begin="15" end="0" resetval="0xA35C" description="Watchdog Key. User and privilege mode reads are indeterminate. Privilege mode (write): A write of 0xE51A followed by 0xA35C in two separate write operations defines the Key Sequence and discharges the watchdog capacitor. This also causes the upper 12 bits of the DWD down counter to be reloaded with the contents of the DWD preload register and the lower 13 bits to become all 1 s. Writing any other value causes a digital watchdog reset. Register write access time precaution: The user has to take into account that the write to the register takes 3 RTI_ICLK cycle. This needs to be considered for the AWD/DWD expiration calculation. Step 1:" range="" rwaccess="RW"/>
  </register>
  <register id="RTI_DWDCNTR" acronym="RTI_DWDCNTR" offset="0xA0" width="32" description="Some of the RTI features described in this section may not be supported on this family of devices. For more information, see , RTI Not Supported Features.">
    <bitfield id="RESERVED" width="7" begin="31" end="25" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="DWDCNTR_24_16" width="9" begin="24" end="16" resetval="0x2D" description="Digital Watchdog Down Counter. The value of the DWDCNTR after a system reset is 0x002DFFFF. When the DWD is enabled and the DWD counter starts counting down from this value with an RTI_FCLK time base of 3MHz, a watchdog reset will be generated in 1 second. User and privilege mode (read): Reads return the current counter value. Privilege mode (write): Writes don t have an effect." range="" rwaccess="R"/>
    <bitfield id="DWDCNTR_15_0" width="16" begin="15" end="0" resetval="0xFFFF" description="Digital Watchdog Down Counter. The value of the DWDCNTR after a system reset is 0x002DFFFF. When the DWD is enabled and the DWD counter starts counting down from this value with an RTI_FCLK time base of 3MHz, a watchdog reset will be generated in 1 second. User and privilege mode (read): Reads return the current counter value. Privilege mode (write): Writes don t have an effect." range="" rwaccess="R"/>
  </register>
  <register id="RTI_WWDRXNCTRL" acronym="RTI_WWDRXNCTRL" offset="0xA4" width="32" description="">
    <bitfield id="RESERVED" width="28" begin="31" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="WWDRXN" width="4" begin="3" end="0" resetval="0x5" description="Digital Windowed Watchdog Reaction. User and privilege mode (read), privileged mode (write): 0x5 = This is the default value. The windowed watchdog will cause a reset if the watchdog is serviced outside the time window defined by the configuration, or if the watchdog is not serviced at all. 0xA = The windowed watchdog will generate a non-maskable interrupt to the CPU if the watchdog is serviced outside the time window defined by the configuration, or if the watchdog is not serviced at all. Writing any other value will cause a system reset if the watchdog is serviced outside the time window defined by the configuration, or if the watchdog is not serviced at all. Configuration of DWWD Reaction: The DWWD reaction can be selected by the application even when the DWWD counter is already enabled. If a change to the WWDRXN is made before the watchdog service window is opened, then the change in the configuration takes effect immediately. If a change to the WWDRXN is made when the watchdog service window is already open, then the change in configuration takes effect only after the watchdog is serviced." range="" rwaccess="RW"/>
  </register>
  <register id="RTI_WWDSIZECTRL" acronym="RTI_WWDSIZECTRL" offset="0xA8" width="16" description="">
    <bitfield id="WWDSIZE" width="16" begin="15" end="0" resetval="0x5" description="Same as below. Digital Windowed Watchdog Window Size. User and privilege mode (read), privileged mode (write): Value written to WWDSIZE: 0x00000005 = 100% Window Size (The functionality is the same as the standard time-out digital watchdog.) Value written to WWDSIZE: 0x00000050 = 50% Window Size Value written to WWDSIZE: 0x00000500 = 25% Window Size Value written to WWDSIZE: 0x00005000 = 12.5% Window Size Value written to WWDSIZE: 0x00050000 = 6.25% Window Size Value written to WWDSIZE: 0x00500000 = 3.125% Window Size Value written to WWDSIZE: Any other value = 3.125% Window Size Incorrect value being written to watchdog window size control register: If an incorrect value is written to the WWDSIZE field, or if a system disturbance causes the WWDSIZE field to have a value other than 0x5, 0x50, 0x500, 0x5000, 0x50000, or 0x500000, then the window size will be configured to be 3.125%. This increases the chances of getting a reset due to the windowed watchdog, which enables the system to handle the cause for the incorrect configuration. Configuration of DWWD Window Size: The DWWD window size can be selected by the application even when the DWWD counter is already enabled. If a change to the WWDSIZE is made before the watchdog service window is opened, then the change in the configuration takes effect immediately. If a change to the WWDSIZE is made when the watchdog service window is already open, then the change in configuration takes effect only after the watchdog is serviced." range="" rwaccess="RW"/>
  </register>
  <register id="RTI_INTCLRENABLE" acronym="RTI_INTCLRENABLE" offset="0xAC" width="32" description="">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INTCLRENABLE3" width="4" begin="27" end="24" resetval="0x5" description="Enables the auto-clear functionality on the compare 3 interrupt. User and Privileged mode (read): 0x5 = Auto-clear for compare 3 interrupt is disabled. Any other value = Auto-clear for compare 3 interrupt is enabled. Privileged mode (write): 0x5 = Disables the auto-clear functionality on the compare 3 interrupt. Any other value = Enables the auto-clear functionality on the compare 3 interrupt." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="23" end="20" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INTCLRENABLE2" width="4" begin="19" end="16" resetval="0x5" description="Enables the auto-clear functionality on the compare 2 interrupt. User and Privileged mode (read): 0x5 = Auto-clear for compare 2 interrupt is disabled. Any other value = Auto-clear for compare 2 interrupt is enabled. Privileged mode (write): 0x5 = Disables the auto-clear functionality on the compare 2 interrupt. Any other value = Enables the auto-clear functionality on the compare 2 interrupt." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="15" end="12" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INTCLRENABLE1" width="4" begin="11" end="8" resetval="0x5" description="Enables the auto-clear functionality on the compare 1 interrupt. User and Privileged mode (read): 0x5 = Auto-clear for compare 1 interrupt is disabled. Any other value = Auto-clear for compare 1 interrupt is enabled. Privileged mode (write): 0x5 = Disables the auto-clear functionality on the compare 1 interrupt. Any other value = Enables the auto-clear functionality on the compare 1 interrupt." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="4" begin="7" end="4" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="INTCLRENABLE0" width="4" begin="3" end="0" resetval="0x5" description="Enables the auto-clear functionality on the compare 0 interrupt. User and Privileged mode (read): 0x5 = Auto-clear for compare 0 interrupt is disabled. Any other value = Auto-clear for compare 0 interrupt is enabled. Privileged mode (write): 0x5 = Disables the auto-clear functionality on the compare 0 interrupt. Any other value = Enables the auto-clear functionality on the compare 0 interrupt. Hook-up of Compare Interrupt to a device pin: The RTI module generates up to 4 compare interrupts. The connection between one or more of these compare interrupt(s) to a device pin is completely device-dependent. Refer to the device datasheet to identify the actual pin(s) that connects to the compare interrupt(s)." range="" rwaccess="RW"/>
  </register>
  <register id="RTI_COMP0CLR" acronym="RTI_COMP0CLR" offset="0xB0" width="32" description="">
    <bitfield id="COMP0CLR" width="32" begin="31" end="0" resetval="0x0" description="Compare 0 Clear. User and privilege mode (read): current compare value Privilege mode (write): update of the compare register with a new compare value Reset behavior: A reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled." range="" rwaccess="RW"/>
  </register>
  <register id="RTI_COMP1CLR" acronym="RTI_COMP1CLR" offset="0xB4" width="32" description="">
    <bitfield id="COMP1CLR" width="32" begin="31" end="0" resetval="0x0" description="Compare 1 Clear. User and privilege mode (read): current compare value Privilege mode (write): update of the compare register with a new compare value Reset behavior: A reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled." range="" rwaccess="RW"/>
  </register>
  <register id="RTI_COMP2CLR" acronym="RTI_COMP2CLR" offset="0xB8" width="32" description="">
    <bitfield id="COMP2CLR" width="32" begin="31" end="0" resetval="0x0" description="Compare 2 Clear. User and privilege mode (read): current compare value Privilege mode (write): update of the compare register with a new compare value Reset behavior: A reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled." range="" rwaccess="RW"/>
  </register>
  <register id="RTI_COMP3CLR" acronym="RTI_COMP3CLR" offset="0xBC" width="32" description="">
    <bitfield id="COMP3CLR" width="32" begin="31" end="0" resetval="0x0" description="Compare 3 Clear. User and privilege mode (read): current compare value Privilege mode (write): update of the compare register with a new compare value Reset behavior: A reset does not generate a compare match, since the compare logic will only be active, when the associated counter block is enabled." range="" rwaccess="RW"/>
  </register>
</module>
