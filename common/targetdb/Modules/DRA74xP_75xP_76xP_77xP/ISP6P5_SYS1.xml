<module name="ISP6P5_SYS1" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="ISP5_REVISION" acronym="ISP5_REVISION" offset="0x0" width="32" description="IP Revision Identifier (X.Y.R) Used by software to track features, bugs, and compatibility">
    <bitfield id="REVISION" width="32" begin="31" end="0" resetval="See" description="IP Revision" range="" rwaccess="R"/>
  </register>
  <register id="ISP5_HWINFO1" acronym="ISP5_HWINFO1" offset="0x4" width="32" description="GENERIC PARAMETER REGISTER Information about the IP module's hardware configuration. Actual field format and encoding is up to the module's designer to decide.">
    <bitfield id="RESERVED" width="3" begin="31" end="29" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="ISIF_RFM_LINE_SIZE" width="13" begin="28" end="16" resetval="0xb00" description="Memory line size for the data reformatter in the ISIF module." range="" rwaccess="R"/>
    <bitfield id="RESERVED" width="3" begin="15" end="13" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_LINE_SIZE" width="13" begin="12" end="0" resetval="0xb00" description="Memory line size for the IPIPE module" range="" rwaccess="R"/>
  </register>
  <register id="ISP5_HWINFO2" acronym="ISP5_HWINFO2" offset="0x8" width="32" description="GENERIC PARAMETER REGISTER Information about the IP module's hardware configuration. Actual field format and encoding is up to the module's designer to decide.">
    <bitfield id="RESERVED" width="19" begin="31" end="13" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="H3A_LINE_SIZE" width="13" begin="12" end="0" resetval="0xb00" description="Memory line size for the H3A module" range="" rwaccess="R"/>
  </register>
  <register id="ISP5_SYSCONFIG" acronym="ISP5_SYSCONFIG" offset="0x10" width="32" description="Clock management configuration">
    <bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="STANDBYMODE" width="2" begin="5" end="4" resetval="0x2" description="Configuration of the local initiator state management mode. By definition, initiator may generate read/write transaction as long as it is out of STANDBY state." range="" rwaccess="RW">
      <bitenum value="0" id="FORCE" token="STANDBYMODE_0" description="Force-standby mode: local initiator is unconditionally placed in standby state. Backup mode, for debug only."/>
      <bitenum value="1" id="NO" token="STANDBYMODE_1" description="No-standby mode: local initiator is unconditionally placed out of standby state. Backup mode, for debug only."/>
      <bitenum value="3" id="RESERVED" token="STANDBYMODE_3" description="Reserved"/>
      <bitenum value="2" id="SMART" token="STANDBYMODE_2" description="Smart-standby mode: local initiator standby status depends on local conditions, i.e. the module's functional requirement from the initiator. IP module shall not generate (initiator-related) wakeup events. Generation of the MStandby signal shall be initiated by the firmware by writing.MSTANDBY = ?1?."/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="3" end="2" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SOFTRESET" width="1" begin="1" end="1" resetval="0x0" description="Software reset. The soft reset will cause the MStandby to be asserted as the reset value of theISP5_CTRL.MSTANDBY bit is 1. After a soft reset, the software shall ensure not to perform any access for 16 clock cycles (OCP-slave port frequency) after writing this bit. The OCP slave port is running at half the frequency of the functional clock. Before issuing a soft reset, the software shall ensure that no more traffic is being generated by the ISP5. Basically, it means that either the camera module shall be stopped from sending data and/or that the ISP5 modules are disabled. The last interrupt triggered by the ISP5 design upon completion of the frame processing is rsz_int_dma. This rsz_int_dma event shall be used to enable clean termination of the processing. The software shall wait a few hundred cycles to trigger the soft reset after upon assertion of the rsz_int_dma, this is to ensure that the BL is completely drained. Furthermore the software shall set the ISP5 in standbymode before issuing the soft reset: Set ISP5_SYSCONFIG.STANDBYMODE = 2 (smart standby) Set ISP5_CTRL.MSTANDBY to ?1? Poll for ISP5_CTRL.MSTANDBY_WAIT = 1. Then, the soft reset can be applied ISP5_SYSCONFIG.SOFTRESET = 1." range="" rwaccess="RW">
      <bitenum value="0" id="DONE" token="SOFTRESET_0" description="Reset done, no pending action"/>
      <bitenum value="1" id="PENDING" token="SOFTRESET_1" description="Reset (software or other) ongoing"/>
    </bitfield>
    <bitfield id="AUTO_IDLE" width="1" begin="0" end="0" resetval="0x1" description="Auto clock gating. Always enabled." range="" rwaccess="R"/>
  </register>
  <register id="ISP5_IRQ_EOI" acronym="ISP5_IRQ_EOI" offset="0x20" width="32" description="End Of Interrupt number specification">
    <bitfield id="RESERVED" width="30" begin="31" end="2" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="LINE_NUMBER" width="2" begin="1" end="0" resetval="0x0" description="Software End Of Interrupt (EOI) control. Write number of interrupt output." range="" rwaccess="RW">
      <bitenum value="0" id="READ0" token="LINE_NUMBER_0" description="Reads always 0 (no EOI memory)"/>
      <bitenum value="1" id="EOI1" token="LINE_NUMBER_1" description="EOI for interrupt output line #1"/>
      <bitenum value="3" id="EOI3" token="LINE_NUMBER_3" description="EOI for interrupt output line #3"/>
      <bitenum value="2" id="EOI2" token="LINE_NUMBER_2" description="EOI for interrupt output line #2"/>
    </bitfield>
  </register>
  <register id="ISP5_IRQSTATUS_RAW" acronym="ISP5_IRQSTATUS_RAW" offset="0x24" width="32" description="Per-event raw interrupt status vector. Raw status is set even if event is not enabled. Write 1 to set the (raw) status, mostly for debug. The ISP5 outputs 4 interrupt lines ISP5_IRQ0 to ISP5_IRQ3. Any internal ISP5 event can be merged on the 4 lines. A same event shall be enabled on only one interrupt line. There is another interrupt register in the memory map, look for2">
    <bitfield id="OCP_ERR_IRQ" width="1" begin="31" end="31" resetval="0x0" description="An OCP error has been received on the ISP5 master port." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="OCP_ERR_IRQ_0" description="No action"/>
      <bitenum value="1" id="SET" token="OCP_ERR_IRQ_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_DPC_RNEW1" width="1" begin="29" end="29" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW1_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_DPC_RNEW1_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_RNEW0" width="1" begin="28" end="28" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW0_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_DPC_RNEW0_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_INI" width="1" begin="27" end="27" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_INI_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_DPC_INI_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_EOF" width="1" begin="25" end="25" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_EOF_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="H3A_INT_EOF" width="1" begin="24" end="24" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="SET" token="H3A_INT_EOF_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF1" width="1" begin="23" end="23" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer B engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF1_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_EOF1_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF0" width="1" begin="22" end="22" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer A engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF0_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_EOF0_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="21" end="20" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RSZ_FIFO_IN_BLK_ERR" width="1" begin="19" end="19" resetval="0x0" description="This event signals that the minimum vertical blanking period has not been respected causing errors in the input data buffering submodule. This event will be triggered when the rsz_int_reg event of frame N is triggered before the rsz_int_dma of frame N + 1. This event would typically happen at the transition between two frames because there is not enough vertical blanking between frames: the firmware shall take care to ensure enough vertical blanking. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_IN_BLK_ERR_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_FIFO_IN_BLK_ERR_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_FIFO_OVF" width="1" begin="18" end="18" resetval="0x0" description="Resizer module overflow This event is set when overflow happens in the RESIZER module. This event would typically happen while processing a frame because the video port pixel clock is too high: the firmware shall take care to use a lower pixel clock at the input of the resizer module. Depending on the mode bein used, the overflow can happen at different places: 1. Bypass mode: overflow happened in the input circular buffer. 2. Pass through mode: overflow happened on the module output interface (MTC) 3. Normal resize mode: overflow happened in the input circular buffer. This event signals that overflow happened in the input data buffering submodule. 1. In normal resizer mode or bypass mode, this event will be triggered when the This event would typically happen while processing a frame because the video port pixel clock is too high: the firmware shall take care to use a lower pixel clock at the input of the resizer module. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_OVF_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_FIFO_OVF_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZB" width="1" begin="17" end="17" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #B. An event can be triggered every time thatRSZ_IRQ_RZB output lines have been written out to the RZB_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, this value should be such that the circular buffer vertical size (set by the RZB_SDR_Y_PTR_E register) is a multiple of RSZ_IRQ_RZB. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZB_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_CYC_RZB_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZA" width="1" begin="16" end="16" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #A. An event can be triggered every time thatRSZ_IRQ_RZA output lines have been written out to the RZA_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, the circular buffer vertical size (set by the RZA_SDR_Y_PTR_E register) should be a multiple of RSZ_IRQ_RZA. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZA_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_CYC_RZA_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_DMA" width="1" begin="15" end="15" resetval="0x0" description="This event is triggered when the last eof (of the two MTC interfaces) is sent out to the BL and that the resizer core has returned to idle. rsz_int_dma is a true indication that all processing is finished for the particular frame on both resizer engines." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_DMA_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_LAST_PIX" width="1" begin="14" end="14" resetval="0x0" description="This event is triggered when the last pixel of the valid area is received." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_LAST_PIX_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_REG" width="1" begin="13" end="13" resetval="0x0" description="This event is triggered when the first pixel of the valid area is received. Shadowed registers can be updated at any time but the new value will take effect on the next rsz_int_reg event." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_REG_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_REG_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="H3A_INT" width="1" begin="12" end="12" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_0" description="No action"/>
      <bitenum value="1" id="SET" token="H3A_INT_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="AF_INT" width="1" begin="11" end="11" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AF_INT_0" description="No action"/>
      <bitenum value="1" id="SET" token="AF_INT_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="AEW_INT" width="1" begin="10" end="10" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AEW_INT_0" description="No action"/>
      <bitenum value="1" id="SET" token="AEW_INT_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPEIF_IRQ" width="1" begin="9" end="9" resetval="0x0" description="IPIPEIF module interrupt" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPEIF_IRQ_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPEIF_IRQ_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_HST" width="1" begin="8" end="8" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_HST_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_HST_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_BSC" width="1" begin="7" end="7" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_BSC_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_BSC_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DMA" width="1" begin="6" end="6" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_DMA_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_LAST_PIX" width="1" begin="5" end="5" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_LAST_PIX_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_REG" width="1" begin="4" end="4" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_REG_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_REG_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="ISIF_INT_3" width="1" begin="3" end="3" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_3_0" description="No action"/>
      <bitenum value="1" id="SET" token="ISIF_INT_3_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="ISIF_INT_2" width="1" begin="2" end="2" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_2_0" description="No action"/>
      <bitenum value="1" id="SET" token="ISIF_INT_2_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="ISIF_INT_1" width="1" begin="1" end="1" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_1_0" description="No action"/>
      <bitenum value="1" id="SET" token="ISIF_INT_1_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="ISIF_INT_0" width="1" begin="0" end="0" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_0_0" description="No action"/>
      <bitenum value="1" id="SET" token="ISIF_INT_0_1" description="Set event (debug)"/>
    </bitfield>
  </register>
  <register id="ISP5_IRQSTATUS" acronym="ISP5_IRQSTATUS" offset="0x28" width="32" description="Per-event 'enabled' interrupt status vector. Enabled status isn't set unless event is enabled. Write 1 to clear the status after interrupt has been serviced (raw status gets cleared, i.e. even if not enabled). The ISP5 outputs 4 interrupt lines ISP5_IRQ0 to ISP5_IRQ3. Any internal ISP5 event can be merged on the 4 lines. A same event shall be enabled on only one interrupt line. There is another interrupt register in the memory map, look for2">
    <bitfield id="OCP_ERR_IRQ" width="1" begin="31" end="31" resetval="0x0" description="An OCP error has been received on the ISP5 master port." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="OCP_ERR_IRQ_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="OCP_ERR_IRQ_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_DPC_RNEW1" width="1" begin="29" end="29" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW1_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_DPC_RNEW1_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_RNEW0" width="1" begin="28" end="28" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW0_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_DPC_RNEW0_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_INI" width="1" begin="27" end="27" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_INI_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_DPC_INI_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_EOF" width="1" begin="25" end="25" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_EOF_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="H3A_INT_EOF" width="1" begin="24" end="24" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="H3A_INT_EOF_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF1" width="1" begin="23" end="23" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer B engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF1_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_EOF1_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF0" width="1" begin="22" end="22" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer A engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF0_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_EOF0_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="21" end="20" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RSZ_FIFO_IN_BLK_ERR" width="1" begin="19" end="19" resetval="0x0" description="This event signals that the minimum vertical blanking period has not been respected causing errors in the input data buffering submodule. This event will be triggered when the rsz_int_reg event of frame N is triggered before the rsz_int_dma of frame N + 1. This event would typically happen at the transition between two frames because there is not enough vertical blanking between frames: the firmware shall take care to ensure enough vertical blanking. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_IN_BLK_ERR_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_FIFO_IN_BLK_ERR_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_FIFO_OVF" width="1" begin="18" end="18" resetval="0x0" description="This event would typically happen while processing a frame because the video port pixel clock is too high: the firmware shall take care to use a lower pixel clock at the input of the resizer module. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_OVF_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_FIFO_OVF_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZB" width="1" begin="17" end="17" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #B. An event can be triggered every time thatRSZ_IRQ_RZB output lines have been written out to the RZB_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, this value should be such that the circular buffer vertical size (set by the RZB_SDR_Y_PTR_E register) is a multiple of RSZ_IRQ_RZB. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZB_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_CYC_RZB_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZA" width="1" begin="16" end="16" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #A. An event can be triggered every time thatRSZ_IRQ_RZA output lines have been written out to the RZA_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, the circular buffer vertical size (set by the RZA_SDR_Y_PTR_E register) should be a multiple of RSZ_IRQ_RZA. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZA_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_CYC_RZA_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_DMA" width="1" begin="15" end="15" resetval="0x0" description="This event is triggered when the last eof (of the two MTC interfaces) is sent out to the BL and that the resizer core has returned to idle. rsz_int_dma is a true indication that all processing is finished for the particular frame on both resizer engines." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_DMA_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_LAST_PIX" width="1" begin="14" end="14" resetval="0x0" description="This event is triggered when the last pixel of the valid area is received." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_LAST_PIX_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_REG" width="1" begin="13" end="13" resetval="0x0" description="This event is triggered when the first pixel of the valid area is received. Shadowed registers can be updated at any time but the new value will take effect on the next rsz_int_reg event." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_REG_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_REG_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="H3A_INT" width="1" begin="12" end="12" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="H3A_INT_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="AF_INT" width="1" begin="11" end="11" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AF_INT_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="AF_INT_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="AEW_INT" width="1" begin="10" end="10" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AEW_INT_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="AEW_INT_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPEIF_IRQ" width="1" begin="9" end="9" resetval="0x0" description="IPIPEIF module interrupt" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPEIF_IRQ_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPEIF_IRQ_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_HST" width="1" begin="8" end="8" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_HST_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_HST_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_BSC" width="1" begin="7" end="7" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_BSC_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_BSC_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DMA" width="1" begin="6" end="6" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_DMA_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_LAST_PIX" width="1" begin="5" end="5" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_LAST_PIX_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_REG" width="1" begin="4" end="4" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_REG_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_REG_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="ISIF_INT_3" width="1" begin="3" end="3" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_3_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="ISIF_INT_3_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="ISIF_INT_2" width="1" begin="2" end="2" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_2_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="ISIF_INT_2_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="ISIF_INT_1" width="1" begin="1" end="1" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_1_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="ISIF_INT_1_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="ISIF_INT_0" width="1" begin="0" end="0" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_0_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="ISIF_INT_0_1" description="Clear (raw) event"/>
    </bitfield>
  </register>
  <register id="ISP5_IRQENABLE_SET" acronym="ISP5_IRQENABLE_SET" offset="0x2C" width="32" description="Per-event interrupt enable bit vector. Write 1 to set (enable interrupt). Readout equal to corresponding _CLR register. The ISP5 outputs 4 interrupt lines ISP5_IRQ0 to ISP5_IRQ3. Any internal ISP5 event can be merged on the 4 lines. A same event shall be enabled on only one interrupt line. There is another interrupt register in the memory map, look for2.">
    <bitfield id="OCP_ERR_IRQ" width="1" begin="31" end="31" resetval="0x0" description="An OCP error has been received on the ISP5 master port." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="OCP_ERR_IRQ_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="OCP_ERR_IRQ_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_DPC_RNEW1" width="1" begin="29" end="29" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW1_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_DPC_RNEW1_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_RNEW0" width="1" begin="28" end="28" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW0_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_DPC_RNEW0_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_INI" width="1" begin="27" end="27" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_INI_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_DPC_INI_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_EOF" width="1" begin="25" end="25" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_EOF_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="H3A_INT_EOF" width="1" begin="24" end="24" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="H3A_INT_EOF_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF1" width="1" begin="23" end="23" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer B engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF1_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_EOF1_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF0" width="1" begin="22" end="22" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer A engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF0_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_EOF0_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="21" end="20" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RSZ_FIFO_IN_BLK_ERR" width="1" begin="19" end="19" resetval="0x0" description="This event signals that the minimum vertical blanking period has not been respected causing errors in the input data buffering submodule. This event will be triggered when the rsz_int_reg event of frame N is triggered before the rsz_int_dma of frame N + 1. This event would typically happen at the transition between two frames because there is not enough vertical blanking between frames: the firmware shall take care to ensure enough vertical blanking. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_IN_BLK_ERR_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_FIFO_IN_BLK_ERR_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_FIFO_OVF" width="1" begin="18" end="18" resetval="0x0" description="This event would typically happen while processing a frame because the video port pixel clock is too high: the firmware shall take care to use a lower pixel clock at the input of the resizer module. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_OVF_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_FIFO_OVF_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZB" width="1" begin="17" end="17" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #B. An event can be triggered every time thatRSZ_IRQ_RZB output lines have been written out to the RZB_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, this value should be such that the circular buffer vertical size (set by the RZB_SDR_Y_PTR_E register) is a multiple of RSZ_IRQ_RZB. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZB_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_CYC_RZB_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZA" width="1" begin="16" end="16" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #A. An event can be triggered every time thatRSZ_IRQ_RZA output lines have been written out to the RZA_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, the circular buffer vertical size (set by the RZA_SDR_Y_PTR_E register) should be a multiple of RSZ_IRQ_RZA. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZA_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_CYC_RZA_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_DMA" width="1" begin="15" end="15" resetval="0x0" description="This event is triggered when the last eof (of the two MTC interfaces) is sent out to the BL and that the resizer core has returned to idle. rsz_int_dma is a true indication that all processing is finished for the particular frame on both resizer engines." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_DMA_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_LAST_PIX" width="1" begin="14" end="14" resetval="0x0" description="This event is triggered when the last pixel of the valid area is received." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_LAST_PIX_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_REG" width="1" begin="13" end="13" resetval="0x0" description="This event is triggered when the first pixel of the valid area is received. Shadowed registers can be updated at any time but the new value will take effect on the next rsz_int_reg event." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_REG_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_REG_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="H3A_INT" width="1" begin="12" end="12" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="H3A_INT_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="AF_INT" width="1" begin="11" end="11" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AF_INT_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="AF_INT_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="AEW_INT" width="1" begin="10" end="10" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AEW_INT_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="AEW_INT_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPEIF_IRQ" width="1" begin="9" end="9" resetval="0x0" description="IPIPEIF module interrupt" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPEIF_IRQ_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPEIF_IRQ_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_HST" width="1" begin="8" end="8" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_HST_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_HST_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_BSC" width="1" begin="7" end="7" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_BSC_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_BSC_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DMA" width="1" begin="6" end="6" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_DMA_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_LAST_PIX" width="1" begin="5" end="5" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_LAST_PIX_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_REG" width="1" begin="4" end="4" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_REG_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_REG_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_3" width="1" begin="3" end="3" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_3_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="ISIF_INT_3_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_2" width="1" begin="2" end="2" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_2_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="ISIF_INT_2_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_1" width="1" begin="1" end="1" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_1_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="ISIF_INT_1_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_0" width="1" begin="0" end="0" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_0_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="ISIF_INT_0_1" description="Enable interrupt"/>
    </bitfield>
  </register>
  <register id="ISP5_IRQENABLE_CLR" acronym="ISP5_IRQENABLE_CLR" offset="0x30" width="32" description="Per-event interrupt enable bit vector. Write 1 to clear (disable interrupt). Readout equal to corresponding _SET register. The ISP5 outputs 4 interrupt lines ISP5_IRQ0 to ISP5_IRQ3. Any internal ISP5 event can be merged on the 4 lines. A same event shall be enabled on only one interrupt line. There is another interrupt register in the memory map, look for2.">
    <bitfield id="OCP_ERR_IRQ" width="1" begin="31" end="31" resetval="0x0" description="An OCP error has been received on the ISP5 master port." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="OCP_ERR_IRQ_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="OCP_ERR_IRQ_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_DPC_RNEW1" width="1" begin="29" end="29" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW1_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_DPC_RNEW1_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_RNEW0" width="1" begin="28" end="28" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW0_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_DPC_RNEW0_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_INI" width="1" begin="27" end="27" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_INI_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_DPC_INI_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_EOF" width="1" begin="25" end="25" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_EOF_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="H3A_INT_EOF" width="1" begin="24" end="24" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="H3A_INT_EOF_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF1" width="1" begin="23" end="23" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer B engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF1_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_EOF1_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF0" width="1" begin="22" end="22" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer A engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF0_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_EOF0_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="21" end="20" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RSZ_FIFO_IN_BLK_ERR" width="1" begin="19" end="19" resetval="0x0" description="This event signals that the minimum vertical blanking period has not been respected causing errors in the input data buffering submodule. This event will be triggered when the rsz_int_reg event of frame N is triggered before the rsz_int_dma of frame N + 1. This event would typically happen at the transition between two frames because there is not enough vertical blanking between frames: the firmware shall take care to ensure enough vertical blanking. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_IN_BLK_ERR_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_FIFO_IN_BLK_ERR_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_FIFO_OVF" width="1" begin="18" end="18" resetval="0x0" description="This event would typically happen while processing a frame because the video port pixel clock is too high: the firmware shall take care to use a lower pixel clock at the input of the resizer module. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_OVF_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_FIFO_OVF_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZB" width="1" begin="17" end="17" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #B. An event can be triggered every time thatRSZ_IRQ_RZB output lines have been written out to the RZB_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, this value should be such that the circular buffer vertical size (set by the RZB_SDR_Y_PTR_E register) is a multiple of RSZ_IRQ_RZB. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZB_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_CYC_RZB_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZA" width="1" begin="16" end="16" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #A. An event can be triggered every time thatRSZ_IRQ_RZA output lines have been written out to the RZA_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, the circular buffer vertical size (set by the RZA_SDR_Y_PTR_E register) should be a multiple of RSZ_IRQ_RZA. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZA_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_CYC_RZA_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_DMA" width="1" begin="15" end="15" resetval="0x0" description="RESIZER module event: This event is triggered when the last eof (of the two MTC interfaces) is sent out to the BL and that the resizer core has returned to idle. rsz_int_dma is a true indication that all processing is finished for the particular frame on both resizer engines." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_DMA_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_LAST_PIX" width="1" begin="14" end="14" resetval="0x0" description="RESIZER module event: This event is triggered when the last pixel of the valid area is received." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_LAST_PIX_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_REG" width="1" begin="13" end="13" resetval="0x0" description="RESIZER module event: This event is triggered when the first pixel of the valid area is received. Shadowed registers can be updated at any time but the new value will take effect on the next rsz_int_reg event." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_REG_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_REG_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="H3A_INT" width="1" begin="12" end="12" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="H3A_INT_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="AF_INT" width="1" begin="11" end="11" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AF_INT_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="AF_INT_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="AEW_INT" width="1" begin="10" end="10" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AEW_INT_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="AEW_INT_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPEIF_IRQ" width="1" begin="9" end="9" resetval="0x0" description="IPIPEIF module interrupt" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPEIF_IRQ_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPEIF_IRQ_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_HST" width="1" begin="8" end="8" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_HST_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_HST_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_BSC" width="1" begin="7" end="7" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_BSC_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_BSC_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DMA" width="1" begin="6" end="6" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_DMA_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_LAST_PIX" width="1" begin="5" end="5" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_LAST_PIX_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_REG" width="1" begin="4" end="4" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_REG_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_REG_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_3" width="1" begin="3" end="3" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_3_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="ISIF_INT_3_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_2" width="1" begin="2" end="2" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_2_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="ISIF_INT_2_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_1" width="1" begin="1" end="1" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_1_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="ISIF_INT_1_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_0" width="1" begin="0" end="0" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_0_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="ISIF_INT_0_1" description="Disable interrupt"/>
    </bitfield>
  </register>
  <register id="ISP5_IRQSTATUS_RAW_1" acronym="ISP5_IRQSTATUS_RAW_1" offset="0x34" width="32" description="Per-event raw interrupt status vector. Raw status is set even if event is not enabled. Write 1 to set the (raw) status, mostly for debug. The ISP5 outputs 4 interrupt lines ISP5_IRQ0 to ISP5_IRQ3. Any internal ISP5 event can be merged on the 4 lines. A same event shall be enabled on only one interrupt line. There is another interrupt register in the memory map, look for2">
    <bitfield id="OCP_ERR_IRQ" width="1" begin="31" end="31" resetval="0x0" description="An OCP error has been received on the ISP5 master port." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="OCP_ERR_IRQ_0" description="No action"/>
      <bitenum value="1" id="SET" token="OCP_ERR_IRQ_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_DPC_RNEW1" width="1" begin="29" end="29" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW1_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_DPC_RNEW1_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_RNEW0" width="1" begin="28" end="28" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW0_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_DPC_RNEW0_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_INI" width="1" begin="27" end="27" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_INI_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_DPC_INI_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_EOF" width="1" begin="25" end="25" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_EOF_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="H3A_INT_EOF" width="1" begin="24" end="24" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="SET" token="H3A_INT_EOF_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF1" width="1" begin="23" end="23" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer B engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF1_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_EOF1_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF0" width="1" begin="22" end="22" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer A engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF0_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_EOF0_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="21" end="20" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RSZ_FIFO_IN_BLK_ERR" width="1" begin="19" end="19" resetval="0x0" description="This event signals that the minimum vertical blanking period has not been respected causing errors in the input data buffering submodule. This event will be triggered when the rsz_int_reg event of frame N is triggered before the rsz_int_dma of frame N + 1. This event would typically happen at the transition between two frames because there is not enough vertical blanking between frames: the firmware shall take care to ensure enough vertical blanking. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_IN_BLK_ERR_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_FIFO_IN_BLK_ERR_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_FIFO_OVF" width="1" begin="18" end="18" resetval="0x0" description="Resizer module overflow This event is set when overflow happens in the RESIZER module. This event would typically happen while processing a frame because the video port pixel clock is too high: the firmware shall take care to use a lower pixel clock at the input of the resizer module. Depending on the mode bein used, the overflow can happen at different places: 1. Bypass mode: overflow happened in the input circular buffer. 2. Pass through mode: overflow happened on the module output interface (MTC) 3. Normal resize mode: overflow happened in the input circular buffer. This event signals that overflow happened in the input data buffering submodule. 1. In normal resizer mode or bypass mode, this event will be triggered when the This event would typically happen while processing a frame because the video port pixel clock is too high: the firmware shall take care to use a lower pixel clock at the input of the resizer module. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_OVF_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_FIFO_OVF_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZB" width="1" begin="17" end="17" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #B. An event can be triggered every time thatRSZ_IRQ_RZB output lines have been written out to the RZB_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, this value should be such that the circular buffer vertical size (set by the RZB_SDR_Y_PTR_E register) is a multiple of RSZ_IRQ_RZB. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZB_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_CYC_RZB_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZA" width="1" begin="16" end="16" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #A. An event can be triggered every time thatRSZ_IRQ_RZA output lines have been written out to the RZA_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, the circular buffer vertical size (set by the RZA_SDR_Y_PTR_E register) should be a multiple of RSZ_IRQ_RZA. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZA_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_CYC_RZA_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_DMA" width="1" begin="15" end="15" resetval="0x0" description="This event is triggered when the last eof (of the two MTC interfaces) is sent out to the BL and that the resizer core has returned to idle. rsz_int_dma is a true indication that all processing is finished for the particular frame on both resizer engines." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_DMA_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_LAST_PIX" width="1" begin="14" end="14" resetval="0x0" description="This event is triggered when the last pixel of the valid area is received." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_LAST_PIX_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_REG" width="1" begin="13" end="13" resetval="0x0" description="This event is triggered when the first pixel of the valid area is received. Shadowed registers can be updated at any time but the new value will take effect on the next rsz_int_reg event." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_REG_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_REG_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="H3A_INT" width="1" begin="12" end="12" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_0" description="No action"/>
      <bitenum value="1" id="SET" token="H3A_INT_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="AF_INT" width="1" begin="11" end="11" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AF_INT_0" description="No action"/>
      <bitenum value="1" id="SET" token="AF_INT_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="AEW_INT" width="1" begin="10" end="10" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AEW_INT_0" description="No action"/>
      <bitenum value="1" id="SET" token="AEW_INT_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPEIF_IRQ" width="1" begin="9" end="9" resetval="0x0" description="IPIPEIF module interrupt" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPEIF_IRQ_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPEIF_IRQ_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_HST" width="1" begin="8" end="8" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_HST_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_HST_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_BSC" width="1" begin="7" end="7" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_BSC_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_BSC_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DMA" width="1" begin="6" end="6" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_DMA_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_LAST_PIX" width="1" begin="5" end="5" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_LAST_PIX_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_REG" width="1" begin="4" end="4" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_REG_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_REG_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="ISIF_INT_3" width="1" begin="3" end="3" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_3_0" description="No action"/>
      <bitenum value="1" id="SET" token="ISIF_INT_3_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="ISIF_INT_2" width="1" begin="2" end="2" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_2_0" description="No action"/>
      <bitenum value="1" id="SET" token="ISIF_INT_2_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="ISIF_INT_1" width="1" begin="1" end="1" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_1_0" description="No action"/>
      <bitenum value="1" id="SET" token="ISIF_INT_1_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="ISIF_INT_0" width="1" begin="0" end="0" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_0_0" description="No action"/>
      <bitenum value="1" id="SET" token="ISIF_INT_0_1" description="Set event (debug)"/>
    </bitfield>
  </register>
  <register id="ISP5_IRQSTATUS_1" acronym="ISP5_IRQSTATUS_1" offset="0x38" width="32" description="Per-event 'enabled' interrupt status vector. Enabled status isn't set unless event is enabled. Write 1 to clear the status after interrupt has been serviced (raw status gets cleared, i.e. even if not enabled). The ISP5 outputs 4 interrupt lines ISP5_IRQ0 to ISP5_IRQ3. Any internal ISP5 event can be merged on the 4 lines. A same event shall be enabled on only one interrupt line. There is another interrupt register in the memory map, look for2">
    <bitfield id="OCP_ERR_IRQ" width="1" begin="31" end="31" resetval="0x0" description="An OCP error has been received on the ISP5 master port." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="OCP_ERR_IRQ_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="OCP_ERR_IRQ_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_DPC_RNEW1" width="1" begin="29" end="29" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW1_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_DPC_RNEW1_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_RNEW0" width="1" begin="28" end="28" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW0_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_DPC_RNEW0_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_INI" width="1" begin="27" end="27" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_INI_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_DPC_INI_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_EOF" width="1" begin="25" end="25" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_EOF_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="H3A_INT_EOF" width="1" begin="24" end="24" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="H3A_INT_EOF_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF1" width="1" begin="23" end="23" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer B engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF1_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_EOF1_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF0" width="1" begin="22" end="22" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer A engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF0_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_EOF0_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="21" end="20" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RSZ_FIFO_IN_BLK_ERR" width="1" begin="19" end="19" resetval="0x0" description="This event signals that the minimum vertical blanking period has not been respected causing errors in the input data buffering submodule. This event will be triggered when the rsz_int_reg event of frame N is triggered before the rsz_int_dma of frame N + 1. This event would typically happen at the transition between two frames because there is not enough vertical blanking between frames: the firmware shall take care to ensure enough vertical blanking. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_IN_BLK_ERR_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_FIFO_IN_BLK_ERR_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_FIFO_OVF" width="1" begin="18" end="18" resetval="0x0" description="This event would typically happen while processing a frame because the video port pixel clock is too high: the firmware shall take care to use a lower pixel clock at the input of the resizer module. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_OVF_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_FIFO_OVF_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZB" width="1" begin="17" end="17" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #B. An event can be triggered every time thatRSZ_IRQ_RZB output lines have been written out to the RZB_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, this value should be such that the circular buffer vertical size (set by the RZB_SDR_Y_PTR_E register) is a multiple of RSZ_IRQ_RZB. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZB_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_CYC_RZB_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZA" width="1" begin="16" end="16" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #A. An event can be triggered every time thatRSZ_IRQ_RZA output lines have been written out to the RZA_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, the circular buffer vertical size (set by the RZA_SDR_Y_PTR_E register) should be a multiple of RSZ_IRQ_RZA. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZA_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_CYC_RZA_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_DMA" width="1" begin="15" end="15" resetval="0x0" description="This event is triggered when the last eof (of the two MTC interfaces) is sent out to the BL and that the resizer core has returned to idle. rsz_int_dma is a true indication that all processing is finished for the particular frame on both resizer engines." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_DMA_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_LAST_PIX" width="1" begin="14" end="14" resetval="0x0" description="This event is triggered when the last pixel of the valid area is received." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_LAST_PIX_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_REG" width="1" begin="13" end="13" resetval="0x0" description="This event is triggered when the first pixel of the valid area is received. Shadowed registers can be updated at any time but the new value will take effect on the next rsz_int_reg event." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_REG_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_REG_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="H3A_INT" width="1" begin="12" end="12" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="H3A_INT_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="AF_INT" width="1" begin="11" end="11" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AF_INT_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="AF_INT_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="AEW_INT" width="1" begin="10" end="10" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AEW_INT_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="AEW_INT_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPEIF_IRQ" width="1" begin="9" end="9" resetval="0x0" description="IPIPEIF module interrupt" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPEIF_IRQ_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPEIF_IRQ_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_HST" width="1" begin="8" end="8" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_HST_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_HST_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_BSC" width="1" begin="7" end="7" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_BSC_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_BSC_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DMA" width="1" begin="6" end="6" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_DMA_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_LAST_PIX" width="1" begin="5" end="5" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_LAST_PIX_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_REG" width="1" begin="4" end="4" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_REG_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_REG_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="ISIF_INT_3" width="1" begin="3" end="3" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_3_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="ISIF_INT_3_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="ISIF_INT_2" width="1" begin="2" end="2" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_2_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="ISIF_INT_2_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="ISIF_INT_1" width="1" begin="1" end="1" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_1_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="ISIF_INT_1_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="ISIF_INT_0" width="1" begin="0" end="0" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_0_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="ISIF_INT_0_1" description="Clear (raw) event"/>
    </bitfield>
  </register>
  <register id="ISP5_IRQENABLE_SET_1" acronym="ISP5_IRQENABLE_SET_1" offset="0x3C" width="32" description="Per-event interrupt enable bit vector. Write 1 to set (enable interrupt). Readout equal to corresponding _CLR register. The ISP5 outputs 4 interrupt lines ISP5_IRQ0 to ISP5_IRQ3. Any internal ISP5 event can be merged on the 4 lines. A same event shall be enabled on only one interrupt line. There is another interrupt register in the memory map, look for2.">
    <bitfield id="OCP_ERR_IRQ" width="1" begin="31" end="31" resetval="0x0" description="An OCP error has been received on the ISP5 master port." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="OCP_ERR_IRQ_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="OCP_ERR_IRQ_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_DPC_RNEW1" width="1" begin="29" end="29" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW1_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_DPC_RNEW1_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_RNEW0" width="1" begin="28" end="28" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW0_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_DPC_RNEW0_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_INI" width="1" begin="27" end="27" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_INI_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_DPC_INI_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_EOF" width="1" begin="25" end="25" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_EOF_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="H3A_INT_EOF" width="1" begin="24" end="24" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="H3A_INT_EOF_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF1" width="1" begin="23" end="23" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer B engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF1_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_EOF1_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF0" width="1" begin="22" end="22" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer A engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF0_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_EOF0_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="21" end="20" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RSZ_FIFO_IN_BLK_ERR" width="1" begin="19" end="19" resetval="0x0" description="This event signals that the minimum vertical blanking period has not been respected causing errors in the input data buffering submodule. This event will be triggered when the rsz_int_reg event of frame N is triggered before the rsz_int_dma of frame N + 1. This event would typically happen at the transition between two frames because there is not enough vertical blanking between frames: the firmware shall take care to ensure enough vertical blanking. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_IN_BLK_ERR_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_FIFO_IN_BLK_ERR_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_FIFO_OVF" width="1" begin="18" end="18" resetval="0x0" description="This event would typically happen while processing a frame because the video port pixel clock is too high: the firmware shall take care to use a lower pixel clock at the input of the resizer module. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_OVF_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_FIFO_OVF_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZB" width="1" begin="17" end="17" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #B. An event can be triggered every time thatRSZ_IRQ_RZB output lines have been written out to the RZB_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, this value should be such that the circular buffer vertical size (set by the RZB_SDR_Y_PTR_E register) is a multiple of RSZ_IRQ_RZB. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZB_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_CYC_RZB_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZA" width="1" begin="16" end="16" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #A. An event can be triggered every time thatRSZ_IRQ_RZA output lines have been written out to the RZA_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, the circular buffer vertical size (set by the RZA_SDR_Y_PTR_E register) should be a multiple of RSZ_IRQ_RZA. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZA_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_CYC_RZA_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_DMA" width="1" begin="15" end="15" resetval="0x0" description="This event is triggered when the last eof (of the two MTC interfaces) is sent out to the BL and that the resizer core has returned to idle. rsz_int_dma is a true indication that all processing is finished for the particular frame on both resizer engines." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_DMA_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_LAST_PIX" width="1" begin="14" end="14" resetval="0x0" description="This event is triggered when the last pixel of the valid area is received." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_LAST_PIX_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_REG" width="1" begin="13" end="13" resetval="0x0" description="This event is triggered when the first pixel of the valid area is received. Shadowed registers can be updated at any time but the new value will take effect on the next rsz_int_reg event." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_REG_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_REG_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="H3A_INT" width="1" begin="12" end="12" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="H3A_INT_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="AF_INT" width="1" begin="11" end="11" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AF_INT_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="AF_INT_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="AEW_INT" width="1" begin="10" end="10" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AEW_INT_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="AEW_INT_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPEIF_IRQ" width="1" begin="9" end="9" resetval="0x0" description="IPIPEIF module interrupt" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPEIF_IRQ_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPEIF_IRQ_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_HST" width="1" begin="8" end="8" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_HST_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_HST_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_BSC" width="1" begin="7" end="7" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_BSC_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_BSC_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DMA" width="1" begin="6" end="6" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_DMA_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_LAST_PIX" width="1" begin="5" end="5" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_LAST_PIX_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_REG" width="1" begin="4" end="4" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_REG_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_REG_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_3" width="1" begin="3" end="3" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_3_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="ISIF_INT_3_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_2" width="1" begin="2" end="2" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_2_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="ISIF_INT_2_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_1" width="1" begin="1" end="1" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_1_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="ISIF_INT_1_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_0" width="1" begin="0" end="0" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_0_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="ISIF_INT_0_1" description="Enable interrupt"/>
    </bitfield>
  </register>
  <register id="ISP5_IRQENABLE_CLR_1" acronym="ISP5_IRQENABLE_CLR_1" offset="0x40" width="32" description="Per-event interrupt enable bit vector. Write 1 to clear (disable interrupt). Readout equal to corresponding _SET register. The ISP5 outputs 4 interrupt lines ISP5_IRQ0 to ISP5_IRQ3. Any internal ISP5 event can be merged on the 4 lines. A same event shall be enabled on only one interrupt line. There is another interrupt register in the memory map, look for2.">
    <bitfield id="OCP_ERR_IRQ" width="1" begin="31" end="31" resetval="0x0" description="An OCP error has been received on the ISP5 master port." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="OCP_ERR_IRQ_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="OCP_ERR_IRQ_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_DPC_RNEW1" width="1" begin="29" end="29" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW1_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_DPC_RNEW1_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_RNEW0" width="1" begin="28" end="28" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW0_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_DPC_RNEW0_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_INI" width="1" begin="27" end="27" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_INI_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_DPC_INI_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_EOF" width="1" begin="25" end="25" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_EOF_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="H3A_INT_EOF" width="1" begin="24" end="24" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="H3A_INT_EOF_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF1" width="1" begin="23" end="23" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer B engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF1_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_EOF1_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF0" width="1" begin="22" end="22" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer A engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF0_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_EOF0_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="21" end="20" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RSZ_FIFO_IN_BLK_ERR" width="1" begin="19" end="19" resetval="0x0" description="This event signals that the minimum vertical blanking period has not been respected causing errors in the input data buffering submodule. This event will be triggered when the rsz_int_reg event of frame N is triggered before the rsz_int_dma of frame N + 1. This event would typically happen at the transition between two frames because there is not enough vertical blanking between frames: the firmware shall take care to ensure enough vertical blanking. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_IN_BLK_ERR_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_FIFO_IN_BLK_ERR_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_FIFO_OVF" width="1" begin="18" end="18" resetval="0x0" description="This event would typically happen while processing a frame because the video port pixel clock is too high: the firmware shall take care to use a lower pixel clock at the input of the resizer module. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_OVF_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_FIFO_OVF_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZB" width="1" begin="17" end="17" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #B. An event can be triggered every time thatRSZ_IRQ_RZB output lines have been written out to the RZB_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, this value should be such that the circular buffer vertical size (set by the RZB_SDR_Y_PTR_E register) is a multiple of RSZ_IRQ_RZB. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZB_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_CYC_RZB_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZA" width="1" begin="16" end="16" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #A. An event can be triggered every time thatRSZ_IRQ_RZA output lines have been written out to the RZA_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, the circular buffer vertical size (set by the RZA_SDR_Y_PTR_E register) should be a multiple of RSZ_IRQ_RZA. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZA_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_CYC_RZA_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_DMA" width="1" begin="15" end="15" resetval="0x0" description="RESIZER module event: This event is triggered when the last eof (of the two MTC interfaces) is sent out to the BL and that the resizer core has returned to idle. rsz_int_dma is a true indication that all processing is finished for the particular frame on both resizer engines." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_DMA_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_LAST_PIX" width="1" begin="14" end="14" resetval="0x0" description="RESIZER module event: This event is triggered when the last pixel of the valid area is received." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_LAST_PIX_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_REG" width="1" begin="13" end="13" resetval="0x0" description="RESIZER module event: This event is triggered when the first pixel of the valid area is received. Shadowed registers can be updated at any time but the new value will take effect on the next rsz_int_reg event." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_REG_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_REG_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="H3A_INT" width="1" begin="12" end="12" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="H3A_INT_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="AF_INT" width="1" begin="11" end="11" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AF_INT_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="AF_INT_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="AEW_INT" width="1" begin="10" end="10" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AEW_INT_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="AEW_INT_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPEIF_IRQ" width="1" begin="9" end="9" resetval="0x0" description="IPIPEIF module interrupt" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPEIF_IRQ_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPEIF_IRQ_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_HST" width="1" begin="8" end="8" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_HST_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_HST_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_BSC" width="1" begin="7" end="7" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_BSC_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_BSC_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DMA" width="1" begin="6" end="6" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_DMA_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_LAST_PIX" width="1" begin="5" end="5" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_LAST_PIX_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_REG" width="1" begin="4" end="4" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_REG_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_REG_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_3" width="1" begin="3" end="3" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_3_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="ISIF_INT_3_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_2" width="1" begin="2" end="2" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_2_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="ISIF_INT_2_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_1" width="1" begin="1" end="1" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_1_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="ISIF_INT_1_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_0" width="1" begin="0" end="0" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_0_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="ISIF_INT_0_1" description="Disable interrupt"/>
    </bitfield>
  </register>
  <register id="ISP5_IRQSTATUS_RAW_2" acronym="ISP5_IRQSTATUS_RAW_2" offset="0x44" width="32" description="Per-event raw interrupt status vector. Raw status is set even if event is not enabled. Write 1 to set the (raw) status, mostly for debug. The ISP5 outputs 4 interrupt lines ISP5_IRQ0 to ISP5_IRQ3. Any internal ISP5 event can be merged on the 4 lines. A same event shall be enabled on only one interrupt line. There is another interrupt register in the memory map, look for2">
    <bitfield id="OCP_ERR_IRQ" width="1" begin="31" end="31" resetval="0x0" description="An OCP error has been received on the ISP5 master port." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="OCP_ERR_IRQ_0" description="No action"/>
      <bitenum value="1" id="SET" token="OCP_ERR_IRQ_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_DPC_RNEW1" width="1" begin="29" end="29" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW1_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_DPC_RNEW1_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_RNEW0" width="1" begin="28" end="28" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW0_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_DPC_RNEW0_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_INI" width="1" begin="27" end="27" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_INI_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_DPC_INI_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_EOF" width="1" begin="25" end="25" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_EOF_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="H3A_INT_EOF" width="1" begin="24" end="24" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="SET" token="H3A_INT_EOF_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF1" width="1" begin="23" end="23" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer B engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF1_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_EOF1_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF0" width="1" begin="22" end="22" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer A engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF0_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_EOF0_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="21" end="20" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RSZ_FIFO_IN_BLK_ERR" width="1" begin="19" end="19" resetval="0x0" description="This event signals that the minimum vertical blanking period has not been respected causing errors in the input data buffering submodule. This event will be triggered when the rsz_int_reg event of frame N is triggered before the rsz_int_dma of frame N + 1. This event would typically happen at the transition between two frames because there is not enough vertical blanking between frames: the firmware shall take care to ensure enough vertical blanking. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_IN_BLK_ERR_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_FIFO_IN_BLK_ERR_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_FIFO_OVF" width="1" begin="18" end="18" resetval="0x0" description="Resizer module overflow This event is set when overflow happens in the RESIZER module. This event would typically happen while processing a frame because the video port pixel clock is too high: the firmware shall take care to use a lower pixel clock at the input of the resizer module. Depending on the mode bein used, the overflow can happen at different places: 1. Bypass mode: overflow happened in the input circular buffer. 2. Pass through mode: overflow happened on the module output interface (MTC) 3. Normal resize mode: overflow happened in the input circular buffer. This event signals that overflow happened in the input data buffering submodule. 1. In normal resizer mode or bypass mode, this event will be triggered when the This event would typically happen while processing a frame because the video port pixel clock is too high: the firmware shall take care to use a lower pixel clock at the input of the resizer module. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_OVF_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_FIFO_OVF_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZB" width="1" begin="17" end="17" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #B. An event can be triggered every time thatRSZ_IRQ_RZB output lines have been written out to the RZB_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, this value should be such that the circular buffer vertical size (set by the RZB_SDR_Y_PTR_E register) is a multiple of RSZ_IRQ_RZB. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZB_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_CYC_RZB_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZA" width="1" begin="16" end="16" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #A. An event can be triggered every time thatRSZ_IRQ_RZA output lines have been written out to the RZA_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, the circular buffer vertical size (set by the RZA_SDR_Y_PTR_E register) should be a multiple of RSZ_IRQ_RZA. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZA_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_CYC_RZA_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_DMA" width="1" begin="15" end="15" resetval="0x0" description="This event is triggered when the last eof (of the two MTC interfaces) is sent out to the BL and that the resizer core has returned to idle. rsz_int_dma is a true indication that all processing is finished for the particular frame on both resizer engines." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_DMA_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_LAST_PIX" width="1" begin="14" end="14" resetval="0x0" description="This event is triggered when the last pixel of the valid area is received." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_LAST_PIX_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_REG" width="1" begin="13" end="13" resetval="0x0" description="This event is triggered when the first pixel of the valid area is received. Shadowed registers can be updated at any time but the new value will take effect on the next rsz_int_reg event." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_REG_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_REG_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="H3A_INT" width="1" begin="12" end="12" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_0" description="No action"/>
      <bitenum value="1" id="SET" token="H3A_INT_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="AF_INT" width="1" begin="11" end="11" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AF_INT_0" description="No action"/>
      <bitenum value="1" id="SET" token="AF_INT_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="AEW_INT" width="1" begin="10" end="10" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AEW_INT_0" description="No action"/>
      <bitenum value="1" id="SET" token="AEW_INT_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPEIF_IRQ" width="1" begin="9" end="9" resetval="0x0" description="IPIPEIF module interrupt" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPEIF_IRQ_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPEIF_IRQ_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_HST" width="1" begin="8" end="8" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_HST_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_HST_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_BSC" width="1" begin="7" end="7" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_BSC_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_BSC_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DMA" width="1" begin="6" end="6" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_DMA_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_LAST_PIX" width="1" begin="5" end="5" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_LAST_PIX_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_REG" width="1" begin="4" end="4" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_REG_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_REG_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="ISIF_INT_3" width="1" begin="3" end="3" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_3_0" description="No action"/>
      <bitenum value="1" id="SET" token="ISIF_INT_3_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="ISIF_INT_2" width="1" begin="2" end="2" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_2_0" description="No action"/>
      <bitenum value="1" id="SET" token="ISIF_INT_2_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="ISIF_INT_1" width="1" begin="1" end="1" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_1_0" description="No action"/>
      <bitenum value="1" id="SET" token="ISIF_INT_1_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="ISIF_INT_0" width="1" begin="0" end="0" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_0_0" description="No action"/>
      <bitenum value="1" id="SET" token="ISIF_INT_0_1" description="Set event (debug)"/>
    </bitfield>
  </register>
  <register id="ISP5_IRQSTATUS_2" acronym="ISP5_IRQSTATUS_2" offset="0x48" width="32" description="Per-event 'enabled' interrupt status vector. Enabled status isn't set unless event is enabled. Write 1 to clear the status after interrupt has been serviced (raw status gets cleared, i.e. even if not enabled). The ISP5 outputs 4 interrupt lines ISP5_IRQ0 to ISP5_IRQ3. Any internal ISP5 event can be merged on the 4 lines. A same event shall be enabled on only one interrupt line. There is another interrupt register in the memory map, look for2">
    <bitfield id="OCP_ERR_IRQ" width="1" begin="31" end="31" resetval="0x0" description="An OCP error has been received on the ISP5 master port." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="OCP_ERR_IRQ_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="OCP_ERR_IRQ_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_DPC_RNEW1" width="1" begin="29" end="29" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW1_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_DPC_RNEW1_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_RNEW0" width="1" begin="28" end="28" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW0_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_DPC_RNEW0_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_INI" width="1" begin="27" end="27" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_INI_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_DPC_INI_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_EOF" width="1" begin="25" end="25" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_EOF_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="H3A_INT_EOF" width="1" begin="24" end="24" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="H3A_INT_EOF_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF1" width="1" begin="23" end="23" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer B engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF1_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_EOF1_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF0" width="1" begin="22" end="22" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer A engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF0_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_EOF0_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="21" end="20" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RSZ_FIFO_IN_BLK_ERR" width="1" begin="19" end="19" resetval="0x0" description="This event signals that the minimum vertical blanking period has not been respected causing errors in the input data buffering submodule. This event will be triggered when the rsz_int_reg event of frame N is triggered before the rsz_int_dma of frame N + 1. This event would typically happen at the transition between two frames because there is not enough vertical blanking between frames: the firmware shall take care to ensure enough vertical blanking. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_IN_BLK_ERR_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_FIFO_IN_BLK_ERR_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_FIFO_OVF" width="1" begin="18" end="18" resetval="0x0" description="This event would typically happen while processing a frame because the video port pixel clock is too high: the firmware shall take care to use a lower pixel clock at the input of the resizer module. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_OVF_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_FIFO_OVF_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZB" width="1" begin="17" end="17" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #B. An event can be triggered every time thatRSZ_IRQ_RZB output lines have been written out to the RZB_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, this value should be such that the circular buffer vertical size (set by the RZB_SDR_Y_PTR_E register) is a multiple of RSZ_IRQ_RZB. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZB_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_CYC_RZB_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZA" width="1" begin="16" end="16" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #A. An event can be triggered every time thatRSZ_IRQ_RZA output lines have been written out to the RZA_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, the circular buffer vertical size (set by the RZA_SDR_Y_PTR_E register) should be a multiple of RSZ_IRQ_RZA. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZA_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_CYC_RZA_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_DMA" width="1" begin="15" end="15" resetval="0x0" description="This event is triggered when the last eof (of the two MTC interfaces) is sent out to the BL and that the resizer core has returned to idle. rsz_int_dma is a true indication that all processing is finished for the particular frame on both resizer engines." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_DMA_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_LAST_PIX" width="1" begin="14" end="14" resetval="0x0" description="This event is triggered when the last pixel of the valid area is received." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_LAST_PIX_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_REG" width="1" begin="13" end="13" resetval="0x0" description="This event is triggered when the first pixel of the valid area is received. Shadowed registers can be updated at any time but the new value will take effect on the next rsz_int_reg event." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_REG_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_REG_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="H3A_INT" width="1" begin="12" end="12" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="H3A_INT_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="AF_INT" width="1" begin="11" end="11" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AF_INT_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="AF_INT_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="AEW_INT" width="1" begin="10" end="10" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AEW_INT_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="AEW_INT_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPEIF_IRQ" width="1" begin="9" end="9" resetval="0x0" description="IPIPEIF module interrupt" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPEIF_IRQ_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPEIF_IRQ_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_HST" width="1" begin="8" end="8" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_HST_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_HST_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_BSC" width="1" begin="7" end="7" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_BSC_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_BSC_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DMA" width="1" begin="6" end="6" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_DMA_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_LAST_PIX" width="1" begin="5" end="5" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_LAST_PIX_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_REG" width="1" begin="4" end="4" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_REG_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_REG_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="ISIF_INT_3" width="1" begin="3" end="3" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_3_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="ISIF_INT_3_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="ISIF_INT_2" width="1" begin="2" end="2" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_2_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="ISIF_INT_2_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="ISIF_INT_1" width="1" begin="1" end="1" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_1_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="ISIF_INT_1_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="ISIF_INT_0" width="1" begin="0" end="0" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_0_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="ISIF_INT_0_1" description="Clear (raw) event"/>
    </bitfield>
  </register>
  <register id="ISP5_IRQENABLE_SET_2" acronym="ISP5_IRQENABLE_SET_2" offset="0x4C" width="32" description="Per-event interrupt enable bit vector. Write 1 to set (enable interrupt). Readout equal to corresponding _CLR register. The ISP5 outputs 4 interrupt lines ISP5_IRQ0 to ISP5_IRQ3. Any internal ISP5 event can be merged on the 4 lines. A same event shall be enabled on only one interrupt line. There is another interrupt register in the memory map, look for2.">
    <bitfield id="OCP_ERR_IRQ" width="1" begin="31" end="31" resetval="0x0" description="An OCP error has been received on the ISP5 master port." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="OCP_ERR_IRQ_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="OCP_ERR_IRQ_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_DPC_RNEW1" width="1" begin="29" end="29" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW1_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_DPC_RNEW1_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_RNEW0" width="1" begin="28" end="28" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW0_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_DPC_RNEW0_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_INI" width="1" begin="27" end="27" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_INI_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_DPC_INI_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_EOF" width="1" begin="25" end="25" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_EOF_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="H3A_INT_EOF" width="1" begin="24" end="24" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="H3A_INT_EOF_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF1" width="1" begin="23" end="23" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer B engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF1_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_EOF1_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF0" width="1" begin="22" end="22" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer A engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF0_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_EOF0_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="21" end="20" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RSZ_FIFO_IN_BLK_ERR" width="1" begin="19" end="19" resetval="0x0" description="This event signals that the minimum vertical blanking period has not been respected causing errors in the input data buffering submodule. This event will be triggered when the rsz_int_reg event of frame N is triggered before the rsz_int_dma of frame N + 1. This event would typically happen at the transition between two frames because there is not enough vertical blanking between frames: the firmware shall take care to ensure enough vertical blanking. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_IN_BLK_ERR_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_FIFO_IN_BLK_ERR_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_FIFO_OVF" width="1" begin="18" end="18" resetval="0x0" description="This event would typically happen while processing a frame because the video port pixel clock is too high: the firmware shall take care to use a lower pixel clock at the input of the resizer module. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_OVF_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_FIFO_OVF_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZB" width="1" begin="17" end="17" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #B. An event can be triggered every time thatRSZ_IRQ_RZB output lines have been written out to the RZB_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, this value should be such that the circular buffer vertical size (set by the RZB_SDR_Y_PTR_E register) is a multiple of RSZ_IRQ_RZB. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZB_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_CYC_RZB_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZA" width="1" begin="16" end="16" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #A. An event can be triggered every time thatRSZ_IRQ_RZA output lines have been written out to the RZA_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, the circular buffer vertical size (set by the RZA_SDR_Y_PTR_E register) should be a multiple of RSZ_IRQ_RZA. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZA_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_CYC_RZA_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_DMA" width="1" begin="15" end="15" resetval="0x0" description="This event is triggered when the last eof (of the two MTC interfaces) is sent out to the BL and that the resizer core has returned to idle. rsz_int_dma is a true indication that all processing is finished for the particular frame on both resizer engines." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_DMA_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_LAST_PIX" width="1" begin="14" end="14" resetval="0x0" description="This event is triggered when the last pixel of the valid area is received." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_LAST_PIX_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_REG" width="1" begin="13" end="13" resetval="0x0" description="This event is triggered when the first pixel of the valid area is received. Shadowed registers can be updated at any time but the new value will take effect on the next rsz_int_reg event." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_REG_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_REG_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="H3A_INT" width="1" begin="12" end="12" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="H3A_INT_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="AF_INT" width="1" begin="11" end="11" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AF_INT_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="AF_INT_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="AEW_INT" width="1" begin="10" end="10" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AEW_INT_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="AEW_INT_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPEIF_IRQ" width="1" begin="9" end="9" resetval="0x0" description="IPIPEIF module interrupt" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPEIF_IRQ_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPEIF_IRQ_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_HST" width="1" begin="8" end="8" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_HST_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_HST_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_BSC" width="1" begin="7" end="7" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_BSC_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_BSC_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DMA" width="1" begin="6" end="6" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_DMA_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_LAST_PIX" width="1" begin="5" end="5" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_LAST_PIX_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_REG" width="1" begin="4" end="4" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_REG_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_REG_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_3" width="1" begin="3" end="3" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_3_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="ISIF_INT_3_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_2" width="1" begin="2" end="2" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_2_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="ISIF_INT_2_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_1" width="1" begin="1" end="1" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_1_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="ISIF_INT_1_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_0" width="1" begin="0" end="0" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_0_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="ISIF_INT_0_1" description="Enable interrupt"/>
    </bitfield>
  </register>
  <register id="ISP5_IRQENABLE_CLR_2" acronym="ISP5_IRQENABLE_CLR_2" offset="0x50" width="32" description="Per-event interrupt enable bit vector. Write 1 to clear (disable interrupt). Readout equal to corresponding _SET register. The ISP5 outputs 4 interrupt lines ISP5_IRQ0 to ISP5_IRQ3. Any internal ISP5 event can be merged on the 4 lines. A same event shall be enabled on only one interrupt line. There is another interrupt register in the memory map, look for2.">
    <bitfield id="OCP_ERR_IRQ" width="1" begin="31" end="31" resetval="0x0" description="An OCP error has been received on the ISP5 master port." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="OCP_ERR_IRQ_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="OCP_ERR_IRQ_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_DPC_RNEW1" width="1" begin="29" end="29" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW1_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_DPC_RNEW1_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_RNEW0" width="1" begin="28" end="28" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW0_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_DPC_RNEW0_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_INI" width="1" begin="27" end="27" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_INI_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_DPC_INI_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_EOF" width="1" begin="25" end="25" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_EOF_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="H3A_INT_EOF" width="1" begin="24" end="24" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="H3A_INT_EOF_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF1" width="1" begin="23" end="23" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer B engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF1_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_EOF1_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF0" width="1" begin="22" end="22" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer A engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF0_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_EOF0_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="21" end="20" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RSZ_FIFO_IN_BLK_ERR" width="1" begin="19" end="19" resetval="0x0" description="This event signals that the minimum vertical blanking period has not been respected causing errors in the input data buffering submodule. This event will be triggered when the rsz_int_reg event of frame N is triggered before the rsz_int_dma of frame N + 1. This event would typically happen at the transition between two frames because there is not enough vertical blanking between frames: the firmware shall take care to ensure enough vertical blanking. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_IN_BLK_ERR_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_FIFO_IN_BLK_ERR_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_FIFO_OVF" width="1" begin="18" end="18" resetval="0x0" description="This event would typically happen while processing a frame because the video port pixel clock is too high: the firmware shall take care to use a lower pixel clock at the input of the resizer module. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_OVF_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_FIFO_OVF_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZB" width="1" begin="17" end="17" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #B. An event can be triggered every time thatRSZ_IRQ_RZB output lines have been written out to the RZB_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, this value should be such that the circular buffer vertical size (set by the RZB_SDR_Y_PTR_E register) is a multiple of RSZ_IRQ_RZB. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZB_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_CYC_RZB_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZA" width="1" begin="16" end="16" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #A. An event can be triggered every time thatRSZ_IRQ_RZA output lines have been written out to the RZA_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, the circular buffer vertical size (set by the RZA_SDR_Y_PTR_E register) should be a multiple of RSZ_IRQ_RZA. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZA_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_CYC_RZA_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_DMA" width="1" begin="15" end="15" resetval="0x0" description="RESIZER module event: This event is triggered when the last eof (of the two MTC interfaces) is sent out to the BL and that the resizer core has returned to idle. rsz_int_dma is a true indication that all processing is finished for the particular frame on both resizer engines." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_DMA_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_LAST_PIX" width="1" begin="14" end="14" resetval="0x0" description="RESIZER module event: This event is triggered when the last pixel of the valid area is received." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_LAST_PIX_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_REG" width="1" begin="13" end="13" resetval="0x0" description="RESIZER module event: This event is triggered when the first pixel of the valid area is received. Shadowed registers can be updated at any time but the new value will take effect on the next rsz_int_reg event." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_REG_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_REG_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="H3A_INT" width="1" begin="12" end="12" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="H3A_INT_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="AF_INT" width="1" begin="11" end="11" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AF_INT_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="AF_INT_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="AEW_INT" width="1" begin="10" end="10" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AEW_INT_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="AEW_INT_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPEIF_IRQ" width="1" begin="9" end="9" resetval="0x0" description="IPIPEIF module interrupt" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPEIF_IRQ_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPEIF_IRQ_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_HST" width="1" begin="8" end="8" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_HST_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_HST_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_BSC" width="1" begin="7" end="7" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_BSC_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_BSC_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DMA" width="1" begin="6" end="6" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_DMA_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_LAST_PIX" width="1" begin="5" end="5" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_LAST_PIX_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_REG" width="1" begin="4" end="4" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_REG_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_REG_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_3" width="1" begin="3" end="3" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_3_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="ISIF_INT_3_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_2" width="1" begin="2" end="2" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_2_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="ISIF_INT_2_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_1" width="1" begin="1" end="1" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_1_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="ISIF_INT_1_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_0" width="1" begin="0" end="0" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_0_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="ISIF_INT_0_1" description="Disable interrupt"/>
    </bitfield>
  </register>
  <register id="ISP5_IRQSTATUS_RAW_3" acronym="ISP5_IRQSTATUS_RAW_3" offset="0x54" width="32" description="Per-event raw interrupt status vector. Raw status is set even if event is not enabled. Write 1 to set the (raw) status, mostly for debug. The ISP5 outputs 4 interrupt lines ISP5_IRQ0 to ISP5_IRQ3. Any internal ISP5 event can be merged on the 4 lines. A same event shall be enabled on only one interrupt line. There is another interrupt register in the memory map, look for2">
    <bitfield id="OCP_ERR_IRQ" width="1" begin="31" end="31" resetval="0x0" description="An OCP error has been received on the ISP5 master port." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="OCP_ERR_IRQ_0" description="No action"/>
      <bitenum value="1" id="SET" token="OCP_ERR_IRQ_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_DPC_RNEW1" width="1" begin="29" end="29" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW1_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_DPC_RNEW1_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_RNEW0" width="1" begin="28" end="28" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW0_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_DPC_RNEW0_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_INI" width="1" begin="27" end="27" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_INI_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_DPC_INI_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_EOF" width="1" begin="25" end="25" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_EOF_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="H3A_INT_EOF" width="1" begin="24" end="24" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="SET" token="H3A_INT_EOF_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF1" width="1" begin="23" end="23" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer B engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF1_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_EOF1_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF0" width="1" begin="22" end="22" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer A engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF0_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_EOF0_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="21" end="20" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RSZ_FIFO_IN_BLK_ERR" width="1" begin="19" end="19" resetval="0x0" description="This event signals that the minimum vertical blanking period has not been respected causing errors in the input data buffering submodule. This event will be triggered when the rsz_int_reg event of frame N is triggered before the rsz_int_dma of frame N + 1. This event would typically happen at the transition between two frames because there is not enough vertical blanking between frames: the firmware shall take care to ensure enough vertical blanking. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_IN_BLK_ERR_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_FIFO_IN_BLK_ERR_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_FIFO_OVF" width="1" begin="18" end="18" resetval="0x0" description="Resizer module overflow This event is set when overflow happens in the RESIZER module. This event would typically happen while processing a frame because the video port pixel clock is too high: the firmware shall take care to use a lower pixel clock at the input of the resizer module. Depending on the mode bein used, the overflow can happen at different places: 1. Bypass mode: overflow happened in the input circular buffer. 2. Pass through mode: overflow happened on the module output interface (MTC) 3. Normal resize mode: overflow happened in the input circular buffer. This event signals that overflow happened in the input data buffering submodule. 1. In normal resizer mode or bypass mode, this event will be triggered when the This event would typically happen while processing a frame because the video port pixel clock is too high: the firmware shall take care to use a lower pixel clock at the input of the resizer module. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_OVF_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_FIFO_OVF_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZB" width="1" begin="17" end="17" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #B. An event can be triggered every time thatRSZ_IRQ_RZB output lines have been written out to the RZB_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, this value should be such that the circular buffer vertical size (set by the RZB_SDR_Y_PTR_E register) is a multiple of RSZ_IRQ_RZB. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZB_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_CYC_RZB_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZA" width="1" begin="16" end="16" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #A. An event can be triggered every time thatRSZ_IRQ_RZA output lines have been written out to the RZA_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, the circular buffer vertical size (set by the RZA_SDR_Y_PTR_E register) should be a multiple of RSZ_IRQ_RZA. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZA_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_CYC_RZA_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_DMA" width="1" begin="15" end="15" resetval="0x0" description="This event is triggered when the last eof (of the two MTC interfaces) is sent out to the BL and that the resizer core has returned to idle. rsz_int_dma is a true indication that all processing is finished for the particular frame on both resizer engines." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_DMA_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_LAST_PIX" width="1" begin="14" end="14" resetval="0x0" description="This event is triggered when the last pixel of the valid area is received." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_LAST_PIX_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="RSZ_INT_REG" width="1" begin="13" end="13" resetval="0x0" description="This event is triggered when the first pixel of the valid area is received. Shadowed registers can be updated at any time but the new value will take effect on the next rsz_int_reg event." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_REG_0" description="No action"/>
      <bitenum value="1" id="SET" token="RSZ_INT_REG_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="H3A_INT" width="1" begin="12" end="12" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_0" description="No action"/>
      <bitenum value="1" id="SET" token="H3A_INT_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="AF_INT" width="1" begin="11" end="11" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AF_INT_0" description="No action"/>
      <bitenum value="1" id="SET" token="AF_INT_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="AEW_INT" width="1" begin="10" end="10" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AEW_INT_0" description="No action"/>
      <bitenum value="1" id="SET" token="AEW_INT_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPEIF_IRQ" width="1" begin="9" end="9" resetval="0x0" description="IPIPEIF module interrupt" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPEIF_IRQ_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPEIF_IRQ_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_HST" width="1" begin="8" end="8" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_HST_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_HST_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_BSC" width="1" begin="7" end="7" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_BSC_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_BSC_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DMA" width="1" begin="6" end="6" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_DMA_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_LAST_PIX" width="1" begin="5" end="5" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_LAST_PIX_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="IPIPE_INT_REG" width="1" begin="4" end="4" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_REG_0" description="No action"/>
      <bitenum value="1" id="SET" token="IPIPE_INT_REG_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="ISIF_INT_3" width="1" begin="3" end="3" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_3_0" description="No action"/>
      <bitenum value="1" id="SET" token="ISIF_INT_3_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="ISIF_INT_2" width="1" begin="2" end="2" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_2_0" description="No action"/>
      <bitenum value="1" id="SET" token="ISIF_INT_2_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="ISIF_INT_1" width="1" begin="1" end="1" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_1_0" description="No action"/>
      <bitenum value="1" id="SET" token="ISIF_INT_1_1" description="Set event (debug)"/>
    </bitfield>
    <bitfield id="ISIF_INT_0" width="1" begin="0" end="0" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_0_0" description="No action"/>
      <bitenum value="1" id="SET" token="ISIF_INT_0_1" description="Set event (debug)"/>
    </bitfield>
  </register>
  <register id="ISP5_IRQSTATUS_3" acronym="ISP5_IRQSTATUS_3" offset="0x58" width="32" description="Per-event 'enabled' interrupt status vector. Enabled status isn't set unless event is enabled. Write 1 to clear the status after interrupt has been serviced (raw status gets cleared, i.e. even if not enabled). The ISP5 outputs 4 interrupt lines ISP5_IRQ0 to ISP5_IRQ3. Any internal ISP5 event can be merged on the 4 lines. A same event shall be enabled on only one interrupt line. There is another interrupt register in the memory map, look for2">
    <bitfield id="OCP_ERR_IRQ" width="1" begin="31" end="31" resetval="0x0" description="An OCP error has been received on the ISP5 master port." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="OCP_ERR_IRQ_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="OCP_ERR_IRQ_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_DPC_RNEW1" width="1" begin="29" end="29" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW1_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_DPC_RNEW1_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_RNEW0" width="1" begin="28" end="28" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW0_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_DPC_RNEW0_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_INI" width="1" begin="27" end="27" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_INI_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_DPC_INI_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_EOF" width="1" begin="25" end="25" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_EOF_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="H3A_INT_EOF" width="1" begin="24" end="24" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="H3A_INT_EOF_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF1" width="1" begin="23" end="23" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer B engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF1_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_EOF1_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF0" width="1" begin="22" end="22" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer A engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF0_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_EOF0_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="21" end="20" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RSZ_FIFO_IN_BLK_ERR" width="1" begin="19" end="19" resetval="0x0" description="This event signals that the minimum vertical blanking period has not been respected causing errors in the input data buffering submodule. This event will be triggered when the rsz_int_reg event of frame N is triggered before the rsz_int_dma of frame N + 1. This event would typically happen at the transition between two frames because there is not enough vertical blanking between frames: the firmware shall take care to ensure enough vertical blanking. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_IN_BLK_ERR_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_FIFO_IN_BLK_ERR_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_FIFO_OVF" width="1" begin="18" end="18" resetval="0x0" description="This event would typically happen while processing a frame because the video port pixel clock is too high: the firmware shall take care to use a lower pixel clock at the input of the resizer module. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_OVF_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_FIFO_OVF_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZB" width="1" begin="17" end="17" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #B. An event can be triggered every time thatRSZ_IRQ_RZB output lines have been written out to the RZB_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, this value should be such that the circular buffer vertical size (set by the RZB_SDR_Y_PTR_E register) is a multiple of RSZ_IRQ_RZB. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZB_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_CYC_RZB_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZA" width="1" begin="16" end="16" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #A. An event can be triggered every time thatRSZ_IRQ_RZA output lines have been written out to the RZA_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, the circular buffer vertical size (set by the RZA_SDR_Y_PTR_E register) should be a multiple of RSZ_IRQ_RZA. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZA_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_CYC_RZA_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_DMA" width="1" begin="15" end="15" resetval="0x0" description="This event is triggered when the last eof (of the two MTC interfaces) is sent out to the BL and that the resizer core has returned to idle. rsz_int_dma is a true indication that all processing is finished for the particular frame on both resizer engines." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_DMA_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_LAST_PIX" width="1" begin="14" end="14" resetval="0x0" description="This event is triggered when the last pixel of the valid area is received." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_LAST_PIX_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="RSZ_INT_REG" width="1" begin="13" end="13" resetval="0x0" description="This event is triggered when the first pixel of the valid area is received. Shadowed registers can be updated at any time but the new value will take effect on the next rsz_int_reg event." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_REG_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="RSZ_INT_REG_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="H3A_INT" width="1" begin="12" end="12" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="H3A_INT_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="AF_INT" width="1" begin="11" end="11" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AF_INT_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="AF_INT_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="AEW_INT" width="1" begin="10" end="10" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AEW_INT_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="AEW_INT_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPEIF_IRQ" width="1" begin="9" end="9" resetval="0x0" description="IPIPEIF module interrupt" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPEIF_IRQ_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPEIF_IRQ_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_HST" width="1" begin="8" end="8" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_HST_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_HST_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_BSC" width="1" begin="7" end="7" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_BSC_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_BSC_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DMA" width="1" begin="6" end="6" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_DMA_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_LAST_PIX" width="1" begin="5" end="5" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_LAST_PIX_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="IPIPE_INT_REG" width="1" begin="4" end="4" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_REG_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="IPIPE_INT_REG_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="ISIF_INT_3" width="1" begin="3" end="3" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_3_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="ISIF_INT_3_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="ISIF_INT_2" width="1" begin="2" end="2" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_2_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="ISIF_INT_2_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="ISIF_INT_1" width="1" begin="1" end="1" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_1_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="ISIF_INT_1_1" description="Clear (raw) event"/>
    </bitfield>
    <bitfield id="ISIF_INT_0" width="1" begin="0" end="0" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_0_0" description="No action"/>
      <bitenum value="1" id="CLEAR" token="ISIF_INT_0_1" description="Clear (raw) event"/>
    </bitfield>
  </register>
  <register id="ISP5_IRQENABLE_SET_3" acronym="ISP5_IRQENABLE_SET_3" offset="0x5C" width="32" description="Per-event interrupt enable bit vector. Write 1 to set (enable interrupt). Readout equal to corresponding _CLR register. The ISP5 outputs 4 interrupt lines ISP5_IRQ0 to ISP5_IRQ3. Any internal ISP5 event can be merged on the 4 lines. A same event shall be enabled on only one interrupt line. There is another interrupt register in the memory map, look for2.">
    <bitfield id="OCP_ERR_IRQ" width="1" begin="31" end="31" resetval="0x0" description="An OCP error has been received on the ISP5 master port." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="OCP_ERR_IRQ_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="OCP_ERR_IRQ_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_DPC_RNEW1" width="1" begin="29" end="29" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW1_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_DPC_RNEW1_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_RNEW0" width="1" begin="28" end="28" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW0_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_DPC_RNEW0_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_INI" width="1" begin="27" end="27" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_INI_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_DPC_INI_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_EOF" width="1" begin="25" end="25" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_EOF_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="H3A_INT_EOF" width="1" begin="24" end="24" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="H3A_INT_EOF_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF1" width="1" begin="23" end="23" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer B engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF1_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_EOF1_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF0" width="1" begin="22" end="22" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer A engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF0_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_EOF0_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="21" end="20" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RSZ_FIFO_IN_BLK_ERR" width="1" begin="19" end="19" resetval="0x0" description="This event signals that the minimum vertical blanking period has not been respected causing errors in the input data buffering submodule. This event will be triggered when the rsz_int_reg event of frame N is triggered before the rsz_int_dma of frame N + 1. This event would typically happen at the transition between two frames because there is not enough vertical blanking between frames: the firmware shall take care to ensure enough vertical blanking. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_IN_BLK_ERR_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_FIFO_IN_BLK_ERR_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_FIFO_OVF" width="1" begin="18" end="18" resetval="0x0" description="This event would typically happen while processing a frame because the video port pixel clock is too high: the firmware shall take care to use a lower pixel clock at the input of the resizer module. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_OVF_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_FIFO_OVF_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZB" width="1" begin="17" end="17" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #B. An event can be triggered every time thatRSZ_IRQ_RZB output lines have been written out to the RZB_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, this value should be such that the circular buffer vertical size (set by the RZB_SDR_Y_PTR_E register) is a multiple of RSZ_IRQ_RZB. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZB_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_CYC_RZB_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZA" width="1" begin="16" end="16" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #A. An event can be triggered every time thatRSZ_IRQ_RZA output lines have been written out to the RZA_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, the circular buffer vertical size (set by the RZA_SDR_Y_PTR_E register) should be a multiple of RSZ_IRQ_RZA. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZA_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_CYC_RZA_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_DMA" width="1" begin="15" end="15" resetval="0x0" description="This event is triggered when the last eof (of the two MTC interfaces) is sent out to the BL and that the resizer core has returned to idle. rsz_int_dma is a true indication that all processing is finished for the particular frame on both resizer engines." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_DMA_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_LAST_PIX" width="1" begin="14" end="14" resetval="0x0" description="This event is triggered when the last pixel of the valid area is received." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_LAST_PIX_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_REG" width="1" begin="13" end="13" resetval="0x0" description="This event is triggered when the first pixel of the valid area is received. Shadowed registers can be updated at any time but the new value will take effect on the next rsz_int_reg event." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_REG_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="RSZ_INT_REG_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="H3A_INT" width="1" begin="12" end="12" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="H3A_INT_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="AF_INT" width="1" begin="11" end="11" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AF_INT_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="AF_INT_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="AEW_INT" width="1" begin="10" end="10" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AEW_INT_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="AEW_INT_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPEIF_IRQ" width="1" begin="9" end="9" resetval="0x0" description="IPIPEIF module interrupt" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPEIF_IRQ_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPEIF_IRQ_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_HST" width="1" begin="8" end="8" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_HST_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_HST_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_BSC" width="1" begin="7" end="7" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_BSC_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_BSC_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DMA" width="1" begin="6" end="6" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_DMA_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_LAST_PIX" width="1" begin="5" end="5" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_LAST_PIX_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_REG" width="1" begin="4" end="4" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_REG_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_REG_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_3" width="1" begin="3" end="3" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_3_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="ISIF_INT_3_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_2" width="1" begin="2" end="2" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_2_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="ISIF_INT_2_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_1" width="1" begin="1" end="1" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_1_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="ISIF_INT_1_1" description="Enable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_0" width="1" begin="0" end="0" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_0_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="ISIF_INT_0_1" description="Enable interrupt"/>
    </bitfield>
  </register>
  <register id="ISP5_IRQENABLE_CLR_3" acronym="ISP5_IRQENABLE_CLR_3" offset="0x60" width="32" description="Per-event interrupt enable bit vector. Write 1 to clear (disable interrupt). Readout equal to corresponding _SET register. The ISP5 outputs 4 interrupt lines ISP5_IRQ0 to ISP5_IRQ3. Any internal ISP5 event can be merged on the 4 lines. A same event shall be enabled on only one interrupt line. There is another interrupt register in the memory map, look for2.">
    <bitfield id="OCP_ERR_IRQ" width="1" begin="31" end="31" resetval="0x0" description="An OCP error has been received on the ISP5 master port." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="OCP_ERR_IRQ_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="OCP_ERR_IRQ_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="30" end="30" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_DPC_RNEW1" width="1" begin="29" end="29" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW1_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_DPC_RNEW1_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_RNEW0" width="1" begin="28" end="28" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW0_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_DPC_RNEW0_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_INI" width="1" begin="27" end="27" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_INI_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_DPC_INI_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="26" end="26" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_EOF" width="1" begin="25" end="25" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_EOF_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="H3A_INT_EOF" width="1" begin="24" end="24" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_EOF_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="H3A_INT_EOF_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF1" width="1" begin="23" end="23" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer B engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF1_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_EOF1_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_EOF0" width="1" begin="22" end="22" resetval="0x0" description="RESIZER module event: This event signals that the BL has received the eof signal from the resizer A engine which happens one the last transfer in the frame has happened. Note that because the BL has FIFOs it may take some additional time before true data transfter completion to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_EOF0_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_EOF0_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="21" end="20" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="RSZ_FIFO_IN_BLK_ERR" width="1" begin="19" end="19" resetval="0x0" description="This event signals that the minimum vertical blanking period has not been respected causing errors in the input data buffering submodule. This event will be triggered when the rsz_int_reg event of frame N is triggered before the rsz_int_dma of frame N + 1. This event would typically happen at the transition between two frames because there is not enough vertical blanking between frames: the firmware shall take care to ensure enough vertical blanking. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_IN_BLK_ERR_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_FIFO_IN_BLK_ERR_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_FIFO_OVF" width="1" begin="18" end="18" resetval="0x0" description="This event would typically happen while processing a frame because the video port pixel clock is too high: the firmware shall take care to use a lower pixel clock at the input of the resizer module. The hardware cannot recover from this error. It will be required to perform a reset of the IP." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_FIFO_OVF_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_FIFO_OVF_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZB" width="1" begin="17" end="17" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #B. An event can be triggered every time thatRSZ_IRQ_RZB output lines have been written out to the RZB_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, this value should be such that the circular buffer vertical size (set by the RZB_SDR_Y_PTR_E register) is a multiple of RSZ_IRQ_RZB. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZB_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_CYC_RZB_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_CYC_RZA" width="1" begin="16" end="16" resetval="0x0" description="RESIZER module event: This event is the circular interrupt for RESIZER #A. An event can be triggered every time thatRSZ_IRQ_RZA output lines have been written out to the RZA_SDR_Y buffer. The range can go from 1 to 8192 lines. Usually, the circular buffer vertical size (set by the RZA_SDR_Y_PTR_E register) should be a multiple of RSZ_IRQ_RZA. Note that at the time the interrupt is triggered, the actual data write has not taken place. It may take a few hundred of cycles to complete the data write into system memory. This is not an issue since the start of the buffer is read first." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_CYC_RZA_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_CYC_RZA_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_DMA" width="1" begin="15" end="15" resetval="0x0" description="RESIZER module event: This event is triggered when the last eof (of the two MTC interfaces) is sent out to the BL and that the resizer core has returned to idle. rsz_int_dma is a true indication that all processing is finished for the particular frame on both resizer engines." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_DMA_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_LAST_PIX" width="1" begin="14" end="14" resetval="0x0" description="RESIZER module event: This event is triggered when the last pixel of the valid area is received." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_LAST_PIX_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="RSZ_INT_REG" width="1" begin="13" end="13" resetval="0x0" description="RESIZER module event: This event is triggered when the first pixel of the valid area is received. Shadowed registers can be updated at any time but the new value will take effect on the next rsz_int_reg event." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="RSZ_INT_REG_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="RSZ_INT_REG_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="H3A_INT" width="1" begin="12" end="12" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="H3A_INT_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="H3A_INT_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="AF_INT" width="1" begin="11" end="11" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AF_INT_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="AF_INT_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="AEW_INT" width="1" begin="10" end="10" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="AEW_INT_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="AEW_INT_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPEIF_IRQ" width="1" begin="9" end="9" resetval="0x0" description="IPIPEIF module interrupt" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPEIF_IRQ_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPEIF_IRQ_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_HST" width="1" begin="8" end="8" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_HST_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_HST_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_BSC" width="1" begin="7" end="7" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_BSC_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_BSC_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DMA" width="1" begin="6" end="6" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DMA_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_DMA_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_LAST_PIX" width="1" begin="5" end="5" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_LAST_PIX_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="IPIPE_INT_REG" width="1" begin="4" end="4" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_REG_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_REG_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_3" width="1" begin="3" end="3" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_3_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="ISIF_INT_3_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_2" width="1" begin="2" end="2" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_2_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="ISIF_INT_2_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_1" width="1" begin="1" end="1" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_1_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="ISIF_INT_1_1" description="Disable interrupt"/>
    </bitfield>
    <bitfield id="ISIF_INT_0" width="1" begin="0" end="0" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="ISIF_INT_0_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="ISIF_INT_0_1" description="Disable interrupt"/>
    </bitfield>
  </register>
  <register id="ISP5_DMAENABLE_SET" acronym="ISP5_DMAENABLE_SET" offset="0x64" width="32" description="Per-line DMA enable bit vector Write 1 to set (enable DMA request generation). Readout equal to corresponding _CLR register.">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_DPC_RNEW1" width="1" begin="4" end="4" resetval="0x0" description="Enable for ISP5 DMA request generation on line #2 This DMA request shall be set to transfer the DPC data from memory to the IPIPE internal RAM." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW1_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_DPC_RNEW1_1" description="Enable DMA"/>
    </bitfield>
    <bitfield id="IPIPE_INT_LAST_PIX" width="1" begin="3" end="3" resetval="0x0" description="Enable for ISP5 DMA request generation on line #3 This DMA request shall be set to transfer the GAMMA data from memory to the IPIPE internal RAM or to initialize the DPC table. One shall set theISP5_CTRL.DMA3_CFG register before enabling this DMA request." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_LAST_PIX_1" description="Enable DMA"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_RNEW0" width="1" begin="2" end="2" resetval="0x0" description="Enable for ISP5 DMA request generation on line #2 This DMA request shall be set to transfer the DPC data from memory to the IPIPE internal RAM." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW0_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_DPC_RNEW0_1" description="Enable DMA"/>
    </bitfield>
    <bitfield id="IPIPE_INT_HST" width="1" begin="1" end="1" resetval="0x0" description="Enable for ISP5 DMA request generation on line #1 This DMA request shall be set to transfer the HIST data from the IPIPE internal RAM to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_HST_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_HST_1" description="Enable DMA"/>
    </bitfield>
    <bitfield id="IPIPE_INT_BSC" width="1" begin="0" end="0" resetval="0x0" description="Enable for ISP5 DMA request generation on line #0 This DMA request shall be set to transfer the BSC data from the IPIPE internal RAM to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_BSC_0" description="No action"/>
      <bitenum value="1" id="ENABLE" token="IPIPE_INT_BSC_1" description="Enable DMA"/>
    </bitfield>
  </register>
  <register id="ISP5_DMAENABLE_CLR" acronym="ISP5_DMAENABLE_CLR" offset="0x68" width="32" description="Per-line DMA clear bit vector Write 1 to clear (disable DMA request generation). Readout equal to corresponding _SET register.">
    <bitfield id="RESERVED" width="27" begin="31" end="5" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_INT_DPC_RNEW1" width="1" begin="4" end="4" resetval="0x0" description="Clear for ISP5 DMA request generation on line ISP5_DMA_REQ[2]. This DMA request shall be set to transfer the DPC data from memory to the IPIPE internal RAM." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW1_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_DPC_RNEW1_1" description="Disable DMA"/>
    </bitfield>
    <bitfield id="IPIPE_INT_LAST_PIX" width="1" begin="3" end="3" resetval="0x0" description="Clear for ISP5 DMA request generation on ISP5_DMA_REQ[3]. This DMA request shall be set to transfer the GAMMA data from memory to the IPIPE internal RAM." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_LAST_PIX_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_LAST_PIX_1" description="Disable DMA"/>
    </bitfield>
    <bitfield id="IPIPE_INT_DPC_RNEW0" width="1" begin="2" end="2" resetval="0x0" description="Clear for ISP5 DMA request generation on ISP5_DMA_REQ[2]. This DMA request shall be set to transfer the DPC data from memory to the IPIPE internal RAM." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_DPC_RNEW0_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_DPC_RNEW0_1" description="Disable DMA"/>
    </bitfield>
    <bitfield id="IPIPE_INT_HST" width="1" begin="1" end="1" resetval="0x0" description="Clear for ISP5 DMA request generation on ISP5_DMA_REQ[1]. This DMA request shall be set to transfer the HIST data from the IPIPE internal RAM to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_HST_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_HST_1" description="Disable DMA"/>
    </bitfield>
    <bitfield id="IPIPE_INT_BSC" width="1" begin="0" end="0" resetval="0x0" description="Clear for ISP5 DMA request generation on ISP5_DMA_REQ[0]. This DMA request shall be set to transfer the BSC data from the IPIPE internal RAM to memory." range="" rwaccess="RW">
      <bitenum value="0" id="NOACTION" token="IPIPE_INT_BSC_0" description="No action"/>
      <bitenum value="1" id="DISABLE" token="IPIPE_INT_BSC_1" description="Disable DMA"/>
    </bitfield>
  </register>
  <register id="ISP5_CTRL" acronym="ISP5_CTRL" offset="0x6C" width="32" description="ISP5 CONTROL REGISTER">
    <bitfield id="DMA3_CFG" width="2" begin="31" end="30" resetval="0x0" description="This bitfield selects the DMA transfer configuration which is used with the ISP5_DMA_REQ[3] DMA request signal. This DMA request is generated from IPIPE_INT_LAST_PIXEL event. One can choose to use this DMA request to either transfer the DPC initialization data, the gamma table or both." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="DMA3_CFG_0" description="No DMA request associated with ISP5_DMA_REQ[3]."/>
      <bitenum value="1" id="NEWENUM2" token="DMA3_CFG_1" description="DPC DMA request associated with ISP5_DMA_REQ[3]. Expected DMA transfer size is 2 KBytes in the range 0x8000-0x87FF. DPC_EVT_INI shall be set to 0."/>
      <bitenum value="3" id="NEWENUM4" token="DMA3_CFG_3" description="DPC + GAMMA DMA request associated with ISP5_DMA_REQ[3]. Expected DMA transfer size is 8 KBytes in the range 0x8000-0x87FF and 0xA800-0xBFFF. DPC_EVT_INI shall be set to 0."/>
      <bitenum value="2" id="NEWENUM3" token="DMA3_CFG_2" description="GAMMA DMA request associated with ISP5_DMA_REQ[3]. Expected DMA transfer size is 6 KBytes in the range 0xA800-0xBFFF."/>
    </bitfield>
    <bitfield id="RESERVED" width="2" begin="29" end="28" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="BSC_RD_CHK" width="1" begin="27" end="27" resetval="0x0" description="When the BSC computation is enabled and the BSC DMA request not used to read out the data, this register enables to ensure that the data were read fast enough, else an interrupt IPIPE_BSC_ERR is triggered. The hardware sets automatically this bit to 1 when software can start reading the memory. It is the software responsibility to set this bit to 0 after reading the data. Once the CPU has read the BSC data, it SHALL clear this register, else the PIPE_BSC_ERR will occur." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="BSC_RD_CHK_0" description="No interrupt generation can happen"/>
      <bitenum value="1" id="NEWENUM2" token="BSC_RD_CHK_1" description="The CPU can read the data from the memory. Needs to complete fast enough to avoid the interrupt generation."/>
    </bitfield>
    <bitfield id="HST_RD_CHK" width="1" begin="26" end="26" resetval="0x0" description="When the HISTOGRAM computation is enabled and the HST DMA request not used to read out the data, this register enables to ensure that the data were read fast enough, else an interrupt IPIPE_HST_ERR is triggered. The hardware sets automatically this bit to 1 when software can start reading the memory. It is the software responsibility to set this bit to 0 after reading the data. Once the CPU has read the histogram data, it SHALL clear this register, else the PIPE_HST_ERR will occur." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="HST_RD_CHK_0" description="No interrupt generation can happen"/>
      <bitenum value="1" id="NEWENUM2" token="HST_RD_CHK_1" description="The CPU can read the data from the memory. Needs to complete fast enough to avoid the interrupt generation."/>
    </bitfield>
    <bitfield id="DPC_EVT_INI" width="1" begin="25" end="25" resetval="0x0" description="Select the IPIPE module event to be used to generate the DMA requests for the DPC submodule." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="DPC_EVT_INI_0" description="IPIPE_INT_LAST_PIX event is selected."/>
      <bitenum value="1" id="NEWENUM2" token="DPC_EVT_INI_1" description="IPIPE_INT_DPC_INI event is selected."/>
    </bitfield>
    <bitfield id="MSTANDBY" width="1" begin="24" end="24" resetval="0x1" description="MStandby signal assertion and de-assertion control for power management transitions. After software reset, this bit is asserted. Write '1' to transition from normal mode to idle mode. The firmware needs to ensure that no more ISP5 processing is ongoing before setting up this bit. Write '0' to transition from idle mode to normal mode. The software should pollISP5_CTRL.MSTANDBY_WAIT = ?0? after writing ISP5_CTRL.MSTANDBY = ?0? in a transition from idle to normal mode." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="MSTANDBY_0" description="De-assert MStandby signal. May not be immediate due to power management handshaking btw the MStandby and Wait signals."/>
      <bitenum value="1" id="NEWENUM2" token="MSTANDBY_1" description="Assert MStandby signal"/>
    </bitfield>
    <bitfield id="VD_PULSE_EXT" width="1" begin="23" end="23" resetval="0x1" description="VD pulse extension enable This bit enables or disables the VD extension bridge. By default, the bridge is enabled. At ISS level, it is expected that IPS5_CTRL.VD_PULSE_EXT = 1 when the VPORT gets data from the CSI2 RX module and IPS5_CTRL.VD_PULSE_EXT = 0 when the VPORT gets data from the parallel interface or the CCP2 RX module. There shall be at least three clock cycles between the time this bit is modified and the HD/VD pulse for start of frame comes." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="VD_PULSE_EXT_0" description="Disabled"/>
      <bitenum value="1" id="NEWENUM2" token="VD_PULSE_EXT_1" description="Enabled"/>
    </bitfield>
    <bitfield id="PCLK_INV" width="1" begin="22" end="22" resetval="0x0" description="Pixel clock inversion This bit enables or disables pixel clock inversion. The ISP5 always samples the data on the rising edge of the pixel clock. Enabling the inversion shifts the resampling period by 1/2 a pixel clock period. PCLK needs to be disabled at ISS level before setting this bit." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="PCLK_INV_0" description="Normal"/>
      <bitenum value="1" id="NEWENUM2" token="PCLK_INV_1" description="Inversed"/>
    </bitfield>
    <bitfield id="MFLAG" width="1" begin="21" end="21" resetval="0x0" description="MFlag signal generation control This bit controls how the OCP MFlag signal is generated on the ISS NOC." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="MFLAG_0" description="The MFlag value is dynamic."/>
      <bitenum value="1" id="NEWENUM2" token="MFLAG_1" description="The MFlag value is static. The value is set with the.VBUSM_CPRIORITY bitfield."/>
    </bitfield>
    <bitfield id="MSTANDDBY_WAIT" width="1" begin="20" end="20" resetval="0x0" description="MStandby / Wait power management status bit. The power management framework of the ISP5 is based on the handshaking of the MStandby and Wait signals. The software is not supposed to write insidle the ISP5 slave port and initiate traffic whenISP5_CTRL.MSTANDBY bit is written. The software can poll this bit to know when MStandby signal is deasserted." range="" rwaccess="R">
      <bitenum value="0" id="NEWENUM1" token="MSTANDDBY_WAIT_0" description="MStandby signal is de-asserted"/>
      <bitenum value="1" id="NEWENUM2" token="MSTANDDBY_WAIT_1" description="MStandby signal is asserted"/>
    </bitfield>
    <bitfield id="GLBCE_CLK_ENABLE" width="1" begin="19" end="19" resetval="0x0" description="GLBCE clock enable" range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="GLBCE_CLK_ENABLE_0" description="Disable"/>
      <bitenum value="1" id="NEWENUM2" token="GLBCE_CLK_ENABLE_1" description="Enable"/>
    </bitfield>
    <bitfield id="NSF3V_CLK_ENABLE" width="1" begin="18" end="18" resetval="0x0" description="NSF3V clock enable" range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="NSF3V_CLK_ENABLE_0" description="Disable"/>
      <bitenum value="1" id="NEWENUM2" token="NSF3V_CLK_ENABLE_1" description="Enable"/>
    </bitfield>
    <bitfield id="CNFB_CLK_ENABLE" width="1" begin="17" end="17" resetval="0x0" description="CNFB clock enable" range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="CNFB_CLK_ENABLE_0" description="Disable. Since CNF-B is removed , it doesn't have any effect"/>
      <bitenum value="1" id="NEWENUM2" token="CNFB_CLK_ENABLE_1" description="Enable. Since CNF-B is removed , it doesn't have any effect."/>
    </bitfield>
    <bitfield id="CNFA_CLK_ENABLE" width="1" begin="16" end="16" resetval="0x0" description="CNFA clock enable" range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="CNFA_CLK_ENABLE_0" description="Disable"/>
      <bitenum value="1" id="NEWENUM2" token="CNFA_CLK_ENABLE_1" description="Enable"/>
    </bitfield>
    <bitfield id="BL_CLK_ENABLE" width="1" begin="15" end="15" resetval="0x0" description="BL clock enable" range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="BL_CLK_ENABLE_0" description="Disable"/>
      <bitenum value="1" id="NEWENUM2" token="BL_CLK_ENABLE_1" description="Enable"/>
    </bitfield>
    <bitfield id="ISIF_CLK_ENABLE" width="1" begin="14" end="14" resetval="0x0" description="ISIF clock enable The ISP5 will return OCP_ERROR if one tries to program the module MMR or memory when the clock is disabled. There shall be at least three clock cycles between the time this bit is modified and the HD/VD pulse for start of frame comes." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="ISIF_CLK_ENABLE_0" description="Disable"/>
      <bitenum value="1" id="NEWENUM2" token="ISIF_CLK_ENABLE_1" description="Enable"/>
    </bitfield>
    <bitfield id="H3A_CLK_ENABLE" width="1" begin="13" end="13" resetval="0x0" description="H3A clock enable The ISP5 will return OCP_ERROR if one tries to program the module MMR or memory when the clock is disabled." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="H3A_CLK_ENABLE_0" description="Disable"/>
      <bitenum value="1" id="NEWENUM2" token="H3A_CLK_ENABLE_1" description="Enable"/>
    </bitfield>
    <bitfield id="RSZ_CLK_ENABLE" width="1" begin="12" end="12" resetval="0x0" description="RESIZER clock enable The ISP5 will return OCP_ERROR if one tries to program the module MMR or memory when the clock is disabled." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="RSZ_CLK_ENABLE_0" description="Disable"/>
      <bitenum value="1" id="NEWENUM2" token="RSZ_CLK_ENABLE_1" description="Enable"/>
    </bitfield>
    <bitfield id="IPIPE_CLK_ENABLE" width="1" begin="11" end="11" resetval="0x0" description="IPIPE clock enable The ISP5 will return OCP_ERROR if one tries to program the module MMR or memory when the clock is disabled. If DPC is working before NSF3V (working as pre-NSF3V DPC), this bit must be asserted for SW to access DPC MMR entries." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="IPIPE_CLK_ENABLE_0" description="Disable"/>
      <bitenum value="1" id="NEWENUM2" token="IPIPE_CLK_ENABLE_1" description="Enable"/>
    </bitfield>
    <bitfield id="IPIPEIF_CLK_ENABLE" width="1" begin="10" end="10" resetval="0x0" description="IPIPEIF clock enable The ISP5 will return OCP_ERROR if one tries to program the module MMR or memory when the clock is disabled." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="IPIPEIF_CLK_ENABLE_0" description="Disable"/>
      <bitenum value="1" id="NEWENUM2" token="IPIPEIF_CLK_ENABLE_1" description="Enable"/>
    </bitfield>
    <bitfield id="SYNC_ENABLE" width="1" begin="9" end="9" resetval="0x0" description="PCLK Sync module enable" range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="SYNC_ENABLE_0" description="Disable. Shall only be used when the video port is not receiving data, e.g., data is read from the IPIPEIF module memory read port."/>
      <bitenum value="1" id="NEWENUM2" token="SYNC_ENABLE_1" description="Enable. Shall be used when the video port is receiving data."/>
    </bitfield>
    <bitfield id="PSYNC_CLK_SEL" width="1" begin="8" end="8" resetval="0x0" description="PCLK Sync clock select. This bit selects the clock which is used to resynchronize the input pixel clock." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="PSYNC_CLK_SEL_0" description="Use ISP6_CFG_CLK. Can be used if the input pixel clock is always lower than 213 MHz. Also, this option must not be chosen if DPC is used with CAL if (CAL - DPC - NSF3V - CAL case.)"/>
      <bitenum value="1" id="NEWENUM2" token="PSYNC_CLK_SEL_1" description="ISP6_FUNC_CLK. Shall be used if the pixel clock is higher than 213 MHz or DPC is used with CAL port. (CAL - DPC - NSF3V - CAL)"/>
    </bitfield>
    <bitfield id="VBUSM_CIDS" width="4" begin="7" end="4" resetval="0xf" description="BL MAX VBUSM CIDs The BL module supports up to 16 CIDs/tags. This bitfield setsup the maximum number of CISs/tags that the BL can use. The actual number of CIDs/tags is setup by VBUSM_CIDS + 1. Tag number 0 to VBUSM_CIDS are used." range="" rwaccess="RW"/>
    <bitfield id="VBUSM_CPRIORITY" width="3" begin="3" end="1" resetval="0x4" description="BL VBUSM priority setting" range="" rwaccess="RW">
      <bitenum value="6" id="NEWENUM7" token="VBUSM_CPRIORITY_6" description="Normal Priority VBUSM cpriority[2:0] = 6"/>
      <bitenum value="1" id="NEWENUM2" token="VBUSM_CPRIORITY_1" description="High Priority VBUSM cpriority[2:0] = 1"/>
      <bitenum value="7" id="NEWENUM8" token="VBUSM_CPRIORITY_7" description="Normal Priority VBUSM cpriority[2:0] = 7"/>
      <bitenum value="0" id="NEWENUM1" token="VBUSM_CPRIORITY_0" description="High Priority VBUSM cpriority[2:0] = 0"/>
      <bitenum value="2" id="NEWENUM3" token="VBUSM_CPRIORITY_2" description="Medium Priority VBUSM cpriority[2:0] = 2"/>
      <bitenum value="4" id="NEWENUM5" token="VBUSM_CPRIORITY_4" description="Normal Priority VBUSM cpriority[2:0] = 4"/>
      <bitenum value="5" id="NEWENUM6" token="VBUSM_CPRIORITY_5" description="Normal Priority VBUSM cpriority[2:0] = 5"/>
      <bitenum value="3" id="NEWENUM4" token="VBUSM_CPRIORITY_3" description="Medium Priority VBUSM cpriority[2:0] = 3"/>
    </bitfield>
    <bitfield id="OCP_WRNP" width="1" begin="0" end="0" resetval="0x0" description="ISP5 OCP master port non-posted write control." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="OCP_WRNP_0" description="All writes are non posted."/>
      <bitenum value="1" id="NEWENUM2" token="OCP_WRNP_1" description="All writes are posted."/>
    </bitfield>
  </register>
  <register id="ISP5_PG" acronym="ISP5_PG" offset="0x70" width="32" description="PATTERN GENERATOR REGISTER">
    <bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="SRC_SEL" width="2" begin="5" end="4" resetval="0x0" description="Input mux selection" range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="SRC_SEL_0" description="ISP5 video port is selected."/>
      <bitenum value="1" id="NEWENUM2" token="SRC_SEL_1" description="Reserved"/>
      <bitenum value="3" id="NEWENUM4" token="SRC_SEL_3" description="Pattern generator is selected."/>
      <bitenum value="2" id="NEWENUM3" token="SRC_SEL_2" description="Reserved"/>
    </bitfield>
    <bitfield id="EN" width="1" begin="3" end="3" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="EN_0" description="Pattern generator off"/>
      <bitenum value="1" id="NEWENUM2" token="EN_1" description="Enable pattern generator"/>
    </bitfield>
    <bitfield id="WEN" width="1" begin="2" end="2" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="WEN_0" description="WEN is always activated"/>
      <bitenum value="1" id="NEWENUM2" token="WEN_1" description="WEN is on 8 cycles and off 8 cycles"/>
    </bitfield>
    <bitfield id="HDPOL" width="1" begin="1" end="1" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="HDPOL_0" description="Active high"/>
      <bitenum value="1" id="NEWENUM2" token="HDPOL_1" description="Active low"/>
    </bitfield>
    <bitfield id="VDPOL" width="1" begin="0" end="0" resetval="0x0" description="" range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="VDPOL_0" description="Active high"/>
      <bitenum value="1" id="NEWENUM2" token="VDPOL_1" description="Active low"/>
    </bitfield>
  </register>
  <register id="ISP5_PG_PULSE_CTRL" acronym="ISP5_PG_PULSE_CTRL" offset="0x74" width="32" description="PATTERN GENERATOR REGISTER">
    <bitfield id="RESERVED" width="4" begin="31" end="28" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="VDW" width="12" begin="27" end="16" resetval="0x0" description="Pattern generator VD width Width = VDW+1" range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="3" begin="15" end="13" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="HDW" width="13" begin="12" end="0" resetval="0x0" description="Pattern generator HD width Width = HDW+1" range="" rwaccess="RW"/>
  </register>
  <register id="ISP5_PG_FRAME_SIZE" acronym="ISP5_PG_FRAME_SIZE" offset="0x78" width="32" description="PATTERN GENERATOR REGISTER">
    <bitfield id="PPLN" width="16" begin="31" end="16" resetval="0x0" description="Pattern Generator: pixels per line, PPLN+1" range="" rwaccess="RW"/>
    <bitfield id="HLPFR" width="16" begin="15" end="0" resetval="0x0" description="Pattern Generator: half lines per frame, HLPFR+1" range="" rwaccess="RW"/>
  </register>
  <register id="ISP5_MPSR" acronym="ISP5_MPSR" offset="0x7C" width="32" description="ISP5 memory access register. One need to pay attention when setting the bit fields in this register such that there is no conflict between the cpu and module accesses. Usually, the ISP5 modules shall have access to the memories and it's only when the isp5 is idle (vertical blanking period or module disabled that the cpu can access the memories. CPU has memory access If the cpu has memory access (read or write) and CPU has priority, it will cause data corruption if the module tries to perform concurrent memory accesses. The module cannot know that the read or write access has not taken place because of cpu accesses.">
    <bitfield id="IPIPEIF_CMP_LUT2" width="1" begin="31" end="31" resetval="0x0" description="IPIPEIF Companding LUT memory access priority." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="IPIPEIF_CMP_LUT2_0" description="MODULE access has higher priority."/>
      <bitenum value="1" id="NEWENUM2" token="IPIPEIF_CMP_LUT2_1" description="CPU access has higher priority."/>
    </bitfield>
    <bitfield id="IPIPEIF_DECMP_LUT1" width="1" begin="30" end="30" resetval="0x0" description="IPIPEIF Memory Read path Decompanding LUT memory access priority." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="IPIPEIF_DECMP_LUT1_0" description="MODULE access has higher priority."/>
      <bitenum value="1" id="NEWENUM2" token="IPIPEIF_DECMP_LUT1_1" description="CPU access has higher priority."/>
    </bitfield>
    <bitfield id="IPIPEIF_DECMP_LUT0" width="1" begin="29" end="29" resetval="0x0" description="IPIPEIF VPORT Decompanding LUT memory access priority." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="IPIPEIF_DECMP_LUT0_0" description="MODULE access has higher priority"/>
      <bitenum value="1" id="NEWENUM2" token="IPIPEIF_DECMP_LUT0_1" description="CPU access has higher priority"/>
    </bitfield>
    <bitfield id="ISP_GLBCE_TB" width="1" begin="28" end="28" resetval="0x0" description="ISP GLBCE TB memory access priority This memory is expected to be written during ISP5 initialization and potentially updated during vertical blanking periods." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="ISP_GLBCE_TB_0" description="MODULE access has higher priority"/>
      <bitenum value="1" id="NEWENUM2" token="ISP_GLBCE_TB_1" description="CPU access has higher priority."/>
    </bitfield>
    <bitfield id="RESERVED" width="3" begin="27" end="25" resetval="0x0" description="Reserved" range="" rwaccess="R"/>
    <bitfield id="IPIPE_GAMMA_RGB_COPY" width="1" begin="24" end="24" resetval="0x0" description="GAMMA table RGB Copy This bit shall be enable when one wants to use the same Gamma table for the R, G and B color components. When the CPU writes the R table, it is automatically copied to the G and B tables if this bit is set." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="IPIPE_GAMMA_RGB_COPY_0" description="Copy disable Independent RGB gamma table"/>
      <bitenum value="1" id="NEWENUM2" token="IPIPE_GAMMA_RGB_COPY_1" description="Copy enable Common RGB Gamma table"/>
    </bitfield>
    <bitfield id="RESERVED" width="3" begin="23" end="21" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="IPIPE_BSC_TB1" width="1" begin="20" end="20" resetval="0x0" description="IPIPE BSC TB1 memory access priority This memory is expected to be read by the CPU or the DMA to get BSC information during vertical blanking period." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="IPIPE_BSC_TB1_0" description="MODULE access has higher priority"/>
      <bitenum value="1" id="NEWENUM2" token="IPIPE_BSC_TB1_1" description="CPU access has higher priority."/>
    </bitfield>
    <bitfield id="IPIPE_BSC_TB0" width="1" begin="19" end="19" resetval="0x0" description="IPIPE BSC TB0 memory access priority This memory is expected to be read by the CPU or the DMA to get BSC information during vertical blanking period." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="IPIPE_BSC_TB0_0" description="MODULE access has higher priority"/>
      <bitenum value="1" id="NEWENUM2" token="IPIPE_BSC_TB0_1" description="CPU access has higher priority."/>
    </bitfield>
    <bitfield id="IPIPE_HST_TB3" width="1" begin="18" end="18" resetval="0x0" description="IPIPE histogram memory #3 access priority This memory is expected to be read by the CPU or the DMA to get HST information during vertical blanking period." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="IPIPE_HST_TB3_0" description="MODULE access has higher priority"/>
      <bitenum value="1" id="NEWENUM2" token="IPIPE_HST_TB3_1" description="CPU access has higher priority."/>
    </bitfield>
    <bitfield id="IPIPE_HST_TB2" width="1" begin="17" end="17" resetval="0x0" description="IPIPE histogram memory #2 access priority This memory is expected to be read by the CPU or the DMA to get HST information during vertical blanking period." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="IPIPE_HST_TB2_0" description="MODULE access has higher priority"/>
      <bitenum value="1" id="NEWENUM2" token="IPIPE_HST_TB2_1" description="CPU access has higher priority."/>
    </bitfield>
    <bitfield id="IPIPE_HST_TB1" width="1" begin="16" end="16" resetval="0x0" description="IPIPE histogram memory #1 access priority This memory is expected to be read by the CPU or the DMA to get HST information during vertical blanking period." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="IPIPE_HST_TB1_0" description="MODULE access has higher priority"/>
      <bitenum value="1" id="NEWENUM2" token="IPIPE_HST_TB1_1" description="CPU access has higher priority."/>
    </bitfield>
    <bitfield id="IPIPE_HST_TB0" width="1" begin="15" end="15" resetval="0x0" description="IPIPE histogram memory #0 access priority This memory is expected to be read by the CPU or the DMA to get HST information during vertical blanking period." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="IPIPE_HST_TB0_0" description="MODULE access has higher priority"/>
      <bitenum value="1" id="NEWENUM2" token="IPIPE_HST_TB0_1" description="CPU access has higher priority."/>
    </bitfield>
    <bitfield id="IPIPE_D3L_TB3" width="1" begin="14" end="14" resetval="0x0" description="D3L TB3 memory access priority This memory is expected to be written during ISP5 initialization and potentially updated during vertical blanking periods." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="IPIPE_D3L_TB3_0" description="MODULE access has higher priority"/>
      <bitenum value="1" id="NEWENUM2" token="IPIPE_D3L_TB3_1" description="CPU access has higher priority."/>
    </bitfield>
    <bitfield id="IPIPE_D3L_TB2" width="1" begin="13" end="13" resetval="0x0" description="D3L TB2 memory access priority This memory is expected to be written during ISP5 initialization and potentially updated during vertical blanking periods." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="IPIPE_D3L_TB2_0" description="MODULE access has higher priority"/>
      <bitenum value="1" id="NEWENUM2" token="IPIPE_D3L_TB2_1" description="CPU access has higher priority."/>
    </bitfield>
    <bitfield id="IPIPE_D3L_TB1" width="1" begin="12" end="12" resetval="0x0" description="D3L TB1 memory access priority This memory is expected to be written during ISP5 initialization and potentially updated during vertical blanking periods." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="IPIPE_D3L_TB1_0" description="MODULE access has higher priority"/>
      <bitenum value="1" id="NEWENUM2" token="IPIPE_D3L_TB1_1" description="CPU access has higher priority."/>
    </bitfield>
    <bitfield id="IPIPE_D3L_TB0" width="1" begin="11" end="11" resetval="0x0" description="D3L TB0 memory access priority This memory is expected to be written during ISP5 initialization and potentially updated during vertical blanking periods." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="IPIPE_D3L_TB0_0" description="MODULE access has higher priority"/>
      <bitenum value="1" id="NEWENUM2" token="IPIPE_D3L_TB0_1" description="CPU access has higher priority."/>
    </bitfield>
    <bitfield id="IPIPE_GBC_TB" width="1" begin="10" end="10" resetval="0x0" description="IPIPE GBC TB memory access priority This memory is expected to be written during ISP5 initialization and potentially updated during vertical blanking periods." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="IPIPE_GBC_TB_0" description="MODULE access has higher priority"/>
      <bitenum value="1" id="NEWENUM2" token="IPIPE_GBC_TB_1" description="CPU access has higher priority."/>
    </bitfield>
    <bitfield id="IPIPE_YEE_TB" width="1" begin="9" end="9" resetval="0x0" description="YEE TB memory access priority This memory is expected to be written during ISP5 initialization and potentially updated during vertical blanking periods." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="IPIPE_YEE_TB_0" description="MODULE access has higher priority"/>
      <bitenum value="1" id="NEWENUM2" token="IPIPE_YEE_TB_1" description="CPU access has higher priority."/>
    </bitfield>
    <bitfield id="IPIPE_GMM_TBR" width="1" begin="8" end="8" resetval="0x0" description="IPIPE Gamma LUT R memory arbitration This memory is expected to be written during ISP5 initialization and potentially updated during vertical blanking periods." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="IPIPE_GMM_TBR_0" description="MODULE access has higher priority"/>
      <bitenum value="1" id="NEWENUM2" token="IPIPE_GMM_TBR_1" description="CPU access has higher priority."/>
    </bitfield>
    <bitfield id="IPIPE_GMM_TBG" width="1" begin="7" end="7" resetval="0x0" description="IPIPE Gamma LUT G memory arbitration This memory is expected to be written during ISP5 initialization and potentially updated during vertical blanking periods." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="IPIPE_GMM_TBG_0" description="MODULE access has higher priority"/>
      <bitenum value="1" id="NEWENUM2" token="IPIPE_GMM_TBG_1" description="CPU access has higher priority."/>
    </bitfield>
    <bitfield id="IPIPE_GMM_TBB" width="1" begin="6" end="6" resetval="0x0" description="IPIPE Gamma LUT B memory arbitration This memory is expected to be written during ISP5 initialization and potentially updated during vertical blanking periods." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="IPIPE_GMM_TBB_0" description="MODULE access has higher priority"/>
      <bitenum value="1" id="NEWENUM2" token="IPIPE_GMM_TBB_1" description="CPU access has higher priority."/>
    </bitfield>
    <bitfield id="IPIPE_DPC_TB" width="1" begin="5" end="5" resetval="0x0" description="IPIPE defect pixel memory arbitration This memory is expected to be written during ISP5 initialization and potentially updated during vertical blanking periods." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="IPIPE_DPC_TB_0" description="MODULE access has higher priority"/>
      <bitenum value="1" id="NEWENUM2" token="IPIPE_DPC_TB_1" description="CPU access has higher priority."/>
    </bitfield>
    <bitfield id="ISIF_DCLAMP" width="1" begin="4" end="4" resetval="0x0" description="ISIF DC accumulation memory arbitration This memory is expected to be written during ISP5 initialization and potentially updated during vertical blanking periods." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="ISIF_DCLAMP_0" description="MODULE access has higher priority"/>
      <bitenum value="1" id="NEWENUM2" token="ISIF_DCLAMP_1" description="CPU access has higher priority."/>
    </bitfield>
    <bitfield id="ISIF_LSC_TB1" width="1" begin="3" end="3" resetval="0x0" description="ISIF LSC memory 1 access This memory is expected to be written during ISP5 initialization and potentially updated during vertical blanking periods." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="ISIF_LSC_TB1_0" description="MODULE has memory access When the module has memory access, the potential concurrent CPU accesses (on the ISP5 memory map) to read the memory are stalled. The CPU will eventually get back the data during the horizontal or vertical blanking periods when the module is not making access anymore."/>
      <bitenum value="1" id="NEWENUM2" token="ISIF_LSC_TB1_1" description="CPU has memory access When the cpu has memory access (read or write), it will cause data corruption if the module tries to perform concurrent memory accesses. The module cannot know that the read or write access has not taken place because of cpu accesses."/>
    </bitfield>
    <bitfield id="ISIF_LSC_TB0" width="1" begin="2" end="2" resetval="0x0" description="ISIF LSC memory 0 access This memory is expected to be written during ISP5 initialization and potentially updated during vertical blanking periods." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="ISIF_LSC_TB0_0" description="MODULE has memory access. When the module has memory access, the potential concurrent CPU accesses (on the ISP5 memory map) to read the memory are stalled. The CPU will eventually get back the data during the horizontal or vertical blanking periods when the module is not making access anymore."/>
      <bitenum value="1" id="NEWENUM2" token="ISIF_LSC_TB0_1" description="CPU has memory access When the cpu has memory access (read or write), it will cause data corruption if the module tries to perform concurrent memory accesses. The module cannot know that the read or write access has not taken place because of cpu accesses."/>
    </bitfield>
    <bitfield id="ISIF_LIN_TB" width="1" begin="1" end="1" resetval="0x0" description="ISIF linearity compensation memory arbitration This memory is expected to be written during ISP5 initialization and potentially updated during vertical blanking periods." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="ISIF_LIN_TB_0" description="MODULE access has higher priority"/>
      <bitenum value="1" id="NEWENUM2" token="ISIF_LIN_TB_1" description="CPU access has higher priority."/>
    </bitfield>
    <bitfield id="RESERVED" width="1" begin="0" end="0" resetval="0x0" description="" range="" rwaccess="R"/>
  </register>
  <register id="ISP5_BL_MTC_1" acronym="ISP5_BL_MTC_1" offset="0x80" width="32" description="MEMORY REQUEST MINIMUM INTERVAL REGISTER">
    <bitfield id="ISIF_R" width="16" begin="31" end="16" resetval="0x0" description="Sets the minimum interval btw two consecutive memory requests for the ISIF-Read port. Specified in number of interface clock cycles." range="" rwaccess="RW"/>
    <bitfield id="IPIPEIF_R" width="16" begin="15" end="0" resetval="0x0" description="Sets the minimum interval btw two consecutive memory requests for the IPIPEIF-Read port. Specified in number of interface clock cycles." range="" rwaccess="RW"/>
  </register>
  <register id="ISP5_BL_MTC_2" acronym="ISP5_BL_MTC_2" offset="0x84" width="32" description="MEMORY REQUEST MINIMUM INTERVAL REGISTER">
    <bitfield id="H3A_W" width="16" begin="31" end="16" resetval="0x0" description="Sets the minimum interval btw two consecutive memory requests for the H3A-Write port. Specified in number of interface clock cycles." range="" rwaccess="RW"/>
    <bitfield id="RESERVED" width="16" begin="15" end="0" resetval="0x0" description="" range="" rwaccess="R"/>
  </register>
  <register id="ISP5_BL_VBUSM" acronym="ISP5_BL_VBUSM" offset="0x88" width="32" description="BL VBUSM TUNING REGISTER The settings in the register are static and not expected to be modified dynamically.">
    <bitfield id="RESERVED" width="26" begin="31" end="6" resetval="0x0" description="" range="" rwaccess="R"/>
    <bitfield id="MFLAG_THRES" width="1" begin="5" end="5" resetval="0x1" description="MFLAG Threshold value The value of this bit field is a threshold which is compared to the MFlag output of the ISP5. If the BL MFlag signal is greater or equal to this thresold the last beat of the VBUSM command is delayed by LASTCMD_DLY cycles. Only values 0, 1 are valid, the least significant bit is tied off to 1 to make a 2-bit bitfield." range="" rwaccess="RW">
      <bitenum value="0" id="NEWENUM1" token="MFLAG_THRES_0" description="Thres = 1"/>
      <bitenum value="1" id="NEWENUM2" token="MFLAG_THRES_1" description="Thres = 3"/>
    </bitfield>
    <bitfield id="LASTCMD_DLY" width="5" begin="4" end="0" resetval="0x4" description="The value of this bitfield represents a delay expressed in cycles (L3 clock). This value is used to delay the last beat of the VBUSM command such that the ISP5 does not loose arbitration at the NOC level because the BL does not generate back to back requests by default. The last beat is delayed untill the counter expires or the new request is accepted. This delay is used when the MFlag output of the ISP5 is greater or equal to MFLAG_THRES. One can set this value to 0 to disable the last command beat delay." range="" rwaccess="RW"/>
  </register>
</module>
