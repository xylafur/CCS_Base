<?xml version="1.0" encoding="UTF-8"?>
<module id="SRIO" HW_revision="" XML_version="1" description="Rapid input/output">
     <group id="TX_BUFF_DESC" name="TX_BUFF_DESC" instances="32" base="0x100000" instaddr="0x10" description="TX buffer descriptors">
	     <register id="TXnextDescPtr" acronym="TXnextDescPtr" offset="0x0000" width="32" description="Transfer buffer descriptor 0">
<bitfield id="NEXT_DESC" width="32" begin="31" end="0" resetval="0" description="Next Descriptor Pointer - The 32-bit word aligned memory address of the next buffer descriptor in the TX queue.  This is the mechanism used to reference the next buffer descriptor from the current buffer descriptor.  If the value of this pointer is zero then the current buffer is the last buffer in the queue. " range="" rwaccess="RW"></bitfield>
</register>
	     <register id="TXbuffPtr" acronym="TXbuffPtr" offset="0x0004" width="32" description="Transmit buffer descriptor 1">
<bitfield id="BUFFER_POINTER" width="32" begin="31" end="0" resetval="0" description="Buffer Pointer - The byte aligned memory address of the buffer associated with the buffer descriptor.  " range="" rwaccess="RW"></bitfield>
</register>
	     <register id="TXopt1" acronym="TXopt1" offset="0x0008" width="32" description="Transmit buffer descriptor 2">
<bitfield id="DEST_ID" width="16" begin="31" end="16" resetval="0" description="Destination Node Id  Unique Node identifier for the Destination of the message" range="" rwaccess="RW"></bitfield>
<bitfield id="PRI" width="2" begin="15" end="14" resetval="0" description="Message Priority  Specifies the SRIO priority at which the message will be sent. Messages should not be sent at a priority level of 3 since the message response is required to promote the priority to avoid system deadlock. It is the responsibility of the software to assign the appropriate out-going priority" range="" rwaccess="RW"></bitfield>
<bitfield id="TT" width="2" begin="13" end="12" resetval="0" description="RapidIO tt field specifying 8 or 16bit DeviceIDs" range="" rwaccess="RW"></bitfield>
<bitfield id="PORT_ID" width="2" begin="11" end="10" resetval="0" description="Port number for routing outgoing packet." range="" rwaccess="RW"></bitfield>
<bitfield id="SSIZE" width="4" begin="9" end="6" resetval="0" description="RIO standard message payload size.  Indicates how the hardware should segment the out-going message by specifying the maximum number of double-words per packet" range="0x0  0x3F" rwaccess="RW">
<bitenum id="128B" value="65563" token="128B" description="1 Double-word payload  " />
<bitenum id="256B" value="65803" token="256B" description="2 Double-word payload  " />
<bitenum id="512B" value="65819" token="512B" description="4 Double-word payload  " />
<bitenum id="1024B" value="69643" token="1024B" description="8 Double-word payload  " />
<bitenum id="2048B" value="69659" token="2048B" description="16 Double-word payload  " />
<bitenum id="4096B" value="69899" token="4096B" description="32 Double-word payload  " />
</bitfield>
<bitfield id="MAILBOX" width="6" begin="5" end="0" resetval="0" description="Destination Mailbox  Specifies the mailbox to which the message will be sent. " range="0x0  0x3F" rwaccess="RW"></bitfield>
</register>
	     <register id="TXopt2" acronym="TXopt2" offset="0x000C" width="32" description="Transmit buffer descriptor 3">
<bitfield id="SOP" width="1" begin="31" end="31" resetval="0" description="Start of Message - Indicates that the descriptor buffer is the first buffer in the message" range="" rwaccess="RW"></bitfield>
<bitfield id="EOP" width="1" begin="30" end="30" resetval="0" description="End of Message - Indicates that the descriptor buffer is the last buffer in the message" range="" rwaccess="RW"></bitfield>
<bitfield id="OWNERSHIP" width="1" begin="29" end="29" resetval="0" description="Ownership - Indicates ownership of the message and is valid only on sop.  This bit is set by the host and cleared by the port when the message has been transmitted.  The host uses this bit to reclaim buffers" range="" rwaccess="RW">
<bitenum id="HOST" value="11" token="HOST" description="The message is owned by the host" />
<bitenum id="PORT" value="27" token="PORT" description="The message is owned by the port" />
</bitfield>
<bitfield id="EOQ" width="1" begin="28" end="28" resetval="0" description="End Of Queue - Set by the port to indicate that all messages in the queue have been transmitted and the TX queue is empty.  End of queue is determined by the port when the next_descriptor_pointer is zero on an eop buffer.  This bit is valid only on eop" range="" rwaccess="RW">
<bitenum id="TRUE" value="27" token="TRUE" description="The Descriptor buffer is the last buffer in the last message in the queue" />
<bitenum id="FALSE" value="11" token="FALSE" description="The Tx queue has more messages to transfer" />
</bitfield>
<bitfield id="TEARDOWN" width="1" begin="27" end="27" resetval="0" description="Teardown Complete  Set by the port to indicate that the host commanded teardown process is complete, and the channel buffers may be reclaimed by the host. " range="" rwaccess="RW">
<bitenum id="NOT_COMPLETE" value="11" token="NOT_COMPLETE" description="The port has not completed the teardown process" />
<bitenum id="COMPLETE" value="27" token="COMPLETE" description="The port has completed the commanded teardown process." />
</bitfield>
<bitfield id="_RESV_6" width="9" begin="26" end="18" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="RETRY_COUNT" width="6" begin="17" end="12" resetval="0" description="Message Retry Count  Set by the cpu to indicate the total number of retries allowed for this message, including all segments. Decremented by the port each time a message is retried" range="" rwaccess="RW"></bitfield>
<bitfield id="CC" width="3" begin="11" end="9" resetval="0" description="Completion Code " range="" rwaccess="RW"></bitfield>
<bitfield id="MESSAGE_LENGTH" width="9" begin="8" end="0" resetval="0" description="Message Length  Written by the CPU to specify the number of double-words to transmit.  Message payloads are limited to a maximum size of 512 double-words (4096bytes)." range="0x0  0x1FF" rwaccess="RW"></bitfield>
</register>
     </group>
     <group id="RX_BUFF_DESC" name="RX_BUFF_DESC" instances="32" base="0x100200" instaddr="0x10" description="RX buffer descriptors">
	     <register id="RXnextDescPtr" acronym="RXnextDescPtr" offset="0x0000" width="32" description="Receive buffer descriptor 0">
<bitfield id="NEXT_DESC" width="32" begin="31" end="0" resetval="0" description="Next Descriptor Pointer - The 32-bit word aligned memory address of the next buffer descriptor in the RX queue.  This is the mechanism used to reference the next buffer descriptor from the current buffer descriptor.  If the value of this pointer is zero then the current buffer is the last buffer in the queue. " range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXbuffPtr" acronym="RXbuffPtr" offset="0x0004" width="32" description="Receive buffer descriptor 1">
<bitfield id="BUFFER_POINTER" width="32" begin="31" end="0" resetval="0" description="Buffer Pointer - The byte aligned memory address of the buffer associated with the buffer descriptor.  " range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXopt1" acronym="RXopt1" offset="0x0008" width="32" description="Receive buffer descriptor 2">
<bitfield id="SRC_ID" width="16" begin="31" end="16" resetval="0" description="Source Node Id  Unique Node identifier for the Source of the message" range="" rwaccess="RW"></bitfield>
<bitfield id="PRI" width="2" begin="15" end="14" resetval="0" description="Message Priority  Specifies the SRIO priority at which the message will be sent. Messages should not be sent at a priority level of 3 since the message response is required to promote the priority to avoid system deadlock. It is the responsibility of the software to assign the appropriate out-going priority" range="" rwaccess="RW"></bitfield>
<bitfield id="TT" width="2" begin="13" end="12" resetval="0" description="RapidIO tt field specifying 8 or 16bit DeviceIDs" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_4" width="6" begin="11" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="MAILBOX" width="6" begin="5" end="0" resetval="0" description="Destination Mailbox  Specifies the mailbox to which the message was sent. " range="0x0  0x3F" rwaccess="RW"></bitfield>
</register>
	     <register id="RXopt2" acronym="RXopt2" offset="0x000C" width="32" description="Receive buffer descriptor 3">
<bitfield id="SOP" width="1" begin="31" end="31" resetval="0" description="Start of Message - Indicates that the descriptor buffer is the first buffer in the message" range="" rwaccess="RW"></bitfield>
<bitfield id="EOP" width="1" begin="30" end="30" resetval="0" description="End of Message - Indicates that the descriptor buffer is the last buffer in the message" range="" rwaccess="RW"></bitfield>
<bitfield id="OWNERSHIP" width="1" begin="29" end="29" resetval="0" description="Ownership - Indicates ownership of the message and is valid only on &quot;sop&quot;.  This bit is set by the host and cleared by the port when the message has been transmitted.  The host uses this bit to reclaim buffers" range="" rwaccess="RW">
<bitenum id="HOST" value="11" token="HOST" description="The message is owned by the host" />
<bitenum id="PORT" value="27" token="PORT" description="The message is owned by the port" />
</bitfield>
<bitfield id="EOQ" width="1" begin="28" end="28" resetval="0" description="End Of Queue - Set by the port to indicate that the RX queue empty condition exists.  This bit is valid only on &quot;eop&quot;.  The port determines the end of queue condition by a zero next_descriptor_pointer" range="" rwaccess="RW">
<bitenum id="TRUE" value="27" token="TRUE" description="The Descriptor buffer is the last buffer in the last message in the queue" />
<bitenum id="FALSE" value="11" token="FALSE" description="The Tx queue has more messages to transfer" />
</bitfield>
<bitfield id="TEARDOWN" width="1" begin="27" end="27" resetval="0" description="Teardown Complete  Set by the port to indicate that the host commanded teardown process is complete, and the channel buffers may be reclaimed by the host. " range="" rwaccess="RW">
<bitenum id="NOT_COMPLETE" value="11" token="NOT_COMPLETE" description="The port has not completed the teardown process" />
<bitenum id="COMPLETE" value="27" token="COMPLETE" description="The port has completed the commanded teardown process." />
</bitfield>
<bitfield id="_RESV_6" width="15" begin="26" end="12" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="CC" width="3" begin="11" end="9" resetval="0" description="Completion Code " range="" rwaccess="RW"></bitfield>
<bitfield id="MESSAGE_LENGTH" width="9" begin="8" end="0" resetval="0" description="Message Length  Written by the CPU to specify the number of double-words to transmit.  Message payloads are limited to a maximum size of 512 double-words (4096bytes)." range="0x0  0x1FF" rwaccess="RW"></bitfield>
</register>
     </group>
	     <register id="BLK0_EN" acronym="BLK0_EN" offset="0x38" width="32" description="Block Enable">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EN" width="1" begin="0" end="0" resetval="1" description="Controls reset to Logical block n (0 to 8)" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Logical block n disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Logical block n enabled" />
</bitfield>
</register>
	     <register id="BLK0_EN_STAT" acronym="BLK0_EN_STAT" offset="0x3C" width="32" description="Block Enable Status">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EN_STAT" width="1" begin="0" end="0" resetval="1" description="Indicates state of BLKn_EN reset signal  0 Logical block n disabled, in reset and clock is off 1 Logical block n enabled and clocking" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Logical block n disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Logical block n enabled" />
</bitfield>
</register>
	     <register id="BLK1_EN" acronym="BLK1_EN" offset="0x40" width="32" description="Block Enable">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EN" width="1" begin="0" end="0" resetval="1" description="Controls reset to Logical block n (0 to 8)" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Logical block n disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Logical block n enabled" />
</bitfield>
</register>
	     <register id="BLK1_EN_STAT" acronym="BLK1_EN_STAT" offset="0x44" width="32" description="Block Enable Status">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EN_STAT" width="1" begin="0" end="0" resetval="1" description="Indicates state of BLKn_EN reset signal  0 Logical block n disabled, in reset and clock is off 1 Logical block n enabled and clocking" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Logical block n disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Logical block n enabled" />
</bitfield>
</register>
	     <register id="BLK2_EN" acronym="BLK2_EN" offset="0x48" width="32" description="Block Enable">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EN" width="1" begin="0" end="0" resetval="1" description="Controls reset to Logical block n (0 to 8)" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Logical block n disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Logical block n enabled" />
</bitfield>
</register>
	     <register id="BLK2_EN_STAT" acronym="BLK2_EN_STAT" offset="0x4C" width="32" description="Block Enable Status">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EN_STAT" width="1" begin="0" end="0" resetval="1" description="Indicates state of BLKn_EN reset signal  0 Logical block n disabled, in reset and clock is off 1 Logical block n enabled and clocking" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Logical block n disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Logical block n enabled" />
</bitfield>
</register>
	     <register id="BLK3_EN" acronym="BLK3_EN" offset="0x50" width="32" description="Block Enable">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EN" width="1" begin="0" end="0" resetval="1" description="Controls reset to Logical block n (0 to 8)" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Logical block n disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Logical block n enabled" />
</bitfield>
</register>
	     <register id="BLK3_EN_STAT" acronym="BLK3_EN_STAT" offset="0x54" width="32" description="Block Enable Status">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EN_STAT" width="1" begin="0" end="0" resetval="1" description="Indicates state of BLKn_EN reset signal  0 Logical block n disabled, in reset and clock is off 1 Logical block n enabled and clocking" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Logical block n disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Logical block n enabled" />
</bitfield>
</register>
	     <register id="BLK4_EN" acronym="BLK4_EN" offset="0x58" width="32" description="Block Enable">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EN" width="1" begin="0" end="0" resetval="1" description="Controls reset to Logical block n (0 to 8)" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Logical block n disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Logical block n enabled" />
</bitfield>
</register>
	     <register id="BLK4_EN_STAT" acronym="BLK4_EN_STAT" offset="0x5C" width="32" description="Block Enable Status">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EN_STAT" width="1" begin="0" end="0" resetval="1" description="Indicates state of BLKn_EN reset signal  0 Logical block n disabled, in reset and clock is off 1 Logical block n enabled and clocking" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Logical block n disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Logical block n enabled" />
</bitfield>
</register>
	     <register id="BLK5_EN" acronym="BLK5_EN" offset="0x60" width="32" description="Block Enable">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EN" width="1" begin="0" end="0" resetval="1" description="Controls reset to Logical block n (0 to 8)" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Logical block n disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Logical block n enabled" />
</bitfield>
</register>
	     <register id="BLK5_EN_STAT" acronym="BLK5_EN_STAT" offset="0x64" width="32" description="Block Enable Status">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EN_STAT" width="1" begin="0" end="0" resetval="1" description="Indicates state of BLKn_EN reset signal  0 Logical block n disabled, in reset and clock is off 1 Logical block n enabled and clocking" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Logical block n disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Logical block n enabled" />
</bitfield>
</register>
	     <register id="BLK6_EN" acronym="BLK6_EN" offset="0x68" width="32" description="Block Enable">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EN" width="1" begin="0" end="0" resetval="1" description="Controls reset to Logical block n (0 to 8)" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Logical block n disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Logical block n enabled" />
</bitfield>
</register>
	     <register id="BLK6_EN_STAT" acronym="BLK6_EN_STAT" offset="0x6C" width="32" description="Block Enable Status">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EN_STAT" width="1" begin="0" end="0" resetval="1" description="Indicates state of BLKn_EN reset signal  0 Logical block n disabled, in reset and clock is off 1 Logical block n enabled and clocking" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Logical block n disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Logical block n enabled" />
</bitfield>
</register>
	     <register id="BLK7_EN" acronym="BLK7_EN" offset="0x70" width="32" description="Block Enable">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EN" width="1" begin="0" end="0" resetval="1" description="Controls reset to Logical block n (0 to 8)" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Logical block n disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Logical block n enabled" />
</bitfield>
</register>
	     <register id="BLK7_EN_STAT" acronym="BLK7_EN_STAT" offset="0x74" width="32" description="Block Enable Status">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EN_STAT" width="1" begin="0" end="0" resetval="1" description="Indicates state of BLKn_EN reset signal  0 Logical block n disabled, in reset and clock is off 1 Logical block n enabled and clocking" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Logical block n disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Logical block n enabled" />
</bitfield>
</register>
	     <register id="BLK8_EN" acronym="BLK8_EN" offset="0x78" width="32" description="Block Enable">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EN" width="1" begin="0" end="0" resetval="1" description="Controls reset to Logical block n (0 to 8)" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Logical block n disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Logical block n enabled" />
</bitfield>
</register>
	     <register id="BLK8_EN_STAT" acronym="BLK8_EN_STAT" offset="0x7C" width="32" description="Block Enable Status">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EN_STAT" width="1" begin="0" end="0" resetval="1" description="Indicates state of BLKn_EN reset signal  0 Logical block n disabled, in reset and clock is off 1 Logical block n enabled and clocking" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Logical block n disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Logical block n enabled" />
</bitfield>
</register>
	     <register id="PF_16BIT_CNTL0" acronym="PF_16BIT_CNTL0" offset="0x90" width="32" description="Packet Forwarding register for 16b DeviceIDs">
<bitfield id="16BIT_DEVID_UP_BOUND" width="16" begin="31" end="16" resetval="65535" description="Upper 16b DeviceID boundary. DestID above this range cannot use the table entry" range="" rwaccess="RW"></bitfield>
<bitfield id="16BIT_DEVID_LOW_BOUND" width="16" begin="15" end="0" resetval="65535" description="Lower 16b DeviceID boundary. DestID lower than this number cannot use the table entry" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="PF_8BIT_CNTL0" acronym="PF_8BIT_CNTL0" offset="0x94" width="32" description="Packet Forwarding register for 8b DeviceIDs">
<bitfield id="_RESV_1" width="14" begin="31" end="18" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="OUT_BOUND_PORT" width="2" begin="17" end="16" resetval="3" description="Output port number for packet's whose DestID falls within the 8b or 16b range  for this table entry" range="" rwaccess="RW"></bitfield>
<bitfield id="8BIT_DEVID_UP_BOUND" width="8" begin="15" end="8" resetval="255" description="Upper 8b DeviceID boundary.  DestID above this range cannot use the table entry" range="" rwaccess="RW"></bitfield>
<bitfield id="8BIT_DEVID_LOW_BOUND" width="8" begin="7" end="0" resetval="255" description="Lower 8b DeviceID boundary.  DestID lower than this number cannot use the table entry" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="PF_16BIT_CNTL1" acronym="PF_16BIT_CNTL1" offset="0x98" width="32" description="Packet Forwarding register for 16b DeviceIDs">
<bitfield id="16BIT_DEVID_UP_BOUND" width="16" begin="31" end="16" resetval="65535" description="Upper 16b DeviceID boundary. DestID above this range cannot use the table entry" range="" rwaccess="RW"></bitfield>
<bitfield id="16BIT_DEVID_LOW_BOUND" width="16" begin="15" end="0" resetval="65535" description="Lower 16b DeviceID boundary. DestID lower than this number cannot use the table entry" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="PF_8BIT_CNTL1" acronym="PF_8BIT_CNTL1" offset="0x9C" width="32" description="Packet Forwarding register for 8b DeviceIDs">
<bitfield id="_RESV_1" width="14" begin="31" end="18" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="OUT_BOUND_PORT" width="2" begin="17" end="16" resetval="3" description="Output port number for packet's whose DestID falls within the 8b or 16b range  for this table entry" range="" rwaccess="RW"></bitfield>
<bitfield id="8BIT_DEVID_UP_BOUND" width="8" begin="15" end="8" resetval="255" description="Upper 8b DeviceID boundary.  DestID above this range cannot use the table entry" range="" rwaccess="RW"></bitfield>
<bitfield id="8BIT_DEVID_LOW_BOUND" width="8" begin="7" end="0" resetval="255" description="Lower 8b DeviceID boundary.  DestID lower than this number cannot use the table entry" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="PF_16BIT_CNTL2" acronym="PF_16BIT_CNTL2" offset="0xA0" width="32" description="Packet Forwarding register for 16b DeviceIDs">
<bitfield id="16BIT_DEVID_UP_BOUND" width="16" begin="31" end="16" resetval="65535" description="Upper 16b DeviceID boundary. DestID above this range cannot use the table entry" range="" rwaccess="RW"></bitfield>
<bitfield id="16BIT_DEVID_LOW_BOUND" width="16" begin="15" end="0" resetval="65535" description="Lower 16b DeviceID boundary. DestID lower than this number cannot use the table entry" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="PF_8BIT_CNTL2" acronym="PF_8BIT_CNTL2" offset="0xA4" width="32" description="Packet Forwarding register for 8b DeviceIDs">
<bitfield id="_RESV_1" width="14" begin="31" end="18" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="OUT_BOUND_PORT" width="2" begin="17" end="16" resetval="3" description="Output port number for packet's whose DestID falls within the 8b or 16b range  for this table entry" range="" rwaccess="RW"></bitfield>
<bitfield id="8BIT_DEVID_UP_BOUND" width="8" begin="15" end="8" resetval="255" description="Upper 8b DeviceID boundary.  DestID above this range cannot use the table entry" range="" rwaccess="RW"></bitfield>
<bitfield id="8BIT_DEVID_LOW_BOUND" width="8" begin="7" end="0" resetval="255" description="Lower 8b DeviceID boundary.  DestID lower than this number cannot use the table entry" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="PF_16BIT_CNTL3" acronym="PF_16BIT_CNTL3" offset="0xA8" width="32" description="Packet Forwarding register for 16b DeviceIDs">
<bitfield id="16BIT_DEVID_UP_BOUND" width="16" begin="31" end="16" resetval="65535" description="Upper 16b DeviceID boundary. DestID above this range cannot use the table entry" range="" rwaccess="RW"></bitfield>
<bitfield id="16BIT_DEVID_LOW_BOUND" width="16" begin="15" end="0" resetval="65535" description="Lower 16b DeviceID boundary. DestID lower than this number cannot use the table entry" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="PF_8BIT_CNTL3" acronym="PF_8BIT_CNTL3" offset="0xAC" width="32" description="Packet Forwarding register for 8b DeviceIDs">
<bitfield id="_RESV_1" width="14" begin="31" end="18" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="OUT_BOUND_PORT" width="2" begin="17" end="16" resetval="3" description="Output port number for packet's whose DestID falls within the 8b or 16b range  for this table entry" range="" rwaccess="RW"></bitfield>
<bitfield id="8BIT_DEVID_UP_BOUND" width="8" begin="15" end="8" resetval="255" description="Upper 8b DeviceID boundary.  DestID above this range cannot use the table entry" range="" rwaccess="RW"></bitfield>
<bitfield id="8BIT_DEVID_LOW_BOUND" width="8" begin="7" end="0" resetval="255" description="Lower 8b DeviceID boundary.  DestID lower than this number cannot use the table entry" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="DOORBELL_ICSR0" acronym="DOORBELL_ICSR0" offset="0x200" width="32" description="DOORBELL Interrupt Status register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ICS[16]" width="1" begin="15" end="0" resetval="0" description="Doorbell n (0 to 3) interrupt condition status bits" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="DOORBELL_ICCR0" acronym="DOORBELL_ICCR0" offset="0x208" width="32" description="DOORBELL Interrupt Clear register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ICC[16]" width="1" begin="15" end="0" resetval="0" description="Doorbell n (0 to 3) interrupt clear bits" range="" rwaccess="W">
<bitenum id="CLEAR" value="1" token="CLEAR" description="" />
</bitfield>
</register>
	     <register id="DOORBELL_ICSR1" acronym="DOORBELL_ICSR1" offset="0x210" width="32" description="DOORBELL Interrupt Status register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ICS[16]" width="1" begin="15" end="0" resetval="0" description="Doorbell n (0 to 3) interrupt condition status bits" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="DOORBELL_ICCR1" acronym="DOORBELL_ICCR1" offset="0x218" width="32" description="DOORBELL Interrupt Clear register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ICC[16]" width="1" begin="15" end="0" resetval="0" description="Doorbell n (0 to 3) interrupt clear bits" range="" rwaccess="W">
<bitenum id="CLEAR" value="1" token="CLEAR" description="" />
</bitfield>
</register>
	     <register id="DOORBELL_ICSR2" acronym="DOORBELL_ICSR2" offset="0x220" width="32" description="DOORBELL Interrupt Status register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ICS[16]" width="1" begin="15" end="0" resetval="0" description="Doorbell n (0 to 3) interrupt condition status bits" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="DOORBELL_ICCR2" acronym="DOORBELL_ICCR2" offset="0x228" width="32" description="DOORBELL Interrupt Clear register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ICC[16]" width="1" begin="15" end="0" resetval="0" description="Doorbell n (0 to 3) interrupt clear bits" range="" rwaccess="W">
<bitenum id="CLEAR" value="1" token="CLEAR" description="" />
</bitfield>
</register>
	     <register id="DOORBELL_ICSR3" acronym="DOORBELL_ICSR3" offset="0x230" width="32" description="DOORBELL Interrupt Status register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ICS[16]" width="1" begin="15" end="0" resetval="0" description="Doorbell n (0 to 3) interrupt condition status bits" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="DOORBELL_ICCR3" acronym="DOORBELL_ICCR3" offset="0x238" width="32" description="DOORBELL Interrupt Clear register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ICC[16]" width="1" begin="15" end="0" resetval="0" description="Doorbell n (0 to 3) interrupt clear bits" range="" rwaccess="W">
<bitenum id="CLEAR" value="1" token="CLEAR" description="" />
</bitfield>
</register>
	     <register id="DOORBELL0_ICRR" acronym="DOORBELL0_ICRR" offset="0x280" width="32" description="DOORBELL Interrupt Condition Routing register (bits 0 to 7)">
<bitfield id="ICR7" width="4" begin="31" end="28" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR6" width="4" begin="27" end="24" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR5" width="4" begin="23" end="20" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR4" width="4" begin="19" end="16" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR3" width="4" begin="15" end="12" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR2" width="4" begin="11" end="8" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR1" width="4" begin="7" end="4" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR0" width="4" begin="3" end="0" resetval="0" description="" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="DOORBELL0_ICRR2" acronym="DOORBELL0_ICRR2" offset="0x284" width="32" description="DOORBELL Interrupt Condition Routing register (bits 8 to 15)">
<bitfield id="ICR7" width="4" begin="31" end="28" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR6" width="4" begin="27" end="24" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR5" width="4" begin="23" end="20" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR4" width="4" begin="19" end="16" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR3" width="4" begin="15" end="12" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR2" width="4" begin="11" end="8" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR1" width="4" begin="7" end="4" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR0" width="4" begin="3" end="0" resetval="0" description="" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="DOORBELL1_ICRR" acronym="DOORBELL1_ICRR" offset="0x290" width="32" description="DOORBELL Interrupt Condition Routing register (bits 0 to 7)">
<bitfield id="ICR7" width="4" begin="31" end="28" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR6" width="4" begin="27" end="24" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR5" width="4" begin="23" end="20" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR4" width="4" begin="19" end="16" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR3" width="4" begin="15" end="12" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR2" width="4" begin="11" end="8" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR1" width="4" begin="7" end="4" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR0" width="4" begin="3" end="0" resetval="0" description="" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="DOORBELL1_ICRR2" acronym="DOORBELL1_ICRR2" offset="0x294" width="32" description="DOORBELL Interrupt Condition Routing register (bits 8 to 15)">
<bitfield id="ICR7" width="4" begin="31" end="28" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR6" width="4" begin="27" end="24" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR5" width="4" begin="23" end="20" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR4" width="4" begin="19" end="16" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR3" width="4" begin="15" end="12" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR2" width="4" begin="11" end="8" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR1" width="4" begin="7" end="4" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR0" width="4" begin="3" end="0" resetval="0" description="" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="DOORBELL2_ICRR" acronym="DOORBELL2_ICRR" offset="0x2A0" width="32" description="DOORBELL Interrupt Condition Routing register (bits 0 to 7)">
<bitfield id="ICR7" width="4" begin="31" end="28" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR6" width="4" begin="27" end="24" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR5" width="4" begin="23" end="20" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR4" width="4" begin="19" end="16" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR3" width="4" begin="15" end="12" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR2" width="4" begin="11" end="8" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR1" width="4" begin="7" end="4" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR0" width="4" begin="3" end="0" resetval="0" description="" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="DOORBELL2_ICRR2" acronym="DOORBELL2_ICRR2" offset="0x2A4" width="32" description="DOORBELL Interrupt Condition Routing register (bits 8 to 15)">
<bitfield id="ICR7" width="4" begin="31" end="28" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR6" width="4" begin="27" end="24" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR5" width="4" begin="23" end="20" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR4" width="4" begin="19" end="16" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR3" width="4" begin="15" end="12" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR2" width="4" begin="11" end="8" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR1" width="4" begin="7" end="4" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR0" width="4" begin="3" end="0" resetval="0" description="" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="DOORBELL3_ICRR" acronym="DOORBELL3_ICRR" offset="0x2B0" width="32" description="DOORBELL Interrupt Condition Routing register (bits 0 to 7)">
<bitfield id="ICR7" width="4" begin="31" end="28" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR6" width="4" begin="27" end="24" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR5" width="4" begin="23" end="20" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR4" width="4" begin="19" end="16" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR3" width="4" begin="15" end="12" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR2" width="4" begin="11" end="8" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR1" width="4" begin="7" end="4" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR0" width="4" begin="3" end="0" resetval="0" description="" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="DOORBELL3_ICRR2" acronym="DOORBELL3_ICRR2" offset="0x2B4" width="32" description="DOORBELL Interrupt Condition Routing register (bits 8 to 15)">
<bitfield id="ICR7" width="4" begin="31" end="28" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR6" width="4" begin="27" end="24" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR5" width="4" begin="23" end="20" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR4" width="4" begin="19" end="16" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR3" width="4" begin="15" end="12" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR2" width="4" begin="11" end="8" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR1" width="4" begin="7" end="4" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR0" width="4" begin="3" end="0" resetval="0" description="" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="LSU1_REG0" acronym="LSU1_REG0" offset="0x400" width="32" description="LSU Control register0">
<bitfield id="ADDRESS_MSB" width="32" begin="31" end="0" resetval="0" description="32 bit Ext address fields " range="0x00000000 - 0xFFFFFFFF" rwaccess="RW"></bitfield>
</register>
	     <register id="LSU1_REG1" acronym="LSU1_REG1" offset="0x404" width="32" description="LSU Control register1">
<bitfield id="ADDRESS_LSB_CONFIG_OFFSET" width="32" begin="31" end="0" resetval="0" description="1) 32b Address  Packet Types 2,5, and 6 (Will be used in conjunction with BYTE_COUNT to create 64b aligned RapidIO packet header address)                  2) 24b Config_offset  Field  Maintenance Packets Type 8 (Will be used in conjunction with BYTE_COUNT to create 64b aligned RapidIO packet header Config_offset); The 2 lsb of this field must be zero since the smallest configuration access is 4B." range="0x00000000 - 0xFFFFFFFF" rwaccess="RW"></bitfield>
</register>
	     <register id="LSU1_REG2" acronym="LSU1_REG2" offset="0x408" width="32" description="LSU Control register2">
<bitfield id="DSP_ADDRESS" width="32" begin="31" end="0" resetval="0" description="32b DSP byte address" range="0x00000000 - 0xFFFFFFFF" rwaccess="RW"></bitfield>
</register>
	     <register id="LSU1_REG3" acronym="LSU1_REG3" offset="0x40C" width="32" description="LSU Control register3">
<bitfield id="_RESV_1" width="20" begin="31" end="12" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="BYTE_COUNT" width="12" begin="11" end="0" resetval="0" description="Number of data bytes to Read/Write - up to 4KB.  (Used in conjunction with RapidIO address to create WRSIZE/RDSIZE and WDPTR in RapidIO packet header)." range="0x000 - 0xFFF" rwaccess="RW"></bitfield>
</register>
	     <register id="LSU1_REG4" acronym="LSU1_REG4" offset="0x410" width="32" description="LSU Control register4">
<bitfield id="OUTPORTID" width="2" begin="31" end="30" resetval="0" description="Not applicable for Rapid IO header. Indicates the output port number for the packet to be transmitted from.  Specified by the CPU along with NodeID." range="" rwaccess="RW"></bitfield>
<bitfield id="PRIORITY" width="2" begin="29" end="28" resetval="0" description="RapidIO prio field specifying packet priority. Request packets should not be sent at a priority level of 3 in order to avoid system deadlock. It is the responsibility of the software to assign the appropriate out-going priority." range="" rwaccess="RW"></bitfield>
<bitfield id="XAMBS" width="2" begin="27" end="26" resetval="0" description="RapidIO xambs field specifying extended address MSB" range="" rwaccess="RW"></bitfield>
<bitfield id="ID_SIZE" width="2" begin="25" end="24" resetval="0" description="RapidIO tt field specifying 8 or 16bit DeviceIDs" range="" rwaccess="RW">
<bitenum id="8BIT" value="0" token="8BIT" description="8 bit device Ids" />
<bitenum id="16BIT" value="1" token="16BIT" description="16 bit device Ids" />
</bitfield>
<bitfield id="DESTID" width="16" begin="23" end="8" resetval="0" description="RapidIO destinationID field specifying target device" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_6" width="7" begin="7" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="INTERRUPT_REQ" width="1" begin="0" end="0" resetval="0" description="CPU controlled request bit used for interrupt generation.  Typically used in conjunction with non-posted commands to alert the CPU when the requested data/status is present.                                                                              0b0 - An interrupt is not requested upon completion of command 0b1- An interrupt is requested upon completion of command " range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Interrupt is not requested" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Interrupt is requested" />
</bitfield>
</register>
	     <register id="LSU1_REG5" acronym="LSU1_REG5" offset="0x414" width="32" description="LSU Control register5">
<bitfield id="DRBLL_INFO" width="16" begin="31" end="16" resetval="0" description="RapidIO doorbell info field for type 10 packets" range="0x0000-0xFFFF" rwaccess="RW"></bitfield>
<bitfield id="HOP_COUNT" width="8" begin="15" end="8" resetval="0" description="RapidIO hop_count field specified for Type 8 Maintenance packets" range="0x00-0xFF" rwaccess="RW"></bitfield>
<bitfield id="PACKET_TYPE" width="8" begin="7" end="0" resetval="0" description="4 msb = 4b ftype field for all packets and                                                         4 lsb  = 4b trans field for Packet types 2,5,8" range="0x00-0xFF" rwaccess="RW"></bitfield>
</register>
	     <register id="LSU1_REG6" acronym="LSU1_REG6" offset="0x418" width="32" description="LSU Control register6">
<bitfield id="_RESV_1" width="27" begin="31" end="5" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="COMPLETION_CODE" width="4" begin="4" end="1" resetval="0" description="Indicates the status of the pending command 0b000  Transaction complete, No Errors (Posted/Non-posted) 0b001  Transaction Timeout occurred on Non-posted transaction 0b010  Transaction complete, Packet not sent due to flow control blockade (Xoff) 0b011  Transaction complete, Non-posted response packet (type 8 and 13) contained ERROR status, or response payload length was in error  0b100  Transaction complete, Packet not sent due to unsupported transaction type or invalid programming encoding for one or more LSU register fields 0b101  DMA data transfer error 0b110  &quot;Retry&quot; DOORBELL response received, or Atomic Test-and-swap was not allowed (semaphore in use) 0b111  Transaction complete, Packet not sent due to unavailable outbound credit at given priority " range="" rwaccess="R"></bitfield>
<bitfield id="BSY" width="1" begin="0" end="0" resetval="0" description="Indicates status of the command registers                                                    0b0 - Command registers are available(writable) for next set of transfer descriptors 0b1 - Command registers are busy with current transfer  " range="" rwaccess="R"></bitfield>
</register>
	     <register id="LSU1_FLOW_MASKS" acronym="LSU1_FLOW_MASKS1" offset="0x41C" width="32" description="Core n LSU Congestion Control Flow Mask">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="FLOW_MASK15" width="1" begin="15" end="15" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK14" width="1" begin="14" end="14" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK13" width="1" begin="13" end="13" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK12" width="1" begin="12" end="12" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK11" width="1" begin="11" end="11" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK10" width="1" begin="10" end="10" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK9" width="1" begin="9" end="9" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK8" width="1" begin="8" end="8" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK7" width="1" begin="7" end="7" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK6" width="1" begin="6" end="6" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK5" width="1" begin="5" end="5" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK4" width="1" begin="4" end="4" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK3" width="1" begin="3" end="3" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK2" width="1" begin="2" end="2" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK1" width="1" begin="1" end="1" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK0" width="1" begin="0" end="0" resetval="1" description="" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="LSU2_REG0" acronym="LSU2_REG0" offset="0x420" width="32" description="LSU Control register0">
<bitfield id="ADDRESS_MSB" width="32" begin="31" end="0" resetval="0" description="32 bit Ext address fields " range="0x00000000 - 0xFFFFFFFF" rwaccess="RW"></bitfield>
</register>
	     <register id="LSU2_REG1" acronym="LSU2_REG1" offset="0x424" width="32" description="LSU Control register1">
<bitfield id="ADDRESS_LSB_CONFIG_OFFSET" width="32" begin="31" end="0" resetval="0" description="1) 32b Address  Packet Types 2,5, and 6 (Will be used in conjunction with BYTE_COUNT to create 64b aligned RapidIO packet header address)                  2) 24b Config_offset  Field  Maintenance Packets Type 8 (Will be used in conjunction with BYTE_COUNT to create 64b aligned RapidIO packet header Config_offset); The 2 lsb of this field must be zero since the smallest configuration access is 4B." range="0x00000000 - 0xFFFFFFFF" rwaccess="RW"></bitfield>
</register>
	     <register id="LSU2_REG2" acronym="LSU2_REG2" offset="0x428" width="32" description="LSU Control register2">
<bitfield id="DSP_ADDRESS" width="32" begin="31" end="0" resetval="0" description="32b DSP byte address" range="0x00000000 - 0xFFFFFFFF" rwaccess="RW"></bitfield>
</register>
	     <register id="LSU2_REG3" acronym="LSU2_REG3" offset="0x42C" width="32" description="LSU Control register3">
<bitfield id="_RESV_1" width="20" begin="31" end="12" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="BYTE_COUNT" width="12" begin="11" end="0" resetval="0" description="Number of data bytes to Read/Write - up to 4KB.  (Used in conjunction with RapidIO address to create WRSIZE/RDSIZE and WDPTR in RapidIO packet header)." range="0x000 - 0xFFF" rwaccess="RW"></bitfield>
</register>
	     <register id="LSU2_REG4" acronym="LSU2_REG4" offset="0x430" width="32" description="LSU Control register4">
<bitfield id="OUTPORTID" width="2" begin="31" end="30" resetval="0" description="Not applicable for Rapid IO header. Indicates the output port number for the packet to be transmitted from.  Specified by the CPU along with NodeID." range="" rwaccess="RW"></bitfield>
<bitfield id="PRIORITY" width="2" begin="29" end="28" resetval="0" description="RapidIO prio field specifying packet priority. Request packets should not be sent at a priority level of 3 in order to avoid system deadlock. It is the responsibility of the software to assign the appropriate out-going priority." range="" rwaccess="RW"></bitfield>
<bitfield id="XAMBS" width="2" begin="27" end="26" resetval="0" description="RapidIO xambs field specifying extended address MSB" range="" rwaccess="RW"></bitfield>
<bitfield id="ID_SIZE" width="2" begin="25" end="24" resetval="0" description="RapidIO tt field specifying 8 or 16bit DeviceIDs" range="" rwaccess="RW">
<bitenum id="8BIT" value="0" token="8BIT" description="8 bit device Ids" />
<bitenum id="16BIT" value="1" token="16BIT" description="16 bit device Ids" />
</bitfield>
<bitfield id="DESTID" width="16" begin="23" end="8" resetval="0" description="RapidIO destinationID field specifying target device" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_6" width="7" begin="7" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="INTERRUPT_REQ" width="1" begin="0" end="0" resetval="0" description="CPU controlled request bit used for interrupt generation.  Typically used in conjunction with non-posted commands to alert the CPU when the requested data/status is present.                                                                              0b0 - An interrupt is not requested upon completion of command 0b1- An interrupt is requested upon completion of command " range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Interrupt is not requested" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Interrupt is requested" />
</bitfield>
</register>
	     <register id="LSU2_REG5" acronym="LSU2_REG5" offset="0x434" width="32" description="LSU Control register5">
<bitfield id="DRBLL_INFO" width="16" begin="31" end="16" resetval="0" description="RapidIO doorbell info field for type 10 packets" range="0x0000-0xFFFF" rwaccess="RW"></bitfield>
<bitfield id="HOP_COUNT" width="8" begin="15" end="8" resetval="0" description="RapidIO hop_count field specified for Type 8 Maintenance packets" range="0x00-0xFF" rwaccess="RW"></bitfield>
<bitfield id="PACKET_TYPE" width="8" begin="7" end="0" resetval="0" description="4 msb = 4b ftype field for all packets and                                                         4 lsb  = 4b trans field for Packet types 2,5,8" range="0x00-0xFF" rwaccess="RW"></bitfield>
</register>
	     <register id="LSU2_REG6" acronym="LSU2_REG6" offset="0x438" width="32" description="LSU Control register6">
<bitfield id="_RESV_1" width="27" begin="31" end="5" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="COMPLETION_CODE" width="4" begin="4" end="1" resetval="0" description="Indicates the status of the pending command 0b000  Transaction complete, No Errors (Posted/Non-posted) 0b001  Transaction Timeout occurred on Non-posted transaction 0b010  Transaction complete, Packet not sent due to flow control blockade (Xoff) 0b011  Transaction complete, Non-posted response packet (type 8 and 13) contained ERROR status, or response payload length was in error  0b100  Transaction complete, Packet not sent due to unsupported transaction type or invalid programming encoding for one or more LSU register fields 0b101  DMA data transfer error 0b110  &quot;Retry&quot; DOORBELL response received, or Atomic Test-and-swap was not allowed (semaphore in use) 0b111  Transaction complete, Packet not sent due to unavailable outbound credit at given priority " range="" rwaccess="R"></bitfield>
<bitfield id="BSY" width="1" begin="0" end="0" resetval="0" description="Indicates status of the command registers                                                    0b0 - Command registers are available(writable) for next set of transfer descriptors 0b1 - Command registers are busy with current transfer  " range="" rwaccess="R"></bitfield>
</register>
	     <register id="LSU2_FLOW_MASKS2" acronym="LSU2_FLOW_MASKS2" offset="0x43C" width="32" description="Core n LSU Congestion Control Flow Mask">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="FLOW_MASK15" width="1" begin="15" end="15" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK14" width="1" begin="14" end="14" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK13" width="1" begin="13" end="13" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK12" width="1" begin="12" end="12" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK11" width="1" begin="11" end="11" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK10" width="1" begin="10" end="10" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK9" width="1" begin="9" end="9" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK8" width="1" begin="8" end="8" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK7" width="1" begin="7" end="7" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK6" width="1" begin="6" end="6" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK5" width="1" begin="5" end="5" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK4" width="1" begin="4" end="4" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK3" width="1" begin="3" end="3" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK2" width="1" begin="2" end="2" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK1" width="1" begin="1" end="1" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK0" width="1" begin="0" end="0" resetval="1" description="" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="LSU3_REG0" acronym="LSU3_REG0" offset="0x440" width="32" description="LSU Control register0">
<bitfield id="ADDRESS_MSB" width="32" begin="31" end="0" resetval="0" description="32 bit Ext address fields " range="0x00000000 - 0xFFFFFFFF" rwaccess="RW"></bitfield>
</register>
	     <register id="LSU3_REG1" acronym="LSU3_REG1" offset="0x444" width="32" description="LSU Control register1">
<bitfield id="ADDRESS_LSB_CONFIG_OFFSET" width="32" begin="31" end="0" resetval="0" description="1) 32b Address  Packet Types 2,5, and 6 (Will be used in conjunction with BYTE_COUNT to create 64b aligned RapidIO packet header address)                  2) 24b Config_offset  Field  Maintenance Packets Type 8 (Will be used in conjunction with BYTE_COUNT to create 64b aligned RapidIO packet header Config_offset); The 2 lsb of this field must be zero since the smallest configuration access is 4B." range="0x00000000 - 0xFFFFFFFF" rwaccess="RW"></bitfield>
</register>
	     <register id="LSU3_REG2" acronym="LSU3_REG2" offset="0x448" width="32" description="LSU Control register2">
<bitfield id="DSP_ADDRESS" width="32" begin="31" end="0" resetval="0" description="32b DSP byte address" range="0x00000000 - 0xFFFFFFFF" rwaccess="RW"></bitfield>
</register>
	     <register id="LSU3_REG3" acronym="LSU3_REG3" offset="0x44C" width="32" description="LSU Control register3">
<bitfield id="_RESV_1" width="20" begin="31" end="12" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="BYTE_COUNT" width="12" begin="11" end="0" resetval="0" description="Number of data bytes to Read/Write - up to 4KB.  (Used in conjunction with RapidIO address to create WRSIZE/RDSIZE and WDPTR in RapidIO packet header)." range="0x000 - 0xFFF" rwaccess="RW"></bitfield>
</register>
	     <register id="LSU3_REG4" acronym="LSU3_REG4" offset="0x450" width="32" description="LSU Control register4">
<bitfield id="OUTPORTID" width="2" begin="31" end="30" resetval="0" description="Not applicable for Rapid IO header. Indicates the output port number for the packet to be transmitted from.  Specified by the CPU along with NodeID." range="" rwaccess="RW"></bitfield>
<bitfield id="PRIORITY" width="2" begin="29" end="28" resetval="0" description="RapidIO prio field specifying packet priority. Request packets should not be sent at a priority level of 3 in order to avoid system deadlock. It is the responsibility of the software to assign the appropriate out-going priority." range="" rwaccess="RW"></bitfield>
<bitfield id="XAMBS" width="2" begin="27" end="26" resetval="0" description="RapidIO xambs field specifying extended address MSB" range="" rwaccess="RW"></bitfield>
<bitfield id="ID_SIZE" width="2" begin="25" end="24" resetval="0" description="RapidIO tt field specifying 8 or 16bit DeviceIDs" range="" rwaccess="RW">
<bitenum id="8BIT" value="0" token="8BIT" description="8 bit device Ids" />
<bitenum id="16BIT" value="1" token="16BIT" description="16 bit device Ids" />
</bitfield>
<bitfield id="DESTID" width="16" begin="23" end="8" resetval="0" description="RapidIO destinationID field specifying target device" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_6" width="7" begin="7" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="INTERRUPT_REQ" width="1" begin="0" end="0" resetval="0" description="CPU controlled request bit used for interrupt generation.  Typically used in conjunction with non-posted commands to alert the CPU when the requested data/status is present.                                                                              0b0 - An interrupt is not requested upon completion of command 0b1- An interrupt is requested upon completion of command " range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Interrupt is not requested" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Interrupt is requested" />
</bitfield>
</register>
	     <register id="LSU3_REG5" acronym="LSU3_REG5" offset="0x454" width="32" description="LSU Control register5">
<bitfield id="DRBLL_INFO" width="16" begin="31" end="16" resetval="0" description="RapidIO doorbell info field for type 10 packets" range="0x0000-0xFFFF" rwaccess="RW"></bitfield>
<bitfield id="HOP_COUNT" width="8" begin="15" end="8" resetval="0" description="RapidIO hop_count field specified for Type 8 Maintenance packets" range="0x00-0xFF" rwaccess="RW"></bitfield>
<bitfield id="PACKET_TYPE" width="8" begin="7" end="0" resetval="0" description="4 msb = 4b ftype field for all packets and                                                         4 lsb  = 4b trans field for Packet types 2,5,8" range="0x00-0xFF" rwaccess="RW"></bitfield>
</register>
	     <register id="LSU3_REG6" acronym="LSU3_REG6" offset="0x458" width="32" description="LSU Control register6">
<bitfield id="_RESV_1" width="27" begin="31" end="5" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="COMPLETION_CODE" width="4" begin="4" end="1" resetval="0" description="Indicates the status of the pending command 0b000  Transaction complete, No Errors (Posted/Non-posted) 0b001  Transaction Timeout occurred on Non-posted transaction 0b010  Transaction complete, Packet not sent due to flow control blockade (Xoff) 0b011  Transaction complete, Non-posted response packet (type 8 and 13) contained ERROR status, or response payload length was in error  0b100  Transaction complete, Packet not sent due to unsupported transaction type or invalid programming encoding for one or more LSU register fields 0b101  DMA data transfer error 0b110  &quot;Retry&quot; DOORBELL response received, or Atomic Test-and-swap was not allowed (semaphore in use) 0b111  Transaction complete, Packet not sent due to unavailable outbound credit at given priority " range="" rwaccess="R"></bitfield>
<bitfield id="BSY" width="1" begin="0" end="0" resetval="0" description="Indicates status of the command registers                                                    0b0 - Command registers are available(writable) for next set of transfer descriptors 0b1 - Command registers are busy with current transfer  " range="" rwaccess="R"></bitfield>
</register>
	     <register id="LSU3_FLOW_MASKS3" acronym="LSU3_FLOW_MASKS3" offset="0x45C" width="32" description="Core n LSU Congestion Control Flow Mask">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="FLOW_MASK15" width="1" begin="15" end="15" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK14" width="1" begin="14" end="14" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK13" width="1" begin="13" end="13" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK12" width="1" begin="12" end="12" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK11" width="1" begin="11" end="11" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK10" width="1" begin="10" end="10" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK9" width="1" begin="9" end="9" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK8" width="1" begin="8" end="8" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK7" width="1" begin="7" end="7" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK6" width="1" begin="6" end="6" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK5" width="1" begin="5" end="5" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK4" width="1" begin="4" end="4" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK3" width="1" begin="3" end="3" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK2" width="1" begin="2" end="2" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK1" width="1" begin="1" end="1" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK0" width="1" begin="0" end="0" resetval="1" description="" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="LSU4_REG0" acronym="LSU4_REG0" offset="0x460" width="32" description="LSU Control register0">
<bitfield id="ADDRESS_MSB" width="32" begin="31" end="0" resetval="0" description="32 bit Ext address fields " range="0x00000000 - 0xFFFFFFFF" rwaccess="RW"></bitfield>
</register>
	     <register id="LSU4_REG1" acronym="LSU4_REG1" offset="0x464" width="32" description="LSU Control register1">
<bitfield id="ADDRESS_LSB_CONFIG_OFFSET" width="32" begin="31" end="0" resetval="0" description="1) 32b Address  Packet Types 2,5, and 6 (Will be used in conjunction with BYTE_COUNT to create 64b aligned RapidIO packet header address)                  2) 24b Config_offset  Field  Maintenance Packets Type 8 (Will be used in conjunction with BYTE_COUNT to create 64b aligned RapidIO packet header Config_offset); The 2 lsb of this field must be zero since the smallest configuration access is 4B." range="0x00000000 - 0xFFFFFFFF" rwaccess="RW"></bitfield>
</register>
	     <register id="LSU4_REG2" acronym="LSU4_REG2" offset="0x468" width="32" description="LSU Control register2">
<bitfield id="DSP_ADDRESS" width="32" begin="31" end="0" resetval="0" description="32b DSP byte address" range="0x00000000 - 0xFFFFFFFF" rwaccess="RW"></bitfield>
</register>
	     <register id="LSU4_REG3" acronym="LSU4_REG3" offset="0x46C" width="32" description="LSU Control register3">
<bitfield id="_RESV_1" width="20" begin="31" end="12" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="BYTE_COUNT" width="12" begin="11" end="0" resetval="0" description="Number of data bytes to Read/Write - up to 4KB.  (Used in conjunction with RapidIO address to create WRSIZE/RDSIZE and WDPTR in RapidIO packet header)." range="0x000 - 0xFFF" rwaccess="RW"></bitfield>
</register>
	     <register id="LSU4_REG4" acronym="LSU4_REG4" offset="0x470" width="32" description="LSU Control register4">
<bitfield id="OUTPORTID" width="2" begin="31" end="30" resetval="0" description="Not applicable for Rapid IO header. Indicates the output port number for the packet to be transmitted from.  Specified by the CPU along with NodeID." range="" rwaccess="RW"></bitfield>
<bitfield id="PRIORITY" width="2" begin="29" end="28" resetval="0" description="RapidIO prio field specifying packet priority. Request packets should not be sent at a priority level of 3 in order to avoid system deadlock. It is the responsibility of the software to assign the appropriate out-going priority." range="" rwaccess="RW"></bitfield>
<bitfield id="XAMBS" width="2" begin="27" end="26" resetval="0" description="RapidIO xambs field specifying extended address MSB" range="" rwaccess="RW"></bitfield>
<bitfield id="ID_SIZE" width="2" begin="25" end="24" resetval="0" description="RapidIO tt field specifying 8 or 16bit DeviceIDs" range="" rwaccess="RW">
<bitenum id="8BIT" value="0" token="8BIT" description="8 bit device Ids" />
<bitenum id="16BIT" value="1" token="16BIT" description="16 bit device Ids" />
</bitfield>
<bitfield id="DESTID" width="16" begin="23" end="8" resetval="0" description="RapidIO destinationID field specifying target device" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_6" width="7" begin="7" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="INTERRUPT_REQ" width="1" begin="0" end="0" resetval="0" description="CPU controlled request bit used for interrupt generation.  Typically used in conjunction with non-posted commands to alert the CPU when the requested data/status is present.                                                                              0b0 - An interrupt is not requested upon completion of command 0b1- An interrupt is requested upon completion of command " range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Interrupt is not requested" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Interrupt is requested" />
</bitfield>
</register>
	     <register id="LSU4_REG5" acronym="LSU4_REG5" offset="0x474" width="32" description="LSU Control register5">
<bitfield id="DRBLL_INFO" width="16" begin="31" end="16" resetval="0" description="RapidIO doorbell info field for type 10 packets" range="0x0000-0xFFFF" rwaccess="RW"></bitfield>
<bitfield id="HOP_COUNT" width="8" begin="15" end="8" resetval="0" description="RapidIO hop_count field specified for Type 8 Maintenance packets" range="0x00-0xFF" rwaccess="RW"></bitfield>
<bitfield id="PACKET_TYPE" width="8" begin="7" end="0" resetval="0" description="4 msb = 4b ftype field for all packets and                                                         4 lsb  = 4b trans field for Packet types 2,5,8" range="0x00-0xFF" rwaccess="RW"></bitfield>
</register>
	     <register id="LSU4_REG6" acronym="LSU4_REG6" offset="0x478" width="32" description="LSU Control register6">
<bitfield id="_RESV_1" width="27" begin="31" end="5" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="COMPLETION_CODE" width="4" begin="4" end="1" resetval="0" description="Indicates the status of the pending command 0b000  Transaction complete, No Errors (Posted/Non-posted) 0b001  Transaction Timeout occurred on Non-posted transaction 0b010  Transaction complete, Packet not sent due to flow control blockade (Xoff) 0b011  Transaction complete, Non-posted response packet (type 8 and 13) contained ERROR status, or response payload length was in error  0b100  Transaction complete, Packet not sent due to unsupported transaction type or invalid programming encoding for one or more LSU register fields 0b101  DMA data transfer error 0b110  &quot;Retry&quot; DOORBELL response received, or Atomic Test-and-swap was not allowed (semaphore in use) 0b111  Transaction complete, Packet not sent due to unavailable outbound credit at given priority " range="" rwaccess="R"></bitfield>
<bitfield id="BSY" width="1" begin="0" end="0" resetval="0" description="Indicates status of the command registers                                                    0b0 - Command registers are available(writable) for next set of transfer descriptors 0b1 - Command registers are busy with current transfer  " range="" rwaccess="R"></bitfield>
</register>
	     <register id="LSU4_FLOW_MASKS4" acronym="LSU4_FLOW_MASKS4" offset="0x47C" width="32" description="Core n LSU Congestion Control Flow Mask">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="FLOW_MASK15" width="1" begin="15" end="15" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK14" width="1" begin="14" end="14" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK13" width="1" begin="13" end="13" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK12" width="1" begin="12" end="12" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK11" width="1" begin="11" end="11" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK10" width="1" begin="10" end="10" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK9" width="1" begin="9" end="9" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK8" width="1" begin="8" end="8" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK7" width="1" begin="7" end="7" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK6" width="1" begin="6" end="6" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK5" width="1" begin="5" end="5" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK4" width="1" begin="4" end="4" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK3" width="1" begin="3" end="3" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK2" width="1" begin="2" end="2" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK1" width="1" begin="1" end="1" resetval="1" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="FLOW_MASK0" width="1" begin="0" end="0" resetval="1" description="" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_L0" acronym="RXU_MAP_L0" offset="0x800" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H0" acronym="RXU_MAP_H0" offset="0x804" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L1" acronym="RXU_MAP_L1" offset="0x808" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H1" acronym="RXU_MAP_H1" offset="0x80C" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L2" acronym="RXU_MAP_L2" offset="0x810" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H2" acronym="RXU_MAP_H2" offset="0x814" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L3" acronym="RXU_MAP_L3" offset="0x818" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H3" acronym="RXU_MAP_H3" offset="0x81C" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L4" acronym="RXU_MAP_L4" offset="0x820" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H4" acronym="RXU_MAP_H4" offset="0x824" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L5" acronym="RXU_MAP_L5" offset="0x828" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H5" acronym="RXU_MAP_H5" offset="0x82C" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L6" acronym="RXU_MAP_L6" offset="0x830" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H6" acronym="RXU_MAP_H6" offset="0x834" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L7" acronym="RXU_MAP_L7" offset="0x838" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H7" acronym="RXU_MAP_H7" offset="0x83C" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L8" acronym="RXU_MAP_L8" offset="0x840" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H8" acronym="RXU_MAP_H8" offset="0x844" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L9" acronym="RXU_MAP_L9" offset="0x848" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H9" acronym="RXU_MAP_H9" offset="0x84C" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L10" acronym="RXU_MAP_L10" offset="0x850" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H10" acronym="RXU_MAP_H10" offset="0x854" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L11" acronym="RXU_MAP_L11" offset="0x858" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H11" acronym="RXU_MAP_H11" offset="0x85C" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L12" acronym="RXU_MAP_L12" offset="0x860" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H12" acronym="RXU_MAP_H12" offset="0x864" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L13" acronym="RXU_MAP_L13" offset="0x868" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H13" acronym="RXU_MAP_H13" offset="0x86C" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L14" acronym="RXU_MAP_L14" offset="0x870" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H14" acronym="RXU_MAP_H14" offset="0x874" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L15" acronym="RXU_MAP_L15" offset="0x878" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H15" acronym="RXU_MAP_H15" offset="0x87C" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L16" acronym="RXU_MAP_L16" offset="0x880" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H16" acronym="RXU_MAP_H16" offset="0x884" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L17" acronym="RXU_MAP_L17" offset="0x888" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H17" acronym="RXU_MAP_H17" offset="0x88C" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L18" acronym="RXU_MAP_L18" offset="0x890" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H18" acronym="RXU_MAP_H18" offset="0x894" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L19" acronym="RXU_MAP_L19" offset="0x898" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H19" acronym="RXU_MAP_H19" offset="0x89C" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L20" acronym="RXU_MAP_L20" offset="0x8A0" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H20" acronym="RXU_MAP_H20" offset="0x8A4" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L21" acronym="RXU_MAP_L21" offset="0x8A8" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H21" acronym="RXU_MAP_H21" offset="0x8AC" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L22" acronym="RXU_MAP_L22" offset="0x8B0" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H22" acronym="RXU_MAP_H22" offset="0x8B4" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L23" acronym="RXU_MAP_L23" offset="0x8B8" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H23" acronym="RXU_MAP_H23" offset="0x8BC" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L24" acronym="RXU_MAP_L24" offset="0x8C0" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H24" acronym="RXU_MAP_H24" offset="0x8C4" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L25" acronym="RXU_MAP_L25" offset="0x8C8" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H25" acronym="RXU_MAP_H25" offset="0x8CC" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L26" acronym="RXU_MAP_L26" offset="0x8D0" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H26" acronym="RXU_MAP_H26" offset="0x8D4" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L27" acronym="RXU_MAP_L27" offset="0x8D8" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H27" acronym="RXU_MAP_H27" offset="0x8DC" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L28" acronym="RXU_MAP_L28" offset="0x8E0" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H28" acronym="RXU_MAP_H28" offset="0x8E4" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L29" acronym="RXU_MAP_L29" offset="0x8E8" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H29" acronym="RXU_MAP_H29" offset="0x8EC" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L30" acronym="RXU_MAP_L30" offset="0x8F0" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H30" acronym="RXU_MAP_H30" offset="0x8F4" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="RXU_MAP_L31" acronym="RXU_MAP_L31" offset="0x8F8" width="32" description="MailBox-to-queue mapping register">
<bitfield id="LETTER_MASK" width="2" begin="31" end="30" resetval="3" description="Allowed letter mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX_MASK" width="6" begin="29" end="24" resetval="63" description="Allowed mail box mask for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="LETTER" width="2" begin="23" end="22" resetval="0" description="Allowed letter  for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="MAILBOX" width="6" begin="21" end="16" resetval="0" description="Allowed mail box for this mapping register" range="" rwaccess="RW"></bitfield>
<bitfield id="SOURCEID" width="16" begin="15" end="0" resetval="0" description="The SOURCEID field is used to indicate which external device has access to the mapping entry and corresponding queue.  A compare is performed between the sourceID of the incoming message packet and each relevant mailbox/letter table mapping entry SOURCEID field.  A mis-compare results in an ERROR response back to the sender and the transaction is logged in the Logical Layer Error Management capture registers" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="RXU_MAP_H31" acronym="RXU_MAP_H31" offset="0x8FC" width="32" description="MailBox-to-queue mapping register">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="9" end="8" resetval="1" description="Transport type                                                                                            0b0: matches the 8 LSB of the source ID                                                          0b1: matches the full 16 bits of the source ID" range="" rwaccess="RW">
<bitenum id="MATCH_8BIT_SRCID" value="0" token="MATCH_8BIT_SRCID" description="matches the 8 LSB of the source ID" />
<bitenum id="MATCH_16BIT_SRCID" value="1" token="MATCH_16BIT_SRCID" description="matches the full 16 bits of the source ID" />
</bitfield>
<bitfield id="_RESV_3" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE_ID" width="4" begin="5" end="2" resetval="0" description="Corresponding queue 0 to queue 15" range="0x00  0x0F" rwaccess="RW"></bitfield>
<bitfield id="PROMISCUOUS" width="1" begin="1" end="1" resetval="0" description="Promiscuous =1, full access to the queue for any source ID" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Promiscuous bit disabled" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Promiscuous bit enabled" />
</bitfield>
<bitfield id="SEGMENT_MAPPING" width="1" begin="0" end="0" resetval="0" description="Segment mapping 0b0  single segment (all six bits of mailbox valid )                                        0b1  Multi segment(only 2 LSBs of Mailbox valid )" range="" rwaccess="RW">
<bitenum id="SINGLE_SEGMENT" value="0" token="SINGLE_SEGMENT" description="all six bits of mailbox valid " />
<bitenum id="MULTI_SEGMENT" value="1" token="MULTI_SEGMENT" description="only 2 LSBs of Mailbox valid" />
</bitfield>
</register>
	     <register id="SP_LM_REQ0 " acronym="SP_LM_REQ0 " offset="0x1140" width="32" description="Port  Link Maintenance Request CSR">
<bitfield id="_RESV_1" width="29" begin="31" end="3" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="COMMAND" width="3" begin="2" end="0" resetval="0" description="A write to this register generates a link-request control symbol on the corresponding port interface.  Command to be sent in the link-request control symbol.  If read, this field returns the last written value" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="SP_LM_RESP0" acronym="SP_LM_RESP0" offset="0x1144" width="32" description="Port  Link Maintenance Response CSR">
<bitfield id="RESPONSE_VALID" width="1" begin="31" end="31" resetval="0" description="If the link-request causes a link-response, this bit indicates that the link-response has been received and the status fields are valid.If the link-request does not cause a link-response, this bit indicates that the link-request has been transmitted.This bit automatically clears on read. " range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_2" width="21" begin="30" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ACKID_STATUS" width="5" begin="9" end="5" resetval="0" description="ackID status field from the link-response control symbol" range="" rwaccess="R"></bitfield>
<bitfield id="LINK_STATUS" width="5" begin="4" end="0" resetval="0" description="link status field from the link-response control symbol" range="" rwaccess="R"></bitfield>
</register>
	     <register id="SP_ACKID_STAT0" acronym="SP_ACKID_STAT0" offset="0x1148" width="32" description="Port  Local AckID Status CSR">
<bitfield id="_RESV_1" width="3" begin="31" end="29" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="INBOUND_ACKID" width="5" begin="28" end="24" resetval="0" description="Input port next expected ackID value" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_3" width="11" begin="23" end="13" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="OUTSTANDING_ACKID" width="5" begin="12" end="8" resetval="0" description="Output port unacknowledged ackID status. Next expected acknowledge control symbol ackID field that indicates the ackID value expected in the next received acknowledge control symbol" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_5" width="3" begin="7" end="5" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="OUTBOUND_ACKID" width="5" begin="4" end="0" resetval="0" description="Output port next transmitted ackID value. Software writing this value can force retransmission of outstanding unacknowledged packets in order to manually implement error recovery" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="SP_ERR_STAT0 " acronym="SP_ERR_STAT0 " offset="0x1158" width="32" description="Port  Error and Status CSR">
<bitfield id="_RESV_1" width="5" begin="31" end="27" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="OUTPUT_PKT_DROP" width="1" begin="26" end="26" resetval="0" description="Output port has discarded a packet. (switch devices only)" range="" rwaccess="RW"></bitfield>
<bitfield id="OUTPUT_FLD_ENC" width="1" begin="25" end="25" resetval="0" description="Output port has encountered a failed condition, meaning that the failed port error threshold has been reached in the Port n Error Rate Threshold register. Once set remains set until written with a logic 1 to clear" range="" rwaccess="RW"></bitfield>
<bitfield id="OUTPUT_DEGRD_ENC" width="1" begin="24" end="24" resetval="0" description="Output port has encountered a degraded condition, meaning that the degraded port error threshold has been reached in the Port n Error Rate Threshold register. Once set remains set until written with a logic 1 to clear." range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_5" width="3" begin="23" end="21" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="OUTPUT_RETRY_ENC" width="1" begin="20" end="20" resetval="0" description="Output port has encountered a retry condition.This bit is set when bit 18 is set. Once set, remains set until written with a logic 1 to clear." range="" rwaccess="RW"></bitfield>
<bitfield id="OUTPUT_RETRIED" width="1" begin="19" end="19" resetval="0" description="Output port has received a packet-retry control symbol and can not make forward progress. This bit is set when bit 18 is set and is cleared when a packet-accepted or a packet-not-accepted control symbol is received (read-only)." range="" rwaccess="R"></bitfield>
<bitfield id="OUTPUT_RETRY_STP" width="1" begin="18" end="18" resetval="0" description="Output port has received a packet-retry control symbol and is in the &quot;output retry-stopped&quot; state (read-only)." range="" rwaccess="R"></bitfield>
<bitfield id="OUTPUT_ERROR_ENC" width="1" begin="17" end="17" resetval="0" description="Output port has encountered (and possibly recovered from) a transmission error. This bit is set when bit 16 is set. Once set, remains set until written with a logic 1 to clear" range="" rwaccess="RW"></bitfield>
<bitfield id="OUTPUT_ERROR_STP" width="1" begin="16" end="16" resetval="0" description="Output is in the &quot;output error-stopped&quot; state (read-only)." range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_11" width="5" begin="15" end="11" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="INPUT_RETRY_STP" width="1" begin="10" end="10" resetval="0" description="Input port is in the &quot;input retry-stopped&quot; state (read-only)." range="" rwaccess="R"></bitfield>
<bitfield id="INPUT_ERROR_ENC" width="1" begin="9" end="9" resetval="0" description="Input port has encountered (and possibly recovered from) a transmission error. This bit is set when bit 8 is set. Once set, remains set until written with a logic 1 to clear" range="" rwaccess="RW"></bitfield>
<bitfield id="INPUT_ERROR_STP" width="1" begin="8" end="8" resetval="0" description="Input port is in the &quot;input error-stopped&quot; state (read-only). " range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_15" width="3" begin="7" end="5" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="PORT_WRITE_PND" width="1" begin="4" end="4" resetval="0" description="Port has encountered a condition which required it to initiate a Maintenance Port-write operation This bit is only valid if the device is capable of issuing a maintenance port-write transaction. Once set remains set until written with a logic 1 to clear." range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_17" width="1" begin="3" end="3" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="PORT_ERROR" width="1" begin="2" end="2" resetval="0" description="Input or output port has encountered an error from which hardware was unable to recover. Once set, remains set until written with a logic 1 to clear." range="" rwaccess="RW"></bitfield>
<bitfield id="PORT_OK" width="1" begin="1" end="1" resetval="0" description="The input and output ports are initialized and the port is exchanging error-free control symbols with the attached device (read-only)." range="" rwaccess="R"></bitfield>
<bitfield id="PORT_UNINITIALIZED" width="1" begin="0" end="0" resetval="1" description="Input and output ports are not initialized. This bit and bit 1 are mutually exclusive (read-only" range="" rwaccess="R"></bitfield>
</register>
	     <register id="SP_CTL0" acronym="SP_CTL0" offset="0x115C" width="32" description="Port  Control CSR">
<bitfield id="PORT_WIDTH" width="2" begin="31" end="30" resetval="1" description="Hardware width of the port(read-only): 0b00 - Single-lane port 0b01 - Four-lane port 0b10 - 0b11  Reserved Only 0b00 is valid for SP1, SP2, and SP3 " range="" rwaccess="R"></bitfield>
<bitfield id="INITIALIZED_PORT_WIDTH" width="3" begin="29" end="27" resetval="0" description="Width of the ports after initialized (read only): 0b000 - Single-lane port, lane 0 0b001 - Single-lane port, lane 2 0b010 - Four-lane port 0b011 - 0b111 - Reserved " range="" rwaccess="R"></bitfield>
<bitfield id="PORT_WIDTH_OVERRIDE" width="3" begin="26" end="24" resetval="0" description="Soft port configuration to override the hardware size: 0b000 - No override 0b001 - Reserved 0b010 - Force single lane, lane 0 0b011 - Force single lane, lane 2 0b100 - 0b111 - Reserved " range="" rwaccess="RW">
<bitenum id="NO_OVERRIDE" value="0" token="NO_OVERRIDE" description="No override" />
<bitenum id="SINGLE_LANE_0" value="2" token="SINGLE_LANE_0" description="Force single lane, lane 0" />
<bitenum id="SINGLE_LANE_2" value="3" token="SINGLE_LANE_2" description="Force single lane, lane 2" />
</bitfield>
<bitfield id="PORT_DISABLE" width="1" begin="23" end="23" resetval="0" description="0b0 - port receivers/drivers are enabled                                                          0b1 - port receivers/drivers are disabled and are unable to receive/transmit to any packets or control symbols" range="" rwaccess="RW"></bitfield>
<bitfield id="OUTPUT_PORT_ENABLE" width="1" begin="22" end="22" resetval="0" description="0b0 - port is stopped and not enabled to issue any packets except to route or respond to I/O logical MAINTENANCE packets, depending upon the functionality of the processing element. Control symbols are not affected and are sent normally.             0b1 - port is enabled to issue any packets" range="" rwaccess="RW"></bitfield>
<bitfield id="INPUT_PORT_ENABLE" width="1" begin="21" end="21" resetval="0" description="Input port receive enable:                                                                                 0b0 - port is stopped and only enabled to route or respond I/O logical MAINTENANCE packets, depending upon the functionality of the processing element                                                                                                          0b1 - port is enabled to respond to any packet" range="" rwaccess="RW"></bitfield>
<bitfield id="ERROR_CHECK_DISABLE" width="1" begin="20" end="20" resetval="0" description="This bit disables all RapidIO transmission error checking0b0 - Error checking and recovery is enabled 0b1 - Error checking and recovery is disabled " range="" rwaccess="RW"></bitfield>
<bitfield id="MULTICAST_PARTICIPANT" width="1" begin="19" end="19" resetval="0" description="Send incoming Multi cast-event control symbols to this port (multiple port devices only) " range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_9" width="15" begin="18" end="4" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="STOP_PORT_FLD_ENC_ENABLE" width="1" begin="3" end="3" resetval="0" description="When set, this bit causes the port to set the Port Error bit in the Port n Error and Status CSR and stop attempting to send packets to the connected device when the Output Failed-encountered bit is set. Packets are discarded if the Drop Packet Enable bit is set. When cleared the port continues to attempt to transmit packets to the connected device if the Output Failed-encountered bit is set." range="" rwaccess="RW"></bitfield>
<bitfield id="DROP_PACKET_ENABLE" width="1" begin="2" end="2" resetval="0" description="When set this bit allows the output port to drop packets that are acknowledged with a packet-not-accepted control symbol when the error failed threshold is exceeded. If the port &quot;heals&quot;, and the current error rate falls below the failed threshold, the output no longer drops packets. (switch devices only) When cleared, the output port continues to try to transmit packets that have been rejected due to transmission errors" range="" rwaccess="RW"></bitfield>
<bitfield id="PORT_LOCKOUT" width="1" begin="1" end="1" resetval="0" description="Port Lockout:When cleared, this port is enabled to issue any packets When set, this port is stopped and is not enabled to issue or receive any packets; the input port can still follow the training procedure and can still send and respond to link-requests; all received packets return packet-not-accepted control symbols to force an error condition to be signaled by the sending device" range="" rwaccess="RW"></bitfield>
<bitfield id="PORT_TYPE" width="1" begin="0" end="0" resetval="1" description="This indicates the port type, parallel or serial (read only)                                     0b0 - Parallel port 0b1 - Serial port " range="" rwaccess="R"></bitfield>
</register>
	     <register id="SP_LM_REQ1 " acronym="SP_LM_REQ1 " offset="0x1160" width="32" description="Port  Link Maintenance Request CSR">
<bitfield id="_RESV_1" width="29" begin="31" end="3" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="COMMAND" width="3" begin="2" end="0" resetval="0" description="A write to this register generates a link-request control symbol on the corresponding port interface.  Command to be sent in the link-request control symbol.  If read, this field returns the last written value" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="SP_LM_RESP1" acronym="SP_LM_RESP1" offset="0x1164" width="32" description="Port  Link Maintenance Response CSR">
<bitfield id="RESPONSE_VALID" width="1" begin="31" end="31" resetval="0" description="If the link-request causes a link-response, this bit indicates that the link-response has been received and the status fields are valid.If the link-request does not cause a link-response, this bit indicates that the link-request has been transmitted.This bit automatically clears on read. " range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_2" width="21" begin="30" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ACKID_STATUS" width="5" begin="9" end="5" resetval="0" description="ackID status field from the link-response control symbol" range="" rwaccess="R"></bitfield>
<bitfield id="LINK_STATUS" width="5" begin="4" end="0" resetval="0" description="link status field from the link-response control symbol" range="" rwaccess="R"></bitfield>
</register>
	     <register id="SP_ACKID_STAT1" acronym="SP_ACKID_STAT1" offset="0x1168" width="32" description="Port  Local AckID Status CSR">
<bitfield id="_RESV_1" width="3" begin="31" end="29" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="INBOUND_ACKID" width="5" begin="28" end="24" resetval="0" description="Input port next expected ackID value" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_3" width="11" begin="23" end="13" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="OUTSTANDING_ACKID" width="5" begin="12" end="8" resetval="0" description="Output port unacknowledged ackID status. Next expected acknowledge control symbol ackID field that indicates the ackID value expected in the next received acknowledge control symbol" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_5" width="3" begin="7" end="5" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="OUTBOUND_ACKID" width="5" begin="4" end="0" resetval="0" description="Output port next transmitted ackID value. Software writing this value can force retransmission of outstanding unacknowledged packets in order to manually implement error recovery" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="SP_ERR_STAT1 " acronym="SP_ERR_STAT1 " offset="0x1178" width="32" description="Port  Error and Status CSR">
<bitfield id="_RESV_1" width="5" begin="31" end="27" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="OUTPUT_PKT_DROP" width="1" begin="26" end="26" resetval="0" description="Output port has discarded a packet. (switch devices only)" range="" rwaccess="RW"></bitfield>
<bitfield id="OUTPUT_FLD_ENC" width="1" begin="25" end="25" resetval="0" description="Output port has encountered a failed condition, meaning that the failed port error threshold has been reached in the Port n Error Rate Threshold register. Once set remains set until written with a logic 1 to clear" range="" rwaccess="RW"></bitfield>
<bitfield id="OUTPUT_DEGRD_ENC" width="1" begin="24" end="24" resetval="0" description="Output port has encountered a degraded condition, meaning that the degraded port error threshold has been reached in the Port n Error Rate Threshold register. Once set remains set until written with a logic 1 to clear." range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_5" width="3" begin="23" end="21" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="OUTPUT_RETRY_ENC" width="1" begin="20" end="20" resetval="0" description="Output port has encountered a retry condition.This bit is set when bit 18 is set. Once set, remains set until written with a logic 1 to clear." range="" rwaccess="RW"></bitfield>
<bitfield id="OUTPUT_RETRIED" width="1" begin="19" end="19" resetval="0" description="Output port has received a packet-retry control symbol and can not make forward progress. This bit is set when bit 18 is set and is cleared when a packet-accepted or a packet-not-accepted control symbol is received (read-only)." range="" rwaccess="R"></bitfield>
<bitfield id="OUTPUT_RETRY_STP" width="1" begin="18" end="18" resetval="0" description="Output port has received a packet-retry control symbol and is in the &quot;output retry-stopped&quot; state (read-only)." range="" rwaccess="R"></bitfield>
<bitfield id="OUTPUT_ERROR_ENC" width="1" begin="17" end="17" resetval="0" description="Output port has encountered (and possibly recovered from) a transmission error. This bit is set when bit 16 is set. Once set, remains set until written with a logic 1 to clear" range="" rwaccess="RW"></bitfield>
<bitfield id="OUTPUT_ERROR_STP" width="1" begin="16" end="16" resetval="0" description="Output is in the &quot;output error-stopped&quot; state (read-only)." range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_11" width="5" begin="15" end="11" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="INPUT_RETRY_STP" width="1" begin="10" end="10" resetval="0" description="Input port is in the &quot;input retry-stopped&quot; state (read-only)." range="" rwaccess="R"></bitfield>
<bitfield id="INPUT_ERROR_ENC" width="1" begin="9" end="9" resetval="0" description="Input port has encountered (and possibly recovered from) a transmission error. This bit is set when bit 8 is set. Once set, remains set until written with a logic 1 to clear" range="" rwaccess="RW"></bitfield>
<bitfield id="INPUT_ERROR_STP" width="1" begin="8" end="8" resetval="0" description="Input port is in the &quot;input error-stopped&quot; state (read-only). " range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_15" width="3" begin="7" end="5" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="PORT_WRITE_PND" width="1" begin="4" end="4" resetval="0" description="Port has encountered a condition which required it to initiate a Maintenance Port-write operation This bit is only valid if the device is capable of issuing a maintenance port-write transaction. Once set remains set until written with a logic 1 to clear." range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_17" width="1" begin="3" end="3" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="PORT_ERROR" width="1" begin="2" end="2" resetval="0" description="Input or output port has encountered an error from which hardware was unable to recover. Once set, remains set until written with a logic 1 to clear." range="" rwaccess="RW"></bitfield>
<bitfield id="PORT_OK" width="1" begin="1" end="1" resetval="0" description="The input and output ports are initialized and the port is exchanging error-free control symbols with the attached device (read-only)." range="" rwaccess="R"></bitfield>
<bitfield id="PORT_UNINITIALIZED" width="1" begin="0" end="0" resetval="1" description="Input and output ports are not initialized. This bit and bit 1 are mutually exclusive (read-only" range="" rwaccess="R"></bitfield>
</register>
	     <register id="SP_CTL1" acronym="SP_CTL1" offset="0x117C" width="32" description="Port  Control CSR">
<bitfield id="PORT_WIDTH" width="2" begin="31" end="30" resetval="1" description="Hardware width of the port(read-only): 0b00 - Single-lane port 0b01 - Four-lane port 0b10 - 0b11  Reserved Only 0b00 is valid for SP1, SP2, and SP3 " range="" rwaccess="R"></bitfield>
<bitfield id="INITIALIZED_PORT_WIDTH" width="3" begin="29" end="27" resetval="0" description="Width of the ports after initialized (read only): 0b000 - Single-lane port, lane 0 0b001 - Single-lane port, lane 2 0b010 - Four-lane port 0b011 - 0b111 - Reserved " range="" rwaccess="R"></bitfield>
<bitfield id="PORT_WIDTH_OVERRIDE" width="3" begin="26" end="24" resetval="0" description="Soft port configuration to override the hardware size: 0b000 - No override 0b001 - Reserved 0b010 - Force single lane, lane 0 0b011 - Force single lane, lane 2 0b100 - 0b111 - Reserved " range="" rwaccess="RW">
<bitenum id="NO_OVERRIDE" value="0" token="NO_OVERRIDE" description="No override" />
<bitenum id="SINGLE_LANE_0" value="2" token="SINGLE_LANE_0" description="Force single lane, lane 0" />
<bitenum id="SINGLE_LANE_2" value="3" token="SINGLE_LANE_2" description="Force single lane, lane 2" />
</bitfield>
<bitfield id="PORT_DISABLE" width="1" begin="23" end="23" resetval="0" description="0b0 - port receivers/drivers are enabled                                                          0b1 - port receivers/drivers are disabled and are unable to receive/transmit to any packets or control symbols" range="" rwaccess="RW"></bitfield>
<bitfield id="OUTPUT_PORT_ENABLE" width="1" begin="22" end="22" resetval="0" description="0b0 - port is stopped and not enabled to issue any packets except to route or respond to I/O logical MAINTENANCE packets, depending upon the functionality of the processing element. Control symbols are not affected and are sent normally.             0b1 - port is enabled to issue any packets" range="" rwaccess="RW"></bitfield>
<bitfield id="INPUT_PORT_ENABLE" width="1" begin="21" end="21" resetval="0" description="Input port receive enable:                                                                                 0b0 - port is stopped and only enabled to route or respond I/O logical MAINTENANCE packets, depending upon the functionality of the processing element                                                                                                          0b1 - port is enabled to respond to any packet" range="" rwaccess="RW"></bitfield>
<bitfield id="ERROR_CHECK_DISABLE" width="1" begin="20" end="20" resetval="0" description="This bit disables all RapidIO transmission error checking0b0 - Error checking and recovery is enabled 0b1 - Error checking and recovery is disabled " range="" rwaccess="RW"></bitfield>
<bitfield id="MULTICAST_PARTICIPANT" width="1" begin="19" end="19" resetval="0" description="Send incoming Multi cast-event control symbols to this port (multiple port devices only) " range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_9" width="15" begin="18" end="4" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="STOP_PORT_FLD_ENC_ENABLE" width="1" begin="3" end="3" resetval="0" description="When set, this bit causes the port to set the Port Error bit in the Port n Error and Status CSR and stop attempting to send packets to the connected device when the Output Failed-encountered bit is set. Packets are discarded if the Drop Packet Enable bit is set. When cleared the port continues to attempt to transmit packets to the connected device if the Output Failed-encountered bit is set." range="" rwaccess="RW"></bitfield>
<bitfield id="DROP_PACKET_ENABLE" width="1" begin="2" end="2" resetval="0" description="When set this bit allows the output port to drop packets that are acknowledged with a packet-not-accepted control symbol when the error failed threshold is exceeded. If the port &quot;heals&quot;, and the current error rate falls below the failed threshold, the output no longer drops packets. (switch devices only) When cleared, the output port continues to try to transmit packets that have been rejected due to transmission errors" range="" rwaccess="RW"></bitfield>
<bitfield id="PORT_LOCKOUT" width="1" begin="1" end="1" resetval="0" description="Port Lockout:When cleared, this port is enabled to issue any packets When set, this port is stopped and is not enabled to issue or receive any packets; the input port can still follow the training procedure and can still send and respond to link-requests; all received packets return packet-not-accepted control symbols to force an error condition to be signaled by the sending device" range="" rwaccess="RW"></bitfield>
<bitfield id="PORT_TYPE" width="1" begin="0" end="0" resetval="1" description="This indicates the port type, parallel or serial (read only)                                     0b0 - Parallel port 0b1 - Serial port " range="" rwaccess="R"></bitfield>
</register>
	     <register id="SP_LM_REQ2 " acronym="SP_LM_REQ2 " offset="0x1180" width="32" description="Port  Link Maintenance Request CSR">
<bitfield id="_RESV_1" width="29" begin="31" end="3" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="COMMAND" width="3" begin="2" end="0" resetval="0" description="A write to this register generates a link-request control symbol on the corresponding port interface.  Command to be sent in the link-request control symbol.  If read, this field returns the last written value" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="SP_LM_RESP2" acronym="SP_LM_RESP2" offset="0x1184" width="32" description="Port  Link Maintenance Response CSR">
<bitfield id="RESPONSE_VALID" width="1" begin="31" end="31" resetval="0" description="If the link-request causes a link-response, this bit indicates that the link-response has been received and the status fields are valid.If the link-request does not cause a link-response, this bit indicates that the link-request has been transmitted.This bit automatically clears on read. " range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_2" width="21" begin="30" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ACKID_STATUS" width="5" begin="9" end="5" resetval="0" description="ackID status field from the link-response control symbol" range="" rwaccess="R"></bitfield>
<bitfield id="LINK_STATUS" width="5" begin="4" end="0" resetval="0" description="link status field from the link-response control symbol" range="" rwaccess="R"></bitfield>
</register>
	     <register id="SP_ACKID_STAT2" acronym="SP_ACKID_STAT2" offset="0x1188" width="32" description="Port  Local AckID Status CSR">
<bitfield id="_RESV_1" width="3" begin="31" end="29" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="INBOUND_ACKID" width="5" begin="28" end="24" resetval="0" description="Input port next expected ackID value" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_3" width="11" begin="23" end="13" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="OUTSTANDING_ACKID" width="5" begin="12" end="8" resetval="0" description="Output port unacknowledged ackID status. Next expected acknowledge control symbol ackID field that indicates the ackID value expected in the next received acknowledge control symbol" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_5" width="3" begin="7" end="5" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="OUTBOUND_ACKID" width="5" begin="4" end="0" resetval="0" description="Output port next transmitted ackID value. Software writing this value can force retransmission of outstanding unacknowledged packets in order to manually implement error recovery" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="SP_ERR_STAT2 " acronym="SP_ERR_STAT2 " offset="0x1198" width="32" description="Port  Error and Status CSR">
<bitfield id="_RESV_1" width="5" begin="31" end="27" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="OUTPUT_PKT_DROP" width="1" begin="26" end="26" resetval="0" description="Output port has discarded a packet. (switch devices only)" range="" rwaccess="RW"></bitfield>
<bitfield id="OUTPUT_FLD_ENC" width="1" begin="25" end="25" resetval="0" description="Output port has encountered a failed condition, meaning that the failed port error threshold has been reached in the Port n Error Rate Threshold register. Once set remains set until written with a logic 1 to clear" range="" rwaccess="RW"></bitfield>
<bitfield id="OUTPUT_DEGRD_ENC" width="1" begin="24" end="24" resetval="0" description="Output port has encountered a degraded condition, meaning that the degraded port error threshold has been reached in the Port n Error Rate Threshold register. Once set remains set until written with a logic 1 to clear." range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_5" width="3" begin="23" end="21" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="OUTPUT_RETRY_ENC" width="1" begin="20" end="20" resetval="0" description="Output port has encountered a retry condition.This bit is set when bit 18 is set. Once set, remains set until written with a logic 1 to clear." range="" rwaccess="RW"></bitfield>
<bitfield id="OUTPUT_RETRIED" width="1" begin="19" end="19" resetval="0" description="Output port has received a packet-retry control symbol and can not make forward progress. This bit is set when bit 18 is set and is cleared when a packet-accepted or a packet-not-accepted control symbol is received (read-only)." range="" rwaccess="R"></bitfield>
<bitfield id="OUTPUT_RETRY_STP" width="1" begin="18" end="18" resetval="0" description="Output port has received a packet-retry control symbol and is in the &quot;output retry-stopped&quot; state (read-only)." range="" rwaccess="R"></bitfield>
<bitfield id="OUTPUT_ERROR_ENC" width="1" begin="17" end="17" resetval="0" description="Output port has encountered (and possibly recovered from) a transmission error. This bit is set when bit 16 is set. Once set, remains set until written with a logic 1 to clear" range="" rwaccess="RW"></bitfield>
<bitfield id="OUTPUT_ERROR_STP" width="1" begin="16" end="16" resetval="0" description="Output is in the &quot;output error-stopped&quot; state (read-only)." range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_11" width="5" begin="15" end="11" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="INPUT_RETRY_STP" width="1" begin="10" end="10" resetval="0" description="Input port is in the &quot;input retry-stopped&quot; state (read-only)." range="" rwaccess="R"></bitfield>
<bitfield id="INPUT_ERROR_ENC" width="1" begin="9" end="9" resetval="0" description="Input port has encountered (and possibly recovered from) a transmission error. This bit is set when bit 8 is set. Once set, remains set until written with a logic 1 to clear" range="" rwaccess="RW"></bitfield>
<bitfield id="INPUT_ERROR_STP" width="1" begin="8" end="8" resetval="0" description="Input port is in the &quot;input error-stopped&quot; state (read-only). " range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_15" width="3" begin="7" end="5" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="PORT_WRITE_PND" width="1" begin="4" end="4" resetval="0" description="Port has encountered a condition which required it to initiate a Maintenance Port-write operation This bit is only valid if the device is capable of issuing a maintenance port-write transaction. Once set remains set until written with a logic 1 to clear." range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_17" width="1" begin="3" end="3" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="PORT_ERROR" width="1" begin="2" end="2" resetval="0" description="Input or output port has encountered an error from which hardware was unable to recover. Once set, remains set until written with a logic 1 to clear." range="" rwaccess="RW"></bitfield>
<bitfield id="PORT_OK" width="1" begin="1" end="1" resetval="0" description="The input and output ports are initialized and the port is exchanging error-free control symbols with the attached device (read-only)." range="" rwaccess="R"></bitfield>
<bitfield id="PORT_UNINITIALIZED" width="1" begin="0" end="0" resetval="1" description="Input and output ports are not initialized. This bit and bit 1 are mutually exclusive (read-only" range="" rwaccess="R"></bitfield>
</register>
	     <register id="SP_CTL2" acronym="SP_CTL2" offset="0x119C" width="32" description="Port  Control CSR">
<bitfield id="PORT_WIDTH" width="2" begin="31" end="30" resetval="1" description="Hardware width of the port(read-only): 0b00 - Single-lane port 0b01 - Four-lane port 0b10 - 0b11  Reserved Only 0b00 is valid for SP1, SP2, and SP3 " range="" rwaccess="R"></bitfield>
<bitfield id="INITIALIZED_PORT_WIDTH" width="3" begin="29" end="27" resetval="0" description="Width of the ports after initialized (read only): 0b000 - Single-lane port, lane 0 0b001 - Single-lane port, lane 2 0b010 - Four-lane port 0b011 - 0b111 - Reserved " range="" rwaccess="R"></bitfield>
<bitfield id="PORT_WIDTH_OVERRIDE" width="3" begin="26" end="24" resetval="0" description="Soft port configuration to override the hardware size: 0b000 - No override 0b001 - Reserved 0b010 - Force single lane, lane 0 0b011 - Force single lane, lane 2 0b100 - 0b111 - Reserved " range="" rwaccess="RW">
<bitenum id="NO_OVERRIDE" value="0" token="NO_OVERRIDE" description="No override" />
<bitenum id="SINGLE_LANE_0" value="2" token="SINGLE_LANE_0" description="Force single lane, lane 0" />
<bitenum id="SINGLE_LANE_2" value="3" token="SINGLE_LANE_2" description="Force single lane, lane 2" />
</bitfield>
<bitfield id="PORT_DISABLE" width="1" begin="23" end="23" resetval="0" description="0b0 - port receivers/drivers are enabled                                                          0b1 - port receivers/drivers are disabled and are unable to receive/transmit to any packets or control symbols" range="" rwaccess="RW"></bitfield>
<bitfield id="OUTPUT_PORT_ENABLE" width="1" begin="22" end="22" resetval="0" description="0b0 - port is stopped and not enabled to issue any packets except to route or respond to I/O logical MAINTENANCE packets, depending upon the functionality of the processing element. Control symbols are not affected and are sent normally.             0b1 - port is enabled to issue any packets" range="" rwaccess="RW"></bitfield>
<bitfield id="INPUT_PORT_ENABLE" width="1" begin="21" end="21" resetval="0" description="Input port receive enable:                                                                                 0b0 - port is stopped and only enabled to route or respond I/O logical MAINTENANCE packets, depending upon the functionality of the processing element                                                                                                          0b1 - port is enabled to respond to any packet" range="" rwaccess="RW"></bitfield>
<bitfield id="ERROR_CHECK_DISABLE" width="1" begin="20" end="20" resetval="0" description="This bit disables all RapidIO transmission error checking0b0 - Error checking and recovery is enabled 0b1 - Error checking and recovery is disabled " range="" rwaccess="RW"></bitfield>
<bitfield id="MULTICAST_PARTICIPANT" width="1" begin="19" end="19" resetval="0" description="Send incoming Multi cast-event control symbols to this port (multiple port devices only) " range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_9" width="15" begin="18" end="4" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="STOP_PORT_FLD_ENC_ENABLE" width="1" begin="3" end="3" resetval="0" description="When set, this bit causes the port to set the Port Error bit in the Port n Error and Status CSR and stop attempting to send packets to the connected device when the Output Failed-encountered bit is set. Packets are discarded if the Drop Packet Enable bit is set. When cleared the port continues to attempt to transmit packets to the connected device if the Output Failed-encountered bit is set." range="" rwaccess="RW"></bitfield>
<bitfield id="DROP_PACKET_ENABLE" width="1" begin="2" end="2" resetval="0" description="When set this bit allows the output port to drop packets that are acknowledged with a packet-not-accepted control symbol when the error failed threshold is exceeded. If the port &quot;heals&quot;, and the current error rate falls below the failed threshold, the output no longer drops packets. (switch devices only) When cleared, the output port continues to try to transmit packets that have been rejected due to transmission errors" range="" rwaccess="RW"></bitfield>
<bitfield id="PORT_LOCKOUT" width="1" begin="1" end="1" resetval="0" description="Port Lockout:When cleared, this port is enabled to issue any packets When set, this port is stopped and is not enabled to issue or receive any packets; the input port can still follow the training procedure and can still send and respond to link-requests; all received packets return packet-not-accepted control symbols to force an error condition to be signaled by the sending device" range="" rwaccess="RW"></bitfield>
<bitfield id="PORT_TYPE" width="1" begin="0" end="0" resetval="1" description="This indicates the port type, parallel or serial (read only)                                     0b0 - Parallel port 0b1 - Serial port " range="" rwaccess="R"></bitfield>
</register>
	     <register id="SP_LM_REQ3 " acronym="SP_LM_REQ3 " offset="0x11A0" width="32" description="Port  Link Maintenance Request CSR">
<bitfield id="_RESV_1" width="29" begin="31" end="3" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="COMMAND" width="3" begin="2" end="0" resetval="0" description="A write to this register generates a link-request control symbol on the corresponding port interface.  Command to be sent in the link-request control symbol.  If read, this field returns the last written value" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="SP_LM_RESP3" acronym="SP_LM_RESP3" offset="0x11A4" width="32" description="Port  Link Maintenance Response CSR">
<bitfield id="RESPONSE_VALID" width="1" begin="31" end="31" resetval="0" description="If the link-request causes a link-response, this bit indicates that the link-response has been received and the status fields are valid.If the link-request does not cause a link-response, this bit indicates that the link-request has been transmitted.This bit automatically clears on read. " range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_2" width="21" begin="30" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ACKID_STATUS" width="5" begin="9" end="5" resetval="0" description="ackID status field from the link-response control symbol" range="" rwaccess="R"></bitfield>
<bitfield id="LINK_STATUS" width="5" begin="4" end="0" resetval="0" description="link status field from the link-response control symbol" range="" rwaccess="R"></bitfield>
</register>
	     <register id="SP_ACKID_STAT3" acronym="SP_ACKID_STAT3" offset="0x11A8" width="32" description="Port  Local AckID Status CSR">
<bitfield id="_RESV_1" width="3" begin="31" end="29" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="INBOUND_ACKID" width="5" begin="28" end="24" resetval="0" description="Input port next expected ackID value" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_3" width="11" begin="23" end="13" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="OUTSTANDING_ACKID" width="5" begin="12" end="8" resetval="0" description="Output port unacknowledged ackID status. Next expected acknowledge control symbol ackID field that indicates the ackID value expected in the next received acknowledge control symbol" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_5" width="3" begin="7" end="5" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="OUTBOUND_ACKID" width="5" begin="4" end="0" resetval="0" description="Output port next transmitted ackID value. Software writing this value can force retransmission of outstanding unacknowledged packets in order to manually implement error recovery" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="SP_ERR_STAT3 " acronym="SP_ERR_STAT3 " offset="0x11B8" width="32" description="Port  Error and Status CSR">
<bitfield id="_RESV_1" width="5" begin="31" end="27" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="OUTPUT_PKT_DROP" width="1" begin="26" end="26" resetval="0" description="Output port has discarded a packet. (switch devices only)" range="" rwaccess="RW"></bitfield>
<bitfield id="OUTPUT_FLD_ENC" width="1" begin="25" end="25" resetval="0" description="Output port has encountered a failed condition, meaning that the failed port error threshold has been reached in the Port n Error Rate Threshold register. Once set remains set until written with a logic 1 to clear" range="" rwaccess="RW"></bitfield>
<bitfield id="OUTPUT_DEGRD_ENC" width="1" begin="24" end="24" resetval="0" description="Output port has encountered a degraded condition, meaning that the degraded port error threshold has been reached in the Port n Error Rate Threshold register. Once set remains set until written with a logic 1 to clear." range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_5" width="3" begin="23" end="21" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="OUTPUT_RETRY_ENC" width="1" begin="20" end="20" resetval="0" description="Output port has encountered a retry condition.This bit is set when bit 18 is set. Once set, remains set until written with a logic 1 to clear." range="" rwaccess="RW"></bitfield>
<bitfield id="OUTPUT_RETRIED" width="1" begin="19" end="19" resetval="0" description="Output port has received a packet-retry control symbol and can not make forward progress. This bit is set when bit 18 is set and is cleared when a packet-accepted or a packet-not-accepted control symbol is received (read-only)." range="" rwaccess="R"></bitfield>
<bitfield id="OUTPUT_RETRY_STP" width="1" begin="18" end="18" resetval="0" description="Output port has received a packet-retry control symbol and is in the &quot;output retry-stopped&quot; state (read-only)." range="" rwaccess="R"></bitfield>
<bitfield id="OUTPUT_ERROR_ENC" width="1" begin="17" end="17" resetval="0" description="Output port has encountered (and possibly recovered from) a transmission error. This bit is set when bit 16 is set. Once set, remains set until written with a logic 1 to clear" range="" rwaccess="RW"></bitfield>
<bitfield id="OUTPUT_ERROR_STP" width="1" begin="16" end="16" resetval="0" description="Output is in the &quot;output error-stopped&quot; state (read-only)." range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_11" width="5" begin="15" end="11" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="INPUT_RETRY_STP" width="1" begin="10" end="10" resetval="0" description="Input port is in the &quot;input retry-stopped&quot; state (read-only)." range="" rwaccess="R"></bitfield>
<bitfield id="INPUT_ERROR_ENC" width="1" begin="9" end="9" resetval="0" description="Input port has encountered (and possibly recovered from) a transmission error. This bit is set when bit 8 is set. Once set, remains set until written with a logic 1 to clear" range="" rwaccess="RW"></bitfield>
<bitfield id="INPUT_ERROR_STP" width="1" begin="8" end="8" resetval="0" description="Input port is in the &quot;input error-stopped&quot; state (read-only). " range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_15" width="3" begin="7" end="5" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="PORT_WRITE_PND" width="1" begin="4" end="4" resetval="0" description="Port has encountered a condition which required it to initiate a Maintenance Port-write operation This bit is only valid if the device is capable of issuing a maintenance port-write transaction. Once set remains set until written with a logic 1 to clear." range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_17" width="1" begin="3" end="3" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="PORT_ERROR" width="1" begin="2" end="2" resetval="0" description="Input or output port has encountered an error from which hardware was unable to recover. Once set, remains set until written with a logic 1 to clear." range="" rwaccess="RW"></bitfield>
<bitfield id="PORT_OK" width="1" begin="1" end="1" resetval="0" description="The input and output ports are initialized and the port is exchanging error-free control symbols with the attached device (read-only)." range="" rwaccess="R"></bitfield>
<bitfield id="PORT_UNINITIALIZED" width="1" begin="0" end="0" resetval="1" description="Input and output ports are not initialized. This bit and bit 1 are mutually exclusive (read-only" range="" rwaccess="R"></bitfield>
</register>
	     <register id="SP_CTL3" acronym="SP_CTL3" offset="0x11BC" width="32" description="Port  Control CSR">
<bitfield id="PORT_WIDTH" width="2" begin="31" end="30" resetval="1" description="Hardware width of the port(read-only): 0b00 - Single-lane port 0b01 - Four-lane port 0b10 - 0b11  Reserved Only 0b00 is valid for SP1, SP2, and SP3 " range="" rwaccess="R"></bitfield>
<bitfield id="INITIALIZED_PORT_WIDTH" width="3" begin="29" end="27" resetval="0" description="Width of the ports after initialized (read only): 0b000 - Single-lane port, lane 0 0b001 - Single-lane port, lane 2 0b010 - Four-lane port 0b011 - 0b111 - Reserved " range="" rwaccess="R"></bitfield>
<bitfield id="PORT_WIDTH_OVERRIDE" width="3" begin="26" end="24" resetval="0" description="Soft port configuration to override the hardware size: 0b000 - No override 0b001 - Reserved 0b010 - Force single lane, lane 0 0b011 - Force single lane, lane 2 0b100 - 0b111 - Reserved " range="" rwaccess="RW">
<bitenum id="NO_OVERRIDE" value="0" token="NO_OVERRIDE" description="No override" />
<bitenum id="SINGLE_LANE_0" value="2" token="SINGLE_LANE_0" description="Force single lane, lane 0" />
<bitenum id="SINGLE_LANE_2" value="3" token="SINGLE_LANE_2" description="Force single lane, lane 2" />
</bitfield>
<bitfield id="PORT_DISABLE" width="1" begin="23" end="23" resetval="0" description="0b0 - port receivers/drivers are enabled                                                          0b1 - port receivers/drivers are disabled and are unable to receive/transmit to any packets or control symbols" range="" rwaccess="RW"></bitfield>
<bitfield id="OUTPUT_PORT_ENABLE" width="1" begin="22" end="22" resetval="0" description="0b0 - port is stopped and not enabled to issue any packets except to route or respond to I/O logical MAINTENANCE packets, depending upon the functionality of the processing element. Control symbols are not affected and are sent normally.             0b1 - port is enabled to issue any packets" range="" rwaccess="RW"></bitfield>
<bitfield id="INPUT_PORT_ENABLE" width="1" begin="21" end="21" resetval="0" description="Input port receive enable:                                                                                 0b0 - port is stopped and only enabled to route or respond I/O logical MAINTENANCE packets, depending upon the functionality of the processing element                                                                                                          0b1 - port is enabled to respond to any packet" range="" rwaccess="RW"></bitfield>
<bitfield id="ERROR_CHECK_DISABLE" width="1" begin="20" end="20" resetval="0" description="This bit disables all RapidIO transmission error checking0b0 - Error checking and recovery is enabled 0b1 - Error checking and recovery is disabled " range="" rwaccess="RW"></bitfield>
<bitfield id="MULTICAST_PARTICIPANT" width="1" begin="19" end="19" resetval="0" description="Send incoming Multi cast-event control symbols to this port (multiple port devices only) " range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_9" width="15" begin="18" end="4" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="STOP_PORT_FLD_ENC_ENABLE" width="1" begin="3" end="3" resetval="0" description="When set, this bit causes the port to set the Port Error bit in the Port n Error and Status CSR and stop attempting to send packets to the connected device when the Output Failed-encountered bit is set. Packets are discarded if the Drop Packet Enable bit is set. When cleared the port continues to attempt to transmit packets to the connected device if the Output Failed-encountered bit is set." range="" rwaccess="RW"></bitfield>
<bitfield id="DROP_PACKET_ENABLE" width="1" begin="2" end="2" resetval="0" description="When set this bit allows the output port to drop packets that are acknowledged with a packet-not-accepted control symbol when the error failed threshold is exceeded. If the port &quot;heals&quot;, and the current error rate falls below the failed threshold, the output no longer drops packets. (switch devices only) When cleared, the output port continues to try to transmit packets that have been rejected due to transmission errors" range="" rwaccess="RW"></bitfield>
<bitfield id="PORT_LOCKOUT" width="1" begin="1" end="1" resetval="0" description="Port Lockout:When cleared, this port is enabled to issue any packets When set, this port is stopped and is not enabled to issue or receive any packets; the input port can still follow the training procedure and can still send and respond to link-requests; all received packets return packet-not-accepted control symbols to force an error condition to be signaled by the sending device" range="" rwaccess="RW"></bitfield>
<bitfield id="PORT_TYPE" width="1" begin="0" end="0" resetval="1" description="This indicates the port type, parallel or serial (read only)                                     0b0 - Parallel port 0b1 - Serial port " range="" rwaccess="R"></bitfield>
</register>
	     <register id="SP_ERR_DET0 " acronym="SP_ERR_DET0 " offset="0x2040" width="32" description="Port Error Detect CSR">
<bitfield id="ERR_IMP_SPECIFIC" width="1" begin="31" end="31" resetval="0" description="An implementation specific error has been detected.  It covers illegal field of Maintenance packet error, illegal destination ID, not supported transaction. " range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_2" width="8" begin="30" end="23" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="CORRUPT_CNTL_SYM" width="1" begin="22" end="22" resetval="0" description="Received a control symbol with a bad CRC value (serial) " range="" rwaccess="RW"></bitfield>
<bitfield id="CNTL_SYM_UNEXPECTED_ACKID" width="1" begin="21" end="21" resetval="0" description="Received an acknowledge control symbol with an unexpected ackID (packet-accepted or packet_retry).  The Capture registers don't have valid information during this error detection" range="" rwaccess="RW"></bitfield>
<bitfield id="RCVD_PKT_NOT_ACCPT" width="1" begin="20" end="20" resetval="0" description="Received packet-not-accepted acknowledge control symbol" range="" rwaccess="RW"></bitfield>
<bitfield id="PKT_UNEXPECTED_ACKID" width="1" begin="19" end="19" resetval="0" description="Received packet with unexpected ackID value - out-of-sequence ackID " range="" rwaccess="RW"></bitfield>
<bitfield id="RCVD_PKT_WITH_BAD_CRC" width="1" begin="18" end="18" resetval="0" description="Received packet with a bad CRC value" range="" rwaccess="RW"></bitfield>
<bitfield id="RCVD_PKT_OVER_276B" width="1" begin="17" end="17" resetval="0" description="Received packet which exceeds the maximum allowed size" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_9" width="11" begin="16" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="NON_OUTSTANDING_ACKID" width="1" begin="5" end="5" resetval="0" description="Link_response received with an ackID that is not outstanding.  The Capture registers don't have valid information during this error detection" range="" rwaccess="RW"></bitfield>
<bitfield id="PROTOCOL_ERROR" width="1" begin="4" end="4" resetval="0" description="An unexpected packet or control symbol was received" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_12" width="1" begin="3" end="3" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="DELINEATION_ERROR" width="1" begin="2" end="2" resetval="0" description="Received unaligned /SC/ or /PD/ or undefined code-group (serial).  The Capture registers don't have valid information during this error detection" range="" rwaccess="R"></bitfield>
<bitfield id="UNSOLICITED_ACK_CNTL_SYM" width="1" begin="1" end="1" resetval="0" description="An unexpected acknowledge control symbol was received" range="" rwaccess="RW"></bitfield>
<bitfield id="LINK_TIMEOUT" width="1" begin="0" end="0" resetval="0" description="An acknowledge or link-response control symbol is not received within the specified time-out interval.  The Capture registers don't have valid information during this error detection." range="" rwaccess="RW"></bitfield>
</register>
	     <register id="SP_RATE_EN0" acronym="SP_RATE_EN0" offset="0x2044" width="32" description="Port Error Enable CSR">
<bitfield id="EN_IMP_SPECIFIC" width="1" begin="31" end="31" resetval="0" description="Enable error rate counting of implementation specific errors" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_2" width="8" begin="30" end="23" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="CORRUPT_CNTL_SYM_ENABLE" width="1" begin="22" end="22" resetval="0" description="Enable error rate counting of a corrupt control symbol" range="" rwaccess="RW"></bitfield>
<bitfield id="CNTL_SYM_UNEXPECTED_ACKID_EN" width="1" begin="21" end="21" resetval="0" description="Enable error rate counting of an acknowledge control symbol with an unexpected ackID" range="" rwaccess="RW"></bitfield>
<bitfield id="RCVED_PKT_NOT_ACCPT_EN" width="1" begin="20" end="20" resetval="0" description="Enable error rate counting of received packet-not-accepted control symbols" range="" rwaccess="RW"></bitfield>
<bitfield id="PKT_UNEXPECTED_ACKID_EN" width="1" begin="19" end="19" resetval="0" description="Enable error rate counting of packet with unexpected ackID value - out-of-sequence ackID " range="" rwaccess="RW"></bitfield>
<bitfield id="RCVED_PKT_WITH_BAD_CRC_EN" width="1" begin="18" end="18" resetval="0" description="Enable error rate counting of packet with a bad CRC value" range="" rwaccess="RW"></bitfield>
<bitfield id="RCVED_PKT_OVER_276B_EN" width="1" begin="17" end="17" resetval="0" description="Enable error rate counting of packet which exceeds the maximum allowed size" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_9" width="11" begin="16" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="NON_OUTSTANDING_ACKID_EN" width="1" begin="5" end="5" resetval="0" description="Enable error rate counting of link-responses received with an ackID that is not outstanding" range="" rwaccess="RW"></bitfield>
<bitfield id="PROTOCOL_ERROR_EN" width="1" begin="4" end="4" resetval="0" description="Enable error rate counting of protocol errors" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_12" width="1" begin="3" end="3" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="DELINEATION_ERROR_EN" width="1" begin="2" end="2" resetval="0" description="Enable error rate counting of delineation errors" range="" rwaccess="RW"></bitfield>
<bitfield id="UNSOLICITED_ACK_CNTL_SYM_EN" width="1" begin="1" end="1" resetval="0" description="Enable error rate counting of unsolicited acknowledge control symbol errors" range="" rwaccess="RW"></bitfield>
<bitfield id="LINK_TIMEOUT_EN" width="1" begin="0" end="0" resetval="0" description="Enable error rate counting of link time-out errors" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="SP0_ERR_ATTR_CAPT_DBG0 " acronym="SP0_ERR_ATTR_CAPT_DBG0 " offset="0x2048" width="32" description="Port Attributes Error Capture CSR  ">
<bitfield id="INFO_TYPE" width="2" begin="31" end="30" resetval="0" description="Type of information logged 00 - packet  01 - control symbol (only error capture register 0 is valid)  10 - implementation specific (capture register contents are implementation specific)  11 - undefined (S-bit error), capture as if a packet (parallel physical layer only) " range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_2" width="1" begin="29" end="29" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ERROR_TYPE" width="5" begin="28" end="24" resetval="0" description="Encoded value of captured error bit in the Port n Error Detect Register" range="" rwaccess="R"></bitfield>
<bitfield id="IMP_SPECIFIC" width="20" begin="23" end="4" resetval="0" description="Implementation Dependent Error Information" range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_5" width="3" begin="3" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="CAPTURE_VALID_INFO" width="1" begin="0" end="0" resetval="0" description="This bit is set by hardware to indicate that the Packet/control symbol capture registers contain valid information. For control symbols, only capture register 0 will contain meaningful information. The software write &quot;0&quot; to clear this bit and subsequently unlock all capture registers of port n " range="" rwaccess="RW"></bitfield>
</register>
	     <register id="SP0_ERR_CAPT_DBG[4]" acronym="SP0_ERR_CAPT_DBG[4]" offset="0x204C" width="32" description="Port Packet/Control Symbol Error Capture CSR">
<bitfield id="CAPTURE" width="32" begin="31" end="0" resetval="0" description="Control Character and Control Symbol or 0 to 3 Bytes of Packet Header" range="" rwaccess="R"></bitfield>
</register>
	     <register id="SP_ERR_RATE0 " acronym="SP_ERR_RATE0 " offset="0x2068" width="32" description="Port  Error Rate CSR">
<bitfield id="ERROR_RATE_BIAS" width="8" begin="31" end="24" resetval="128" description="These bits provide the error rate bias value 0x00 - do not decrement the error rate counter  0x01 - decrement every 1ms (nominal) 0x03 - decrement every 10ms (nominal)  0x07 - decrement every 100ms  0x0F - decrement every 1s (nominal) 0x1F - decrement every 10s (nominal) 0x3F - decrement every 100s (nominal) 0x7F - decrement every 1000s (nominal)  0xFF - decrement every 10000s (nominal) other values are reserved " range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_2" width="6" begin="23" end="18" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ERROR_RATE_RECOVERY" width="2" begin="17" end="16" resetval="0" description="These bits limit the incrementing of the error rate counter above the failed threshold trigger.0b00 - only count 2 errors above  0b01 - only count 4 errors above  0b10 - only count 16 error above  0b11 - do not limit incrementing the error rate count " range="" rwaccess="RW"></bitfield>
<bitfield id="PEAK_ERROR_RATE" width="8" begin="15" end="8" resetval="0" description="This field contains the peak value attained by the error rate counter" range="" rwaccess="RW"></bitfield>
<bitfield id="ERROR_RATE_COUNTER" width="8" begin="7" end="0" resetval="0" description="These bits maintain a count of the number of transmission error that have occurred. If this value equals the value contained in the error rate threshold trigger register, then an error will be reported." range="" rwaccess="RW"></bitfield>
</register>
	     <register id="SP_ERR_THRESH0" acronym="SP_ERR_THRESH0" offset="0x206C" width="32" description="Port Error Rate Threshold CSR">
<bitfield id="ERROR_RATE_FAILED_THRESH" width="8" begin="31" end="24" resetval="255" description="These bits provide the threshold value for reporting an error condition due to a possibly broken link.0x00 - Disable the error rate register  0x01 - Set the error reporting threshold to 1  0x02 - Set the error reporting threshold to 2 ...  0xFF - Set the error reporting threshold to 255 " range="0x0  0xFF" rwaccess="RW"></bitfield>
<bitfield id="ERROR_RATE_DEGRADED_THRES" width="8" begin="23" end="16" resetval="255" description="These bits provide the threshold value for reporting an error condition due to a degrading link.0x00 - Disable the error rate register 0x01 - Set the error reporting threshold to 1 0x02 - Set the error reporting threshold to 2  ...  0xFF - Set the error reporting threshold to 255 " range="0x0  0xFF" rwaccess="RW"></bitfield>
<bitfield id="_RESV_3" width="16" begin="15" end="0" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
</register>
	     <register id="SP_ERR_DET1 " acronym="SP_ERR_DET1 " offset="0x2080" width="32" description="Port Error Detect CSR">
<bitfield id="ERR_IMP_SPECIFIC" width="1" begin="31" end="31" resetval="0" description="An implementation specific error has been detected.  It covers illegal field of Maintenance packet error, illegal destination ID, not supported transaction. " range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_2" width="8" begin="30" end="23" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="CORRUPT_CNTL_SYM" width="1" begin="22" end="22" resetval="0" description="Received a control symbol with a bad CRC value (serial) " range="" rwaccess="RW"></bitfield>
<bitfield id="CNTL_SYM_UNEXPECTED_ACKID" width="1" begin="21" end="21" resetval="0" description="Received an acknowledge control symbol with an unexpected ackID (packet-accepted or packet_retry).  The Capture registers don't have valid information during this error detection" range="" rwaccess="RW"></bitfield>
<bitfield id="RCVD_PKT_NOT_ACCPT" width="1" begin="20" end="20" resetval="0" description="Received packet-not-accepted acknowledge control symbol" range="" rwaccess="RW"></bitfield>
<bitfield id="PKT_UNEXPECTED_ACKID" width="1" begin="19" end="19" resetval="0" description="Received packet with unexpected ackID value - out-of-sequence ackID " range="" rwaccess="RW"></bitfield>
<bitfield id="RCVD_PKT_WITH_BAD_CRC" width="1" begin="18" end="18" resetval="0" description="Received packet with a bad CRC value" range="" rwaccess="RW"></bitfield>
<bitfield id="RCVD_PKT_OVER_276B" width="1" begin="17" end="17" resetval="0" description="Received packet which exceeds the maximum allowed size" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_9" width="11" begin="16" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="NON_OUTSTANDING_ACKID" width="1" begin="5" end="5" resetval="0" description="Link_response received with an ackID that is not outstanding.  The Capture registers don't have valid information during this error detection" range="" rwaccess="RW"></bitfield>
<bitfield id="PROTOCOL_ERROR" width="1" begin="4" end="4" resetval="0" description="An unexpected packet or control symbol was received" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_12" width="1" begin="3" end="3" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="DELINEATION_ERROR" width="1" begin="2" end="2" resetval="0" description="Received unaligned /SC/ or /PD/ or undefined code-group (serial).  The Capture registers don't have valid information during this error detection" range="" rwaccess="R"></bitfield>
<bitfield id="UNSOLICITED_ACK_CNTL_SYM" width="1" begin="1" end="1" resetval="0" description="An unexpected acknowledge control symbol was received" range="" rwaccess="RW"></bitfield>
<bitfield id="LINK_TIMEOUT" width="1" begin="0" end="0" resetval="0" description="An acknowledge or link-response control symbol is not received within the specified time-out interval.  The Capture registers don't have valid information during this error detection." range="" rwaccess="RW"></bitfield>
</register>
	     <register id="SP_RATE_EN1" acronym="SP_RATE_EN1" offset="0x2084" width="32" description="Port Error Enable CSR">
<bitfield id="EN_IMP_SPECIFIC" width="1" begin="31" end="31" resetval="0" description="Enable error rate counting of implementation specific errors" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_2" width="8" begin="30" end="23" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="CORRUPT_CNTL_SYM_ENABLE" width="1" begin="22" end="22" resetval="0" description="Enable error rate counting of a corrupt control symbol" range="" rwaccess="RW"></bitfield>
<bitfield id="CNTL_SYM_UNEXPECTED_ACKID_EN" width="1" begin="21" end="21" resetval="0" description="Enable error rate counting of an acknowledge control symbol with an unexpected ackID" range="" rwaccess="RW"></bitfield>
<bitfield id="RCVED_PKT_NOT_ACCPT_EN" width="1" begin="20" end="20" resetval="0" description="Enable error rate counting of received packet-not-accepted control symbols" range="" rwaccess="RW"></bitfield>
<bitfield id="PKT_UNEXPECTED_ACKID_EN" width="1" begin="19" end="19" resetval="0" description="Enable error rate counting of packet with unexpected ackID value - out-of-sequence ackID " range="" rwaccess="RW"></bitfield>
<bitfield id="RCVED_PKT_WITH_BAD_CRC_EN" width="1" begin="18" end="18" resetval="0" description="Enable error rate counting of packet with a bad CRC value" range="" rwaccess="RW"></bitfield>
<bitfield id="RCVED_PKT_OVER_276B_EN" width="1" begin="17" end="17" resetval="0" description="Enable error rate counting of packet which exceeds the maximum allowed size" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_9" width="11" begin="16" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="NON_OUTSTANDING_ACKID_EN" width="1" begin="5" end="5" resetval="0" description="Enable error rate counting of link-responses received with an ackID that is not outstanding" range="" rwaccess="RW"></bitfield>
<bitfield id="PROTOCOL_ERROR_EN" width="1" begin="4" end="4" resetval="0" description="Enable error rate counting of protocol errors" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_12" width="1" begin="3" end="3" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="DELINEATION_ERROR_EN" width="1" begin="2" end="2" resetval="0" description="Enable error rate counting of delineation errors" range="" rwaccess="RW"></bitfield>
<bitfield id="UNSOLICITED_ACK_CNTL_SYM_EN" width="1" begin="1" end="1" resetval="0" description="Enable error rate counting of unsolicited acknowledge control symbol errors" range="" rwaccess="RW"></bitfield>
<bitfield id="LINK_TIMEOUT_EN" width="1" begin="0" end="0" resetval="0" description="Enable error rate counting of link time-out errors" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="SP1_ERR_ATTR_CAPT_DBG0 " acronym="SP1_ERR_ATTR_CAPT_DBG0 " offset="0x2088" width="32" description="Port Attributes Error Capture CSR  ">
<bitfield id="INFO_TYPE" width="2" begin="31" end="30" resetval="0" description="Type of information logged 00 - packet  01 - control symbol (only error capture register 0 is valid)  10 - implementation specific (capture register contents are implementation specific)  11 - undefined (S-bit error), capture as if a packet (parallel physical layer only) " range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_2" width="1" begin="29" end="29" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ERROR_TYPE" width="5" begin="28" end="24" resetval="0" description="Encoded value of captured error bit in the Port n Error Detect Register" range="" rwaccess="R"></bitfield>
<bitfield id="IMP_SPECIFIC" width="20" begin="23" end="4" resetval="0" description="Implementation Dependent Error Information" range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_5" width="3" begin="3" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="CAPTURE_VALID_INFO" width="1" begin="0" end="0" resetval="0" description="This bit is set by hardware to indicate that the Packet/control symbol capture registers contain valid information. For control symbols, only capture register 0 will contain meaningful information. The software write &quot;0&quot; to clear this bit and subsequently unlock all capture registers of port n " range="" rwaccess="RW"></bitfield>
</register>
	     <register id="SP1_ERR_CAPT_DBG[4]" acronym="SP1_ERR_CAPT_DBG[4]" offset="0x208C" width="32" description="Port Packet/Control Symbol Error Capture CSR">
<bitfield id="CAPTURE" width="32" begin="31" end="0" resetval="0" description="Control Character and Control Symbol or 0 to 3 Bytes of Packet Header" range="" rwaccess="R"></bitfield>
</register>
	     <register id="SP_ERR_RATE1 " acronym="SP_ERR_RATE1 " offset="0x20A8" width="32" description="Port  Error Rate CSR">
<bitfield id="ERROR_RATE_BIAS" width="8" begin="31" end="24" resetval="128" description="These bits provide the error rate bias value 0x00 - do not decrement the error rate counter  0x01 - decrement every 1ms (nominal) 0x03 - decrement every 10ms (nominal)  0x07 - decrement every 100ms  0x0F - decrement every 1s (nominal) 0x1F - decrement every 10s (nominal) 0x3F - decrement every 100s (nominal) 0x7F - decrement every 1000s (nominal)  0xFF - decrement every 10000s (nominal) other values are reserved " range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_2" width="6" begin="23" end="18" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ERROR_RATE_RECOVERY" width="2" begin="17" end="16" resetval="0" description="These bits limit the incrementing of the error rate counter above the failed threshold trigger.0b00 - only count 2 errors above  0b01 - only count 4 errors above  0b10 - only count 16 error above  0b11 - do not limit incrementing the error rate count " range="" rwaccess="RW"></bitfield>
<bitfield id="PEAK_ERROR_RATE" width="8" begin="15" end="8" resetval="0" description="This field contains the peak value attained by the error rate counter" range="" rwaccess="RW"></bitfield>
<bitfield id="ERROR_RATE_COUNTER" width="8" begin="7" end="0" resetval="0" description="These bits maintain a count of the number of transmission error that have occurred. If this value equals the value contained in the error rate threshold trigger register, then an error will be reported." range="" rwaccess="RW"></bitfield>
</register>
	     <register id="SP_ERR_THRESH1" acronym="SP_ERR_THRESH1" offset="0x20AC" width="32" description="Port Error Rate Threshold CSR">
<bitfield id="ERROR_RATE_FAILED_THRESH" width="8" begin="31" end="24" resetval="255" description="These bits provide the threshold value for reporting an error condition due to a possibly broken link.0x00 - Disable the error rate register  0x01 - Set the error reporting threshold to 1  0x02 - Set the error reporting threshold to 2 ...  0xFF - Set the error reporting threshold to 255 " range="0x0  0xFF" rwaccess="RW"></bitfield>
<bitfield id="ERROR_RATE_DEGRADED_THRES" width="8" begin="23" end="16" resetval="255" description="These bits provide the threshold value for reporting an error condition due to a degrading link.0x00 - Disable the error rate register 0x01 - Set the error reporting threshold to 1 0x02 - Set the error reporting threshold to 2  ...  0xFF - Set the error reporting threshold to 255 " range="0x0  0xFF" rwaccess="RW"></bitfield>
<bitfield id="_RESV_3" width="16" begin="15" end="0" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
</register>
	     <register id="SP_ERR_DET2 " acronym="SP_ERR_DET2 " offset="0x20C0" width="32" description="Port Error Detect CSR">
<bitfield id="ERR_IMP_SPECIFIC" width="1" begin="31" end="31" resetval="0" description="An implementation specific error has been detected.  It covers illegal field of Maintenance packet error, illegal destination ID, not supported transaction. " range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_2" width="8" begin="30" end="23" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="CORRUPT_CNTL_SYM" width="1" begin="22" end="22" resetval="0" description="Received a control symbol with a bad CRC value (serial) " range="" rwaccess="RW"></bitfield>
<bitfield id="CNTL_SYM_UNEXPECTED_ACKID" width="1" begin="21" end="21" resetval="0" description="Received an acknowledge control symbol with an unexpected ackID (packet-accepted or packet_retry).  The Capture registers don't have valid information during this error detection" range="" rwaccess="RW"></bitfield>
<bitfield id="RCVD_PKT_NOT_ACCPT" width="1" begin="20" end="20" resetval="0" description="Received packet-not-accepted acknowledge control symbol" range="" rwaccess="RW"></bitfield>
<bitfield id="PKT_UNEXPECTED_ACKID" width="1" begin="19" end="19" resetval="0" description="Received packet with unexpected ackID value - out-of-sequence ackID " range="" rwaccess="RW"></bitfield>
<bitfield id="RCVD_PKT_WITH_BAD_CRC" width="1" begin="18" end="18" resetval="0" description="Received packet with a bad CRC value" range="" rwaccess="RW"></bitfield>
<bitfield id="RCVD_PKT_OVER_276B" width="1" begin="17" end="17" resetval="0" description="Received packet which exceeds the maximum allowed size" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_9" width="11" begin="16" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="NON_OUTSTANDING_ACKID" width="1" begin="5" end="5" resetval="0" description="Link_response received with an ackID that is not outstanding.  The Capture registers don't have valid information during this error detection" range="" rwaccess="RW"></bitfield>
<bitfield id="PROTOCOL_ERROR" width="1" begin="4" end="4" resetval="0" description="An unexpected packet or control symbol was received" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_12" width="1" begin="3" end="3" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="DELINEATION_ERROR" width="1" begin="2" end="2" resetval="0" description="Received unaligned /SC/ or /PD/ or undefined code-group (serial).  The Capture registers don't have valid information during this error detection" range="" rwaccess="R"></bitfield>
<bitfield id="UNSOLICITED_ACK_CNTL_SYM" width="1" begin="1" end="1" resetval="0" description="An unexpected acknowledge control symbol was received" range="" rwaccess="RW"></bitfield>
<bitfield id="LINK_TIMEOUT" width="1" begin="0" end="0" resetval="0" description="An acknowledge or link-response control symbol is not received within the specified time-out interval.  The Capture registers don't have valid information during this error detection." range="" rwaccess="RW"></bitfield>
</register>
	     <register id="SP_RATE_EN2" acronym="SP_RATE_EN2" offset="0x20C4" width="32" description="Port Error Enable CSR">
<bitfield id="EN_IMP_SPECIFIC" width="1" begin="31" end="31" resetval="0" description="Enable error rate counting of implementation specific errors" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_2" width="8" begin="30" end="23" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="CORRUPT_CNTL_SYM_ENABLE" width="1" begin="22" end="22" resetval="0" description="Enable error rate counting of a corrupt control symbol" range="" rwaccess="RW"></bitfield>
<bitfield id="CNTL_SYM_UNEXPECTED_ACKID_EN" width="1" begin="21" end="21" resetval="0" description="Enable error rate counting of an acknowledge control symbol with an unexpected ackID" range="" rwaccess="RW"></bitfield>
<bitfield id="RCVED_PKT_NOT_ACCPT_EN" width="1" begin="20" end="20" resetval="0" description="Enable error rate counting of received packet-not-accepted control symbols" range="" rwaccess="RW"></bitfield>
<bitfield id="PKT_UNEXPECTED_ACKID_EN" width="1" begin="19" end="19" resetval="0" description="Enable error rate counting of packet with unexpected ackID value - out-of-sequence ackID " range="" rwaccess="RW"></bitfield>
<bitfield id="RCVED_PKT_WITH_BAD_CRC_EN" width="1" begin="18" end="18" resetval="0" description="Enable error rate counting of packet with a bad CRC value" range="" rwaccess="RW"></bitfield>
<bitfield id="RCVED_PKT_OVER_276B_EN" width="1" begin="17" end="17" resetval="0" description="Enable error rate counting of packet which exceeds the maximum allowed size" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_9" width="11" begin="16" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="NON_OUTSTANDING_ACKID_EN" width="1" begin="5" end="5" resetval="0" description="Enable error rate counting of link-responses received with an ackID that is not outstanding" range="" rwaccess="RW"></bitfield>
<bitfield id="PROTOCOL_ERROR_EN" width="1" begin="4" end="4" resetval="0" description="Enable error rate counting of protocol errors" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_12" width="1" begin="3" end="3" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="DELINEATION_ERROR_EN" width="1" begin="2" end="2" resetval="0" description="Enable error rate counting of delineation errors" range="" rwaccess="RW"></bitfield>
<bitfield id="UNSOLICITED_ACK_CNTL_SYM_EN" width="1" begin="1" end="1" resetval="0" description="Enable error rate counting of unsolicited acknowledge control symbol errors" range="" rwaccess="RW"></bitfield>
<bitfield id="LINK_TIMEOUT_EN" width="1" begin="0" end="0" resetval="0" description="Enable error rate counting of link time-out errors" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="SP2_ERR_ATTR_CAPT_DBG0 " acronym="SP2_ERR_ATTR_CAPT_DBG0 " offset="0x20C8" width="32" description="Port Attributes Error Capture CSR  ">
<bitfield id="INFO_TYPE" width="2" begin="31" end="30" resetval="0" description="Type of information logged 00 - packet  01 - control symbol (only error capture register 0 is valid)  10 - implementation specific (capture register contents are implementation specific)  11 - undefined (S-bit error), capture as if a packet (parallel physical layer only) " range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_2" width="1" begin="29" end="29" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ERROR_TYPE" width="5" begin="28" end="24" resetval="0" description="Encoded value of captured error bit in the Port n Error Detect Register" range="" rwaccess="R"></bitfield>
<bitfield id="IMP_SPECIFIC" width="20" begin="23" end="4" resetval="0" description="Implementation Dependent Error Information" range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_5" width="3" begin="3" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="CAPTURE_VALID_INFO" width="1" begin="0" end="0" resetval="0" description="This bit is set by hardware to indicate that the Packet/control symbol capture registers contain valid information. For control symbols, only capture register 0 will contain meaningful information. The software write &quot;0&quot; to clear this bit and subsequently unlock all capture registers of port n " range="" rwaccess="RW"></bitfield>
</register>
	     <register id="SP2_ERR_CAPT_DBG[4]" acronym="SP2_ERR_CAPT_DBG[4]" offset="0x20CC" width="32" description="Port Packet/Control Symbol Error Capture CSR">
<bitfield id="CAPTURE" width="32" begin="31" end="0" resetval="0" description="Control Character and Control Symbol or 0 to 3 Bytes of Packet Header" range="" rwaccess="R"></bitfield>
</register>
	     <register id="SP_ERR_RATE2 " acronym="SP_ERR_RATE2 " offset="0x20E8" width="32" description="Port  Error Rate CSR">
<bitfield id="ERROR_RATE_BIAS" width="8" begin="31" end="24" resetval="128" description="These bits provide the error rate bias value 0x00 - do not decrement the error rate counter  0x01 - decrement every 1ms (nominal) 0x03 - decrement every 10ms (nominal)  0x07 - decrement every 100ms  0x0F - decrement every 1s (nominal) 0x1F - decrement every 10s (nominal) 0x3F - decrement every 100s (nominal) 0x7F - decrement every 1000s (nominal)  0xFF - decrement every 10000s (nominal) other values are reserved " range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_2" width="6" begin="23" end="18" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ERROR_RATE_RECOVERY" width="2" begin="17" end="16" resetval="0" description="These bits limit the incrementing of the error rate counter above the failed threshold trigger.0b00 - only count 2 errors above  0b01 - only count 4 errors above  0b10 - only count 16 error above  0b11 - do not limit incrementing the error rate count " range="" rwaccess="RW"></bitfield>
<bitfield id="PEAK_ERROR_RATE" width="8" begin="15" end="8" resetval="0" description="This field contains the peak value attained by the error rate counter" range="" rwaccess="RW"></bitfield>
<bitfield id="ERROR_RATE_COUNTER" width="8" begin="7" end="0" resetval="0" description="These bits maintain a count of the number of transmission error that have occurred. If this value equals the value contained in the error rate threshold trigger register, then an error will be reported." range="" rwaccess="RW"></bitfield>
</register>
	     <register id="SP_ERR_THRESH2" acronym="SP_ERR_THRESH2" offset="0x20EC" width="32" description="Port Error Rate Threshold CSR">
<bitfield id="ERROR_RATE_FAILED_THRESH" width="8" begin="31" end="24" resetval="255" description="These bits provide the threshold value for reporting an error condition due to a possibly broken link.0x00 - Disable the error rate register  0x01 - Set the error reporting threshold to 1  0x02 - Set the error reporting threshold to 2 ...  0xFF - Set the error reporting threshold to 255 " range="0x0  0xFF" rwaccess="RW"></bitfield>
<bitfield id="ERROR_RATE_DEGRADED_THRES" width="8" begin="23" end="16" resetval="255" description="These bits provide the threshold value for reporting an error condition due to a degrading link.0x00 - Disable the error rate register 0x01 - Set the error reporting threshold to 1 0x02 - Set the error reporting threshold to 2  ...  0xFF - Set the error reporting threshold to 255 " range="0x0  0xFF" rwaccess="RW"></bitfield>
<bitfield id="_RESV_3" width="16" begin="15" end="0" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
</register>
	     <register id="SP_ERR_DET3 " acronym="SP_ERR_DET3 " offset="0x2100" width="32" description="Port Error Detect CSR">
<bitfield id="ERR_IMP_SPECIFIC" width="1" begin="31" end="31" resetval="0" description="An implementation specific error has been detected.  It covers illegal field of Maintenance packet error, illegal destination ID, not supported transaction. " range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_2" width="8" begin="30" end="23" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="CORRUPT_CNTL_SYM" width="1" begin="22" end="22" resetval="0" description="Received a control symbol with a bad CRC value (serial) " range="" rwaccess="RW"></bitfield>
<bitfield id="CNTL_SYM_UNEXPECTED_ACKID" width="1" begin="21" end="21" resetval="0" description="Received an acknowledge control symbol with an unexpected ackID (packet-accepted or packet_retry).  The Capture registers don't have valid information during this error detection" range="" rwaccess="RW"></bitfield>
<bitfield id="RCVD_PKT_NOT_ACCPT" width="1" begin="20" end="20" resetval="0" description="Received packet-not-accepted acknowledge control symbol" range="" rwaccess="RW"></bitfield>
<bitfield id="PKT_UNEXPECTED_ACKID" width="1" begin="19" end="19" resetval="0" description="Received packet with unexpected ackID value - out-of-sequence ackID " range="" rwaccess="RW"></bitfield>
<bitfield id="RCVD_PKT_WITH_BAD_CRC" width="1" begin="18" end="18" resetval="0" description="Received packet with a bad CRC value" range="" rwaccess="RW"></bitfield>
<bitfield id="RCVD_PKT_OVER_276B" width="1" begin="17" end="17" resetval="0" description="Received packet which exceeds the maximum allowed size" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_9" width="11" begin="16" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="NON_OUTSTANDING_ACKID" width="1" begin="5" end="5" resetval="0" description="Link_response received with an ackID that is not outstanding.  The Capture registers don't have valid information during this error detection" range="" rwaccess="RW"></bitfield>
<bitfield id="PROTOCOL_ERROR" width="1" begin="4" end="4" resetval="0" description="An unexpected packet or control symbol was received" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_12" width="1" begin="3" end="3" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="DELINEATION_ERROR" width="1" begin="2" end="2" resetval="0" description="Received unaligned /SC/ or /PD/ or undefined code-group (serial).  The Capture registers don't have valid information during this error detection" range="" rwaccess="R"></bitfield>
<bitfield id="UNSOLICITED_ACK_CNTL_SYM" width="1" begin="1" end="1" resetval="0" description="An unexpected acknowledge control symbol was received" range="" rwaccess="RW"></bitfield>
<bitfield id="LINK_TIMEOUT" width="1" begin="0" end="0" resetval="0" description="An acknowledge or link-response control symbol is not received within the specified time-out interval.  The Capture registers don't have valid information during this error detection." range="" rwaccess="RW"></bitfield>
</register>
	     <register id="SP_RATE_EN3" acronym="SP_RATE_EN3" offset="0x2104" width="32" description="Port Error Enable CSR">
<bitfield id="EN_IMP_SPECIFIC" width="1" begin="31" end="31" resetval="0" description="Enable error rate counting of implementation specific errors" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_2" width="8" begin="30" end="23" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="CORRUPT_CNTL_SYM_ENABLE" width="1" begin="22" end="22" resetval="0" description="Enable error rate counting of a corrupt control symbol" range="" rwaccess="RW"></bitfield>
<bitfield id="CNTL_SYM_UNEXPECTED_ACKID_EN" width="1" begin="21" end="21" resetval="0" description="Enable error rate counting of an acknowledge control symbol with an unexpected ackID" range="" rwaccess="RW"></bitfield>
<bitfield id="RCVED_PKT_NOT_ACCPT_EN" width="1" begin="20" end="20" resetval="0" description="Enable error rate counting of received packet-not-accepted control symbols" range="" rwaccess="RW"></bitfield>
<bitfield id="PKT_UNEXPECTED_ACKID_EN" width="1" begin="19" end="19" resetval="0" description="Enable error rate counting of packet with unexpected ackID value - out-of-sequence ackID " range="" rwaccess="RW"></bitfield>
<bitfield id="RCVED_PKT_WITH_BAD_CRC_EN" width="1" begin="18" end="18" resetval="0" description="Enable error rate counting of packet with a bad CRC value" range="" rwaccess="RW"></bitfield>
<bitfield id="RCVED_PKT_OVER_276B_EN" width="1" begin="17" end="17" resetval="0" description="Enable error rate counting of packet which exceeds the maximum allowed size" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_9" width="11" begin="16" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="NON_OUTSTANDING_ACKID_EN" width="1" begin="5" end="5" resetval="0" description="Enable error rate counting of link-responses received with an ackID that is not outstanding" range="" rwaccess="RW"></bitfield>
<bitfield id="PROTOCOL_ERROR_EN" width="1" begin="4" end="4" resetval="0" description="Enable error rate counting of protocol errors" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_12" width="1" begin="3" end="3" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="DELINEATION_ERROR_EN" width="1" begin="2" end="2" resetval="0" description="Enable error rate counting of delineation errors" range="" rwaccess="RW"></bitfield>
<bitfield id="UNSOLICITED_ACK_CNTL_SYM_EN" width="1" begin="1" end="1" resetval="0" description="Enable error rate counting of unsolicited acknowledge control symbol errors" range="" rwaccess="RW"></bitfield>
<bitfield id="LINK_TIMEOUT_EN" width="1" begin="0" end="0" resetval="0" description="Enable error rate counting of link time-out errors" range="" rwaccess="RW"></bitfield>
</register>
	     <register id="SP3_ERR_ATTR_CAPT_DBG0 " acronym="SP3_ERR_ATTR_CAPT_DBG0 " offset="0x2108" width="32" description="Port Attributes Error Capture CSR  ">
<bitfield id="INFO_TYPE" width="2" begin="31" end="30" resetval="0" description="Type of information logged 00 - packet  01 - control symbol (only error capture register 0 is valid)  10 - implementation specific (capture register contents are implementation specific)  11 - undefined (S-bit error), capture as if a packet (parallel physical layer only) " range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_2" width="1" begin="29" end="29" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ERROR_TYPE" width="5" begin="28" end="24" resetval="0" description="Encoded value of captured error bit in the Port n Error Detect Register" range="" rwaccess="R"></bitfield>
<bitfield id="IMP_SPECIFIC" width="20" begin="23" end="4" resetval="0" description="Implementation Dependent Error Information" range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_5" width="3" begin="3" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="CAPTURE_VALID_INFO" width="1" begin="0" end="0" resetval="0" description="This bit is set by hardware to indicate that the Packet/control symbol capture registers contain valid information. For control symbols, only capture register 0 will contain meaningful information. The software write &quot;0&quot; to clear this bit and subsequently unlock all capture registers of port n " range="" rwaccess="RW"></bitfield>
</register>
	     <register id="SP3_ERR_CAPT_DBG[4]" acronym="SP3_ERR_CAPT_DBG[4]" offset="0x210C" width="32" description="Port Packet/Control Symbol Error Capture CSR">
<bitfield id="CAPTURE" width="32" begin="31" end="0" resetval="0" description="Control Character and Control Symbol or 0 to 3 Bytes of Packet Header" range="" rwaccess="R"></bitfield>
</register>
	     <register id="SP_ERR_RATE3 " acronym="SP_ERR_RATE3 " offset="0x2128" width="32" description="Port  Error Rate CSR">
<bitfield id="ERROR_RATE_BIAS" width="8" begin="31" end="24" resetval="128" description="These bits provide the error rate bias value 0x00 - do not decrement the error rate counter  0x01 - decrement every 1ms (nominal) 0x03 - decrement every 10ms (nominal)  0x07 - decrement every 100ms  0x0F - decrement every 1s (nominal) 0x1F - decrement every 10s (nominal) 0x3F - decrement every 100s (nominal) 0x7F - decrement every 1000s (nominal)  0xFF - decrement every 10000s (nominal) other values are reserved " range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_2" width="6" begin="23" end="18" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ERROR_RATE_RECOVERY" width="2" begin="17" end="16" resetval="0" description="These bits limit the incrementing of the error rate counter above the failed threshold trigger.0b00 - only count 2 errors above  0b01 - only count 4 errors above  0b10 - only count 16 error above  0b11 - do not limit incrementing the error rate count " range="" rwaccess="RW"></bitfield>
<bitfield id="PEAK_ERROR_RATE" width="8" begin="15" end="8" resetval="0" description="This field contains the peak value attained by the error rate counter" range="" rwaccess="RW"></bitfield>
<bitfield id="ERROR_RATE_COUNTER" width="8" begin="7" end="0" resetval="0" description="These bits maintain a count of the number of transmission error that have occurred. If this value equals the value contained in the error rate threshold trigger register, then an error will be reported." range="" rwaccess="RW"></bitfield>
</register>
	     <register id="SP_ERR_THRESH3" acronym="SP_ERR_THRESH3" offset="0x212C" width="32" description="Port Error Rate Threshold CSR">
<bitfield id="ERROR_RATE_FAILED_THRESH" width="8" begin="31" end="24" resetval="255" description="These bits provide the threshold value for reporting an error condition due to a possibly broken link.0x00 - Disable the error rate register  0x01 - Set the error reporting threshold to 1  0x02 - Set the error reporting threshold to 2 ...  0xFF - Set the error reporting threshold to 255 " range="0x0  0xFF" rwaccess="RW"></bitfield>
<bitfield id="ERROR_RATE_DEGRADED_THRES" width="8" begin="23" end="16" resetval="255" description="These bits provide the threshold value for reporting an error condition due to a degrading link.0x00 - Disable the error rate register 0x01 - Set the error reporting threshold to 1 0x02 - Set the error reporting threshold to 2  ...  0xFF - Set the error reporting threshold to 255 " range="0x0  0xFF" rwaccess="RW"></bitfield>
<bitfield id="_RESV_3" width="16" begin="15" end="0" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
</register>
	     <register id="SP_RST_OPT0" acronym="SP_RST_OPT0" offset="0x14000" width="32" description="Port Reset Option CSR">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="PORT_ID" width="8" begin="7" end="0" resetval="233767149" description="Port ID defines unique number for port in Switch. The Port ID is used for Port_Write request. The ID coincides with ISF port of connection. Example: 00_0000_01 - port 1 ( Impl.: IP0, port 1) 00_0001_11 - port 7 ( Impl.: IP1, port 3) " range="" rwaccess="R"></bitfield>
</register>
	     <register id="SP_CTL_INDEP0" acronym="SP_CTL_INDEP0" offset="0x14004" width="32" description="Port Control Independent register">
<bitfield id="_RESV_1" width="1" begin="31" end="31" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TX_FLW" width="1" begin="30" end="30" resetval="0" description="Transmit Link Flow Control enable  0 - Receive link flow control  1 - Transmit link flow control ( not supported) " range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Disables transmit flow control (Enables receive flow control)" />
</bitfield>
<bitfield id="SOFT_REC" width="1" begin="29" end="29" resetval="0" description="Software controlled error recovery  0 - Hardware  1 - Software  By default the transmission error recovery sequence is performed by the hardware.  " range="" rwaccess="RW">
<bitenum id="BYHARDWARE" value="0" token="BYHARDWARE" description="Transmission of error recovery sequence is performed by the hardware" />
<bitenum id="BYSOFTWARE" value="1" token="BYSOFTWARE" description="Transmission of error recovery sequence is performed by the software" />
</bitfield>
<bitfield id="_RESV_4" width="2" begin="28" end="27" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="FORCE_REINIT" width="1" begin="26" end="26" resetval="0" description="Force reinitialization process. In 4x mode this bit affects all 4 lanes. This bit is write only, read always &quot;0&quot; " range="" rwaccess="W"></bitfield>
<bitfield id="TRANS_MODE" width="2" begin="25" end="24" resetval="1" description="Describe the transfer mode for each port  00 : Reserved (Cut-Through Mode)  01 : Store &amp; Forward Mode  1x: Reserved  " range="" rwaccess="RW"></bitfield>
<bitfield id="DEBUG" width="1" begin="23" end="23" resetval="0" description="Mode of operation  0 - Normal  1 - debug mode. The Debug mode unlocks capture registers for write and enable debug packet generator feature" range="" rwaccess="RW">
<bitenum id="NORMAL" value="0" token="NORMAL" description="Normal mode" />
<bitenum id="DEBUG" value="1" token="DEBUG" description="Debug mode" />
</bitfield>
<bitfield id="SEND_DBG_PKT" width="1" begin="22" end="22" resetval="0" description="Send Debug_packet Write 1 force to send debug packet. This bit is set by software and cleared after debug packet is sent. Writes when the bit is set are ignored. Debug mode only " range="" rwaccess="RW"></bitfield>
<bitfield id="ILL_TRANS_EN" width="1" begin="21" end="21" resetval="0" description="Illegal Transfer Error reporting Enable. If enabled, the Port-Write and interrupt are reported error " range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Disables Illegal Transfer Error reporting" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Enables Illegal Transfer Error reporting " />
</bitfield>
<bitfield id="ILL_TRANS_ERR" width="1" begin="20" end="20" resetval="0" description="Illegal Transfer Error " range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_11" width="2" begin="19" end="18" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="MAX_RETRY_EN" width="1" begin="17" end="17" resetval="0" description="Max_retry_error report enable. If enabled, the Port-Write and interrupt are reported as error " range="" rwaccess="RW">
<bitenum id="ENABLE" value="1" token="ENABLE" description="Max retry error report enable" />
<bitenum id="DISABLE" value="0" token="DISABLE" description="Max retry error report disable" />
</bitfield>
<bitfield id="MAX_RETRY_ERR" width="1" begin="16" end="16" resetval="0" description="Max-retry_error bit is set when max_retry_cnt is equal to max_retry_threshold . The Port-Write request and interrupt are generated if enabled. This bit is ignored if max_retry threshold is 00. Once set, remains set until written with logic 1 to clear. This bit also is cleared by writing all 0 to the register &quot;RIO_SP0_ERR_DET&quot;. This error also reported in registers: &quot;RIO_SP0_ERR_DET&quot;. " range="" rwaccess="RW"></bitfield>
<bitfield id="MAX_RETRY_THR" width="8" begin="15" end="8" resetval="0" description="Maximum Retry Threshold Trigger These bits provide the threshold value for reporting an error condition due to possibly broken partner behavior.  00 - disable the max_retry_error reporting  01 - set the max_retry_threshold to 1  02 - set the max_retry_threshold to 2 ...  FF - set the max_retry_threshold to 255 " range="0x00  0xFF" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Disable the max_retry_error reporting " />
</bitfield>
<bitfield id="IRQ_EN" width="1" begin="7" end="7" resetval="0" description="Interrupt error report Enable . If enabled, the interrupt signal is High when the IRQ_ERR is set to 1" range="" rwaccess="RW">
<bitenum id="ENABLE" value="1" token="ENABLE" description="Interrupt error report enable " />
<bitenum id="DISABLE" value="0" token="DISABLE" description="Interrupt error report disable" />
</bitfield>
<bitfield id="IRQ_ERR" width="1" begin="6" end="6" resetval="0" description="The Interrupt Error Status bit. It is set to one if an error occurs and there is a Port_Write condition. Once set, remains set until written with logic 1 to clear " range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_17" width="6" begin="5" end="0" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
</register>
	     <register id="SP_SILENCE_TIMER0" acronym="SP_SILENCE_TIMER0" offset="0x14008" width="32" description="Port Silence Timer">
<bitfield id="SILENCE_TIMER" width="4" begin="31" end="28" resetval="11" description="Silence timer. Defines the time of the port in the SILENT state. 0000b: 64ns for debug  0001b: 13.1us   0010b: 13.1us * 2 = 26.2us .. 1011b: 13.1us * 11 = 144.1us default ... 1111b: 13.1us *15= 196.5us " range="0x01 to 0x0F" rwaccess="RW"></bitfield>
<bitfield id="_RESV_2" width="28" begin="27" end="0" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
</register>
	     <register id="SP_MULT_EVNT_CS0" acronym="SP_MULT_EVNT_CS0" offset="0x1400C" width="32" description="Port  Multicast-Event Control Symbol Request register">
<bitfield id="MULT_EVNT_CS" width="32" begin="31" end="0" resetval="0" description="Write to send Control Symbol, data is ignored. read - 0x000000 " range="" rwaccess="W"></bitfield>
</register>
	     <register id="SP_CS_TX0" acronym="SP_CS_TX0" offset="0x14014" width="32" description="Port  Control Symbol Transmit">
<bitfield id="STYPE_0" width="3" begin="31" end="29" resetval="0" description="Encoding for control symbol that make use of parameters PAR_0 and PAR_1 " range="" rwaccess="RW"></bitfield>
<bitfield id="PAR_0" width="5" begin="28" end="24" resetval="0" description="Used in conjunction with stype0 encoding " range="" rwaccess="RW"></bitfield>
<bitfield id="PAR_1" width="5" begin="23" end="19" resetval="0" description="Used in conjunction with stype0 encoding " range="" rwaccess="RW"></bitfield>
<bitfield id="STYPE_1" width="3" begin="18" end="16" resetval="0" description="Encoding for control symbol that make use of parameter CMD " range="" rwaccess="RW"></bitfield>
<bitfield id="CMD" width="3" begin="15" end="13" resetval="0" description="Used in conjunction with stype1 encoding to define the link maintenance commands" range="" rwaccess="RW"></bitfield>
<bitfield id="CS_EMB" width="1" begin="12" end="12" resetval="0" description="When set, force the outbound flow to insert control symbol into packet. Used in debug mode " range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_7" width="12" begin="11" end="0" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
</register>
	     <register id="SP_RST_OPT1" acronym="SP_RST_OPT1" offset="0x14100" width="32" description="Port Reset Option CSR">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="PORT_ID" width="8" begin="7" end="0" resetval="233767149" description="Port ID defines unique number for port in Switch. The Port ID is used for Port_Write request. The ID coincides with ISF port of connection. Example: 00_0000_01 - port 1 ( Impl.: IP0, port 1) 00_0001_11 - port 7 ( Impl.: IP1, port 3) " range="" rwaccess="R"></bitfield>
</register>
	     <register id="SP_CTL_INDEP1" acronym="SP_CTL_INDEP1" offset="0x14104" width="32" description="Port Control Independent register">
<bitfield id="_RESV_1" width="1" begin="31" end="31" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TX_FLW" width="1" begin="30" end="30" resetval="0" description="Transmit Link Flow Control enable  0 - Receive link flow control  1 - Transmit link flow control ( not supported) " range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Disables transmit flow control (Enables receive flow control)" />
</bitfield>
<bitfield id="SOFT_REC" width="1" begin="29" end="29" resetval="0" description="Software controlled error recovery  0 - Hardware  1 - Software  By default the transmission error recovery sequence is performed by the hardware.  " range="" rwaccess="RW">
<bitenum id="BYHARDWARE" value="0" token="BYHARDWARE" description="Transmission of error recovery sequence is performed by the hardware" />
<bitenum id="BYSOFTWARE" value="1" token="BYSOFTWARE" description="Transmission of error recovery sequence is performed by the software" />
</bitfield>
<bitfield id="_RESV_4" width="2" begin="28" end="27" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="FORCE_REINIT" width="1" begin="26" end="26" resetval="0" description="Force reinitialization process. In 4x mode this bit affects all 4 lanes. This bit is write only, read always &quot;0&quot; " range="" rwaccess="W"></bitfield>
<bitfield id="TRANS_MODE" width="2" begin="25" end="24" resetval="1" description="Describe the transfer mode for each port  00 : Reserved (Cut-Through Mode)  01 : Store &amp; Forward Mode  1x: Reserved  " range="" rwaccess="RW"></bitfield>
<bitfield id="DEBUG" width="1" begin="23" end="23" resetval="0" description="Mode of operation  0 - Normal  1 - debug mode. The Debug mode unlocks capture registers for write and enable debug packet generator feature" range="" rwaccess="RW">
<bitenum id="NORMAL" value="0" token="NORMAL" description="Normal mode" />
<bitenum id="DEBUG" value="1" token="DEBUG" description="Debug mode" />
</bitfield>
<bitfield id="SEND_DBG_PKT" width="1" begin="22" end="22" resetval="0" description="Send Debug_packet Write 1 force to send debug packet. This bit is set by software and cleared after debug packet is sent. Writes when the bit is set are ignored. Debug mode only " range="" rwaccess="RW"></bitfield>
<bitfield id="ILL_TRANS_EN" width="1" begin="21" end="21" resetval="0" description="Illegal Transfer Error reporting Enable. If enabled, the Port-Write and interrupt are reported error " range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Disables Illegal Transfer Error reporting" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Enables Illegal Transfer Error reporting " />
</bitfield>
<bitfield id="ILL_TRANS_ERR" width="1" begin="20" end="20" resetval="0" description="Illegal Transfer Error " range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_11" width="2" begin="19" end="18" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="MAX_RETRY_EN" width="1" begin="17" end="17" resetval="0" description="Max_retry_error report enable. If enabled, the Port-Write and interrupt are reported as error " range="" rwaccess="RW">
<bitenum id="ENABLE" value="1" token="ENABLE" description="Max retry error report enable" />
<bitenum id="DISABLE" value="0" token="DISABLE" description="Max retry error report disable" />
</bitfield>
<bitfield id="MAX_RETRY_ERR" width="1" begin="16" end="16" resetval="0" description="Max-retry_error bit is set when max_retry_cnt is equal to max_retry_threshold . The Port-Write request and interrupt are generated if enabled. This bit is ignored if max_retry threshold is 00. Once set, remains set until written with logic 1 to clear. This bit also is cleared by writing all 0 to the register &quot;RIO_SP0_ERR_DET&quot;. This error also reported in registers: &quot;RIO_SP0_ERR_DET&quot;. " range="" rwaccess="RW"></bitfield>
<bitfield id="MAX_RETRY_THR" width="8" begin="15" end="8" resetval="0" description="Maximum Retry Threshold Trigger These bits provide the threshold value for reporting an error condition due to possibly broken partner behavior.  00 - disable the max_retry_error reporting  01 - set the max_retry_threshold to 1  02 - set the max_retry_threshold to 2 ...  FF - set the max_retry_threshold to 255 " range="0x00  0xFF" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Disable the max_retry_error reporting " />
</bitfield>
<bitfield id="IRQ_EN" width="1" begin="7" end="7" resetval="0" description="Interrupt error report Enable . If enabled, the interrupt signal is High when the IRQ_ERR is set to 1" range="" rwaccess="RW">
<bitenum id="ENABLE" value="1" token="ENABLE" description="Interrupt error report enable " />
<bitenum id="DISABLE" value="0" token="DISABLE" description="Interrupt error report disable" />
</bitfield>
<bitfield id="IRQ_ERR" width="1" begin="6" end="6" resetval="0" description="The Interrupt Error Status bit. It is set to one if an error occurs and there is a Port_Write condition. Once set, remains set until written with logic 1 to clear " range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_17" width="6" begin="5" end="0" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
</register>
	     <register id="SP_SILENCE_TIMER1" acronym="SP_SILENCE_TIMER1" offset="0x14108" width="32" description="Port Silence Timer">
<bitfield id="SILENCE_TIMER" width="4" begin="31" end="28" resetval="11" description="Silence timer. Defines the time of the port in the SILENT state. 0000b: 64ns for debug  0001b: 13.1us   0010b: 13.1us * 2 = 26.2us .. 1011b: 13.1us * 11 = 144.1us default ... 1111b: 13.1us *15= 196.5us " range="0x01 to 0x0F" rwaccess="RW"></bitfield>
<bitfield id="_RESV_2" width="28" begin="27" end="0" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
</register>
	     <register id="SP_MULT_EVNT_CS1" acronym="SP_MULT_EVNT_CS1" offset="0x1410C" width="32" description="Port  Multicast-Event Control Symbol Request register">
<bitfield id="MULT_EVNT_CS" width="32" begin="31" end="0" resetval="0" description="Write to send Control Symbol, data is ignored. read - 0x000000 " range="" rwaccess="W"></bitfield>
</register>
	     <register id="SP_CS_TX1" acronym="SP_CS_TX1" offset="0x14114" width="32" description="Port  Control Symbol Transmit">
<bitfield id="STYPE_0" width="3" begin="31" end="29" resetval="0" description="Encoding for control symbol that make use of parameters PAR_0 and PAR_1 " range="" rwaccess="RW"></bitfield>
<bitfield id="PAR_0" width="5" begin="28" end="24" resetval="0" description="Used in conjunction with stype0 encoding " range="" rwaccess="RW"></bitfield>
<bitfield id="PAR_1" width="5" begin="23" end="19" resetval="0" description="Used in conjunction with stype0 encoding " range="" rwaccess="RW"></bitfield>
<bitfield id="STYPE_1" width="3" begin="18" end="16" resetval="0" description="Encoding for control symbol that make use of parameter CMD " range="" rwaccess="RW"></bitfield>
<bitfield id="CMD" width="3" begin="15" end="13" resetval="0" description="Used in conjunction with stype1 encoding to define the link maintenance commands" range="" rwaccess="RW"></bitfield>
<bitfield id="CS_EMB" width="1" begin="12" end="12" resetval="0" description="When set, force the outbound flow to insert control symbol into packet. Used in debug mode " range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_7" width="12" begin="11" end="0" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
</register>
	     <register id="SP_RST_OPT2" acronym="SP_RST_OPT2" offset="0x14200" width="32" description="Port Reset Option CSR">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="PORT_ID" width="8" begin="7" end="0" resetval="233767149" description="Port ID defines unique number for port in Switch. The Port ID is used for Port_Write request. The ID coincides with ISF port of connection. Example: 00_0000_01 - port 1 ( Impl.: IP0, port 1) 00_0001_11 - port 7 ( Impl.: IP1, port 3) " range="" rwaccess="R"></bitfield>
</register>
	     <register id="SP_CTL_INDEP2" acronym="SP_CTL_INDEP2" offset="0x14204" width="32" description="Port Control Independent register">
<bitfield id="_RESV_1" width="1" begin="31" end="31" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TX_FLW" width="1" begin="30" end="30" resetval="0" description="Transmit Link Flow Control enable  0 - Receive link flow control  1 - Transmit link flow control ( not supported) " range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Disables transmit flow control (Enables receive flow control)" />
</bitfield>
<bitfield id="SOFT_REC" width="1" begin="29" end="29" resetval="0" description="Software controlled error recovery  0 - Hardware  1 - Software  By default the transmission error recovery sequence is performed by the hardware.  " range="" rwaccess="RW">
<bitenum id="BYHARDWARE" value="0" token="BYHARDWARE" description="Transmission of error recovery sequence is performed by the hardware" />
<bitenum id="BYSOFTWARE" value="1" token="BYSOFTWARE" description="Transmission of error recovery sequence is performed by the software" />
</bitfield>
<bitfield id="_RESV_4" width="2" begin="28" end="27" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="FORCE_REINIT" width="1" begin="26" end="26" resetval="0" description="Force reinitialization process. In 4x mode this bit affects all 4 lanes. This bit is write only, read always &quot;0&quot; " range="" rwaccess="W"></bitfield>
<bitfield id="TRANS_MODE" width="2" begin="25" end="24" resetval="1" description="Describe the transfer mode for each port  00 : Reserved (Cut-Through Mode)  01 : Store &amp; Forward Mode  1x: Reserved  " range="" rwaccess="RW"></bitfield>
<bitfield id="DEBUG" width="1" begin="23" end="23" resetval="0" description="Mode of operation  0 - Normal  1 - debug mode. The Debug mode unlocks capture registers for write and enable debug packet generator feature" range="" rwaccess="RW">
<bitenum id="NORMAL" value="0" token="NORMAL" description="Normal mode" />
<bitenum id="DEBUG" value="1" token="DEBUG" description="Debug mode" />
</bitfield>
<bitfield id="SEND_DBG_PKT" width="1" begin="22" end="22" resetval="0" description="Send Debug_packet Write 1 force to send debug packet. This bit is set by software and cleared after debug packet is sent. Writes when the bit is set are ignored. Debug mode only " range="" rwaccess="RW"></bitfield>
<bitfield id="ILL_TRANS_EN" width="1" begin="21" end="21" resetval="0" description="Illegal Transfer Error reporting Enable. If enabled, the Port-Write and interrupt are reported error " range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Disables Illegal Transfer Error reporting" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Enables Illegal Transfer Error reporting " />
</bitfield>
<bitfield id="ILL_TRANS_ERR" width="1" begin="20" end="20" resetval="0" description="Illegal Transfer Error " range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_11" width="2" begin="19" end="18" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="MAX_RETRY_EN" width="1" begin="17" end="17" resetval="0" description="Max_retry_error report enable. If enabled, the Port-Write and interrupt are reported as error " range="" rwaccess="RW">
<bitenum id="ENABLE" value="1" token="ENABLE" description="Max retry error report enable" />
<bitenum id="DISABLE" value="0" token="DISABLE" description="Max retry error report disable" />
</bitfield>
<bitfield id="MAX_RETRY_ERR" width="1" begin="16" end="16" resetval="0" description="Max-retry_error bit is set when max_retry_cnt is equal to max_retry_threshold . The Port-Write request and interrupt are generated if enabled. This bit is ignored if max_retry threshold is 00. Once set, remains set until written with logic 1 to clear. This bit also is cleared by writing all 0 to the register &quot;RIO_SP0_ERR_DET&quot;. This error also reported in registers: &quot;RIO_SP0_ERR_DET&quot;. " range="" rwaccess="RW"></bitfield>
<bitfield id="MAX_RETRY_THR" width="8" begin="15" end="8" resetval="0" description="Maximum Retry Threshold Trigger These bits provide the threshold value for reporting an error condition due to possibly broken partner behavior.  00 - disable the max_retry_error reporting  01 - set the max_retry_threshold to 1  02 - set the max_retry_threshold to 2 ...  FF - set the max_retry_threshold to 255 " range="0x00  0xFF" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Disable the max_retry_error reporting " />
</bitfield>
<bitfield id="IRQ_EN" width="1" begin="7" end="7" resetval="0" description="Interrupt error report Enable . If enabled, the interrupt signal is High when the IRQ_ERR is set to 1" range="" rwaccess="RW">
<bitenum id="ENABLE" value="1" token="ENABLE" description="Interrupt error report enable " />
<bitenum id="DISABLE" value="0" token="DISABLE" description="Interrupt error report disable" />
</bitfield>
<bitfield id="IRQ_ERR" width="1" begin="6" end="6" resetval="0" description="The Interrupt Error Status bit. It is set to one if an error occurs and there is a Port_Write condition. Once set, remains set until written with logic 1 to clear " range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_17" width="6" begin="5" end="0" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
</register>
	     <register id="SP_SILENCE_TIMER2" acronym="SP_SILENCE_TIMER2" offset="0x14208" width="32" description="Port Silence Timer">
<bitfield id="SILENCE_TIMER" width="4" begin="31" end="28" resetval="11" description="Silence timer. Defines the time of the port in the SILENT state. 0000b: 64ns for debug  0001b: 13.1us   0010b: 13.1us * 2 = 26.2us .. 1011b: 13.1us * 11 = 144.1us default ... 1111b: 13.1us *15= 196.5us " range="0x01 to 0x0F" rwaccess="RW"></bitfield>
<bitfield id="_RESV_2" width="28" begin="27" end="0" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
</register>
	     <register id="SP_MULT_EVNT_CS2" acronym="SP_MULT_EVNT_CS2" offset="0x1420C" width="32" description="Port  Multicast-Event Control Symbol Request register">
<bitfield id="MULT_EVNT_CS" width="32" begin="31" end="0" resetval="0" description="Write to send Control Symbol, data is ignored. read - 0x000000 " range="" rwaccess="W"></bitfield>
</register>
	     <register id="SP_CS_TX2" acronym="SP_CS_TX2" offset="0x14214" width="32" description="Port  Control Symbol Transmit">
<bitfield id="STYPE_0" width="3" begin="31" end="29" resetval="0" description="Encoding for control symbol that make use of parameters PAR_0 and PAR_1 " range="" rwaccess="RW"></bitfield>
<bitfield id="PAR_0" width="5" begin="28" end="24" resetval="0" description="Used in conjunction with stype0 encoding " range="" rwaccess="RW"></bitfield>
<bitfield id="PAR_1" width="5" begin="23" end="19" resetval="0" description="Used in conjunction with stype0 encoding " range="" rwaccess="RW"></bitfield>
<bitfield id="STYPE_1" width="3" begin="18" end="16" resetval="0" description="Encoding for control symbol that make use of parameter CMD " range="" rwaccess="RW"></bitfield>
<bitfield id="CMD" width="3" begin="15" end="13" resetval="0" description="Used in conjunction with stype1 encoding to define the link maintenance commands" range="" rwaccess="RW"></bitfield>
<bitfield id="CS_EMB" width="1" begin="12" end="12" resetval="0" description="When set, force the outbound flow to insert control symbol into packet. Used in debug mode " range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_7" width="12" begin="11" end="0" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
</register>
	     <register id="SP_RST_OPT3" acronym="SP_RST_OPT3" offset="0x14300" width="32" description="Port Reset Option CSR">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="PORT_ID" width="8" begin="7" end="0" resetval="233767149" description="Port ID defines unique number for port in Switch. The Port ID is used for Port_Write request. The ID coincides with ISF port of connection. Example: 00_0000_01 - port 1 ( Impl.: IP0, port 1) 00_0001_11 - port 7 ( Impl.: IP1, port 3) " range="" rwaccess="R"></bitfield>
</register>
	     <register id="SP_CTL_INDEP3" acronym="SP_CTL_INDEP3" offset="0x14304" width="32" description="Port Control Independent register">
<bitfield id="_RESV_1" width="1" begin="31" end="31" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TX_FLW" width="1" begin="30" end="30" resetval="0" description="Transmit Link Flow Control enable  0 - Receive link flow control  1 - Transmit link flow control ( not supported) " range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Disables transmit flow control (Enables receive flow control)" />
</bitfield>
<bitfield id="SOFT_REC" width="1" begin="29" end="29" resetval="0" description="Software controlled error recovery  0 - Hardware  1 - Software  By default the transmission error recovery sequence is performed by the hardware.  " range="" rwaccess="RW">
<bitenum id="BYHARDWARE" value="0" token="BYHARDWARE" description="Transmission of error recovery sequence is performed by the hardware" />
<bitenum id="BYSOFTWARE" value="1" token="BYSOFTWARE" description="Transmission of error recovery sequence is performed by the software" />
</bitfield>
<bitfield id="_RESV_4" width="2" begin="28" end="27" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="FORCE_REINIT" width="1" begin="26" end="26" resetval="0" description="Force reinitialization process. In 4x mode this bit affects all 4 lanes. This bit is write only, read always &quot;0&quot; " range="" rwaccess="W"></bitfield>
<bitfield id="TRANS_MODE" width="2" begin="25" end="24" resetval="1" description="Describe the transfer mode for each port  00 : Reserved (Cut-Through Mode)  01 : Store &amp; Forward Mode  1x: Reserved  " range="" rwaccess="RW"></bitfield>
<bitfield id="DEBUG" width="1" begin="23" end="23" resetval="0" description="Mode of operation  0 - Normal  1 - debug mode. The Debug mode unlocks capture registers for write and enable debug packet generator feature" range="" rwaccess="RW">
<bitenum id="NORMAL" value="0" token="NORMAL" description="Normal mode" />
<bitenum id="DEBUG" value="1" token="DEBUG" description="Debug mode" />
</bitfield>
<bitfield id="SEND_DBG_PKT" width="1" begin="22" end="22" resetval="0" description="Send Debug_packet Write 1 force to send debug packet. This bit is set by software and cleared after debug packet is sent. Writes when the bit is set are ignored. Debug mode only " range="" rwaccess="RW"></bitfield>
<bitfield id="ILL_TRANS_EN" width="1" begin="21" end="21" resetval="0" description="Illegal Transfer Error reporting Enable. If enabled, the Port-Write and interrupt are reported error " range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Disables Illegal Transfer Error reporting" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Enables Illegal Transfer Error reporting " />
</bitfield>
<bitfield id="ILL_TRANS_ERR" width="1" begin="20" end="20" resetval="0" description="Illegal Transfer Error " range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_11" width="2" begin="19" end="18" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="MAX_RETRY_EN" width="1" begin="17" end="17" resetval="0" description="Max_retry_error report enable. If enabled, the Port-Write and interrupt are reported as error " range="" rwaccess="RW">
<bitenum id="ENABLE" value="1" token="ENABLE" description="Max retry error report enable" />
<bitenum id="DISABLE" value="0" token="DISABLE" description="Max retry error report disable" />
</bitfield>
<bitfield id="MAX_RETRY_ERR" width="1" begin="16" end="16" resetval="0" description="Max-retry_error bit is set when max_retry_cnt is equal to max_retry_threshold . The Port-Write request and interrupt are generated if enabled. This bit is ignored if max_retry threshold is 00. Once set, remains set until written with logic 1 to clear. This bit also is cleared by writing all 0 to the register &quot;RIO_SP0_ERR_DET&quot;. This error also reported in registers: &quot;RIO_SP0_ERR_DET&quot;. " range="" rwaccess="RW"></bitfield>
<bitfield id="MAX_RETRY_THR" width="8" begin="15" end="8" resetval="0" description="Maximum Retry Threshold Trigger These bits provide the threshold value for reporting an error condition due to possibly broken partner behavior.  00 - disable the max_retry_error reporting  01 - set the max_retry_threshold to 1  02 - set the max_retry_threshold to 2 ...  FF - set the max_retry_threshold to 255 " range="0x00  0xFF" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Disable the max_retry_error reporting " />
</bitfield>
<bitfield id="IRQ_EN" width="1" begin="7" end="7" resetval="0" description="Interrupt error report Enable . If enabled, the interrupt signal is High when the IRQ_ERR is set to 1" range="" rwaccess="RW">
<bitenum id="ENABLE" value="1" token="ENABLE" description="Interrupt error report enable " />
<bitenum id="DISABLE" value="0" token="DISABLE" description="Interrupt error report disable" />
</bitfield>
<bitfield id="IRQ_ERR" width="1" begin="6" end="6" resetval="0" description="The Interrupt Error Status bit. It is set to one if an error occurs and there is a Port_Write condition. Once set, remains set until written with logic 1 to clear " range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_17" width="6" begin="5" end="0" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
</register>
	     <register id="SP_SILENCE_TIMER3" acronym="SP_SILENCE_TIMER3" offset="0x14308" width="32" description="Port Silence Timer">
<bitfield id="SILENCE_TIMER" width="4" begin="31" end="28" resetval="11" description="Silence timer. Defines the time of the port in the SILENT state. 0000b: 64ns for debug  0001b: 13.1us   0010b: 13.1us * 2 = 26.2us .. 1011b: 13.1us * 11 = 144.1us default ... 1111b: 13.1us *15= 196.5us " range="0x01 to 0x0F" rwaccess="RW"></bitfield>
<bitfield id="_RESV_2" width="28" begin="27" end="0" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
</register>
	     <register id="SP_MULT_EVNT_CS3" acronym="SP_MULT_EVNT_CS3" offset="0x1430C" width="32" description="Port  Multicast-Event Control Symbol Request register">
<bitfield id="MULT_EVNT_CS" width="32" begin="31" end="0" resetval="0" description="Write to send Control Symbol, data is ignored. read - 0x000000 " range="" rwaccess="W"></bitfield>
</register>
	     <register id="SP_CS_TX3" acronym="SP_CS_TX3" offset="0x14314" width="32" description="Port  Control Symbol Transmit">
<bitfield id="STYPE_0" width="3" begin="31" end="29" resetval="0" description="Encoding for control symbol that make use of parameters PAR_0 and PAR_1 " range="" rwaccess="RW"></bitfield>
<bitfield id="PAR_0" width="5" begin="28" end="24" resetval="0" description="Used in conjunction with stype0 encoding " range="" rwaccess="RW"></bitfield>
<bitfield id="PAR_1" width="5" begin="23" end="19" resetval="0" description="Used in conjunction with stype0 encoding " range="" rwaccess="RW"></bitfield>
<bitfield id="STYPE_1" width="3" begin="18" end="16" resetval="0" description="Encoding for control symbol that make use of parameter CMD " range="" rwaccess="RW"></bitfield>
<bitfield id="CMD" width="3" begin="15" end="13" resetval="0" description="Used in conjunction with stype1 encoding to define the link maintenance commands" range="" rwaccess="RW"></bitfield>
<bitfield id="CS_EMB" width="1" begin="12" end="12" resetval="0" description="When set, force the outbound flow to insert control symbol into packet. Used in debug mode " range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_7" width="12" begin="11" end="0" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
</register>
     <register id="PID" acronym="PID" offset="0x0000" width="32" description="Peripheral Identification Register">
<bitfield id="SCHEME" width="2" begin="31" end="30" resetval="1" description="" range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_2" width="2" begin="29" end="28" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="FUNC" width="12" begin="27" end="16" resetval="1191" description="" range="" rwaccess="R"></bitfield>
<bitfield id="RTL" width="5" begin="15" end="11" resetval="12" description="" range="" rwaccess="R"></bitfield>
<bitfield id="MAJOR" width="3" begin="10" end="8" resetval="1" description="" range="" rwaccess="R"></bitfield>
<bitfield id="CUSTOM" width="2" begin="7" end="6" resetval="0" description="" range="" rwaccess="R"></bitfield>
<bitfield id="MINOR" width="6" begin="5" end="0" resetval="2" description="" range="" rwaccess="R"></bitfield>
</register>
     <register id="PCR" acronym="PCR" offset="0x0004" width="32" description="Peripheral Control register">
<bitfield id="_RESV_1" width="29" begin="31" end="3" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="PEREN" width="1" begin="2" end="2" resetval="0" description="Peripheral Enable. Control the flow of data in the logical layer of the peripheral. As an initiator, it will prevent TX transaction generation and as a target, it will disable incoming requests. This should be the last enable bit to toggle when bringing the device out of reset to begin normal operation" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Disables data flow control" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Enables data flow control" />
</bitfield>
<bitfield id="SOFT" width="1" begin="1" end="1" resetval="0" description="Emulation Control  SOFT bit" range="" rwaccess="RW"></bitfield>
<bitfield id="FREE" width="1" begin="0" end="0" resetval="1" description="Emulation Control  FREE bit" range="" rwaccess="RW"></bitfield>
</register>
     <register id="PER_SET_CNTL" acronym="PER_SET_CNTL" offset="0x0020" width="32" description="Peripheral  Settings Control register">
<bitfield id="LEND_SWAP_MODE_MAU" width="2" begin="31" end="30" resetval="0" description="MAU little-endian swapping mode" range="" rwaccess="RW">
<bitenum id="MODE_A" value="0" token="MODE_A" description="MAU little-endian swapping mode" />
<bitenum id="MODE_B" value="1" token="MODE_B" description="MAU little-endian swapping mode" />
<bitenum id="MODE_C" value="2" token="MODE_C" description="MAU little-endian swapping mode" />
<bitenum id="MODE_D" value="3" token="MODE_D" description="MAU little-endian swapping mode" />
</bitfield>
<bitfield id="LEND_SWAP_MODE_LSU" width="2" begin="29" end="28" resetval="0" description="LSU little-endian swapping mode" range="" rwaccess="RW">
<bitenum id="MODE_A" value="0" token="MODE_A" description="LSU little-endian swapping mode" />
<bitenum id="MODE_B" value="1" token="MODE_B" description="LSU little-endian swapping mode" />
<bitenum id="MODE_C" value="2" token="MODE_C" description="LSU little-endian swapping mode" />
<bitenum id="MODE_D" value="3" token="MODE_D" description="LSU little-endian swapping mode" />
</bitfield>
<bitfield id="LOG_TGT_ID_DIS" width="1" begin="27" end="27" resetval="0" description="Logical layer disable. This bit disables all the packet types at the logical layer." range="" rwaccess="RW">
<bitenum id="DESTROY_PACKETS" value="0" token="DESTROY_PACKETS" description="All non-matching packets are destroyed." />
<bitenum id="FORWARD_PACKETS" value="1" token="FORWARD_PACKETS" description="All packets, regardless of the destination ID, are forwarded to the application." />
</bitfield>
<bitfield id="SW_MEM_SLEEP_OVERRIDE" width="1" begin="26" end="26" resetval="1" description="Software Memory Sleep Override 0b0  While in shutdown, memories are put  in sleep mode                           0b1  While in shutdown, memories are not put in sleep mode" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Memories are not put in sleep mode" />
</bitfield>
<bitfield id="LOOPBACK" width="1" begin="25" end="25" resetval="0" description="Loopback mode. 0b: Normal operation                                                                                       1b: Loop back. Trasmit data to receive on the same port.Packet data is looped back in the digital domain before the SerDes macros" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Normal operation" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Loop back mode" />
</bitfield>
<bitfield id="BOOT_COMPLETE" width="1" begin="24" end="24" resetval="0" description="Controls ability to write any register during initialization. It also includes read   only registers during normal mode of operation, that have application defined reset value. 0  write enabled 1 - write to read only registers disabled Usually the boot_complete is asserted once after reset to define power on configuration" range="" rwaccess="RW">
<bitenum id="WRITE_ENABLE" value="0" token="WRITE_ENABLE" description="Write to read only registers enabled" />
<bitenum id="WRITE_DISABLE" value="1" token="WRITE_DISABLE" description="Write to read only registers disabled" />
</bitfield>
<bitfield id="LEND_SWAP_MODE_TXU_RXU" width="2" begin="23" end="22" resetval="0" description="TXU/RXU little-endian swapping mode" range="" rwaccess="RW">
<bitenum id="MODE_A" value="0" token="MODE_A" description="" />
<bitenum id="MODE_B" value="1" token="MODE_B" description="" />
<bitenum id="MODE_C" value="2" token="MODE_C" description="" />
<bitenum id="MODE_D" value="3" token="MODE_D" description="" />
</bitfield>
<bitfield id="_RESV_8" width="1" begin="21" end="21" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TX_PRI2_WM" width="3" begin="20" end="18" resetval="1" description="Transmit credit threshold. Sets the required number of logical layer TX buffers needed to send prority 2 packets across the UDI interface. This is valid for all ports in 1X mode only" range="0x00  0x07" rwaccess="RW"></bitfield>
<bitfield id="TX_PRI1_WM" width="3" begin="17" end="15" resetval="2" description="Transmit credit threshold. Sets the required number of logical layer TX buffers needed to send prority 1 packets across the UDI interface. This is valid for all ports in 1X mode only" range="0x00  0x07" rwaccess="RW"></bitfield>
<bitfield id="TX_PRI0_WM" width="3" begin="14" end="12" resetval="3" description="Transmit credit threshold. Sets the required number of logical layer TX buffers needed to send prority 0 packets across the UDI interface. This is valid for all ports in 1X mode only" range="0x00  0x07" rwaccess="RW"></bitfield>
<bitfield id="CBA_TRANS_PRI" width="3" begin="11" end="9" resetval="4" description="VBUS transaction priority. 0b000  Highest Priority, 0b111  Lowest Priority." range="0x00  0x07" rwaccess="RW"></bitfield>
<bitfield id="1X_MODE" width="1" begin="8" end="8" resetval="1" description="This register bit determines the UDI buffering setup(Prority versus Port). " range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="UDI buffers are priority based" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="UDI buffers are port based. This mode must be selected when using more than one 1X port" />
</bitfield>
<bitfield id="PRESCALER_SELECT" width="4" begin="7" end="4" resetval="0" description="Internal frequency prescaler, used to drive the request to response timers. These 4 bits are the prescaler reload value allowing division of the VBUS clock by a range from 1 up to 16. Setting should reflect the device VBUS frequency." range="" rwaccess="RW">
<bitenum id="1" value="11" token="1" description="Sets the internal clock frequency Min  44.7 and Max  89.5" />
<bitenum id="2" value="27" token="2" description="Sets the internal clock frequency Min  89.5 and Max  179.0" />
<bitenum id="3" value="267" token="3" description="Sets the internal clock frequency Min  134.2 and Max  268.4" />
<bitenum id="4" value="283" token="4" description="Sets the internal clock frequency Min  180.0 and Max  360.0" />
<bitenum id="5" value="4107" token="5" description="Sets the internal clock frequency Min  223.7 and Max  447.4" />
<bitenum id="6" value="4123" token="6" description="Sets the internal clock frequency Min  268.4 and Max  536.8" />
<bitenum id="7" value="4363" token="7" description="Sets the internal clock frequency Min  313.2 and Max  626.4" />
<bitenum id="8" value="4379" token="8" description="Sets the internal clock frequency Min  357.9 and Max  715.8" />
<bitenum id="9" value="65547" token="9" description="sets the internal clock frequency Min  402.7 and Max  805.4" />
<bitenum id="10" value="65563" token="10" description="Sets the internal clock frequency Min  447.4 and Max  894.8" />
<bitenum id="11" value="65803" token="11" description="Sets the internal clock frequency Min  492.1 and Max  984.2" />
<bitenum id="12" value="65819" token="12" description="Sets the internal clock frequency Min  536.9 and Max  1073.8" />
<bitenum id="13" value="69643" token="13" description="Sets the internal clock frequency Min  581.6 and Max  1163.2" />
<bitenum id="14" value="69659" token="14" description="Sets the internal clock frequency Min  626.3 and Max  1252.6" />
<bitenum id="15" value="69899" token="15" description="Sets the internal clock frequency Min  671.1 and Max  1342.2" />
<bitenum id="16" value="69915" token="16" description="Sets the internal clock frequency Min  715.8 and Max  1431.6" />
</bitfield>
<bitfield id="ENPLL4" width="1" begin="3" end="3" resetval="0" description="Drives SerDes Macro 4 PLL Enable signal" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Disables  macro 4 PLL" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Enables  macro 4 PLL" />
</bitfield>
<bitfield id="ENPLL3" width="1" begin="2" end="2" resetval="0" description="Drives SerDes Macro 3 PLL Enable signal" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Disables macro 3 PLL" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Enables macro 3 PLL" />
</bitfield>
<bitfield id="ENPLL2" width="1" begin="1" end="1" resetval="0" description="Drives SerDes Macro 2 PLL Enable signal" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Disables macro 2 PLL" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Enables macro 2 PLL" />
</bitfield>
<bitfield id="ENPLL1" width="1" begin="0" end="0" resetval="0" description="Drives SerDes Macro 1 PLL Enable signal" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Disables macro 1 PLL" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Enables macro 1 PLL" />
</bitfield>
</register>
     <register id="GBL_EN" acronym="GBL_EN" offset="0x0030" width="32" description="Peripheral Global Enable register">
<bitfield id="_RESV_1" width="31" begin="31" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EN" width="1" begin="0" end="0" resetval="0" description="Controls reset to all clock domains within the peripheral" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Peripheral to be disabled (held in reset, clocks disabled)" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Peripheral to be enabled" />
</bitfield>
</register>
     <register id="GBL_EN_STAT" acronym="GBL_EN_STAT" offset="0x0034" width="32" description="Peripheral Global Enable Status">
<bitfield id="_RESV_1" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="BLK8_EN_STAT" width="1" begin="9" end="9" resetval="1" description="Indicates state of BLK8_EN reset signal " range="" rwaccess="R"></bitfield>
<bitfield id="BLK7_EN_STAT" width="1" begin="8" end="8" resetval="1" description="Indicates state of BLK7_EN reset signal " range="" rwaccess="R"></bitfield>
<bitfield id="BLK6_EN_STAT" width="1" begin="7" end="7" resetval="1" description="Indicates state of BLK6_EN reset signal " range="" rwaccess="R"></bitfield>
<bitfield id="BLK5_EN_STAT" width="1" begin="6" end="6" resetval="1" description="Indicates state of BLK5_EN reset signal " range="" rwaccess="R"></bitfield>
<bitfield id="BLK4_EN_STAT" width="1" begin="5" end="5" resetval="1" description="Indicates state of BLK4_EN reset signal " range="" rwaccess="R"></bitfield>
<bitfield id="BLK3_EN_STAT" width="1" begin="4" end="4" resetval="1" description="Indicates state of BLK3_EN reset signal " range="" rwaccess="R"></bitfield>
<bitfield id="BLK2_EN_STAT" width="1" begin="3" end="3" resetval="1" description="Indicates state of BLK2_EN reset signal " range="" rwaccess="R"></bitfield>
<bitfield id="BLK1_EN_STAT" width="1" begin="2" end="2" resetval="1" description="Indicates state of BLK1_EN reset signal " range="" rwaccess="R"></bitfield>
<bitfield id="BLK0_EN_STAT" width="1" begin="1" end="1" resetval="1" description="Indicates state of BLK0_EN reset signal " range="" rwaccess="R"></bitfield>
<bitfield id="GBL_EN_STAT" width="1" begin="0" end="0" resetval="1" description="Indicates state of GBL_EN reset signal " range="" rwaccess="R"></bitfield>
</register>
     <register id="DEVICEID_REG1" acronym="DEVICEID_REG1" offset="0x0080" width="32" description="RapidIO DEVICEID1 Register">
<bitfield id="_RESV_1" width="8" begin="31" end="24" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="8BNODEID" width="8" begin="23" end="16" resetval="255" description="This value is equal to the value of the RapidIO Base Device ID CSR.  The CPU must read the CSR value and set this register, so that out-going packets contain the correct SOURCEID value" range="" rwaccess="RW"></bitfield>
<bitfield id="16BNODEID" width="16" begin="15" end="0" resetval="65535" description="This value is equal to the value of the RapidIO Base Device ID CSR.  The CPU must read the CSR value and set this register, so that out-going packets contain the correct SOURCEID value" range="" rwaccess="RW"></bitfield>
</register>
     <register id="DEVICEID_REG2" acronym="DEVICEID_REG2" offset="0x0084" width="32" description="RapidIO DEVICEID2 Register">
<bitfield id="_RESV_1" width="8" begin="31" end="24" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="8BNODEID" width="8" begin="23" end="16" resetval="255" description="This is a secondary supported DeviceID checked against an in-coming packet's DestID field.  Typically used for Multi-cast support" range="" rwaccess="RW"></bitfield>
<bitfield id="16BNODEID" width="16" begin="15" end="0" resetval="65535" description="This is a secondary supported DeviceID checked against an in-coming packet's DestID field.  Typically used for Multi-cast support" range="" rwaccess="RW"></bitfield>
</register>
     <register id="DEVICEID_REG3" acronym="DEVICEID_REG3" offset="0x0088" width="32" description="RapidIO DEVICEID3 Register">
<bitfield id="_RESV_1" width="8" begin="31" end="24" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="8BNODEID" width="8" begin="23" end="16" resetval="255" description="This is a secondary supported DeviceID checked against an in-coming packet's DestID field.  Typically used for Multi-cast support" range="" rwaccess="RW"></bitfield>
<bitfield id="16BNODEID" width="16" begin="15" end="0" resetval="65535" description="This is a secondary supported DeviceID checked against an in-coming packet's DestID field.  Typically used for Multi-cast support" range="" rwaccess="RW"></bitfield>
</register>
     <register id="DEVICEID_REG4" acronym="DEVICEID_REG4" offset="0x008C" width="32" description="RapidIO DEVICEID4 Register">
<bitfield id="_RESV_1" width="8" begin="31" end="24" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="8BNODEID" width="8" begin="23" end="16" resetval="255" description="This is a secondary supported DeviceID checked against an in-coming packet's DestID field.  Typically used for Multi-cast support" range="" rwaccess="RW"></bitfield>
<bitfield id="16BNODEID" width="16" begin="15" end="0" resetval="65535" description="This is a secondary supported DeviceID checked against an in-coming packet's DestID field.  Typically used for Multi-cast support" range="" rwaccess="RW"></bitfield>
</register>
    <register id="SERDES_CFGRX0_CNTL" acronym="SERDES_CFGRX0_CNTL" offset="0x100" width="32" description="SerDes RX Channels CFG register">
<bitfield id="_RSVD" width="6" begin="31" end="26" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="_RSVD" width="2" begin="25" end="24" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="_RSVD" width="1" begin="23" end="23" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EQ" width="4" begin="22" end="19" resetval="0" description="Equalizer. Enables and configures the adaptive equalizer to compensate for loss in the transmission media." range="0x0 - 0x1 and 0x8 - 0xF" rwaccess="RW"></bitfield>
<bitfield id="CDR" width="3" begin="18" end="16" resetval="0" description="Clock/data recovery. Configures the clock/data recovery algorithm." range="0x0 - 0x7" rwaccess="RW"></bitfield>
<bitfield id="LOS" width="2" begin="15" end="14" resetval="0" description="Loss of signal. Enables loss of signal detection with 2 selectable thresholds." range="" rwaccess="RW">
<bitenum id="DISABLED" value="11" token="DISABLED" description="Loss of signal detection disabled." />
<bitenum id="HIGH_THRESHOLD" value="27" token="HIGH_THRESHOLD" description="Loss of signal detection threshold in the range 85 to 195mVdfpp." />
<bitenum id="LOW_THRESHOLD" value="267" token="LOW_THRESHOLD" description="Loss of signal detection threshold in the range 65 to 175mVdfpp." />
</bitfield>
<bitfield id="ALIGN" width="2" begin="13" end="12" resetval="0" description="Symbol alignment. Enables internal or external symbol alignment." range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Alignment disabled. No symbol alignment will be performed while this setting is selected, or when switching to this selection from another." />
<bitenum id="COMMA" value="27" token="COMMA" description="Symbol alignment will be performed whenever a misaligned comma symbol is received." />
<bitenum id="JOG" value="267" token="JOG" description="The symbol alignment will be adjusted by one bit position" />
</bitfield>
<bitfield id="_RSVD" width="1" begin="11" end="11" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TERM" width="3" begin="10" end="8" resetval="0" description="Termination. Selects input termination options suitable for a variety of AC or DC coupled scenarios." range="" rwaccess="RW">
<bitenum id="0_8_VDDT" value="27" token="0_8_VDDT" description="Common point set to 0.8 VDDT." />
</bitfield>
<bitfield id="INVPAIR" width="1" begin="7" end="7" resetval="0" description="Invert polarity. Inverts polarity of RXPi and RXNi." range="" rwaccess="RW">
<bitenum id="NORMAL" value="11" token="NORMAL" description="RXPi considered to be positive data and RXNi negative." />
<bitenum id="INVERTED" value="27" token="INVERTED" description="RXPi considered to be negative data and RXNi positive." />
</bitfield>
<bitfield id="RATE" width="2" begin="6" end="5" resetval="0" description="Operating rate. Selects full, half, quarter rate operation " range="" rwaccess="RW">
<bitenum id="FULL" value="11" token="FULL" description="Two data samples taken per PLL output clock cycle." />
<bitenum id="HALF" value="27" token="HALF" description="One data sample taken per PLL output clock cycle" />
<bitenum id="QUARTER" value="267" token="QUARTER" description="One data sample taken every two PLL output clock cycles." />
</bitfield>
<bitfield id="BUSWIDTH" width="3" begin="4" end="2" resetval="0" description="Bus width. Selects the parallel interface width (10 or 8 bit). " range="" rwaccess="RW">
<bitenum id="10BIT" value="11" token="10BIT" description="10 bit operation" />
</bitfield>
<bitfield id="_RSVD" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ENRX" width="1" begin="0" end="0" resetval="0" description="Receive enable. " range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Receive disable for SERDES RX channel n (0 to 3)" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Receive enable for SERDES RX channel n (0 to 3)" />
</bitfield>
</register>
     <register id="SERDES_CFGRX1_CNTL" acronym="SERDES_CFGRX1_CNTL" offset="0x104" width="32" description="SerDes RX Channels CFG register">
<bitfield id="_RSVD" width="6" begin="31" end="26" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="_RSVD" width="2" begin="25" end="24" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="_RSVD" width="1" begin="23" end="23" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EQ" width="4" begin="22" end="19" resetval="0" description="Equalizer. Enables and configures the adaptive equalizer to compensate for loss in the transmission media." range="0x0 - 0x1 and 0x8 - 0xF" rwaccess="RW"></bitfield>
<bitfield id="CDR" width="3" begin="18" end="16" resetval="0" description="Clock/data recovery. Configures the clock/data recovery algorithm." range="0x0 - 0x7" rwaccess="RW"></bitfield>
<bitfield id="LOS" width="2" begin="15" end="14" resetval="0" description="Loss of signal. Enables loss of signal detection with 2 selectable thresholds." range="" rwaccess="RW">
<bitenum id="DISABLED" value="11" token="DISABLED" description="Loss of signal detection disabled." />
<bitenum id="HIGH_THRESHOLD" value="27" token="HIGH_THRESHOLD" description="Loss of signal detection threshold in the range 85 to 195mVdfpp." />
<bitenum id="LOW_THRESHOLD" value="267" token="LOW_THRESHOLD" description="Loss of signal detection threshold in the range 65 to 175mVdfpp." />
</bitfield>
<bitfield id="ALIGN" width="2" begin="13" end="12" resetval="0" description="Symbol alignment. Enables internal or external symbol alignment." range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Alignment disabled. No symbol alignment will be performed while this setting is selected, or when switching to this selection from another." />
<bitenum id="COMMA" value="27" token="COMMA" description="Symbol alignment will be performed whenever a misaligned comma symbol is received." />
<bitenum id="JOG" value="267" token="JOG" description="The symbol alignment will be adjusted by one bit position" />
</bitfield>
<bitfield id="_RSVD" width="1" begin="11" end="11" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TERM" width="3" begin="10" end="8" resetval="0" description="Termination. Selects input termination options suitable for a variety of AC or DC coupled scenarios." range="" rwaccess="RW">
<bitenum id="0_8_VDDT" value="27" token="0_8_VDDT" description="Common point set to 0.8 VDDT." />
</bitfield>
<bitfield id="INVPAIR" width="1" begin="7" end="7" resetval="0" description="Invert polarity. Inverts polarity of RXPi and RXNi." range="" rwaccess="RW">
<bitenum id="NORMAL" value="11" token="NORMAL" description="RXPi considered to be positive data and RXNi negative." />
<bitenum id="INVERTED" value="27" token="INVERTED" description="RXPi considered to be negative data and RXNi positive." />
</bitfield>
<bitfield id="RATE" width="2" begin="6" end="5" resetval="0" description="Operating rate. Selects full, half, quarter rate operation " range="" rwaccess="RW">
<bitenum id="FULL" value="11" token="FULL" description="Two data samples taken per PLL output clock cycle." />
<bitenum id="HALF" value="27" token="HALF" description="One data sample taken per PLL output clock cycle" />
<bitenum id="QUARTER" value="267" token="QUARTER" description="One data sample taken every two PLL output clock cycles." />
</bitfield>
<bitfield id="BUSWIDTH" width="3" begin="4" end="2" resetval="0" description="Bus width. Selects the parallel interface width (10 or 8 bit). " range="" rwaccess="RW">
<bitenum id="10BIT" value="11" token="10BIT" description="10 bit operation" />
</bitfield>
<bitfield id="_RSVD" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ENRX" width="1" begin="0" end="0" resetval="0" description="Receive enable. " range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Receive disable for SERDES RX channel n (0 to 3)" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Receive enable for SERDES RX channel n (0 to 3)" />
</bitfield>
</register>
     <register id="SERDES_CFGRX2_CNTL" acronym="SERDES_CFGRX2_CNTL" offset="0x108" width="32" description="SerDes RX Channels CFG register">
<bitfield id="_RSVD" width="6" begin="31" end="26" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="_RSVD" width="2" begin="25" end="24" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="_RSVD" width="1" begin="23" end="23" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EQ" width="4" begin="22" end="19" resetval="0" description="Equalizer. Enables and configures the adaptive equalizer to compensate for loss in the transmission media." range="0x0 - 0x1 and 0x8 - 0xF" rwaccess="RW"></bitfield>
<bitfield id="CDR" width="3" begin="18" end="16" resetval="0" description="Clock/data recovery. Configures the clock/data recovery algorithm." range="0x0 - 0x7" rwaccess="RW"></bitfield>
<bitfield id="LOS" width="2" begin="15" end="14" resetval="0" description="Loss of signal. Enables loss of signal detection with 2 selectable thresholds." range="" rwaccess="RW">
<bitenum id="DISABLED" value="11" token="DISABLED" description="Loss of signal detection disabled." />
<bitenum id="HIGH_THRESHOLD" value="27" token="HIGH_THRESHOLD" description="Loss of signal detection threshold in the range 85 to 195mVdfpp." />
<bitenum id="LOW_THRESHOLD" value="267" token="LOW_THRESHOLD" description="Loss of signal detection threshold in the range 65 to 175mVdfpp." />
</bitfield>
<bitfield id="ALIGN" width="2" begin="13" end="12" resetval="0" description="Symbol alignment. Enables internal or external symbol alignment." range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Alignment disabled. No symbol alignment will be performed while this setting is selected, or when switching to this selection from another." />
<bitenum id="COMMA" value="27" token="COMMA" description="Symbol alignment will be performed whenever a misaligned comma symbol is received." />
<bitenum id="JOG" value="267" token="JOG" description="The symbol alignment will be adjusted by one bit position" />
</bitfield>
<bitfield id="_RSVD" width="1" begin="11" end="11" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TERM" width="3" begin="10" end="8" resetval="0" description="Termination. Selects input termination options suitable for a variety of AC or DC coupled scenarios." range="" rwaccess="RW">
<bitenum id="0_8_VDDT" value="27" token="0_8_VDDT" description="Common point set to 0.8 VDDT." />
</bitfield>
<bitfield id="INVPAIR" width="1" begin="7" end="7" resetval="0" description="Invert polarity. Inverts polarity of RXPi and RXNi." range="" rwaccess="RW">
<bitenum id="NORMAL" value="11" token="NORMAL" description="RXPi considered to be positive data and RXNi negative." />
<bitenum id="INVERTED" value="27" token="INVERTED" description="RXPi considered to be negative data and RXNi positive." />
</bitfield>
<bitfield id="RATE" width="2" begin="6" end="5" resetval="0" description="Operating rate. Selects full, half, quarter rate operation " range="" rwaccess="RW">
<bitenum id="FULL" value="11" token="FULL" description="Two data samples taken per PLL output clock cycle." />
<bitenum id="HALF" value="27" token="HALF" description="One data sample taken per PLL output clock cycle" />
<bitenum id="QUARTER" value="267" token="QUARTER" description="One data sample taken every two PLL output clock cycles." />
</bitfield>
<bitfield id="BUSWIDTH" width="3" begin="4" end="2" resetval="0" description="Bus width. Selects the parallel interface width (10 or 8 bit). " range="" rwaccess="RW">
<bitenum id="10BIT" value="11" token="10BIT" description="10 bit operation" />
</bitfield>
<bitfield id="_RSVD" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ENRX" width="1" begin="0" end="0" resetval="0" description="Receive enable. " range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Receive disable for SERDES RX channel n (0 to 3)" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Receive enable for SERDES RX channel n (0 to 3)" />
</bitfield>
</register>
     <register id="SERDES_CFGRX3_CNTL" acronym="SERDES_CFGRX3_CNTL" offset="0x10C" width="32" description="SerDes RX Channels CFG register">
<bitfield id="_RSVD" width="6" begin="31" end="26" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="_RSVD" width="2" begin="25" end="24" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="_RSVD" width="1" begin="23" end="23" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EQ" width="4" begin="22" end="19" resetval="0" description="Equalizer. Enables and configures the adaptive equalizer to compensate for loss in the transmission media." range="0x0 - 0x1 and 0x8 - 0xF" rwaccess="RW"></bitfield>
<bitfield id="CDR" width="3" begin="18" end="16" resetval="0" description="Clock/data recovery. Configures the clock/data recovery algorithm." range="0x0 - 0x7" rwaccess="RW"></bitfield>
<bitfield id="LOS" width="2" begin="15" end="14" resetval="0" description="Loss of signal. Enables loss of signal detection with 2 selectable thresholds." range="" rwaccess="RW">
<bitenum id="DISABLED" value="11" token="DISABLED" description="Loss of signal detection disabled." />
<bitenum id="HIGH_THRESHOLD" value="27" token="HIGH_THRESHOLD" description="Loss of signal detection threshold in the range 85 to 195mVdfpp." />
<bitenum id="LOW_THRESHOLD" value="267" token="LOW_THRESHOLD" description="Loss of signal detection threshold in the range 65 to 175mVdfpp." />
</bitfield>
<bitfield id="ALIGN" width="2" begin="13" end="12" resetval="0" description="Symbol alignment. Enables internal or external symbol alignment." range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Alignment disabled. No symbol alignment will be performed while this setting is selected, or when switching to this selection from another." />
<bitenum id="COMMA" value="27" token="COMMA" description="Symbol alignment will be performed whenever a misaligned comma symbol is received." />
<bitenum id="JOG" value="267" token="JOG" description="The symbol alignment will be adjusted by one bit position" />
</bitfield>
<bitfield id="_RSVD" width="1" begin="11" end="11" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TERM" width="3" begin="10" end="8" resetval="0" description="Termination. Selects input termination options suitable for a variety of AC or DC coupled scenarios." range="" rwaccess="RW">
<bitenum id="0_8_VDDT" value="27" token="0_8_VDDT" description="Common point set to 0.8 VDDT." />
</bitfield>
<bitfield id="INVPAIR" width="1" begin="7" end="7" resetval="0" description="Invert polarity. Inverts polarity of RXPi and RXNi." range="" rwaccess="RW">
<bitenum id="NORMAL" value="11" token="NORMAL" description="RXPi considered to be positive data and RXNi negative." />
<bitenum id="INVERTED" value="27" token="INVERTED" description="RXPi considered to be negative data and RXNi positive." />
</bitfield>
<bitfield id="RATE" width="2" begin="6" end="5" resetval="0" description="Operating rate. Selects full, half, quarter rate operation " range="" rwaccess="RW">
<bitenum id="FULL" value="11" token="FULL" description="Two data samples taken per PLL output clock cycle." />
<bitenum id="HALF" value="27" token="HALF" description="One data sample taken per PLL output clock cycle" />
<bitenum id="QUARTER" value="267" token="QUARTER" description="One data sample taken every two PLL output clock cycles." />
</bitfield>
<bitfield id="BUSWIDTH" width="3" begin="4" end="2" resetval="0" description="Bus width. Selects the parallel interface width (10 or 8 bit). " range="" rwaccess="RW">
<bitenum id="10BIT" value="11" token="10BIT" description="10 bit operation" />
</bitfield>
<bitfield id="_RSVD" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ENRX" width="1" begin="0" end="0" resetval="0" description="Receive enable. " range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Receive disable for SERDES RX channel n (0 to 3)" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Receive enable for SERDES RX channel n (0 to 3)" />
</bitfield>
</register>
     <register id="SERDES_CFGTX0_CNTL" acronym="SERDES_CFGTX0_CNTL" offset="0x110" width="32" description="SerDes TX Channels CFG register">
<bitfield id="_RSVD" width="15" begin="31" end="17" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ENFTP" width="1" begin="16" end="16" resetval="0" description="Enable fixed TXBCLKINn phase." range="" rwaccess="RW">
<bitenum id="ARBITRARY" value="11" token="ARBITRARY" description="Arbitrary Phase. No required phase relationship between TXBCLKINn and TXBCLKn." />
<bitenum id="FIXED" value="27" token="FIXED" description="Fixed Phase. Requires direct connection of TXBCLK[i] to TXBCLKIN[i] using a minimum length net without buffers" />
</bitfield>
<bitfield id="DE" width="4" begin="15" end="12" resetval="0" description="De-emphasis. Selects one of 15 output de-emphasis settings from 4.76% to 71.42%." range="" rwaccess="RW">
<bitenum id="4_76" value="27" token="4_76" description="Differential Output De-emphasis" />
<bitenum id="9_52" value="267" token="9_52" description="" />
<bitenum id="14_28" value="283" token="14_28" description="" />
<bitenum id="19_04" value="4107" token="19_04" description="" />
<bitenum id="23_80" value="4123" token="23_80" description="" />
<bitenum id="28_56" value="4363" token="28_56" description="" />
<bitenum id="33_32" value="4379" token="33_32" description="" />
<bitenum id="38_08" value="65547" token="38_08" description="" />
<bitenum id="42_85" value="65563" token="42_85" description="" />
<bitenum id="47_61" value="65803" token="47_61" description="" />
<bitenum id="52_38" value="65819" token="52_38" description="" />
<bitenum id="57_14" value="69643" token="57_14" description="" />
<bitenum id="61_90" value="69659" token="61_90" description="" />
<bitenum id="66_66" value="69899" token="66_66" description="" />
<bitenum id="71_42" value="69915" token="71_42" description="" />
</bitfield>
<bitfield id="SWING" width="3" begin="11" end="9" resetval="0" description="Output swing. Selects one of 8 output amplitude settings between 125 and 1250mVdfpp." range="" rwaccess="RW">
<bitenum id="125" value="11" token="125" description="Differential Output Swing" />
<bitenum id="250" value="27" token="250" description="" />
<bitenum id="500" value="267" token="500" description="" />
<bitenum id="625" value="283" token="625" description="" />
<bitenum id="750" value="4107" token="750" description="" />
<bitenum id="1000" value="4123" token="1000" description="" />
<bitenum id="1125" value="4363" token="1125" description="" />
<bitenum id="1250" value="4379" token="1250" description="" />
</bitfield>
<bitfield id="CM" width="1" begin="8" end="8" resetval="0" description="Common mode. Adjusts the common mode to suit the termination at the attached receiver." range="" rwaccess="RW">
<bitenum id="NORMAL" value="11" token="NORMAL" description="Normal common mode." />
<bitenum id="RAISED" value="27" token="RAISED" description="Raised common mode." />
</bitfield>
<bitfield id="INVPAIR" width="1" begin="7" end="7" resetval="0" description="Invert polarity. Inverts polarity of TXPn and TXNn." range="" rwaccess="RW">
<bitenum id="NORMAL" value="11" token="NORMAL" description="TXPn considered to be positive data and TXNn negative." />
<bitenum id="INVERTED" value="27" token="INVERTED" description="TXPn considered to be negative data and TXNn positive." />
</bitfield>
<bitfield id="RATE" width="2" begin="6" end="5" resetval="0" description="Operating rate. Selects full, half, quarter rate operation " range="" rwaccess="RW">
<bitenum id="FULL" value="11" token="FULL" description="Two data samples taken per PLL output clock cycle." />
<bitenum id="HALF" value="27" token="HALF" description="One data sample taken per PLL output clock cycle" />
<bitenum id="QUARTER" value="267" token="QUARTER" description="One data sample taken every two PLL output clock cycles." />
</bitfield>
<bitfield id="BUSWIDTH" width="3" begin="4" end="2" resetval="0" description="Bus width. Selects the parallel interface width (10 or 8 bit). " range="" rwaccess="RW">
<bitenum id="10BIT" value="11" token="10BIT" description="10 bit operation" />
</bitfield>
<bitfield id="_RSVD" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ENTX" width="1" begin="0" end="0" resetval="0" description="Trasmit enable. " range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Transmit disable for SERDES TX channel n (0 to 3)" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Transmit enable for SERDES TX channel n (0 to 3)" />
</bitfield>
</register>
     <register id="SERDES_CFGTX1_CNTL" acronym="SERDES_CFGTX1_CNTL" offset="0x114" width="32" description="SerDes TX Channels CFG register">
<bitfield id="_RSVD" width="15" begin="31" end="17" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ENFTP" width="1" begin="16" end="16" resetval="0" description="Enable fixed TXBCLKINn phase." range="" rwaccess="RW">
<bitenum id="ARBITRARY" value="11" token="ARBITRARY" description="Arbitrary Phase. No required phase relationship between TXBCLKINn and TXBCLKn." />
<bitenum id="FIXED" value="27" token="FIXED" description="Fixed Phase. Requires direct connection of TXBCLK[i] to TXBCLKIN[i] using a minimum length net without buffers" />
</bitfield>
<bitfield id="DE" width="4" begin="15" end="12" resetval="0" description="De-emphasis. Selects one of 15 output de-emphasis settings from 4.76% to 71.42%." range="" rwaccess="RW">
<bitenum id="4_76" value="27" token="4_76" description="Differential Output De-emphasis" />
<bitenum id="9_52" value="267" token="9_52" description="" />
<bitenum id="14_28" value="283" token="14_28" description="" />
<bitenum id="19_04" value="4107" token="19_04" description="" />
<bitenum id="23_80" value="4123" token="23_80" description="" />
<bitenum id="28_56" value="4363" token="28_56" description="" />
<bitenum id="33_32" value="4379" token="33_32" description="" />
<bitenum id="38_08" value="65547" token="38_08" description="" />
<bitenum id="42_85" value="65563" token="42_85" description="" />
<bitenum id="47_61" value="65803" token="47_61" description="" />
<bitenum id="52_38" value="65819" token="52_38" description="" />
<bitenum id="57_14" value="69643" token="57_14" description="" />
<bitenum id="61_90" value="69659" token="61_90" description="" />
<bitenum id="66_66" value="69899" token="66_66" description="" />
<bitenum id="71_42" value="69915" token="71_42" description="" />
</bitfield>
<bitfield id="SWING" width="3" begin="11" end="9" resetval="0" description="Output swing. Selects one of 8 output amplitude settings between 125 and 1250mVdfpp." range="" rwaccess="RW">
<bitenum id="125" value="11" token="125" description="Differential Output Swing" />
<bitenum id="250" value="27" token="250" description="" />
<bitenum id="500" value="267" token="500" description="" />
<bitenum id="625" value="283" token="625" description="" />
<bitenum id="750" value="4107" token="750" description="" />
<bitenum id="1000" value="4123" token="1000" description="" />
<bitenum id="1125" value="4363" token="1125" description="" />
<bitenum id="1250" value="4379" token="1250" description="" />
</bitfield>
<bitfield id="CM" width="1" begin="8" end="8" resetval="0" description="Common mode. Adjusts the common mode to suit the termination at the attached receiver." range="" rwaccess="RW">
<bitenum id="NORMAL" value="11" token="NORMAL" description="Normal common mode." />
<bitenum id="RAISED" value="27" token="RAISED" description="Raised common mode." />
</bitfield>
<bitfield id="INVPAIR" width="1" begin="7" end="7" resetval="0" description="Invert polarity. Inverts polarity of TXPn and TXNn." range="" rwaccess="RW">
<bitenum id="NORMAL" value="11" token="NORMAL" description="TXPn considered to be positive data and TXNn negative." />
<bitenum id="INVERTED" value="27" token="INVERTED" description="TXPn considered to be negative data and TXNn positive." />
</bitfield>
<bitfield id="RATE" width="2" begin="6" end="5" resetval="0" description="Operating rate. Selects full, half, quarter rate operation " range="" rwaccess="RW">
<bitenum id="FULL" value="11" token="FULL" description="Two data samples taken per PLL output clock cycle." />
<bitenum id="HALF" value="27" token="HALF" description="One data sample taken per PLL output clock cycle" />
<bitenum id="QUARTER" value="267" token="QUARTER" description="One data sample taken every two PLL output clock cycles." />
</bitfield>
<bitfield id="BUSWIDTH" width="3" begin="4" end="2" resetval="0" description="Bus width. Selects the parallel interface width (10 or 8 bit). " range="" rwaccess="RW">
<bitenum id="10BIT" value="11" token="10BIT" description="10 bit operation" />
</bitfield>
<bitfield id="_RSVD" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ENTX" width="1" begin="0" end="0" resetval="0" description="Trasmit enable. " range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Transmit disable for SERDES TX channel n (0 to 3)" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Transmit enable for SERDES TX channel n (0 to 3)" />
</bitfield>
</register>
     <register id="SERDES_CFGTX2_CNTL" acronym="SERDES_CFGTX2_CNTL" offset="0x118" width="32" description="SerDes TX Channels CFG register">
<bitfield id="_RSVD" width="15" begin="31" end="17" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ENFTP" width="1" begin="16" end="16" resetval="0" description="Enable fixed TXBCLKINn phase." range="" rwaccess="RW">
<bitenum id="ARBITRARY" value="11" token="ARBITRARY" description="Arbitrary Phase. No required phase relationship between TXBCLKINn and TXBCLKn." />
<bitenum id="FIXED" value="27" token="FIXED" description="Fixed Phase. Requires direct connection of TXBCLK[i] to TXBCLKIN[i] using a minimum length net without buffers" />
</bitfield>
<bitfield id="DE" width="4" begin="15" end="12" resetval="0" description="De-emphasis. Selects one of 15 output de-emphasis settings from 4.76% to 71.42%." range="" rwaccess="RW">
<bitenum id="4_76" value="27" token="4_76" description="Differential Output De-emphasis" />
<bitenum id="9_52" value="267" token="9_52" description="" />
<bitenum id="14_28" value="283" token="14_28" description="" />
<bitenum id="19_04" value="4107" token="19_04" description="" />
<bitenum id="23_80" value="4123" token="23_80" description="" />
<bitenum id="28_56" value="4363" token="28_56" description="" />
<bitenum id="33_32" value="4379" token="33_32" description="" />
<bitenum id="38_08" value="65547" token="38_08" description="" />
<bitenum id="42_85" value="65563" token="42_85" description="" />
<bitenum id="47_61" value="65803" token="47_61" description="" />
<bitenum id="52_38" value="65819" token="52_38" description="" />
<bitenum id="57_14" value="69643" token="57_14" description="" />
<bitenum id="61_90" value="69659" token="61_90" description="" />
<bitenum id="66_66" value="69899" token="66_66" description="" />
<bitenum id="71_42" value="69915" token="71_42" description="" />
</bitfield>
<bitfield id="SWING" width="3" begin="11" end="9" resetval="0" description="Output swing. Selects one of 8 output amplitude settings between 125 and 1250mVdfpp." range="" rwaccess="RW">
<bitenum id="125" value="11" token="125" description="Differential Output Swing" />
<bitenum id="250" value="27" token="250" description="" />
<bitenum id="500" value="267" token="500" description="" />
<bitenum id="625" value="283" token="625" description="" />
<bitenum id="750" value="4107" token="750" description="" />
<bitenum id="1000" value="4123" token="1000" description="" />
<bitenum id="1125" value="4363" token="1125" description="" />
<bitenum id="1250" value="4379" token="1250" description="" />
</bitfield>
<bitfield id="CM" width="1" begin="8" end="8" resetval="0" description="Common mode. Adjusts the common mode to suit the termination at the attached receiver." range="" rwaccess="RW">
<bitenum id="NORMAL" value="11" token="NORMAL" description="Normal common mode." />
<bitenum id="RAISED" value="27" token="RAISED" description="Raised common mode." />
</bitfield>
<bitfield id="INVPAIR" width="1" begin="7" end="7" resetval="0" description="Invert polarity. Inverts polarity of TXPn and TXNn." range="" rwaccess="RW">
<bitenum id="NORMAL" value="11" token="NORMAL" description="TXPn considered to be positive data and TXNn negative." />
<bitenum id="INVERTED" value="27" token="INVERTED" description="TXPn considered to be negative data and TXNn positive." />
</bitfield>
<bitfield id="RATE" width="2" begin="6" end="5" resetval="0" description="Operating rate. Selects full, half, quarter rate operation " range="" rwaccess="RW">
<bitenum id="FULL" value="11" token="FULL" description="Two data samples taken per PLL output clock cycle." />
<bitenum id="HALF" value="27" token="HALF" description="One data sample taken per PLL output clock cycle" />
<bitenum id="QUARTER" value="267" token="QUARTER" description="One data sample taken every two PLL output clock cycles." />
</bitfield>
<bitfield id="BUSWIDTH" width="3" begin="4" end="2" resetval="0" description="Bus width. Selects the parallel interface width (10 or 8 bit). " range="" rwaccess="RW">
<bitenum id="10BIT" value="11" token="10BIT" description="10 bit operation" />
</bitfield>
<bitfield id="_RSVD" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ENTX" width="1" begin="0" end="0" resetval="0" description="Trasmit enable. " range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Transmit disable for SERDES TX channel n (0 to 3)" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Transmit enable for SERDES TX channel n (0 to 3)" />
</bitfield>
</register>
     <register id="SERDES_CFGTX3_CNTL" acronym="SERDES_CFGTX3_CNTL" offset="0x11C" width="32" description="SerDes TX Channels CFG register">
<bitfield id="_RSVD" width="15" begin="31" end="17" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ENFTP" width="1" begin="16" end="16" resetval="0" description="Enable fixed TXBCLKINn phase." range="" rwaccess="RW">
<bitenum id="ARBITRARY" value="11" token="ARBITRARY" description="Arbitrary Phase. No required phase relationship between TXBCLKINn and TXBCLKn." />
<bitenum id="FIXED" value="27" token="FIXED" description="Fixed Phase. Requires direct connection of TXBCLK[i] to TXBCLKIN[i] using a minimum length net without buffers" />
</bitfield>
<bitfield id="DE" width="4" begin="15" end="12" resetval="0" description="De-emphasis. Selects one of 15 output de-emphasis settings from 4.76% to 71.42%." range="" rwaccess="RW">
<bitenum id="4_76" value="27" token="4_76" description="Differential Output De-emphasis" />
<bitenum id="9_52" value="267" token="9_52" description="" />
<bitenum id="14_28" value="283" token="14_28" description="" />
<bitenum id="19_04" value="4107" token="19_04" description="" />
<bitenum id="23_80" value="4123" token="23_80" description="" />
<bitenum id="28_56" value="4363" token="28_56" description="" />
<bitenum id="33_32" value="4379" token="33_32" description="" />
<bitenum id="38_08" value="65547" token="38_08" description="" />
<bitenum id="42_85" value="65563" token="42_85" description="" />
<bitenum id="47_61" value="65803" token="47_61" description="" />
<bitenum id="52_38" value="65819" token="52_38" description="" />
<bitenum id="57_14" value="69643" token="57_14" description="" />
<bitenum id="61_90" value="69659" token="61_90" description="" />
<bitenum id="66_66" value="69899" token="66_66" description="" />
<bitenum id="71_42" value="69915" token="71_42" description="" />
</bitfield>
<bitfield id="SWING" width="3" begin="11" end="9" resetval="0" description="Output swing. Selects one of 8 output amplitude settings between 125 and 1250mVdfpp." range="" rwaccess="RW">
<bitenum id="125" value="11" token="125" description="Differential Output Swing" />
<bitenum id="250" value="27" token="250" description="" />
<bitenum id="500" value="267" token="500" description="" />
<bitenum id="625" value="283" token="625" description="" />
<bitenum id="750" value="4107" token="750" description="" />
<bitenum id="1000" value="4123" token="1000" description="" />
<bitenum id="1125" value="4363" token="1125" description="" />
<bitenum id="1250" value="4379" token="1250" description="" />
</bitfield>
<bitfield id="CM" width="1" begin="8" end="8" resetval="0" description="Common mode. Adjusts the common mode to suit the termination at the attached receiver." range="" rwaccess="RW">
<bitenum id="NORMAL" value="11" token="NORMAL" description="Normal common mode." />
<bitenum id="RAISED" value="27" token="RAISED" description="Raised common mode." />
</bitfield>
<bitfield id="INVPAIR" width="1" begin="7" end="7" resetval="0" description="Invert polarity. Inverts polarity of TXPn and TXNn." range="" rwaccess="RW">
<bitenum id="NORMAL" value="11" token="NORMAL" description="TXPn considered to be positive data and TXNn negative." />
<bitenum id="INVERTED" value="27" token="INVERTED" description="TXPn considered to be negative data and TXNn positive." />
</bitfield>
<bitfield id="RATE" width="2" begin="6" end="5" resetval="0" description="Operating rate. Selects full, half, quarter rate operation " range="" rwaccess="RW">
<bitenum id="FULL" value="11" token="FULL" description="Two data samples taken per PLL output clock cycle." />
<bitenum id="HALF" value="27" token="HALF" description="One data sample taken per PLL output clock cycle" />
<bitenum id="QUARTER" value="267" token="QUARTER" description="One data sample taken every two PLL output clock cycles." />
</bitfield>
<bitfield id="BUSWIDTH" width="3" begin="4" end="2" resetval="0" description="Bus width. Selects the parallel interface width (10 or 8 bit). " range="" rwaccess="RW">
<bitenum id="10BIT" value="11" token="10BIT" description="10 bit operation" />
</bitfield>
<bitfield id="_RSVD" width="1" begin="1" end="1" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ENTX" width="1" begin="0" end="0" resetval="0" description="Trasmit enable. " range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Transmit disable for SERDES TX channel n (0 to 3)" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Transmit enable for SERDES TX channel n (0 to 3)" />
</bitfield>
</register>
     <register id="SERDES_CFG0_CNTL" acronym="SERDES_CFG0_CNTL" offset="0x120" width="32" description="SerDes  Macros CFG register">
<bitfield id="_RSVD" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="LB" width="2" begin="9" end="8" resetval="0" description="Loop Bandwidth. Specify loop bandwidth settings." range="" rwaccess="RW">
<bitenum id="FREQ_DEP" value="11" token="FREQ_DEP" description="Frequency Dependent Bandwidth. The PLL bandwidth is set to a twelfth of the frequency of REFCLKP/N" />
<bitenum id="LOW" value="267" token="LOW" description="Low Bandwidth. The PLL bandwidth is set to a twentieth of the frequency of REFCLKP/N, or 3MHz(whichever is larger)." />
<bitenum id="HIGH" value="283" token="HIGH" description="High Bandwidth. The PLL bandwidth is set to an eighth of the the frequency of REFCLKP/N." />
</bitfield>
<bitfield id="_RSVD" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="MPY" width="5" begin="5" end="1" resetval="0" description="PLL multiply. Select PLL Multiply factors between 4 and 60." range="" rwaccess="RW">
<bitenum id="4" value="11" token="4" description="PLL Multiply Modes" />
<bitenum id="5" value="27" token="5" description="" />
<bitenum id="6" value="267" token="6" description="" />
<bitenum id="8" value="4107" token="8" description="" />
<bitenum id="10" value="4123" token="10" description="" />
<bitenum id="12" value="4363" token="12" description="" />
<bitenum id="12_5" value="4379" token="12_5" description="" />
<bitenum id="15" value="65547" token="15" description="" />
<bitenum id="20" value="65563" token="20" description="" />
<bitenum id="25" value="65803" token="25" description="" />
</bitfield>
<bitfield id="ENPLL" width="1" begin="0" end="0" resetval="0" description="Enable PLL. Enables the PLL." range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Internal PLL is disabled" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Internal PLL is enabled" />
</bitfield>
</register>
     <register id="SERDES_CFG1_CNTL" acronym="SERDES_CFG1_CNTL" offset="0x124" width="32" description="SerDes  Macros CFG register">
<bitfield id="_RSVD" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="LB" width="2" begin="9" end="8" resetval="0" description="Loop Bandwidth. Specify loop bandwidth settings." range="" rwaccess="RW">
<bitenum id="FREQ_DEP" value="11" token="FREQ_DEP" description="Frequency Dependent Bandwidth. The PLL bandwidth is set to a twelfth of the frequency of REFCLKP/N" />
<bitenum id="LOW" value="267" token="LOW" description="Low Bandwidth. The PLL bandwidth is set to a twentieth of the frequency of REFCLKP/N, or 3MHz(whichever is larger)." />
<bitenum id="HIGH" value="283" token="HIGH" description="High Bandwidth. The PLL bandwidth is set to an eighth of the the frequency of REFCLKP/N." />
</bitfield>
<bitfield id="_RSVD" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="MPY" width="5" begin="5" end="1" resetval="0" description="PLL multiply. Select PLL Multiply factors between 4 and 60." range="" rwaccess="RW">
<bitenum id="4" value="11" token="4" description="PLL Multiply Modes" />
<bitenum id="5" value="27" token="5" description="" />
<bitenum id="6" value="267" token="6" description="" />
<bitenum id="8" value="4107" token="8" description="" />
<bitenum id="10" value="4123" token="10" description="" />
<bitenum id="12" value="4363" token="12" description="" />
<bitenum id="12_5" value="4379" token="12_5" description="" />
<bitenum id="15" value="65547" token="15" description="" />
<bitenum id="20" value="65563" token="20" description="" />
<bitenum id="25" value="65803" token="25" description="" />
</bitfield>
<bitfield id="ENPLL" width="1" begin="0" end="0" resetval="0" description="Enable PLL. Enables the PLL." range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Internal PLL is disabled" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Internal PLL is enabled" />
</bitfield>
</register>
     <register id="SERDES_CFG2_CNTL" acronym="SERDES_CFG2_CNTL" offset="0x128" width="32" description="SerDes  Macros CFG register">
<bitfield id="_RSVD" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="LB" width="2" begin="9" end="8" resetval="0" description="Loop Bandwidth. Specify loop bandwidth settings." range="" rwaccess="RW">
<bitenum id="FREQ_DEP" value="11" token="FREQ_DEP" description="Frequency Dependent Bandwidth. The PLL bandwidth is set to a twelfth of the frequency of REFCLKP/N" />
<bitenum id="LOW" value="267" token="LOW" description="Low Bandwidth. The PLL bandwidth is set to a twentieth of the frequency of REFCLKP/N, or 3MHz(whichever is larger)." />
<bitenum id="HIGH" value="283" token="HIGH" description="High Bandwidth. The PLL bandwidth is set to an eighth of the the frequency of REFCLKP/N." />
</bitfield>
<bitfield id="_RSVD" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="MPY" width="5" begin="5" end="1" resetval="0" description="PLL multiply. Select PLL Multiply factors between 4 and 60." range="" rwaccess="RW">
<bitenum id="4" value="11" token="4" description="PLL Multiply Modes" />
<bitenum id="5" value="27" token="5" description="" />
<bitenum id="6" value="267" token="6" description="" />
<bitenum id="8" value="4107" token="8" description="" />
<bitenum id="10" value="4123" token="10" description="" />
<bitenum id="12" value="4363" token="12" description="" />
<bitenum id="12_5" value="4379" token="12_5" description="" />
<bitenum id="15" value="65547" token="15" description="" />
<bitenum id="20" value="65563" token="20" description="" />
<bitenum id="25" value="65803" token="25" description="" />
</bitfield>
<bitfield id="ENPLL" width="1" begin="0" end="0" resetval="0" description="Enable PLL. Enables the PLL." range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Internal PLL is disabled" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Internal PLL is enabled" />
</bitfield>
</register>
     <register id="SERDES_CFG3_CNTL" acronym="SERDES_CFG3_CNTL" offset="0x12C" width="32" description="SerDes  Macros CFG register">
<bitfield id="_RSVD" width="22" begin="31" end="10" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="LB" width="2" begin="9" end="8" resetval="0" description="Loop Bandwidth. Specify loop bandwidth settings." range="" rwaccess="RW">
<bitenum id="FREQ_DEP" value="11" token="FREQ_DEP" description="Frequency Dependent Bandwidth. The PLL bandwidth is set to a twelfth of the frequency of REFCLKP/N" />
<bitenum id="LOW" value="267" token="LOW" description="Low Bandwidth. The PLL bandwidth is set to a twentieth of the frequency of REFCLKP/N, or 3MHz(whichever is larger)." />
<bitenum id="HIGH" value="283" token="HIGH" description="High Bandwidth. The PLL bandwidth is set to an eighth of the the frequency of REFCLKP/N." />
</bitfield>
<bitfield id="_RSVD" width="2" begin="7" end="6" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="MPY" width="5" begin="5" end="1" resetval="0" description="PLL multiply. Select PLL Multiply factors between 4 and 60." range="" rwaccess="RW">
<bitenum id="4" value="11" token="4" description="PLL Multiply Modes" />
<bitenum id="5" value="27" token="5" description="" />
<bitenum id="6" value="267" token="6" description="" />
<bitenum id="8" value="4107" token="8" description="" />
<bitenum id="10" value="4123" token="10" description="" />
<bitenum id="12" value="4363" token="12" description="" />
<bitenum id="12_5" value="4379" token="12_5" description="" />
<bitenum id="15" value="65547" token="15" description="" />
<bitenum id="20" value="65563" token="20" description="" />
<bitenum id="25" value="65803" token="25" description="" />
</bitfield>
<bitfield id="ENPLL" width="1" begin="0" end="0" resetval="0" description="Enable PLL. Enables the PLL." range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Internal PLL is disabled" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Internal PLL is enabled" />
</bitfield>
</register>
     <register id="RX_CPPI_ICSR" acronym="RX_CPPI_ICSR" offset="0x0240" width="32" description="RX CPPI Interrupt Status register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ICS[16]" width="1" begin="15" end="0" resetval="0" description="RX CPPI Interrupt, Buffer descriptor Queue 0 to 15" range="" rwaccess="RW"></bitfield>
</register>
     <register id="RX_CPPI_ICCR" acronym="RX_CPPI_ICCR" offset="0x0248" width="32" description="RX CPPI Interrupt Clear register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ICC[16]" width="1" begin="15" end="0" resetval="0" description="RX CPPI Interrupt clear, Buffer descriptor Queue 0 to 15" range="" rwaccess="W">
<bitenum id="CLEAR" value="1" token="CLEAR" description="" />
</bitfield>
</register>
     <register id="TX_CPPI_ICSR" acronym="TX_CPPI_ICSR" offset="0x0250" width="32" description="TX CPPI Interrupt Status register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ICS[16]" width="1" begin="15" end="0" resetval="0" description="TX CPPI Interrupt, Buffer descriptor Queue 0 to 15" range="" rwaccess="RW"></bitfield>
</register>
     <register id="TX_CPPI_ICCR" acronym="TX_CPPI_ICCR" offset="0x0258" width="32" description="TX CPPI Interrupt Clear register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ICC[16]" width="1" begin="15" end="0" resetval="0" description="TX CPPI Interrupt clear, Buffer descriptor Queue 0 to 15" range="" rwaccess="W">
<bitenum id="CLEAR" value="1" token="CLEAR" description="" />
</bitfield>
</register>
     <register id="LSU_ICSR" acronym="LSU_ICSR" offset="0x0260" width="32" description="LSU Status Interrupt register">
<bitfield id="ICS[32]" width="1" begin="31" end="0" resetval="0" description="Load/Store module interrupt condition status bits" range="" rwaccess="R"></bitfield>
</register>
     <register id="LSU _ICCR" acronym="LSU _ICCR" offset="0x0268" width="32" description="LSU Clear Interrupt register">
<bitfield id="ICC[32]" width="1" begin="31" end="0" resetval="0" description="Load/Store module interrupt clear bits" range="" rwaccess="W">
<bitenum id="CLEAR" value="1" token="CLEAR" description="" />
</bitfield>
</register>
     <register id="ERR_RST_EVNT_ICSR" acronym="ERR_RST_EVNT_ICSR" offset="0x0270" width="32" description="Error, Reset, and Special Event Status Interrupt register">
<bitfield id="_RESV_1" width="15" begin="31" end="17" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ICS16" width="1" begin="16" end="16" resetval="0" description="Device Reset Interrupt from any port " range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_3" width="4" begin="15" end="12" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ICS11" width="1" begin="11" end="11" resetval="0" description="Port3 Error" range="" rwaccess="R"></bitfield>
<bitfield id="ICS10" width="1" begin="10" end="10" resetval="0" description="Port2 Error    " range="" rwaccess="R"></bitfield>
<bitfield id="ICS9" width="1" begin="9" end="9" resetval="0" description="Port1 Error  " range="" rwaccess="R"></bitfield>
<bitfield id="ICS8" width="1" begin="8" end="8" resetval="0" description="Port0 Error  " range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_8" width="5" begin="7" end="3" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ICS2" width="1" begin="2" end="2" resetval="0" description="Logical Layer Error Management Event Capture " range="" rwaccess="R"></bitfield>
<bitfield id="ICS1" width="1" begin="1" end="1" resetval="0" description="Port-write-In request received on any port  " range="" rwaccess="R"></bitfield>
<bitfield id="ICS0" width="1" begin="0" end="0" resetval="0" description="Multi-cast event control symbol interrupt received on any port  " range="" rwaccess="R"></bitfield>
</register>
     <register id="ERR_RST_EVNT_ICCR" acronym="ERR_RST_EVNT_ICCR" offset="0x0278" width="32" description="Error, Reset, and Special Event Clear Interrupt register">
<bitfield id="_RESV_1" width="15" begin="31" end="17" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ICC16" width="1" begin="16" end="16" resetval="0" description="Device Reset Interrupt from any port " range="" rwaccess="W"></bitfield>
<bitfield id="_RESV_3" width="4" begin="15" end="12" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ICC11" width="1" begin="11" end="11" resetval="0" description="Port3 Error" range="" rwaccess="W"></bitfield>
<bitfield id="ICC10" width="1" begin="10" end="10" resetval="0" description="Port2 Error    " range="" rwaccess="W"></bitfield>
<bitfield id="ICC9" width="1" begin="9" end="9" resetval="0" description="Port1 Error  " range="" rwaccess="W"></bitfield>
<bitfield id="ICC8" width="1" begin="8" end="8" resetval="0" description="Port0 Error  " range="" rwaccess="W"></bitfield>
<bitfield id="_RESV_8" width="5" begin="7" end="3" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ICC2" width="1" begin="2" end="2" resetval="0" description="Logical Layer Error Management Event Capture " range="" rwaccess="W"></bitfield>
<bitfield id="ICC1" width="1" begin="1" end="1" resetval="0" description="Port-write-In request received on any port  " range="" rwaccess="W"></bitfield>
<bitfield id="ICC0" width="1" begin="0" end="0" resetval="0" description="Multi-cast event control symbol interrupt received on any port  " range="" rwaccess="W"></bitfield>
</register>
     <register id="RX_CPPI _ICRR" acronym="RX_CPPI _ICRR" offset="0x02C0" width="32" description="RX CPPI Interrupt Condition Routing register (bits 0 to 7)">
<bitfield id="ICR7" width="4" begin="31" end="28" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR6" width="4" begin="27" end="24" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR5" width="4" begin="23" end="20" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR4" width="4" begin="19" end="16" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR3" width="4" begin="15" end="12" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR2" width="4" begin="11" end="8" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR1" width="4" begin="7" end="4" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR0" width="4" begin="3" end="0" resetval="0" description="" range="" rwaccess="RW"></bitfield>
</register>
     <register id="RX_CPPI _ICRR2" acronym="RX_CPPI _ICRR2" offset="0x02C4" width="32" description="RX CPPI Interrupt Condition Routing register (bits 8 to 15)">
<bitfield id="ICR7" width="4" begin="31" end="28" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR6" width="4" begin="27" end="24" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR5" width="4" begin="23" end="20" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR4" width="4" begin="19" end="16" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR3" width="4" begin="15" end="12" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR2" width="4" begin="11" end="8" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR1" width="4" begin="7" end="4" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR0" width="4" begin="3" end="0" resetval="0" description="" range="" rwaccess="RW"></bitfield>
</register>
     <register id="TX_CPPI _ICRR" acronym="TX_CPPI _ICRR" offset="0x02D0" width="32" description="TX CPPI Interrupt Condition Routing register (bits 0 to 7)">
<bitfield id="ICR7" width="4" begin="31" end="28" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR6" width="4" begin="27" end="24" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR5" width="4" begin="23" end="20" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR4" width="4" begin="19" end="16" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR3" width="4" begin="15" end="12" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR2" width="4" begin="11" end="8" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR1" width="4" begin="7" end="4" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR0" width="4" begin="3" end="0" resetval="0" description="" range="" rwaccess="RW"></bitfield>
</register>
     <register id="TX_CPPI _ICRR2" acronym="TX_CPPI _ICRR2" offset="0x02D4" width="32" description="TX CPPI Interrupt Condition Routing register (bits 8 to 15)">
<bitfield id="ICR7" width="4" begin="31" end="28" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR6" width="4" begin="27" end="24" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR5" width="4" begin="23" end="20" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR4" width="4" begin="19" end="16" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR3" width="4" begin="15" end="12" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR2" width="4" begin="11" end="8" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR1" width="4" begin="7" end="4" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR0" width="4" begin="3" end="0" resetval="0" description="" range="" rwaccess="RW"></bitfield>
</register>
     <register id="LSU_ICRR[4]" acronym="LSU_ICRR[4]" offset="0x02E0" width="32" description="LSU Module Interrupt Condition Routing register">
<bitfield id="ICR7" width="4" begin="31" end="28" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR6" width="4" begin="27" end="24" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR5" width="4" begin="23" end="20" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR4" width="4" begin="19" end="16" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR3" width="4" begin="15" end="12" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR2" width="4" begin="11" end="8" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR1" width="4" begin="7" end="4" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR0" width="4" begin="3" end="0" resetval="0" description="" range="" rwaccess="RW"></bitfield>
</register>
     <register id="ERR_RST_EVNT_ICRR" acronym="ERR_RST_EVNT_ICRR" offset="0x02F0" width="32" description="Err/Reset/special event Interrupt Condition Routing register">
<bitfield id="_RESV_1" width="20" begin="31" end="12" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ICR2" width="4" begin="11" end="8" resetval="0" description="Logical Layer Error Management Event Capture routing" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR1" width="4" begin="7" end="4" resetval="0" description="Routing of Port-write-In request received on any port  " range="" rwaccess="RW"></bitfield>
<bitfield id="ICR0" width="4" begin="3" end="0" resetval="0" description="Routing of Multi-cast event control symbol interrupt received on any port  " range="" rwaccess="RW"></bitfield>
</register>
     <register id="ERR_RST_EVNT_ICRR2" acronym="ERR_RST_EVNT_ICRR2" offset="0x02F4" width="32" description="Err/Reset/special event Interrupt Condition Routing register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ICR11" width="4" begin="15" end="12" resetval="0" description="Port3 Error routing" range="" rwaccess="RW"></bitfield>
<bitfield id="ICR10" width="4" begin="11" end="8" resetval="0" description="Port2 Error routing   " range="" rwaccess="RW"></bitfield>
<bitfield id="ICR9" width="4" begin="7" end="4" resetval="0" description="Port1 Error routing " range="" rwaccess="RW"></bitfield>
<bitfield id="ICR8" width="4" begin="3" end="0" resetval="0" description="Port0 Error routing " range="" rwaccess="RW"></bitfield>
</register>
     <register id="ERR_RST_EVNT_ICRR3" acronym="ERR_RST_EVNT_ICRR3" offset="0x02F8" width="32" description="Err/Reset/special event Interrupt Condition Routing register">
<bitfield id="_RESV_1" width="28" begin="31" end="4" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ICR16" width="4" begin="3" end="0" resetval="0" description="Routing of Device Reset Interrupt from any port " range="" rwaccess="RW"></bitfield>
</register>
     <register id="INTDST_DECODE[8]" acronym="INTDST_DECODE[8]" offset="0x0300" width="32" description="INTDST Interrupt Status Decode registers">
<bitfield id="ISDR[32]" width="1" begin="31" end="0" resetval="0" description="Interrupt sources that select a particular physical interrupt destination, are mapped to specific bits in the decode register.  The interrupt sources are mapped to an interrupt decode register, only if the ICRR routes the interrupt source to the corresponding physical interrupt.  The status decode bit is a logical &quot;OR&quot; of multiple interrupt sources that are mapped to the same bit." range="" rwaccess="R"></bitfield>
</register>
     <register id="INTDST_RATE_CNTL[8]" acronym="INTDST_RATE_CNTL[8]" offset="0x0320" width="32" description="INTDST Interrupt Rate Control registers">
<bitfield id="COUNT_DOWN_VALUE" width="32" begin="31" end="0" resetval="0" description="The rate at which an interrupt can be generated is controllable for each physical interrupt destination. Rate control is implemented with a programmable down-counter. The counter re-loads and immediately starts down-counting each time the CPU writes these registers.  Once the rate control counter register is written, and the counter value reaches zero (note the CPU may write zero immediately for a zero count), the interrupt pulse generation logic is allowed to fire a single pulse if any bits in the corresponding ICSR register bits are set (or become set after the zero count is reached). ." range="0x00000000 - 0xFFFFFFFF" rwaccess="RW"></bitfield>
</register>
     <register id="QUEUE_TXDMA_HDP[16]" acronym="QUEUE_TXDMA_HDP[16]" offset="0x0500" width="32" description="Queue TX DMA Head Descriptor Pointer">
<bitfield id="TX_HDP" width="32" begin="31" end="0" resetval="0" description="This field is the host memory address for the first buffer descriptor in the transmit queue. This field is written by the host to initiate queue transmit operations and is zeroed by the port when all packets in the queue have been transmitted. An error condition results if the host writes this field when the current field value is nonzero. The address must be 32-bit word aligned " range="0x00000000 - 0xFFFFFFFC" rwaccess="RW"></bitfield>
</register>
     <register id="QUEUE_TXDMA_CP[16]" acronym="QUEUE_TXDMA_CP[16]" offset="0x0580" width="32" description="Queue TX DMA Completion Pointer">
<bitfield id="TX_CP" width="32" begin="31" end="0" resetval="0" description="This field is the host memory address for the transmit queue completion pointer. This register is written by the host with the buffer descriptor address for the last buffer processed by the host during interrupt processing. The port uses the value written to determine if the interrupt should be deasserted." range="0x00000000 - 0xFFFFFFFF" rwaccess="RW"></bitfield>
</register>
     <register id="QUEUE_RXDMA_HDP[16]" acronym="QUEUE_RXDMA_HDP[16]" offset="0x0600" width="32" description="Queue RX DMA Head Descriptor Pointer">
<bitfield id="RX_HDP" width="32" begin="31" end="0" resetval="0" description="Rx Queue Head Descriptor Pointer: This field is the host memory address for the first buffer descriptor in the channel receive queue. This field is written by the host to initiate queue receive operations and is zeroed by the port when all free buffers have been used.  An error condition results if the host writes this field when the current field value is nonzero. The address must be 32-bit word aligned." range="0x00000000 - 0xFFFFFFFC" rwaccess="RW"></bitfield>
</register>
     <register id="QUEUE_RXDMA_CP[16]" acronym="QUEUE_RXDMA_CP[16]" offset="0x0680" width="32" description="Queue RX DMA Completion Pointer">
<bitfield id="RX_CP" width="32" begin="31" end="0" resetval="0" description="Rx Queue Completion Pointer: This field is the host memory address for the receive queue completion pointer. This register is written by the host with the buffer descriptor address for the last buffer processed by the host during interrupt processing. The port uses the value written to determine if the interrupt should be deasserted" range="0x00000000 - 0xFFFFFFFF" rwaccess="RW"></bitfield>
</register>
     <register id="TX_QUEUE_TEAR_DOWN" acronym="TX_QUEUE_TEAR_DOWN" offset="0x0700" width="32" description="TX Queue Tear-down Register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE15_TEAR_DWN" width="1" begin="15" end="15" resetval="0" description="Write = 1, tear down of Queue 15 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE14_TEAR_DWN" width="1" begin="14" end="14" resetval="0" description="Write = 1, tear down of Queue 14 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE13_TEAR_DWN" width="1" begin="13" end="13" resetval="0" description="Write = 1, tear down of Queue 13 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE12_TEAR_DWN" width="1" begin="12" end="12" resetval="0" description="Write = 1, tear down of Queue 12 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE11_TEAR_DWN" width="1" begin="11" end="11" resetval="0" description="Write = 1, tear down of Queue 11 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE10_TEAR_DWN" width="1" begin="10" end="10" resetval="0" description="Write = 1, tear down of Queue 10 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE9_TEAR_DWN" width="1" begin="9" end="9" resetval="0" description="Write = 1, tear down of Queue 9 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE8_TEAR_DWN" width="1" begin="8" end="8" resetval="0" description="Write = 1, tear down of Queue 8" range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE7_TEAR_DWN" width="1" begin="7" end="7" resetval="0" description="Write = 1, tear down of Queue 7 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE6_TEAR_DWN" width="1" begin="6" end="6" resetval="0" description="Write = 1, tear down of Queue 6 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE5_TEAR_DWN" width="1" begin="5" end="5" resetval="0" description="Write = 1, tear down of Queue 5 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE4_TEAR_DWN" width="1" begin="4" end="4" resetval="0" description="Write = 1, tear down of Queue 4 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE3_TEAR_DWN" width="1" begin="3" end="3" resetval="0" description="Write = 1, tear down of Queue 3 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE2_TEAR_DWN" width="1" begin="2" end="2" resetval="0" description="Write = 1, tear down of Queue 2 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE1_TEAR_DWN" width="1" begin="1" end="1" resetval="0" description="Write = 1, tear down of Queue 1" range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE0_TEAR_DWN" width="1" begin="0" end="0" resetval="0" description="Write = 1, tear down of Queue 0 " range="" rwaccess="W"></bitfield>
</register>
     <register id="TX_CPPI_FLOW_MASKS[8]" acronym="TX_CPPI_FLOW_MASKS[8]" offset="0x0704" width="32" description="TX CPPI Supported Flow Mask">
<bitfield id="QUEUE1_FLOW_MASK15" width="1" begin="31" end="31" resetval="1" description="Flow mask queue 1 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE1 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE1" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE1_FLOW_MASK14" width="1" begin="30" end="30" resetval="1" description="Flow mask queue 1 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE1 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE1" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE1_FLOW_MASK13" width="1" begin="29" end="29" resetval="1" description="Flow mask queue 1 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE1 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE1" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE1_FLOW_MASK12" width="1" begin="28" end="28" resetval="1" description="Flow mask queue 1 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE1 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE1" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE1_FLOW_MASK11" width="1" begin="27" end="27" resetval="1" description="Flow mask queue 1 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE1 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE1" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE1_FLOW_MASK10" width="1" begin="26" end="26" resetval="1" description="Flow mask queue 1 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE1 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE1" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE1_FLOW_MASK9" width="1" begin="25" end="25" resetval="1" description="Flow mask queue 1 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE1 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE1" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE1_FLOW_MASK8" width="1" begin="24" end="24" resetval="1" description="Flow mask queue 1 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE1 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE1" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE1_FLOW_MASK7" width="1" begin="23" end="23" resetval="1" description="Flow mask queue 1 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE1 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE1" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE1_FLOW_MASK6" width="1" begin="22" end="22" resetval="1" description="Flow mask queue 1 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE1 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE1" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE1_FLOW_MASK5" width="1" begin="21" end="21" resetval="1" description="Flow mask queue 1 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE1 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE1" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE1_FLOW_MASK4" width="1" begin="20" end="20" resetval="1" description="Flow mask queue 1 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE1 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE1" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE1_FLOW_MASK3" width="1" begin="19" end="19" resetval="1" description="Flow mask queue 1 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE1 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE1" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE1_FLOW_MASK2" width="1" begin="18" end="18" resetval="1" description="Flow mask queue 1 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE1 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE1" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE1_FLOW_MASK1" width="1" begin="17" end="17" resetval="1" description="Flow mask queue 1 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE1 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE1" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE1_FLOW_MASK0" width="1" begin="16" end="16" resetval="1" description="Flow mask queue 1 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE1 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE1" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE0_FLOW_MASK15" width="1" begin="15" end="15" resetval="1" description="Flow mask queue 0 0b0  TX source doesn't support Flow n (0 to 15) from table entry  for QUEUE0 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE0" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE0_FLOW_MASK14" width="1" begin="14" end="14" resetval="1" description="Flow mask queue 0 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE0 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE0" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE0_FLOW_MASK13" width="1" begin="13" end="13" resetval="1" description="Flow mask queue 0 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE0 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE0" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE0_FLOW_MASK12" width="1" begin="12" end="12" resetval="1" description="Flow mask queue 0 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE0 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE0" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE0_FLOW_MASK11" width="1" begin="11" end="11" resetval="1" description="Flow mask queue 0 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE0 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE0" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE0_FLOW_MASK10" width="1" begin="10" end="10" resetval="1" description="Flow mask queue 0 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE0 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE0" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE0_FLOW_MASK9" width="1" begin="9" end="9" resetval="1" description="Flow mask queue 0 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE0 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE0" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE0_FLOW_MASK8" width="1" begin="8" end="8" resetval="1" description="Flow mask queue 0 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE0 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE0" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE0_FLOW_MASK7" width="1" begin="7" end="7" resetval="1" description="Flow mask queue 0 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE0 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE0" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE0_FLOW_MASK6" width="1" begin="6" end="6" resetval="1" description="Flow mask queue 0 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE0 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE0" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE0_FLOW_MASK5" width="1" begin="5" end="5" resetval="1" description="Flow mask queue 0 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE0 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE0" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE0_FLOW_MASK4" width="1" begin="4" end="4" resetval="1" description="Flow mask queue 0 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE0 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE0" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE0_FLOW_MASK3" width="1" begin="3" end="3" resetval="1" description="Flow mask queue 0 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE0 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE0" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE0_FLOW_MASK2" width="1" begin="2" end="2" resetval="1" description="Flow mask queue 0 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE0 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE0" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE0_FLOW_MASK1" width="1" begin="1" end="1" resetval="1" description="Flow mask queue 0 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE0 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE0" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
<bitfield id="QUEUE0_FLOW_MASK0" width="1" begin="0" end="0" resetval="1" description="Flow mask queue 0 0b0  TX source doesn't support Flow n (0 to 15) from table entry for QUEUE0 0b1  TX source does support Flow n ( 0 to 15) from table entry for QUEUE0" range="" rwaccess="RW">
<bitenum id="DISABLE" value="11" token="DISABLE" description="Tx source does not support flow from table entry" />
<bitenum id="ENABLE" value="27" token="ENABLE" description="Tx source does support flow from table entry" />
</bitfield>
</register>
     <register id="RX_QUEUE_TEAR_DOWN" acronym="RX_QUEUE_TEAR_DOWN" offset="0x0740" width="32" description="RX Queue Tear-down Register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE15_TEAR_DWN" width="1" begin="15" end="15" resetval="0" description="Write = 1, tear down of Queue 15 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE14_TEAR_DWN" width="1" begin="14" end="14" resetval="0" description="Write = 1, tear down of Queue 14 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE13_TEAR_DWN" width="1" begin="13" end="13" resetval="0" description="Write = 1, tear down of Queue 13 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE12_TEAR_DWN" width="1" begin="12" end="12" resetval="0" description="Write = 1, tear down of Queue 12 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE11_TEAR_DWN" width="1" begin="11" end="11" resetval="0" description="Write = 1, tear down of Queue 11 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE10_TEAR_DWN" width="1" begin="10" end="10" resetval="0" description="Write = 1, tear down of Queue 10 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE9_TEAR_DWN" width="1" begin="9" end="9" resetval="0" description="Write = 1, tear down of Queue 9 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE8_TEAR_DWN" width="1" begin="8" end="8" resetval="0" description="Write = 1, tear down of Queue 8" range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE7_TEAR_DWN" width="1" begin="7" end="7" resetval="0" description="Write = 1, tear down of Queue 7 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE6_TEAR_DWN" width="1" begin="6" end="6" resetval="0" description="Write = 1, tear down of Queue 6 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE5_TEAR_DWN" width="1" begin="5" end="5" resetval="0" description="Write = 1, tear down of Queue 5 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE4_TEAR_DWN" width="1" begin="4" end="4" resetval="0" description="Write = 1, tear down of Queue 4 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE3_TEAR_DWN" width="1" begin="3" end="3" resetval="0" description="Write = 1, tear down of Queue 3 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE2_TEAR_DWN" width="1" begin="2" end="2" resetval="0" description="Write = 1, tear down of Queue 2 " range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE1_TEAR_DWN" width="1" begin="1" end="1" resetval="0" description="Write = 1, tear down of Queue 1" range="" rwaccess="W"></bitfield>
<bitfield id="QUEUE0_TEAR_DWN" width="1" begin="0" end="0" resetval="0" description="Write = 1, tear down of Queue 0 " range="" rwaccess="W"></bitfield>
</register>
     <register id="RX_CPPI_CNTL" acronym="RX_CPPI_CNTL" offset="0x0744" width="32" description="RX CPPI Control register">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="QUEUE15_IN_ORDER" width="1" begin="15" end="15" resetval="0" description="0b0  allows out-of-order message                                                                0b1- only allows in-order messages.   Used for applications with dedicated source-destination flows" range="" rwaccess="RW"></bitfield>
<bitfield id="QUEUE14_IN_ORDER" width="1" begin="14" end="14" resetval="0" description="0b0  allows out-of-order message                                                                0b1- only allows in-order messages.   Used for applications with dedicated source-destination flows" range="" rwaccess="RW"></bitfield>
<bitfield id="QUEUE13_IN_ORDER" width="1" begin="13" end="13" resetval="0" description="0b0  allows out-of-order message                                                                0b1- only allows in-order messages.   Used for applications with dedicated source-destination flows" range="" rwaccess="RW"></bitfield>
<bitfield id="QUEUE12_IN_ORDER" width="1" begin="12" end="12" resetval="0" description="0b0  allows out-of-order message                                                                0b1- only allows in-order messages.   Used for applications with dedicated source-destination flows" range="" rwaccess="RW"></bitfield>
<bitfield id="QUEUE11_IN_ORDER" width="1" begin="11" end="11" resetval="0" description="0b0  allows out-of-order message                                                                0b1- only allows in-order messages.   Used for applications with dedicated source-destination flows" range="" rwaccess="RW"></bitfield>
<bitfield id="QUEUE10_IN_ORDER" width="1" begin="10" end="10" resetval="0" description="0b0  allows out-of-order message                                                                0b1- only allows in-order messages.   Used for applications with dedicated source-destination flows" range="" rwaccess="RW"></bitfield>
<bitfield id="QUEUE9_IN_ORDER" width="1" begin="9" end="9" resetval="0" description="0b0  allows out-of-order message                                                                0b1- only allows in-order messages.   Used for applications with dedicated source-destination flows" range="" rwaccess="RW"></bitfield>
<bitfield id="QUEUE8_IN_ORDER" width="1" begin="8" end="8" resetval="0" description="0b0  allows out-of-order message                                                                0b1- only allows in-order messages.   Used for applications with dedicated source-destination flows" range="" rwaccess="RW"></bitfield>
<bitfield id="QUEUE7_IN_ORDER" width="1" begin="7" end="7" resetval="0" description="0b0  allows out-of-order message                                                                0b1- only allows in-order messages.   Used for applications with dedicated source-destination flows" range="" rwaccess="RW"></bitfield>
<bitfield id="QUEUE6_IN_ORDER" width="1" begin="6" end="6" resetval="0" description="0b0  allows out-of-order message                                                                0b1- only allows in-order messages.   Used for applications with dedicated source-destination flows" range="" rwaccess="RW"></bitfield>
<bitfield id="QUEUE5_IN_ORDER" width="1" begin="5" end="5" resetval="0" description="0b0  allows out-of-order message                                                                0b1- only allows in-order messages.   Used for applications with dedicated source-destination flows" range="" rwaccess="RW"></bitfield>
<bitfield id="QUEUE4_IN_ORDER" width="1" begin="4" end="4" resetval="0" description="0b0  allows out-of-order message                                                                 0b1- only allows in-order messages   Used for applications with dedicated source-destination flows" range="" rwaccess="RW"></bitfield>
<bitfield id="QUEUE3_IN_ORDER" width="1" begin="3" end="3" resetval="0" description="0b0  allows out-of-order message                                                                0b1- only allows in-order messages.   Used for applications with dedicated source-destination flows" range="" rwaccess="RW"></bitfield>
<bitfield id="QUEUE2_IN_ORDER" width="1" begin="2" end="2" resetval="0" description="0b0  allows out-of-order message                                                                0b1- only allows in-order messages.   Used for applications with dedicated source-destination flows" range="" rwaccess="RW"></bitfield>
<bitfield id="QUEUE1_IN_ORDER" width="1" begin="1" end="1" resetval="0" description="0b0  allows out-of-order message                                                                0b1- only allows in-order messages.   Used for applications with dedicated source-destination flows" range="" rwaccess="RW"></bitfield>
<bitfield id="QUEUE0_IN_ORDER" width="1" begin="0" end="0" resetval="0" description="0b0  allows out-of-order message                                                                0b1- only allows in-order messages.   Used for applications with dedicated source-destination flows" range="" rwaccess="RW"></bitfield>
</register>
     <register id="TX_QUEUE_CNTL0" acronym="TX_QUEUE_CNTL0" offset="0x07E0" width="32" description="TX CPPI Weighted Round Robin Control">
<bitfield id="TX_QUEUE_MAP3_NUM_MSGS" width="4" begin="31" end="28" resetval="0" description="Number of contiguous messages (descriptors) to process before moving to TX_Queue_Map4 " range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP3_QUEUE_PTR" width="4" begin="27" end="24" resetval="3" description="Pointer to a Queue, programmable to any of the 16 TX queues" range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP2_NUM_MSGS" width="4" begin="23" end="20" resetval="0" description="Number of contiguous messages (descriptors) to process before moving to TX_Queue_Map3" range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP2_QUEUE_PTR" width="4" begin="19" end="16" resetval="2" description="Pointer to a Queue, programmable to any of the 16 TX queues" range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP1_NUM_MSGS" width="4" begin="15" end="12" resetval="0" description="Number of contiguous messages (descriptors) to process before moving to TX_Queue_Map2" range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP1_QUEUE_PTR" width="4" begin="11" end="8" resetval="1" description="Pointer to a Queue, programmable to any of the 16 TX queues" range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP0_NUM_MSGS" width="4" begin="7" end="4" resetval="0" description="Number of contiguous messages (descriptors) to process before moving to TX_Queue_Map1" range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP0_QUEUE_PTR" width="4" begin="3" end="0" resetval="0" description="Pointer to a Queue, programmable to any of the 16 TX queues" range="" rwaccess="RW"></bitfield>
</register>
     <register id="TX_QUEUE_CNTL1" acronym="TX_QUEUE_CNTL1" offset="0x07E4" width="32" description="TX CPPI Weighted Round Robin Control">
<bitfield id="TX_QUEUE_MAP7_NUM_MSGS" width="4" begin="31" end="28" resetval="0" description="Number of contiguous messages (descriptors) to process before moving to TX_Queue_Map8 " range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP7_QUEUE_PTR" width="4" begin="27" end="24" resetval="7" description="Pointer to a Queue, programmable to any of the 16 TX queues" range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP6_NUM_MSGS" width="4" begin="23" end="20" resetval="0" description="Number of contiguous messages (descriptors) to process before moving to TX_Queue_Map7" range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP6_QUEUE_PTR" width="4" begin="19" end="16" resetval="6" description="Pointer to a Queue, programmable to any of the 16 TX queues" range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP5_NUM_MSGS" width="4" begin="15" end="12" resetval="0" description="Number of contiguous messages (descriptors) to process before moving to TX_Queue_Map6" range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP5_QUEUE_PTR" width="4" begin="11" end="8" resetval="5" description="Pointer to a Queue, programmable to any of the 16 TX queues" range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP4_NUM_MSGS" width="4" begin="7" end="4" resetval="0" description="Number of contiguous messages (descriptors) to process before moving to TX_Queue_Map5" range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP4_QUEUE_PTR" width="4" begin="3" end="0" resetval="4" description="Pointer to a Queue, programmable to any of the 16 TX queues" range="" rwaccess="RW"></bitfield>
</register>
     <register id="TX_QUEUE_CNTL2" acronym="TX_QUEUE_CNTL2" offset="0x07E8" width="32" description="TX CPPI Weighted Round Robin Control">
<bitfield id="TX_QUEUE_MAP11_NUM_MSGS" width="4" begin="31" end="28" resetval="0" description="Number of contiguous messages (descriptors) to process before moving to TX_Queue_Map12 " range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP11_QUEUE_PTR" width="4" begin="27" end="24" resetval="11" description="Pointer to a Queue, programmable to any of the 16 TX queues" range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP10_NUM_MSGS" width="4" begin="23" end="20" resetval="0" description="Number of contiguous messages (descriptors) to process before moving to TX_Queue_Map11" range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP10_QUEUE_PTR" width="4" begin="19" end="16" resetval="10" description="Pointer to a Queue, programmable to any of the 16 TX queues" range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP9_NUM_MSGS" width="4" begin="15" end="12" resetval="0" description="Number of contiguous messages (descriptors) to process before moving to TX_Queue_Map10" range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP9_QUEUE_PTR" width="4" begin="11" end="8" resetval="9" description="Pointer to a Queue, programmable to any of the 16 TX queues" range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP8_NUM_MSGS" width="4" begin="7" end="4" resetval="0" description="Number of contiguous messages (descriptors) to process before moving to TX_Queue_Map9" range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP8_QUEUE_PTR" width="4" begin="3" end="0" resetval="8" description="Pointer to a Queue, programmable to any of the 16 TX queues" range="" rwaccess="RW"></bitfield>
</register>
     <register id="TX_QUEUE_CNTL3" acronym="TX_QUEUE_CNTL3" offset="0x07EC" width="32" description="TX CPPI Weighted Round Robin Control">
<bitfield id="TX_QUEUE_MAP15_NUM_MSGS" width="4" begin="31" end="28" resetval="0" description="Number of contiguous messages (descriptors) to process before moving to TX_Queue_Map0 " range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP15_QUEUE_PTR" width="4" begin="27" end="24" resetval="15" description="Pointer to a Queue, programmable to any of the 16 TX queues" range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP14_NUM_MSGS" width="4" begin="23" end="20" resetval="0" description="Number of contiguous messages (descriptors) to process before moving to TX_Queue_Map15" range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP14_QUEUE_PTR" width="4" begin="19" end="16" resetval="14" description="Pointer to a Queue, programmable to any of the 16 TX queues" range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP13_NUM_MSGS" width="4" begin="15" end="12" resetval="0" description="Number of contiguous messages (descriptors) to process before moving to TX_Queue_Map14" range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP13_QUEUE_PTR" width="4" begin="11" end="8" resetval="13" description="Pointer to a Queue, programmable to any of the 16 TX queues" range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP12_NUM_MSGS" width="4" begin="7" end="4" resetval="0" description="Number of contiguous messages (descriptors) to process before moving to TX_Queue_Map13" range="" rwaccess="RW"></bitfield>
<bitfield id="TX_QUEUE_MAP12_QUEUE_PTR" width="4" begin="3" end="0" resetval="12" description="Pointer to a Queue, programmable to any of the 16 TX queues" range="" rwaccess="RW"></bitfield>
</register>
     <register id="FLOW_CNTL[16]" acronym="FLOW_CNTL[16]" offset="0x0900" width="32" description="Flow Control Table Entry Registers">
<bitfield id="_RESV_1" width="14" begin="31" end="18" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="TT" width="2" begin="17" end="16" resetval="1" description="Selects Flow_Cntl_ID length.                                                                      0b00  8b Ids  0b01  16b Ids 0b10  0b11 - reserved " range="" rwaccess="RW">
<bitenum id="8BIT_ID" value="0" token="8BIT_ID" description="8 bit Ids" />
<bitenum id="16BIT_ID" value="1" token="16BIT_ID" description="16 bit  Ids" />
</bitfield>
<bitfield id="FLOW_CNTL_ID" width="16" begin="15" end="0" resetval="0" description="DestID of Flow n" range="0x0000-0xFFFF" rwaccess="RW"></bitfield>
</register>
     <register id="DEV_ID " acronym="DEV_ID " offset="0x1000" width="32" description="Device Identity CAR  ">
<bitfield id="DEVICEIDENTITY" width="16" begin="31" end="16" resetval="0" description="Identifies the type of device. Vendor specific" range="" rwaccess="R"></bitfield>
<bitfield id="DEVICE_VENDORIDENTITY" width="16" begin="15" end="0" resetval="48" description="Device Vendor ID assigned by RapidIO TA" range="" rwaccess="R"></bitfield>
</register>
     <register id="DEV_INFO" acronym="DEV_INFO" offset="0x1004" width="32" description="Device Information CAR">
<bitfield id="DEVICEREV" width="32" begin="31" end="0" resetval="0" description="Vendor supply device revision" range="" rwaccess="R"></bitfield>
</register>
     <register id="ASBLY_ID " acronym="ASBLY_ID " offset="0x1008" width="32" description="Assembly Identity CAR  ">
<bitfield id="ASSY_IDENTITY" width="16" begin="31" end="16" resetval="0" description="Assembly Identifier. Vendor Specific" range="" rwaccess="R"></bitfield>
<bitfield id="ASSY_VENDORIDENTITY" width="16" begin="15" end="0" resetval="48" description="Assembly Vendor Identifier assigned by RapidIO TA." range="" rwaccess="R"></bitfield>
</register>
     <register id="ASBLY_INFO" acronym="ASBLY_INFO" offset="0x100C" width="32" description="Assembly Information CAR">
<bitfield id="ASSYREV" width="16" begin="31" end="16" resetval="0" description="Assembly revision level" range="" rwaccess="R"></bitfield>
<bitfield id="EXTENDEDFEATURESPTR" width="16" begin="15" end="0" resetval="256" description="Pointer to first entry in extended features list" range="" rwaccess="R"></bitfield>
</register>
     <register id="PE_FEAT " acronym="PE_FEAT " offset="0x1010" width="32" description="Processing Element Features CAR">
<bitfield id="BRIDGE" width="1" begin="31" end="31" resetval="0" description="PE can bridge to another interface. Examples are PCI, proprietary processor buses, DRAM, etc. " range="" rwaccess="R"></bitfield>
<bitfield id="MEMORY" width="1" begin="30" end="30" resetval="0" description="PE has physically addressable local address space and can be accessed as an end point through non-maintenance (i.e. non-coherent read and write) operations. This local address space may be limited to local configuration registers, or could be on-chip SRAM, etc. " range="" rwaccess="R"></bitfield>
<bitfield id="PROCESSOR" width="1" begin="29" end="29" resetval="1" description="PE physically contains a local processor or similar device that executes code. A device that bridges to an interface that connects to a processor does not count " range="" rwaccess="R"></bitfield>
<bitfield id="SWITCH" width="1" begin="28" end="28" resetval="0" description="PE can bridge to another external RapidIO interface - an internal port to a local end point does not count as a switch port. For example, a device with two RapidIO ports and a local end point is a two port switch, not a three port switch, regardless of the internal architecture" range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_5" width="20" begin="27" end="8" resetval="1" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="FLOW_CONTROL_SUPPORT" width="1" begin="7" end="7" resetval="0" description="PE supports congestion flow control mechanism                                           0b1  PE supports flow control" range="" rwaccess="R"></bitfield>
<bitfield id="RETRANSMIT_SUPPRESS" width="1" begin="6" end="6" resetval="0" description="PE supports suppression of error recovery on packet CRC errors.0b1  PE supports suppression" range="" rwaccess="R"></bitfield>
<bitfield id="CRF_SUPPORT" width="1" begin="5" end="5" resetval="0" description="This bit indicates PE support for the Critical Request Flow (CRF) Function       0b1  PE supports CRF Function" range="" rwaccess="R"></bitfield>
<bitfield id="LARGE_SUPPORT" width="1" begin="4" end="4" resetval="0" description="Support of common transport large systems. 0b0  PE does not support common transport large systems 0b1  PE supports common transport large systems" range="" rwaccess="R"></bitfield>
<bitfield id="EXTENDED_FEATURES" width="1" begin="3" end="3" resetval="1" description="PE has extended features list; the extended features pointer is valid" range="" rwaccess="R"></bitfield>
<bitfield id="EXTENDED_ADDRESSING_SUPPORT" width="3" begin="2" end="0" resetval="1" description="Indicates the number address bits supported by the PE both as a source and target of an operation. All PEs shall at minimum support 34 bit addresses.     0b111 - PE supports 66, 50 and 34 bit addresses                                           0b101 - PE supports 66 and 34 bit addresses                                              0b011 - PE supports 50 and 34 bit addresses                                              0b001 - PE supports 34 bit addresses All other encodings reserved " range="" rwaccess="R"></bitfield>
</register>
     <register id="SRC_OP" acronym="SRC_OP" offset="0x1018" width="32" description="Source Operations CAR">
<bitfield id="_RESV_1" width="14" begin="31" end="18" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="IMPLMNT_DEFINED_2" width="2" begin="17" end="16" resetval="0" description="Defined by the device implementation" range="" rwaccess="R"></bitfield>
<bitfield id="READ" width="1" begin="15" end="15" resetval="0" description="PE can support a read operation" range="" rwaccess="R"></bitfield>
<bitfield id="WRITE" width="1" begin="14" end="14" resetval="0" description="PE can support a write operation" range="" rwaccess="R"></bitfield>
<bitfield id="STREAM_WRITE" width="1" begin="13" end="13" resetval="0" description="PE can support a streaming-write operation" range="" rwaccess="R"></bitfield>
<bitfield id="WRITE_WITH_RESP" width="1" begin="12" end="12" resetval="0" description="PE can support a write-with-response operation" range="" rwaccess="R"></bitfield>
<bitfield id="DATA_MESS" width="1" begin="11" end="11" resetval="0" description="PE can support a data message operation" range="" rwaccess="R"></bitfield>
<bitfield id="DOORBELL" width="1" begin="10" end="10" resetval="0" description="PE can support a doorbell operation" range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_9" width="1" begin="9" end="9" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ATOMIC_TEST_AND_SWAP" width="1" begin="8" end="8" resetval="0" description="PE can support an atomic test-and-swap operation" range="" rwaccess="R"></bitfield>
<bitfield id="ATOMIC_INCRMNT" width="1" begin="7" end="7" resetval="0" description="PE can support an atomic increment operation" range="" rwaccess="R"></bitfield>
<bitfield id="ATOMIC_DCRMNT" width="1" begin="6" end="6" resetval="0" description="PE can support an atomic decrement operation" range="" rwaccess="R"></bitfield>
<bitfield id="ATOMIC_SET" width="1" begin="5" end="5" resetval="0" description="PE can support an atomic set operation" range="" rwaccess="R"></bitfield>
<bitfield id="ATOMIC_CLEAR" width="1" begin="4" end="4" resetval="0" description="PE can support an atomic clear operation" range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_15" width="1" begin="3" end="3" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="PORT_WRITE" width="1" begin="2" end="2" resetval="1" description="PE can support a port-write generation" range="" rwaccess="R"></bitfield>
<bitfield id="IMPLMNT_DEFINED_1" width="2" begin="1" end="0" resetval="0" description="Defined by the device implementation" range="" rwaccess="R"></bitfield>
</register>
     <register id="DEST_OP" acronym="DEST_OP" offset="0x101C" width="32" description="Destination Operations CAR">
<bitfield id="_RESV_1" width="14" begin="31" end="18" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="IMPLMNT_DEFINED_2" width="2" begin="17" end="16" resetval="0" description="Defined by the device implementation" range="" rwaccess="R"></bitfield>
<bitfield id="READ" width="1" begin="15" end="15" resetval="0" description="PE can support a read operation" range="" rwaccess="R"></bitfield>
<bitfield id="WRITE" width="1" begin="14" end="14" resetval="0" description="PE can support a write operation" range="" rwaccess="R"></bitfield>
<bitfield id="STREAM_WRITE" width="1" begin="13" end="13" resetval="0" description="PE can support a streaming-write operation" range="" rwaccess="R"></bitfield>
<bitfield id="WRITE_WITH_RESP" width="1" begin="12" end="12" resetval="0" description="PE can support a write-with-response operation" range="" rwaccess="R"></bitfield>
<bitfield id="DATA_MESS" width="1" begin="11" end="11" resetval="0" description="PE can support a data message operation" range="" rwaccess="R"></bitfield>
<bitfield id="DOORBELL" width="1" begin="10" end="10" resetval="0" description="PE can support a doorbell operation" range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_9" width="1" begin="9" end="9" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ATOMIC_TEST_AND_SWAP" width="1" begin="8" end="8" resetval="0" description="PE can support an atomic test-and-swap operation" range="" rwaccess="R"></bitfield>
<bitfield id="ATOMIC_INCRMNT" width="1" begin="7" end="7" resetval="0" description="PE can support an atomic increment operation" range="" rwaccess="R"></bitfield>
<bitfield id="ATOMIC_DCRMNT" width="1" begin="6" end="6" resetval="0" description="PE can support an atomic decrement operation" range="" rwaccess="R"></bitfield>
<bitfield id="ATOMIC_SET" width="1" begin="5" end="5" resetval="0" description="PE can support an atomic set operation" range="" rwaccess="R"></bitfield>
<bitfield id="ATOMIC_CLEAR" width="1" begin="4" end="4" resetval="0" description="PE can support an atomic clear operation" range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_15" width="1" begin="3" end="3" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="PORT_WRITE" width="1" begin="2" end="2" resetval="1" description="PE can support a port-write generation" range="" rwaccess="R"></bitfield>
<bitfield id="IMPLMNT_DEFINED_1" width="2" begin="1" end="0" resetval="0" description="Defined by the device implementation" range="" rwaccess="R"></bitfield>
</register>
     <register id="PE_LL_CTL" acronym="PE_LL_CTL" offset="0x104C" width="32" description="Processing Element Logical Layer Control CSR">
<bitfield id="_RESV_1" width="29" begin="31" end="3" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="EXTENDED_ADDRESSING_CONTROL" width="3" begin="2" end="0" resetval="1" description="Controls the number of address bits generated by the PE as a source and processed by the PE as the target of an operation. 0b100 - PE supports 66 bit addresses  0b010 - PE supports 50 bit addresses 0b001 - PE supports 34 bit addresses (default) All other encodings reserved " range="" rwaccess="RW">
<bitenum id="66BIT" value="4" token="66BIT" description="PE supports 66 bit addresses " />
<bitenum id="50BIT" value="2" token="50BIT" description="PE supports 50 bit addresses " />
<bitenum id="34BIT" value="1" token="34BIT" description="PE supports 34 bit addresses " />
</bitfield>
</register>
     <register id="LCL_CFG_HBAR" acronym="LCL_CFG_HBAR" offset="0x1058" width="32" description="Local Configuration Space Base Address 0 CSR">
<bitfield id="_RESV_1" width="1" begin="31" end="31" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="LCSBA" width="31" begin="30" end="0" resetval="0" description="For bits 30 to 15 Reserved for 34b addresses                                                                 Reserved for 50b addresses Bits 66-51 of a 66b address  For bits 14 to 0 Reserved for 34b addresses                                                                        Bits 50-36 of a 50b address Bits 50-36 of a 66b address" range="0x00000000 - 0xFFFFFFFF" rwaccess="R"></bitfield>
</register>
     <register id="LCL_CFG_BAR" acronym="LCL_CFG_BAR" offset="0x105C" width="32" description="Local Configuration Space Base Address 1 CSR">
<bitfield id="LCSBA" width="32" begin="31" end="0" resetval="0" description="For bit 31 Reserved for 34b addresses                                                                              Bit 35 of a 50b address Bit 35 of a 66b address  For bits 30 to 0 Bits 34-3 of a 34b address, Bits 35-3 of a 50b address Bits 35-3 of a 66b address" range="" rwaccess="R"></bitfield>
</register>
     <register id="BASE_ID" acronym="BASE_ID" offset="0x1060" width="32" description="Base Device ID CSR">
<bitfield id="_RESV_1" width="8" begin="31" end="24" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="BASE_DEVICEID" width="8" begin="23" end="16" resetval="255" description="This is the base ID of the device in small common transport system (End points only)" range="" rwaccess="RW"></bitfield>
<bitfield id="LARGE_BASE_DEVICEID" width="16" begin="15" end="0" resetval="65535" description="This is the base ID of the device in a large common transport system (Only valid for end points, and if bit 4 of the PEFTR register is set)" range="" rwaccess="RW"></bitfield>
</register>
     <register id="HOST_BASE_ID_LOCK" acronym="HOST_BASE_ID_LOCK" offset="0x1068" width="32" description="Host Base Device ID Lock CSR">
<bitfield id="_RESV_1" width="16" begin="31" end="16" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="HOST_BASE_DEVICEID" width="16" begin="15" end="0" resetval="65535" description="This is the base ID for the Host PE that is initializing this PE" range="" rwaccess="RW"></bitfield>
</register>
     <register id="COMP_TAG" acronym="COMP_TAG" offset="0x106C" width="32" description="Component Tag CSR">
<bitfield id="COMPONENT_TAG" width="32" begin="31" end="0" resetval="0" description="Software defined component Tag for PE.  Useful for devices without device IDs" range="0x00000000 - 0xFFFFFFFF" rwaccess="RW"></bitfield>
</register>
     <register id="SP_MB_HEAD" acronym="SP_MB_HEAD" offset="0x1100" width="32" description="1x/4x LP-Serial Port Maintenance Block Header">
<bitfield id="EF_PTR" width="16" begin="31" end="16" resetval="4096" description="Hard wired pointer to the next block in the data structure." range="" rwaccess="R"></bitfield>
<bitfield id="EF_ID" width="16" begin="15" end="0" resetval="1" description="Hard-wired extended features ID, 0x0001 - general endpoint device 0x0002 - general endpoint device with software               assisted error recovery option. 0x0003 - Switch " range="" rwaccess="R"></bitfield>
</register>
     <register id="SP_LT_CTL" acronym="SP_LT_CTL" offset="0x1120" width="32" description="Port Link Time-Out Control CSR">
<bitfield id="TIMEOUT_VALUE" width="24" begin="31" end="8" resetval="16777215" description="Timeout value for all ports on the device.  This timeout is for link events such as sending a packet to receiving the corresponding ACK.  Max value represents 3-6 seconds.Timeout duration = 205nS * Timeout Value;  Where, Timeout value is the decimal representation of this register value.  FFFFFFh = 3.4 seconds 0FFFFFh = 215 ms 00FFFFh = 13.4 ms 000FFFh = 839.5 us 0000FFh = 52.3 us 00000Fh = 3.1 us 000001h = 205 ns for simulation only 000000h = Timer disabled " range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_2" width="8" begin="7" end="0" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
</register>
     <register id="SP_RT_CTL" acronym="SP_RT_CTL" offset="0x1124" width="32" description="Port Response Time-Out Control CSR">
<bitfield id="TIMEOUT_VALUE" width="24" begin="31" end="8" resetval="16777215" description="Timeout value for all ports on the device.  This timeout is for sending a packet to receiving the corresponding response packet.  Max value represents 3-6 seconds.  The timeout duration can be expressed as:Timeout = 15 * ((Prescale value + 1) * DMA clock period * Timeout Value)  Where, Prescale value is set in 0x0020 PSCR and the Timeout value is the decimal representation of this register value. " range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_2" width="8" begin="7" end="0" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
</register>
     <register id="SP_GEN_CTL" acronym="SP_GEN_CTL" offset="0x113C" width="32" description="Port General Control CSR">
<bitfield id="HOST" width="1" begin="31" end="31" resetval="0" description="A Host device is a device that is responsible for system exploration, initialization, and maintenance. Agent or slave devices are typically initialized by Host devices. 0b0 - agent or slave device 0b1  host device " range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Agent or Slave device" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Host device" />
</bitfield>
<bitfield id="MASTER_ENABLE" width="1" begin="30" end="30" resetval="0" description="The Master Enable bit controls whether or not a device is allowed to issue requests into the system. If the Master Enable is not set, the device may only respond to requests.                                                                                   0b0 - processing element cannot issue requests                                             0b1 - processing element can issue requests" range="" rwaccess="RW"></bitfield>
<bitfield id="DISCOVERED" width="1" begin="29" end="29" resetval="0" description="This device has been located by the processing element responsible for system configuration                                                                                               0b0 - The device has not been previously discovered 0b1 - The device has been discovered by another processing element " range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_4" width="29" begin="28" end="0" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
</register>
     <register id="ERR_RPT_BH " acronym="ERR_RPT_BH " offset="0x2000" width="32" description="Error Reporting Block Header">
<bitfield id="EF_PTR" width="16" begin="31" end="16" resetval="0" description="Hard wired pointer to the next block in the data structure. NONE EXISTS" range="" rwaccess="R"></bitfield>
<bitfield id="EF_ID" width="16" begin="15" end="0" resetval="7" description="Hard wired Extended Features ID" range="" rwaccess="R"></bitfield>
</register>
     <register id="ERR_DET " acronym="ERR_DET " offset="0x2008" width="32" description="Logical/Transport Layer Error Detect CSR">
<bitfield id="IO_ERR_RSPNS" width="1" begin="31" end="31" resetval="0" description="Received a response of 'ERROR' for an IO Logical Layer Request. (end point device only) Write 0 to clear" range="" rwaccess="RW"></bitfield>
<bitfield id="MSG_ERR_RSPNS" width="1" begin="30" end="30" resetval="0" description="Received a response of 'ERROR' for an MSG Logical Layer Request. (end point device only) Write 0 to clear" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_3" width="1" begin="29" end="29" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ERR_MSG_FORMAT" width="1" begin="28" end="28" resetval="0" description="Received MESSAGE packet data payload with an invalid size or segment (MSG logical) (end point device only)Write 0 to clear" range="" rwaccess="RW"></bitfield>
<bitfield id="ILL_TRANS_DECODE" width="1" begin="27" end="27" resetval="0" description="" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_6" width="1" begin="26" end="26" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="MSG_REQ_TIMEOUT" width="1" begin="25" end="25" resetval="0" description="A required message request has not been received within the specified time-out interval (MSG logical) (end point device only) Write 0 to clear" range="" rwaccess="RW"></bitfield>
<bitfield id="PKT_RSPNS_TIMEOUT" width="1" begin="24" end="24" resetval="0" description="A required response has not been received within the specified timeout interval (IO/MSG/GSM logical) (end point device only) Write 0 to clear" range="" rwaccess="RW"></bitfield>
<bitfield id="UNSOLICITED_RSPNS" width="1" begin="23" end="23" resetval="0" description="An unsolicited/unexpected Response packet was received (IO/MSG/GSM logical; only Maintenance response for switches) (switch or endpoint device)  Write 0 to clear" range="" rwaccess="RW"></bitfield>
<bitfield id="UNSUPPORTED_TRANS" width="1" begin="22" end="22" resetval="0" description="A transaction is received that is not supported in the Destination Operations CAR (IO/MSG/GSM logical; only Maintenance port-write for switches) (switch or endpoint device)  Write 0 to clear" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_11" width="14" begin="21" end="8" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="RX_CPPI_SECURITY" width="1" begin="7" end="7" resetval="0" description="Access to one of the RX queues was blocked Write 0 to clear" range="" rwaccess="RW"></bitfield>
<bitfield id="RX_IO_DMA_ACCESS" width="1" begin="6" end="6" resetval="0" description="DMA access to MAU was blocked Write 0 to clear" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_14" width="6" begin="5" end="0" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
</register>
     <register id="ERR_EN" acronym="ERR_EN" offset="0x200C" width="32" description="Logical/Transport Layer Error Enable CSR">
<bitfield id="IO_ERR_RESP_ENABLE" width="1" begin="31" end="31" resetval="0" description="Enable reporting of an IO error response. Save and Lock capture information in appropriate Logical/Transport Layer Capture CSRs. (end point device only)" range="" rwaccess="RW"></bitfield>
<bitfield id="MSG_ERR_RESP_ENABLE" width="1" begin="30" end="30" resetval="0" description="Enable reporting of a Message error response. Save and Lock capture information in appropriate Logical/Transport Layer Capture CSRs.(end point device only)" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_3" width="1" begin="29" end="29" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="ERR_MSG_FORMAT_ENABLE" width="1" begin="28" end="28" resetval="0" description="Enable reporting of a message format error. Save and lock transaction capture information in Logical/Transport Layer Device ID and Control Capture CSRs. (end point device only)" range="" rwaccess="RW"></bitfield>
<bitfield id="ILL_TRANS_DECODE_ENABLE" width="1" begin="27" end="27" resetval="0" description="Enable reporting of an illegal transaction decode error. Save and Lock capture information in Logical/Transport Layer Device ID and Control Capture CSRs. (switch or end-point device) " range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_6" width="1" begin="26" end="26" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="MSG_REQ_TIMEOUT_ENABLE" width="1" begin="25" end="25" resetval="0" description="Enable reporting of a Message Request time-out error. Save and lock transaction capture information in Logical/Transport Layer Device ID and Control Capture CSRs for the last Message request segment packet received. (end point device only)" range="" rwaccess="RW"></bitfield>
<bitfield id="PKT_RESP_TIMEOUT_ENABLE" width="1" begin="24" end="24" resetval="0" description="Enable reporting of a packet response time-out error. Save and lock original request address in Logical/Transport Layer Address Capture CSRs. Save and lock original request Destination ID in Logical/Transport Layer Device ID Capture CSR. (end point device only)." range="" rwaccess="RW"></bitfield>
<bitfield id="UNSOLICITED_RESP_ENABLE" width="1" begin="23" end="23" resetval="0" description="Enable reporting of an unsolicited response error. Save and Lock capture information in Logical/Transport Layer Device ID and Control Capture CSRs. (switch or end-point device)" range="" rwaccess="RW"></bitfield>
<bitfield id="UNSUPPORTED_TRANS_ENABLE" width="1" begin="22" end="22" resetval="0" description="Enable reporting of an unsupported transaction error. Save and Lock capture information in Logical/Transport Layer Device ID and Control Capture CSRs. (switch or end-point device)" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_11" width="14" begin="21" end="8" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="RX_CPPI_SECURITY" width="1" begin="7" end="7" resetval="0" description="Enable reporting of attempt at unauthorized access to a RX queue. Save and Lock capture information in appropriate Logical/Transport Layer Capture CSRs. " range="" rwaccess="RW"></bitfield>
<bitfield id="RX_IO_SECURITY" width="1" begin="6" end="6" resetval="0" description="Enable reporting of attempt at unauthorized memory location access. Save and Lock capture information in appropriate Logical/Transport Layer Capture CSRs." range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_14" width="6" begin="5" end="0" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
</register>
     <register id="H_ADDR_CAPT " acronym="H_ADDR_CAPT " offset="0x2010" width="32" description="Logical/Transport Layer High Address Capture CSR">
<bitfield id="ADDRESS_63_32" width="32" begin="31" end="0" resetval="0" description="Most Significant 32 bits of the address associated with the error(only valid for devices supporting 66 and 50 bit addresses) " range="" rwaccess="R"></bitfield>
</register>
     <register id="ADDR_CAPT" acronym="ADDR_CAPT" offset="0x2014" width="32" description="Logical/Transport Layer Address Capture CSR">
<bitfield id="ADDRESS_31_3" width="29" begin="31" end="3" resetval="0" description="Least Significant 29 bits of the address associated with the error" range="" rwaccess="R"></bitfield>
<bitfield id="_RESV_2" width="1" begin="2" end="2" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="XAMSBS" width="2" begin="1" end="0" resetval="0" description="Extended address bits of the address associated with the error" range="" rwaccess="R"></bitfield>
</register>
     <register id="ID_CAPT " acronym="ID_CAPT " offset="0x2018" width="32" description="Logical/Transport Layer Device ID  Capture CSR">
<bitfield id="MSB_DESTID" width="8" begin="31" end="24" resetval="0" description="Most significant byte of the destinationID associated with the error (large transport systems only) " range="" rwaccess="R"></bitfield>
<bitfield id="DESTID" width="8" begin="23" end="16" resetval="0" description="The destinationID associated with the error" range="" rwaccess="R"></bitfield>
<bitfield id="MSB_SOURCEID" width="8" begin="15" end="8" resetval="0" description="Most significant byte of the source ID associated with the error (large transport systems only)" range="" rwaccess="R"></bitfield>
<bitfield id="SOURCEID" width="8" begin="7" end="0" resetval="0" description="The sourceID associated with the error" range="" rwaccess="R"></bitfield>
</register>
     <register id="CTRL_CAPT" acronym="CTRL_CAPT" offset="0x201C" width="32" description="Logical/Transport Layer Control Capture CSR">
<bitfield id="FTYPE" width="4" begin="31" end="28" resetval="0" description="Format type associated with the error" range="" rwaccess="R"></bitfield>
<bitfield id="TTYPE" width="4" begin="27" end="24" resetval="0" description="Transaction type associated with the error" range="" rwaccess="R"></bitfield>
<bitfield id="MSGINFO" width="8" begin="23" end="16" resetval="0" description="letter, mbox, and msgseg for the last Message request received for the mailbox that had an error (Message errors only)" range="" rwaccess="R"></bitfield>
<bitfield id="IMP_SPECIFIC" width="16" begin="15" end="0" resetval="0" description="Implementation specific information associated with the error" range="" rwaccess="R"></bitfield>
</register>
     <register id="PW_TGT_ID " acronym="PW_TGT_ID " offset="0x2028" width="32" description="Port-Write Target Device ID CSR">
<bitfield id="DEVICEID_MSB" width="8" begin="31" end="24" resetval="0" description="This is the most significant byte of the port-write target device ID (large transport systems only)" range="" rwaccess="RW"></bitfield>
<bitfield id="DEVICEID" width="8" begin="23" end="16" resetval="0" description="This is the port-write target deviceID" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_3" width="16" begin="15" end="0" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
</register>
     <register id="SP_IP_DISCOVERY_TIMER" acronym="SP_IP_DISCOVERY_TIMER" offset="0x12000" width="32" description="Port IP Discovery Timer in 4x mode">
<bitfield id="DISCOVERY_TIMER" width="4" begin="31" end="28" resetval="9" description="Discovery Timer in 4x mode. The discovery-timer allows time for the link partner to enter its DISCOVERY state and if the link partner is supporting 4x mode, for all 4 lanes to be aligned. 0000b: 102.4pS, for debug  only 0001b: 0.84ms 0010b: 0.84ms * 2 = 1.68ms .. 1001b: 0.84ms * 9= 7.56ms (default) ... 1111b: 0.84ms *15= 12.6ms " range="0x0 to 0xF" rwaccess="RW"></bitfield>
<bitfield id="_RESV_2" width="4" begin="27" end="24" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="PW_TIMER" width="4" begin="23" end="20" resetval="8" description="Port-Write Timer . The timer defines a period to repeat sending an error reporting Port-Write request for software assistance. The timer stopped by software writing to the error detect registers 0000b: Disabled. Port-Write is sent once only 0001b: 107ms - 214ms 0010b: 214ms - 321ms 0100b: 428ms - 535ms 1000b: 856ms - 963ms (default) 1111b: 0.82-1.64us -for debug only Other  reserved" range="" rwaccess="RW"></bitfield>
<bitfield id="_RESV_4" width="20" begin="19" end="0" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
</register>
     <register id="SP_IP_MODE" acronym="SP_IP_MODE" offset="0x12004" width="32" description="Port IP Mode CSR">
<bitfield id="SP_MODE" width="2" begin="31" end="30" resetval="0" description="SRIO Port IP Mode of operation:  00 - 1x/4x LP-Serial RapidIO Specification  01 - 4 ports (1x mode each)  10 - reserved  11 - reserved  " range="" rwaccess="R"></bitfield>
<bitfield id="IDLE_ERR_DIS" width="1" begin="29" end="29" resetval="0" description="IDLE Error checking disable  1 - error checking disabled, all not idle or invalid  characters during idle sequence are ignored  0 - error checking enabled (default), only |K|, |A| and |R| characters are available. If input receive any other characters in idle sequence it should enter the Input-Error-stopped state  " range="" rwaccess="RW">
<bitenum id="DISABLE" value="1" token="DISABLE" description="Error checking disabled" />
<bitenum id="ENABLE" value="0" token="ENABLE" description="Error checking enabled" />
</bitfield>
<bitfield id="TX_FIFO_BYPASS" width="1" begin="28" end="28" resetval="0" description="TX_ FIFO_BYPASS 0  The TX_FIFO is operational (Default) 1 - Transmit FIFO is bypassed The txbclk and the sys_clk maust be locked during operation, but the phase variation up to 1 clock cycle is allowable. The 4 deep FIFO is used to accommodate the phase difference" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="The TX_FIFO is operational (Default) " />
<bitenum id="ENABLE" value="1" token="ENABLE" description="The TX_FIFO is bypassed" />
</bitfield>
<bitfield id="PW_DIS" width="1" begin="27" end="27" resetval="0" description="Port_Write Disable  0 = Port-Write Error reporting is enabled(default) 1 = Port-Write is disabled " range="" rwaccess="RW">
<bitenum id="DISABLE" value="1" token="DISABLE" description="Disable Port-Write Error reporting" />
<bitenum id="ENABLE" value="0" token="ENABLE" description="Enable Port-Write Error reporting " />
</bitfield>
<bitfield id="TGT_ID_DIS" width="1" begin="26" end="26" resetval="0" description="Destination ID Decode Disable - Definition of packet acception by the physical layer   0 -packet accepted if DestID = Base ID When DestID is not equal to Base ID, the packet is ignored, i.e. it accepted by RapidIO port but is not forwarded to logical layer 1 - packet accepted with any DestID and forwarded to the logical layer. " range="" rwaccess="R"></bitfield>
<bitfield id="SELF_RST" width="1" begin="25" end="25" resetval="0" description="Self reset enable, when 4 Link-Request Reset Control Symbols are accepted  0 = Disable (Default),interrupt signal is asserted  1 = Enable, the reset signal is asserted by the SRIO_TE reset controller. The SRIO_TE configuration registers are set to the default value after reset and loose a boot initialization values. " range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Self reset interrupt disable" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Self reset interrupt enable" />
</bitfield>
<bitfield id="F8_TGT_ID_DIS" width="1" begin="24" end="24" resetval="1" description="Physical Layer Disable. This bit only disables the Ftype8 (Maintenance Packet) checking at the physical layer" range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Non-matching Ftype8 packets are forwarded to MAC layer." />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Regardless of Ftype8 packet destination ID, the physical layer accepts and handles the Maintenance request packets." />
</bitfield>
<bitfield id="_RESV_8" width="18" begin="23" end="6" resetval="0" description="" range="" rwaccess="N"></bitfield>
<bitfield id="MLTC_EN" width="1" begin="5" end="5" resetval="0" description="Multicast-Event Interrupt Enable . If enabled, the interrupt signal is High when the Multicast-Event control symbol is received by any port. " range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Multicast interrupt disable" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Multicast interrupt enable" />
</bitfield>
<bitfield id="MLTC_IRQ" width="1" begin="4" end="4" resetval="0" description="Multicast-Event Interrupt Status bit.It is High when the Multicast-Event control symbol is received by any port. Once set, remains set until written with logic 1 to clear. The mltc_irq output signal is driven by this bit " range="" rwaccess="RC"></bitfield>
<bitfield id="RST_EN" width="1" begin="3" end="3" resetval="0" description="Reset Interrupt Enable . If enabled, the interrupt signal is High when the 4 reset control symbols are received in a sequence " range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Reset interrupt disable" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Reset interrupt enable" />
</bitfield>
<bitfield id="RST_CS" width="1" begin="2" end="2" resetval="0" description="Reset received status bit. It is set when 4 reset control symbols are received in a sequence. Once set, remains set until written with logic 1 to clear. The rst_irq output signal is driven by this bit " range="" rwaccess="RC"></bitfield>
<bitfield id="PW_EN" width="1" begin="1" end="1" resetval="0" description="Port-Write-In Interrupt Enable . If enabled, the interrupt signal is High when the Port-Write_In request is received " range="" rwaccess="RW">
<bitenum id="DISABLE" value="0" token="DISABLE" description="Port-Write-In interrupt disable" />
<bitenum id="ENABLE" value="1" token="ENABLE" description="Port-Write-In interrupt enable" />
</bitfield>
<bitfield id="PW_IRQ" width="1" begin="0" end="0" resetval="0" description="Port-Write-In Request interrupt is set when the Port-Write_In request is received. The payload is captured. Once set, remains set until written with logic 1 to clear. The pw_irq output signal is driven by this bit " range="" rwaccess="RC"></bitfield>
</register>
     <register id="IP_PRESCAL" acronym="IP_PRESCAL" offset="0x12008" width="32" description="Serial Port IP Prescalar">
<bitfield id="_RESV_1" width="24" begin="31" end="8" resetval="0" description="Reserved" range="" rwaccess="N"></bitfield>
<bitfield id="PRESCALE" width="8" begin="7" end="0" resetval="15" description="For different frequencies of the DMA clock, use the formula: [DMA freq * 16/156.25 - 1] to get the prescalar value in decimal, where DMA freq is in MHz  06h - 66.67 MHz 09h - 100MHz 10h - 166.67MHz -- 18h - 250MHz -- 21h  333Mhz " range="" rwaccess="RW"></bitfield>
</register>
     <register id="SP_IP_PW_IN_CAPT[4]" acronym="SP_IP_PW_IN_CAPT[4]" offset="0x12010" width="32" description="Port-Write-In Capture CSR">
<bitfield id="PW_CAPT" width="32" begin="31" end="0" resetval="0" description="Port-Write payload: word n" range="" rwaccess="R"></bitfield>
</register>
</module>
