<module name="CALC3_BFSW_ICONT" acronym="" XML_version="1.0" HW_revision="n/a" description="">
  <register id="VIEWMODE" acronym="VIEWMODE" offset="0x0" width="32" description="View mode register. It selects full-view mode or ping-pong view mode.">
    <bitfield id="RSRV" width="30" begin="31" end="2" resetval="0x0000 0000" description="Reserved. 0 will be returned at Read, and Write will be ignored." range="" rwaccess="R"/>
    <bitfield id="VIEW_CALCROBUF" width="1" begin="1" end="1" resetval="0" description="View mode selection for CALCROBUF. When 0, full view mode is selected. When 1, ping-pong view mode is selected." range="" rwaccess="RW"/>
    <bitfield id="VIEW_CALCRPBUF" width="1" begin="0" end="0" resetval="0" description="View mode selection for CALCRPBUF. When 0, full view mode is selected. When 1, ping-pong view mode is selected." range="" rwaccess="RW"/>
  </register>
  <register id="MSTID1" acronym="MSTID1" offset="0x4" width="32" description="Master ID 1 Register Select master between HWA and DMA bus. This register is used in both full view and ping-pong view mode. This register is for buffers which has two physical memories. This register is affected by direct_switch_pi input port.">
    <bitfield id="RSRV" width="28" begin="31" end="4" resetval="0x0000000" description="Reserved. 0 will be returned at Read, and Write will be ignored." range="" rwaccess="R"/>
    <bitfield id="MST_CALCROBUF_B" width="1" begin="3" end="3" resetval="0" description="Master selection for CALCROBUF B. This bit is used in only ping-pong view mode. when 0, buffer B is assigned to DMA when 1, buffer B is assigned to HWA. This bit has no effect in full view mode. If direct_switch_pi is high, the value of this bit is inverted." range="" rwaccess="RW"/>
    <bitfield id="MST_CALCROBUF_A" width="1" begin="2" end="2" resetval="0" description="Master selection for CALCROBUF A. This bit is used in both full view and ping-pong view mode. In full view mode, when 0, both buffer A and B are assigned to DMA when 1, both buffer A and B are assigned to HWA. In ping-pong view mode, when 0, buffer A is assigned to DMA when 1, buffer A is assigned to HWA. (Buffer B is not affected in ping-pong view mode.) If direct_switch_pi is high, the value of this bit is inverted." range="" rwaccess="RW"/>
    <bitfield id="MST_CALCRPBUF_B" width="1" begin="1" end="1" resetval="0" description="Master selection for CALCRPBUF B. This bit is used in only ping-pong view mode. when 0, buffer B is assigned to DMA when 1, buffer B is assigned to HWA. This bit has no effect in full view mode. If direct_switch_pi is high, the value of this bit is inverted." range="" rwaccess="RW"/>
    <bitfield id="MST_CALCRPBUF_A" width="1" begin="0" end="0" resetval="0" description="Master selection for CALCRPBUF A. This bit is used in both full view and ping-pong view mode. In full view mode, when 0, both buffer A and B are assigned to DMA when 1, both buffer A and B are assigned to HWA. In ping-pong view mode, when 0, buffer A is assigned to DMA when 1, buffer A is assigned to HWA. (Buffer B is not affected in ping-pong view mode.) If direct_switch_pi is high, the value of this bit is inverted." range="" rwaccess="RW"/>
  </register>
  <register id="MSTID2" acronym="MSTID2" offset="0x8" width="32" description="Master ID 1 Register Select master between HWA and DMA bus. This register is for buffers which has only one physical memory. This register is NOT affected by direct_switch_pi input port.">
    <bitfield id="RSRV" width="30" begin="31" end="2" resetval="0x0000 0000" description="Reserved. 0 will be returned at Read, and Write will be ignored." range="" rwaccess="R"/>
    <bitfield id="MST_CALCWBUF" width="1" begin="1" end="1" resetval="0" description="Master selection for CALCWBUF. when 0, the buffer is assigned to DMA when 1, the buffer is assigned to HWA." range="" rwaccess="RW"/>
    <bitfield id="MST_CALCQBUF" width="1" begin="0" end="0" resetval="0" description="Master selection for CALCQBUF. when 0, the buffer is assigned to DMA when 1, the buffer is assigned to HWA." range="" rwaccess="RW"/>
  </register>
</module>
