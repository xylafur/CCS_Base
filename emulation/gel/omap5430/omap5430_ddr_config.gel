/*******************************************************************/ 
/* This GEL file is loaded on the command line of Code Composer    */
/* The StartUp() function is called every time you start           */
/* Code Composer.  You can customize this function to              */
/* initialize wait states or to perform other initialization.      */
/*                                                                 */
/* OMAP5430 ZEBU DDR Config                                        */
/*                                                                 */
/*                                                                 */
/*  Author: Salamito thomas				     		               */
/*******************************************************************/
menuitem "Memory config"
/**********************************************************************
 *
 *  FUNCTIONS
 *
 **********************************************************************/

#define BIT_SWAP_PATTERN	0xA5A5A5A5
#define BLOCK_BURST_PATTERN	0x1
#define BIT_SWAP_SIZE		0x200
#define NUM_OF_OPP_CHG		50


#define HWOBS_CONTROL_REG_ADDR        *(int *) 0x4A002360
#define DEBOBS_FINAL_MUX_SEL_REG_ADDR *(int *) 0x4A002400

#define INFO_PRINT								0
 
 
 

//  memory selection:
//	mem_index==8	=> elpida_EDB8164B3PF1DF	- LPDDR2	- 2x4Gbit	- 1.875ns	(533MHz)	- spec: E1786E10
//	mem_index==9	=> elpida_EDBA164B1PB1DF	- LPDDR2	- 4x4Gbit	- 1.875ns	(533MHz)
//	mem_index==10	=> samsung_K3PE0E000B_XGC2	- LPDDR2	- 4x4Gbit	- 1.875ns	(533MHz)
//  mem_index==300  => ddr3 levelling 532. 

// MEMORY TYPE 
#define ELPIDA_EDB8164B3PF1DF   8 // 2x4Gbit
#define ELPIDA_EDBA164B1PB1DF   9 // 4x4Gbit
#define SAMSUNG_K3PE0E000B_XGC2 10 // 4x4Gbit


#define DDR3_LVL_SEVM_532 300
#define DDR3_LVL_NTEB_532 301
#define DDR3_ZEBU 302

#define ZEBU		11

// OPP 
#define OPP_BOOT    0
#define	OPP_LOW		1
#define	OPP_NOM		2
#define OPP_OD      3
#define OPP_HIGH    4
#define OPP_SB      5
#define OPP_LOW_ABE 6 
#define OPP_ZEBU    7
#define OPP_WAKEUP_DDR_532 8
#define OPP_WAKEUP_DDR_400 9
#define OPP_WAKEUP_DDR_266 10



#define EMIF4D1_BASE_ADDRESS 0x4C000000
#define EMIF4D2_BASE_ADDRESS 0x4D000000
#define MA_LISA__BASE__ADDR  0x482AF000
#define DMM_BASE_ADDRESS     0x4E000000

#define MA_LISA_1_REG(BASE__ADDRESS)  *(unsigned int *)(BASE__ADDRESS + 0x40)
#define MA_LISA_MAP__0__SDRAM_INTERLEAVED_VALUE  0x80740300
#define MA_LISA_MAP__0__SDRAM_EMIF2_ONLY_VALUE  0x80700200 // 0x80700300 
#define MA_LISA_MAP__0__SDRAM_EMIF1_ONLY_VALUE  0x80700100 // 0x80700300  

#define DMM_LISA_MAP_0(BASE_ADDRESS) *(unsigned int *)(BASE_ADDRESS + 0x40)

#define SDRAM_CONFIG(EMIF_BASE_ADDRESS)   *(unsigned int *)(EMIF_BASE_ADDRESS + 0x8)
#define SDRAM_CONFIG_2(EMIF_BASE_ADDRESS)   *(unsigned int *)(EMIF_BASE_ADDRESS + 0xC)
#define SDRAM_REF_CTRL(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x10)
#define SDRAM_REF_CTRL_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x14)
#define SDRAM_TIM_1(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x18)
#define SDRAM_TIM_1_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x1C)
#define SDRAM_TIM_2(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x20)
#define SDRAM_TIM_2_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x24)
#define SDRAM_TIM_3(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x28)
#define SDRAM_TIM_3_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x2C)
#define LPDDR2_NVM_TIM(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x30)
#define LPDDR2_NVM_TIM_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x34)
#define PWR_MGMT_CTRL(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x38)
#define PWR_MGMT_CTRL_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x3C)
#define LPDDR2_MODE_REG_DATA(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x40)
#define LPDDR2_MODE_REG_CONFIG(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x50)
#define OCP_CONFIG(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x54)
#define IODFT_TLGC(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x60)
#define DLL_CALIB_CTRL(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x98)
#define DLL_CALIB_CTRL_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x9C)
#define SDRAM_OUTPUT_ZQ(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0xC8)
#define TEMP_ALERT_CFG(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0xCC)
#define READ_WRITE_LEVELING_RAMP_WINDOW(EMIF_BASE_ADDRESS)  *(unsigned int *)(EMIF_BASE_ADDRESS + 0xD4)
#define READ_WRITE_LEVELING_RAMP_CONTROL(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0xD8)
#define READ_WRITE_LEVELING_CONTROL(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0xDC)
#define DDR_PHY_CTRL_1(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0xE4)
#define DDR_PHY_CTRL_1_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0xE8)
#define DDR_PHY_CTRL_2(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0xEC)
//#define DDR_PHY_CTRL_2_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0xF0)
#define PRI_COS_MAP(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x100)
#define CONNID_COS_1(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x104)
#define CONNID_COS_2(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x108)
#define RD_WR_EXEC_THRESH(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x120)
#define COS_CONFIG(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x124)
#define EXT_PHY_CONTROL_1(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x200)
#define EXT_PHY_CONTROL_1_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x204)
#define EXT_PHY_CONTROL_2(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x208)
#define EXT_PHY_CONTROL_2_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x20C)
#define EXT_PHY_CONTROL_3(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x210)
#define EXT_PHY_CONTROL_3_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x214)
#define EXT_PHY_CONTROL_4(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x218)
#define EXT_PHY_CONTROL_4_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x21C)
#define EXT_PHY_CONTROL_5(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x220)
#define EXT_PHY_CONTROL_5_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x224)
#define EXT_PHY_CONTROL_6(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x228)
#define EXT_PHY_CONTROL_6_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x22C)
#define EXT_PHY_CONTROL_7(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x230)
#define EXT_PHY_CONTROL_7_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x234)
#define EXT_PHY_CONTROL_8(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x238)
#define EXT_PHY_CONTROL_8_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x23C)
#define EXT_PHY_CONTROL_9(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x240)
#define EXT_PHY_CONTROL_9_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x244)
#define EXT_PHY_CONTROL_10(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x248)
#define EXT_PHY_CONTROL_10_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x24C)
#define EXT_PHY_CONTROL_11(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x250)
#define EXT_PHY_CONTROL_11_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x254)
#define EXT_PHY_CONTROL_12(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x258)
#define EXT_PHY_CONTROL_12_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x25C)
#define EXT_PHY_CONTROL_13(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x260)
#define EXT_PHY_CONTROL_13_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x264)
#define EXT_PHY_CONTROL_14(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x268)
#define EXT_PHY_CONTROL_14_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x26C)
#define EXT_PHY_CONTROL_15(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x270)
#define EXT_PHY_CONTROL_15_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x274)
#define EXT_PHY_CONTROL_16(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x278)
#define EXT_PHY_CONTROL_16_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x27C)
#define EXT_PHY_CONTROL_17(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x280)
#define EXT_PHY_CONTROL_17_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x284)
#define EXT_PHY_CONTROL_18(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x288)
#define EXT_PHY_CONTROL_18_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x28C)
#define EXT_PHY_CONTROL_19(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x290)
#define EXT_PHY_CONTROL_19_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x294)
#define EXT_PHY_CONTROL_20(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x298)
#define EXT_PHY_CONTROL_20_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x29C)
#define EXT_PHY_CONTROL_21(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x2A0)
#define EXT_PHY_CONTROL_21_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x2A4)
#define EXT_PHY_CONTROL_22(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x2A8)
#define EXT_PHY_CONTROL_22_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x2AC)
#define EXT_PHY_CONTROL_23(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x2B0)
#define EXT_PHY_CONTROL_23_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x2B4)
#define EXT_PHY_CONTROL_24(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x2B8)
#define EXT_PHY_CONTROL_24_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x2BC)
#define EXT_PHY_CONTROL_25(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x2C0)
#define EXT_PHY_CONTROL_25_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x2C4)
#define EXT_PHY_CONTROL_26(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x2C8)
#define EXT_PHY_CONTROL_26_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x2CC)
#define EXT_PHY_CONTROL_27(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x2D0)
#define EXT_PHY_CONTROL_27_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x2D4)
#define EXT_PHY_CONTROL_28(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x2D8)
#define EXT_PHY_CONTROL_28_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x2DC)
#define EXT_PHY_CONTROL_29(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x2E0)
#define EXT_PHY_CONTROL_29_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x2E4)
#define EXT_PHY_CONTROL_30(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x2E8)
#define EXT_PHY_CONTROL_30_SHDW(EMIF_BASE_ADDRESS) *(unsigned int *)(EMIF_BASE_ADDRESS + 0x2EC)

#define SDRAM_CONFIG_OPP_LOW_ABE_2X4_VALUE			0x808022B2
#define SDRAM_CONFIG_OPP_WAKEUP_DDR_266_2X4_VALUE		0x808022B2
#define SDRAM_CONFIG_OPP_WAKEUP_DDR_400_2X4_VALUE		0x808022B2
#define SDRAM_CONFIG_OPP_WAKEUP_DDR_532_2X4_VALUE		0x808022B2	
#define SDRAM_CONFIG_OPP_LOW_ABE_4X4_VALUE			0x808022BA
#define SDRAM_CONFIG_OPP_WAKEUP_DDR_266_4X4_VALUE		0x808022BA	
#define SDRAM_CONFIG_OPP_WAKEUP_DDR_400_4X4_VALUE		0x808022BA	
#define SDRAM_CONFIG_OPP_WAKEUP_DDR_532_4X4_VALUE		0x808022BA	
#define SDRAM_CONFIG_OPP_LOW_ABE_2X8_VALUE			0x8080233A
#define SDRAM_CONFIG_OPP_WAKEUP_DDR_266_2X8_VALUE		0x8080233A
#define SDRAM_CONFIG_OPP_WAKEUP_DDR_400_2X8_VALUE		0x8080233A
#define SDRAM_CONFIG_OPP_WAKEUP_DDR_532_2X8_VALUE		0x8080233A
#define SDRAM_CONFIG_5432_SEVM_VALUE	                0x61851B32
// #define SDRAM_CONFIG_5432_NTEB_VALUE	                0x61851B3A
#define SDRAM_CONFIG_5432_NTEB_VALUE	                0x61851B32
#define SDRAM_CONFIG_VAL1_ZEBU_5432_VALUE	            0x79A122B2
#define SDRAM_CONFIG_VAL2_ZEBU_5432_VALUE	            0x79A122BA

#define SDRAM_CONFIG_2_OPP_LOW_ABE_2X4_VALUE		0x00000000
#define SDRAM_CONFIG_2_OPP_WAKEUP_DDR_266_2X4_VALUE	0x00000000
#define SDRAM_CONFIG_2_OPP_WAKEUP_DDR_400_2X4_VALUE	0x00000000
#define SDRAM_CONFIG_2_OPP_WAKEUP_DDR_532_2X4_VALUE	0x00000000	
#define SDRAM_CONFIG_2_OPP_LOW_ABE_4X4_VALUE		0x00000000	
#define SDRAM_CONFIG_2_OPP_WAKEUP_DDR_266_4X4_VALUE	0x00000000	
#define SDRAM_CONFIG_2_OPP_WAKEUP_DDR_400_4X4_VALUE	0x00000000	
#define SDRAM_CONFIG_2_OPP_WAKEUP_DDR_532_4X4_VALUE	0x00000000	
#define SDRAM_CONFIG_2_OPP_LOW_ABE_2X8_VALUE		0x00000000
#define SDRAM_CONFIG_2_OPP_WAKEUP_DDR_266_2X8_VALUE	0x00000000
#define SDRAM_CONFIG_2_OPP_WAKEUP_DDR_400_2X8_VALUE	0x00000000
#define SDRAM_CONFIG_2_OPP_WAKEUP_DDR_532_2X8_VALUE	0x00000000
#define SDRAM_CONFIG_2_5432_VALUE	        0x00000000
#define SDRAM_CONFIG_2_ZEBU_5432_VALUE	            0x08000010

#define SDRAM_REF_CTRL_OPP_LOW_ABE_2X4_VALUE		0x00000000
#define SDRAM_REF_CTRL_OPP_WAKEUP_DDR_266_2X4_VALUE	0x0000040D
#define SDRAM_REF_CTRL_OPP_WAKEUP_DDR_400_2X4_VALUE	0x00000618
#define SDRAM_REF_CTRL_OPP_WAKEUP_DDR_532_2X4_VALUE	0x0000081A	
#define SDRAM_REF_CTRL_OPP_LOW_ABE_4X4_VALUE		0x00000000
#define SDRAM_REF_CTRL_OPP_WAKEUP_DDR_266_4X4_VALUE	0x0000040D	
#define SDRAM_REF_CTRL_OPP_WAKEUP_DDR_400_4X4_VALUE	0x00000618	
#define SDRAM_REF_CTRL_OPP_WAKEUP_DDR_532_4X4_VALUE	0x0000081A	
#define SDRAM_REF_CTRL_OPP_LOW_ABE_2X8_VALUE		0x00000000
#define SDRAM_REF_CTRL_OPP_WAKEUP_DDR_266_2X8_VALUE	0x0000040D
#define SDRAM_REF_CTRL_OPP_WAKEUP_DDR_400_2X8_VALUE	0x00000618
#define SDRAM_REF_CTRL_OPP_WAKEUP_DDR_532_2X8_VALUE	0x0000081A
#define SDRAM_REF_CTRL_5432_532_VALUE            0x00001035
#define SDRAM_REF_CTRL_ZEBU_5432_VALUE	            0x12000271

#define SDRAM_REF_CTRL_SHDW_OPP_LOW_ABE_2X4_VALUE		0x00000000
#define SDRAM_REF_CTRL_SHDW_OPP_WAKEUP_DDR_266_2X4_VALUE	0x0000040D
#define SDRAM_REF_CTRL_SHDW_OPP_WAKEUP_DDR_400_2X4_VALUE	0x00000618
#define SDRAM_REF_CTRL_SHDW_OPP_WAKEUP_DDR_532_2X4_VALUE	0x0000081A	// OK
#define SDRAM_REF_CTRL_SHDW_OPP_LOW_ABE_4X4_VALUE		0x00000000
#define SDRAM_REF_CTRL_SHDW_OPP_WAKEUP_DDR_266_4X4_VALUE	0x0000040D	// OK
#define SDRAM_REF_CTRL_SHDW_OPP_WAKEUP_DDR_400_4X4_VALUE	0x00000618	// OK
#define SDRAM_REF_CTRL_SHDW_OPP_WAKEUP_DDR_532_4X4_VALUE	0x0000081A	// OK
#define SDRAM_REF_CTRL_SHDW_OPP_LOW_ABE_2X8_VALUE		0x00000000
#define SDRAM_REF_CTRL_SHDW_OPP_WAKEUP_DDR_266_2X8_VALUE	0x0000040D
#define SDRAM_REF_CTRL_SHDW_OPP_WAKEUP_DDR_400_2X8_VALUE	0x00000618
#define SDRAM_REF_CTRL_SHDW_OPP_WAKEUP_DDR_532_2X8_VALUE	0x0000081A
#define SDRAM_REF_CTRL_SHDW_5432_532_VALUE       0x00001035
#define SDRAM_REF_CTRL_SHDW_ZEBU_5432_VALUE	        0x00000F3D

#define SDRAM_TIM_1_OPP_LOW_ABE_2X4_VALUE		0x00000000
#define SDRAM_TIM_1_OPP_WAKEUP_DDR_266_2X4_VALUE	0x2A86B419
#define SDRAM_TIM_1_OPP_WAKEUP_DDR_400_2X4_VALUE	0x50EB0662
#define SDRAM_TIM_1_OPP_WAKEUP_DDR_532_2X4_VALUE	0x772F6873	// OK
#define SDRAM_TIM_1_OPP_LOW_ABE_4X4_VALUE		0x00000000
#define SDRAM_TIM_1_OPP_WAKEUP_DDR_266_4X4_VALUE	0x2A86B419	// OK
#define SDRAM_TIM_1_OPP_WAKEUP_DDR_400_4X4_VALUE	0x50EB0662	// OK
#define SDRAM_TIM_1_OPP_WAKEUP_DDR_532_4X4_VALUE	0x772F6873	// OK
#define SDRAM_TIM_1_OPP_LOW_ABE_2X8_VALUE		0x00000000
#define SDRAM_TIM_1_OPP_WAKEUP_DDR_266_2X8_VALUE	0x2A86B419
#define SDRAM_TIM_1_OPP_WAKEUP_DDR_400_2X8_VALUE	0x50EB0662
#define SDRAM_TIM_1_OPP_WAKEUP_DDR_532_2X8_VALUE	0x772F6873
#define SDRAM_TIM_1_5432_532_VALUE              0xCCCF36B3
#define SDRAM_TIM_1_ZEBU_5432_VALUE                 0x1F7FCC1D

#define SDRAM_TIM_1_SHDW_OPP_LOW_ABE_2X4_VALUE		0x00000000
#define SDRAM_TIM_1_SHDW_OPP_WAKEUP_DDR_266_2X4_VALUE	0x2A86B419
#define SDRAM_TIM_1_SHDW_OPP_WAKEUP_DDR_400_2X4_VALUE	0x50EB0662
#define SDRAM_TIM_1_SHDW_OPP_WAKEUP_DDR_532_2X4_VALUE	0x772F6873
#define SDRAM_TIM_1_SHDW_OPP_LOW_ABE_4X4_VALUE		0x00000000
#define SDRAM_TIM_1_SHDW_OPP_WAKEUP_DDR_266_4X4_VALUE	0x2A86B419	
#define SDRAM_TIM_1_SHDW_OPP_WAKEUP_DDR_400_4X4_VALUE	0x50EB0662	
#define SDRAM_TIM_1_SHDW_OPP_WAKEUP_DDR_532_4X4_VALUE	0x772F6873	
#define SDRAM_TIM_1_SHDW_OPP_LOW_ABE_2X8_VALUE		0x00000000
#define SDRAM_TIM_1_SHDW_OPP_WAKEUP_DDR_266_2X8_VALUE	0x2A86B419
#define SDRAM_TIM_1_SHDW_OPP_WAKEUP_DDR_400_2X8_VALUE	0x50EB0662
#define SDRAM_TIM_1_SHDW_OPP_WAKEUP_DDR_532_2X8_VALUE	0x772F6873
#define SDRAM_TIM_1_SHDW_5432_532_VALUE              0xCCCF36B3
#define SDRAM_TIM_1_SHDW_ZEBU_5432_VALUE                 0x1F7FCC1D

#define SDRAM_TIM_2_OPP_LOW_ABE_2X4_VALUE		0x00000000
#define SDRAM_TIM_2_OPP_WAKEUP_DDR_266_2X4_VALUE	0x1025094A
#define SDRAM_TIM_2_OPP_WAKEUP_DDR_400_2X4_VALUE	0x20370DD2
#define SDRAM_TIM_2_OPP_WAKEUP_DDR_532_2X4_VALUE	0x304A129A	
#define SDRAM_TIM_2_OPP_LOW_ABE_4X4_VALUE		0x00000000
#define SDRAM_TIM_2_OPP_WAKEUP_DDR_266_4X4_VALUE	0x1025094A	
#define SDRAM_TIM_2_OPP_WAKEUP_DDR_400_4X4_VALUE	0x20370DD2	
#define SDRAM_TIM_2_OPP_WAKEUP_DDR_532_4X4_VALUE	0x304A129A	
#define SDRAM_TIM_2_OPP_LOW_ABE_2X8_VALUE		0x00000000
#define SDRAM_TIM_2_OPP_WAKEUP_DDR_266_2X8_VALUE	0x1025094A
#define SDRAM_TIM_2_OPP_WAKEUP_DDR_400_2X8_VALUE	0x20370DD2
#define SDRAM_TIM_2_OPP_WAKEUP_DDR_532_2X8_VALUE	0x304A129A
#define SDRAM_TIM_2_5432_532_VALUE              0x308F7FDA
#define SDRAM_TIM_2_ZEBU_5432_VALUE                 0x5071975D


#define SDRAM_TIM_2_SHDW_OPP_LOW_ABE_2X4_VALUE		0x00000000
#define SDRAM_TIM_2_SHDW_OPP_WAKEUP_DDR_266_2X4_VALUE	0x1025094A
#define SDRAM_TIM_2_SHDW_OPP_WAKEUP_DDR_400_2X4_VALUE	0x20370DD2
#define SDRAM_TIM_2_SHDW_OPP_WAKEUP_DDR_532_2X4_VALUE	0x304A129A	
#define SDRAM_TIM_2_SHDW_OPP_LOW_ABE_4X4_VALUE		0x00000000
#define SDRAM_TIM_2_SHDW_OPP_WAKEUP_DDR_266_4X4_VALUE	0x1025094A	
#define SDRAM_TIM_2_SHDW_OPP_WAKEUP_DDR_400_4X4_VALUE	0x20370DD2	
#define SDRAM_TIM_2_SHDW_OPP_WAKEUP_DDR_532_4X4_VALUE	0x304A129A	
#define SDRAM_TIM_2_SHDW_OPP_LOW_ABE_2X8_VALUE		0x00000000
#define SDRAM_TIM_2_SHDW_OPP_WAKEUP_DDR_266_2X8_VALUE	0x1025094A
#define SDRAM_TIM_2_SHDW_OPP_WAKEUP_DDR_400_2X8_VALUE	0x20370DD2
#define SDRAM_TIM_2_SHDW_OPP_WAKEUP_DDR_532_2X8_VALUE	0x304A129A
#define SDRAM_TIM_2_SHDW_5432_532_VALUE              0x308F7FDA
#define SDRAM_TIM_2_SHDW_ZEBU_5432_VALUE                0x5071975D

#define SDRAM_TIM_3_OPP_LOW_ABE_2X4_VALUE		0x00000000
#define SDRAM_TIM_3_OPP_WAKEUP_DDR_266_2X4_VALUE	0x026BA22F
#define SDRAM_TIM_3_OPP_WAKEUP_DDR_400_2X4_VALUE	0x02B1C33F
#define SDRAM_TIM_3_OPP_WAKEUP_DDR_532_2X4_VALUE	0x02F7E45F	
#define SDRAM_TIM_3_OPP_LOW_ABE_4X4_VALUE		0x00000000
#define SDRAM_TIM_3_OPP_WAKEUP_DDR_266_4X4_VALUE	0x026BA22F	
#define SDRAM_TIM_3_OPP_WAKEUP_DDR_400_4X4_VALUE	0x02B1C33F	
#define SDRAM_TIM_3_OPP_WAKEUP_DDR_532_4X4_VALUE	0x02F7E45F	
#define SDRAM_TIM_3_OPP_LOW_ABE_2X8_VALUE		0x00000000
#define SDRAM_TIM_3_OPP_WAKEUP_DDR_266_2X8_VALUE	0x026BA37F
#define SDRAM_TIM_3_OPP_WAKEUP_DDR_400_2X8_VALUE	0x02B1C53F
#define SDRAM_TIM_3_OPP_WAKEUP_DDR_532_2X8_VALUE	0x02F7E6FF
#define SDRAM_TIM_3_5432_532_VALUE              0x027F88A8
#define SDRAM_TIM_3_ZEBU_5432_VALUE                 0x0EDF972F

#define SDRAM_TIM_3_SHDW_OPP_LOW_ABE_2X4_VALUE		    0x00000000
#define SDRAM_TIM_3_SHDW_OPP_WAKEUP_DDR_266_2X4_VALUE	0x026BA22F
#define SDRAM_TIM_3_SHDW_OPP_WAKEUP_DDR_400_2X4_VALUE	0x02B1C33F
#define SDRAM_TIM_3_SHDW_OPP_WAKEUP_DDR_532_2X4_VALUE	0x02F7E45F	
#define SDRAM_TIM_3_SHDW_OPP_LOW_ABE_4X4_VALUE		    0x00000000
#define SDRAM_TIM_3_SHDW_OPP_WAKEUP_DDR_266_4X4_VALUE	0x026BA22F	
#define SDRAM_TIM_3_SHDW_OPP_WAKEUP_DDR_400_4X4_VALUE	0x02B1C33F	
#define SDRAM_TIM_3_SHDW_OPP_WAKEUP_DDR_532_4X4_VALUE	0x02F7E45F	
#define SDRAM_TIM_3_SHDW_OPP_LOW_ABE_2X8_VALUE		    0x00000000
#define SDRAM_TIM_3_SHDW_OPP_WAKEUP_DDR_266_2X8_VALUE	0x026BA37F
#define SDRAM_TIM_3_SHDW_OPP_WAKEUP_DDR_400_2X8_VALUE	0x02B1C53F
#define SDRAM_TIM_3_SHDW_OPP_WAKEUP_DDR_532_2X8_VALUE	0x02F7E6FF
#define SDRAM_TIM_3_SHDW_532_5432_VALUE              0x027F88A8
#define SDRAM_TIM_3_SHDW_ZEBU_5432_VALUE                0x0EDF972F

#define LPDDR2_NVM_TIM_5432_VALUE 0x00000000

#define LPDDR2_NVM_TIM_SHDW_5432_VALUE 0x00000000

#define PWR_MGMT_CTRL_VALUE			0x00006060	
#define PWR_MGMT_CTRL_5432_VALUE			0x00000000	
#define PWR_MGMT_CTRL_ZEBU_5432_VALUE			0x00000000

#define PWR_MGMT_CTRL_SHDW_VALUE		0x00006060	
#define PWR_MGMT_CTRL_SHDW_5432_VALUE			0x00000000
#define PWR_MGMT_CTRL_SHDW_ZEBU_5432_VALUE			0x00000000	

#define OCP_CONFIG_VALUE			0x0A500000	

#define IODFT_TLGC_5432_VALUE			0x00002011	

#define DLL_CALIB_CTRL_VALUE			0x00050000		

#define DLL_CALIB_CTRL_SHDW_VALUE		0x00050000

#define ZQ_CONFIG_VALUE				0x000B3215	
#define ZQ_CONFIG_5432_VALUE				0x0007190B
#define ZQ_CONFIG_ZEBU_5432_VALUE				0xF00F00F6

#define TEMP_ALERT_CFG_VALUE			0x08000A05	
#define TEMP_ALERT_CFG_5432_VALUE			0x00000000	

#define READ_WRITE_LEVELING_RAMP_WINDOW_VALUE	0x00000000	

#define READ_WRITE_LEVELING_RAMP_CONTROL_VALUE	0x00000000	
#define READ_WRITE_LEVELING_RAMP_CONTROL_5432_VALUE	0x80000000	

#define READ_WRITE_LEVELING_CONTROL_VALUE	0x20000000	
#define READ_WRITE_LEVELING_CONTROL_5432_VALUE	0x00000000
#define READ_WRITE_LEVELING_CONTROL_ZEBU_5432_VALUE	0x80000000

#define DDR_PHY_CTRL_1_OPP_LOW_ABE_2X4_VALUE		0x00000000
#define DDR_PHY_CTRL_1_OPP_WAKEUP_DDR_266_2X4_VALUE	0x0E18420A
#define DDR_PHY_CTRL_1_OPP_WAKEUP_DDR_400_2X4_VALUE	0x0E18420C
#define DDR_PHY_CTRL_1_OPP_WAKEUP_DDR_532_2X4_VALUE	0x0E384211
#define DDR_PHY_CTRL_1_OPP_LOW_ABE_4X4_VALUE		0x00000000
#define DDR_PHY_CTRL_1_OPP_WAKEUP_DDR_266__FAST_DLL_LOCK__MAX_LOCK_DIFF_16_VALUE		0x0E18420D	// OK
#define DDR_PHY_CTRL_1_OPP_WAKEUP_DDR_266__FAST_DLL_LOCK__MAX_LOCK_DIFF_32_VALUE		0x0E18820D	// OK
#define DDR_PHY_CTRL_1_OPP_WAKEUP_DDR_266__FAST_DLL_LOCK__MAX_LOCK_DIFF_64_VALUE		0x0E19020D	// OK
#define DDR_PHY_CTRL_1_OPP_WAKEUP_DDR_400__FAST_DLL_LOCK__MAX_LOCK_DIFF_16_VALUE		0x0E18420D	// OK
#define DDR_PHY_CTRL_1_OPP_WAKEUP_DDR_400__FAST_DLL_LOCK__MAX_LOCK_DIFF_32_VALUE		0x0E18820D	// OK
#define DDR_PHY_CTRL_1_OPP_WAKEUP_DDR_400__FAST_DLL_LOCK__MAX_LOCK_DIFF_64_VALUE		0x0E19020D	// OK
#define DDR_PHY_CTRL_1_OPP_WAKEUP_DDR_532__FAST_DLL_LOCK__MAX_LOCK_DIFF_16_VALUE		0x0E38420D	// OK
#define DDR_PHY_CTRL_1_OPP_WAKEUP_DDR_532__FAST_DLL_LOCK__MAX_LOCK_DIFF_32_VALUE		0x0E38820D	// OK
#define DDR_PHY_CTRL_1_OPP_WAKEUP_DDR_532__FAST_DLL_LOCK__MAX_LOCK_DIFF_64_VALUE		0x0E39020D	// OK
#define DDR_PHY_CTRL_1_OPP_LOW_ABE_2X8_VALUE		0x00000000
#define DDR_PHY_CTRL_1_OPP_WAKEUP_DDR_266_2X8_VALUE	0x0E18420A
#define DDR_PHY_CTRL_1_OPP_WAKEUP_DDR_400_2X8_VALUE	0x0E18420C
#define DDR_PHY_CTRL_1_OPP_WAKEUP_DDR_532_2X8_VALUE	0x0E384211
#define DDR_PHY_CTRL_1_OPP_NOM_ZEBU__FAST_DLL_LOCK__MAX_LOCK_DIFF_16_VALUE			0x0E38420D	// OK
#define DDR_PHY_CTRL_1_OPP_NOM_ZEBU__FAST_DLL_LOCK__MAX_LOCK_DIFF_32_VALUE			0x0E38820D	// OK
#define DDR_PHY_CTRL_1_OPP_NOM_ZEBU__FAST_DLL_LOCK__MAX_LOCK_DIFF_64_VALUE			0x0E39020D	// OK
// DC: #define DDR_PHY_CTRL_1_5432_532_VALUE 0x0020400F/* bit 9 = 0 reset DDR PHY FIFO*/   
#define DDR_PHY_CTRL_1_5432_532_VALUE 0x0024420A/* bit 9 = 0 reset DDR PHY FIFO*/   
#define DDR_PHY_CTRL_1_ZEBU_5432_VALUE 0x0020080D


#define DDR_PHY_CTRL_1_SHDW_OPP_LOW_ABE_2X4_VALUE		0x00000000
#define DDR_PHY_CTRL_1_SHDW_OPP_WAKEUP_DDR_266_2X4_VALUE	0x0E18420A
#define DDR_PHY_CTRL_1_SHDW_OPP_WAKEUP_DDR_400_2X4_VALUE	0x0E18420C
#define DDR_PHY_CTRL_1_SHDW_OPP_WAKEUP_DDR_532_2X4_VALUE	0x0E384211
#define DDR_PHY_CTRL_1_SHDW_OPP_LOW_ABE_4X4_VALUE		0x00000000
#define DDR_PHY_CTRL_1_SHDW_OPP_WAKEUP_DDR_266__FAST_DLL_LOCK__MAX_LOCK_DIFF_16_VALUE	0x0E18420D	
#define DDR_PHY_CTRL_1_SHDW_OPP_WAKEUP_DDR_266__FAST_DLL_LOCK__MAX_LOCK_DIFF_32_VALUE	0x0E18820D	
#define DDR_PHY_CTRL_1_SHDW_OPP_WAKEUP_DDR_266__FAST_DLL_LOCK__MAX_LOCK_DIFF_64_VALUE	0x0E19020D	
#define DDR_PHY_CTRL_1_SHDW_OPP_WAKEUP_DDR_400__FAST_DLL_LOCK__MAX_LOCK_DIFF_16_VALUE	0x0E18420D	
#define DDR_PHY_CTRL_1_SHDW_OPP_WAKEUP_DDR_400__FAST_DLL_LOCK__MAX_LOCK_DIFF_32_VALUE	0x0E18820D
#define DDR_PHY_CTRL_1_SHDW_OPP_WAKEUP_DDR_400__FAST_DLL_LOCK__MAX_LOCK_DIFF_64_VALUE	0x0E19020D	
#define DDR_PHY_CTRL_1_SHDW_OPP_WAKEUP_DDR_532__FAST_DLL_LOCK__MAX_LOCK_DIFF_16_VALUE	0x0E38420D	
#define DDR_PHY_CTRL_1_SHDW_OPP_WAKEUP_DDR_532__FAST_DLL_LOCK__MAX_LOCK_DIFF_32_VALUE	0x0E38820D	
#define DDR_PHY_CTRL_1_SHDW_OPP_WAKEUP_DDR_532__FAST_DLL_LOCK__MAX_LOCK_DIFF_64_VALUE	0x0E39020D	
#define DDR_PHY_CTRL_1_SHDW_OPP_LOW_ABE_2X8_VALUE		0x00000000
#define DDR_PHY_CTRL_1_SHDW_OPP_WAKEUP_DDR_266_2X8_VALUE	0x0E18420A
#define DDR_PHY_CTRL_1_SHDW_OPP_WAKEUP_DDR_400_2X8_VALUE	0x0E18420C
#define DDR_PHY_CTRL_1_SHDW_OPP_WAKEUP_DDR_532_2X8_VALUE	0x0E384211
#define DDR_PHY_CTRL_1_SHDW_OPP_NOM_ZEBU__FAST_DLL_LOCK__MAX_LOCK_DIFF_16_VALUE	0x0E38420D	
#define DDR_PHY_CTRL_1_SHDW_OPP_NOM_ZEBU__FAST_DLL_LOCK__MAX_LOCK_DIFF_32_VALUE	0x0E38820D	
#define DDR_PHY_CTRL_1_SHDW_OPP_NOM_ZEBU__FAST_DLL_LOCK__MAX_LOCK_DIFF_64_VALUE	0x0E39020D	
// DC: #define DDR_PHY_CTRL_1_SHDW_5432_532_VALUE 0x0020420F
#define DDR_PHY_CTRL_1_SHDW_5432_532_VALUE 0x0024420A
#define DDR_PHY_CTRL_1_SHDW_ZEBU_5432_VALUE 0x0020080D

#define DDR_PHY_CTRL_2_VALUE				0x00000000	
#define DDR_PHY_CTRL_2_ZEBU_5432_VALUE	    0x000001D0	

#define PRI_COS_MAP_VALUE 0x00000000

#define CONNID_COS_1_MAP_5432_VALUE 0x00000000 
#define CONNID_COS_2_MAP_5432_VALUE 0x00000000 

#define RD_WR_EXEC_THRESH_VALUE				0x00000305	

#define COS_CONFIG_5432_VALUE       0x00FFFFFF

#define EXT_PHY_CONTROL_1_VALUE				    0x04020080 
#define EXT_PHY_CONTROL_1_5432_VALUE            0x04040500 /* bit 10 1 */
#define EXT_PHY_CONTROL_1_ZEBU_5432_VALUE       0x04020800 

#define EXT_PHY_CONTROL_2_OPP_LOW_ABE_4X4_VALUE			0x0F01E03C	
#define EXT_PHY_CONTROL_2_OPP_WAKEUP_DDR_266_4X4_VALUE		0x14829052	
#define EXT_PHY_CONTROL_2_OPP_WAKEUP_DDR_400_4X4_VALUE		0x1EC3D87B	
#define EXT_PHY_CONTROL_2_OPP_WAKEUP_DDR_532_4X4_VALUE		0x28C518A3	
#define EXT_PHY_CONTROL_2_ZEBU_VALUE				0x14829052	
#define EXT_PHY_CONTROL_2_5432_VALUE 			0x00000000
#define EXT_PHY_CONTROL_2_ZEBU_5432_VALUE 0x00C01803

#define EXT_PHY_CONTROL_3_OPP_LOW_ABE_4X4_VALUE			0x1E03C078	
#define EXT_PHY_CONTROL_3_OPP_WAKEUP_DDR_266_4X4_VALUE		0x290520A4	
#define EXT_PHY_CONTROL_3_OPP_WAKEUP_DDR_400_4X4_VALUE		0x3D87B0F6	
#define EXT_PHY_CONTROL_3_OPP_WAKEUP_DDR_532_4X4_VALUE		0x518A3146	
#define EXT_PHY_CONTROL_3_ZEBU_VALUE				0x290520A4	
#define EXT_PHY_CONTROL_3_5432_VALUE 			0x00000000
#define EXT_PHY_CONTROL_3_ZEBU_5432_VALUE    			0x01803006

#define EXT_PHY_CONTROL_4_OPP_LOW_ABE_4X4_VALUE			0x000780F0	
#define EXT_PHY_CONTROL_4_OPP_WAKEUP_DDR_266_4X4_VALUE		0x000A4148	
#define EXT_PHY_CONTROL_4_OPP_WAKEUP_DDR_400_4X4_VALUE		0x000F61EC	
#define EXT_PHY_CONTROL_4_OPP_WAKEUP_DDR_532_4X4_VALUE		0x0014628C	
#define EXT_PHY_CONTROL_4_ZEBU_VALUE				0x000A4148	
#define EXT_PHY_CONTROL_4_5432_VALUE 			0x00000000
#define EXT_PHY_CONTROL_4_ZEBU_5432_VALUE    			0x0000600C

#define EXT_PHY_CONTROL_5_VALUE					0x04010040
#define EXT_PHY_CONTROL_5_5432_VALUE    		0x04010040	
#define EXT_PHY_CONTROL_5_ZEBU_5432_VALUE			0x4350D435

#define EXT_PHY_CONTROL_6_VALUE					0x01004010
#define EXT_PHY_CONTROL_6_5432_VALUE            0x01004010
#define EXT_PHY_CONTROL_6_ZEBU_5432_VALUE	    0x50D4350D

#define EXT_PHY_CONTROL_7_VALUE					0x00001004
#define EXT_PHY_CONTROL_7_5432_VALUE    0x00001004	
#define EXT_PHY_CONTROL_7_ZEBU_5432_VALUE       0x00000D43

#define EXT_PHY_CONTROL_8_VALUE					0x04010040	

#define EXT_PHY_CONTROL_9_VALUE					0x01004010	

#define EXT_PHY_CONTROL_10_VALUE				0x00001004	

#define EXT_PHY_CONTROL_11_VALUE				0x00000000
#define EXT_PHY_CONTROL_11_ZEBU_5432_VALUE      0xC0300C03
	
#define EXT_PHY_CONTROL_12_VALUE				0x00000000
#define EXT_PHY_CONTROL_12_ZEBU_5432_VALUE	    0x300C0300

#define EXT_PHY_CONTROL_13_VALUE				0x00000000
#define EXT_PHY_CONTROL_13_ZEBU_5432_VALUE	    0x000000C0

#define EXT_PHY_CONTROL_14_VALUE				0x80080080
#define EXT_PHY_CONTROL_14_ZEBU_5432_VALUE	    0x00800800	

#define EXT_PHY_CONTROL_15_VALUE				0x00400000	//  (used for DLL unlocked)
#define EXT_PHY_CONTROL_15_5432_VALUE	        0x00800800	

#define EXT_PHY_CONTROL_16_VALUE				0x08102040	//  (DDR3 register mandatory)

#define EXT_PHY_CONTROL_17_VALUE				0x00000001	
#define EXT_PHY_CONTROL_17_5432_VALUE	        0x00000002
#define EXT_PHY_CONTROL_17_ZEBU_5432_VALUE	    0x00000002

#define EXT_PHY_CONTROL_18_VALUE				0x540A8150
#define EXT_PHY_CONTROL_18_5432_VALUE	        0x00000000

#define EXT_PHY_CONTROL_19_VALUE				0xA81502A0	
#define EXT_PHY_CONTROL_19_5432_VALUE	        0x00000000

#define EXT_PHY_CONTROL_20_VALUE				0x002A0540	
#define EXT_PHY_CONTROL_20_5432_VALUE	        0x00000000

#define EXT_PHY_CONTROL_21_VALUE				0x00000000	

#define EXT_PHY_CONTROL_22_VALUE				0x00000000	

#define EXT_PHY_CONTROL_23_VALUE				0x00000000	

#define EXT_PHY_CONTROL_24_VALUE				0x00000077	
#define EXT_PHY_CONTROL_24_5432_VALUE	        0x00000057
#define EXT_PHY_CONTROL_24_ZEBU_5432_VALUE      0x00000077

#define EXT_PHY_CONTROL_25_VALUE				0x00000000	

#define EXT_PHY_CONTROL_26_VALUE				0x00000000	

#define EXT_PHY_CONTROL_27_VALUE				0x00000000	

#define EXT_PHY_CONTROL_28_VALUE				0x00000000	

#define EXT_PHY_CONTROL_29_VALUE				0x00000000	

#define EXT_PHY_CONTROL_30_VALUE				0x00000000	

#define EXT_PHY_CONTROL_1_SHDW_VALUE				0x04020080	
#define EXT_PHY_CONTROL_1_SHDW_5432_VALUE    0x04040100
#define EXT_PHY_CONTROL_1_SHDW_ZEBU_5432_VALUE      0x04020800



#define EXT_PHY_CONTROL_2_SHDW_OPP_LOW_ABE_4X4_VALUE		0x0F01E03C	
#define EXT_PHY_CONTROL_2_SHDW_OPP_WAKEUP_DDR_266_4X4_VALUE	0x14829052	
#define EXT_PHY_CONTROL_2_SHDW_OPP_WAKEUP_DDR_400_4X4_VALUE	0x1EC3D87B	
#define EXT_PHY_CONTROL_2_SHDW_OPP_WAKEUP_DDR_532_4X4_VALUE	0x28C518A3	
#define EXT_PHY_CONTROL_2_SHDW_ZEBU_VALUE			0x14829052
#define EXT_PHY_CONTROL_2_SHDW_5432_VALUE 		0x00000000
#define EXT_PHY_CONTROL_2_SHDW_ZEBU_5432_VALUE 0x00C01803

#define EXT_PHY_CONTROL_3_SHDW_OPP_LOW_ABE_4X4_VALUE		0x1E03C078	
#define EXT_PHY_CONTROL_3_SHDW_OPP_WAKEUP_DDR_266_4X4_VALUE	0x290520A4	
#define EXT_PHY_CONTROL_3_SHDW_OPP_WAKEUP_DDR_400_4X4_VALUE	0x3D87B0F6	
#define EXT_PHY_CONTROL_3_SHDW_OPP_WAKEUP_DDR_532_4X4_VALUE	0x518A3146	
#define EXT_PHY_CONTROL_3_SHDW_ZEBU_VALUE			0x290520A4	
#define EXT_PHY_CONTROL_3_SHDW_5432_VALUE 		        0x00000000
#define EXT_PHY_CONTROL_3_SHDW_ZEBU_5432_VALUE    		0x01803006


#define EXT_PHY_CONTROL_4_SHDW_OPP_LOW_ABE_4X4_VALUE		0x000780F0	
#define EXT_PHY_CONTROL_4_SHDW_OPP_WAKEUP_DDR_266_4X4_VALUE	0x000A4148	
#define EXT_PHY_CONTROL_4_SHDW_OPP_WAKEUP_DDR_400_4X4_VALUE	0x000F61EC	
#define EXT_PHY_CONTROL_4_SHDW_OPP_WAKEUP_DDR_532_4X4_VALUE	0x0014628C	
#define EXT_PHY_CONTROL_4_SHDW_ZEBU_VALUE			0x000A4148	
#define EXT_PHY_CONTROL_4_SHDW_5432_VALUE 0x00000000
#define EXT_PHY_CONTROL_4_SHDW_ZEBU_5432_VALUE    0x0000600C

#define EXT_PHY_CONTROL_5_SHDW_VALUE				0x04010040
#define EXT_PHY_CONTROL_5_SHDW_5432_VALUE 0x04010040	
#define EXT_PHY_CONTROL_5_SHDW_ZEBU_5432_VALUE		0x4350D435	

#define EXT_PHY_CONTROL_6_SHDW_VALUE				0x01004010
#define EXT_PHY_CONTROL_6_SHDW_5432_VALUE 0x01004010
#define EXT_PHY_CONTROL_6_SHDW_ZEBU_5432_VALUE	    0x50D4350D
	

#define EXT_PHY_CONTROL_7_SHDW_VALUE				0x00001004
#define EXT_PHY_CONTROL_7_SHDW_5432_VALUE           0x00001004	
#define EXT_PHY_CONTROL_7_SHDW_ZEBU_5432_VALUE           0x00000D43


#define EXT_PHY_CONTROL_8_SHDW_VALUE				0x04010040	

#define EXT_PHY_CONTROL_9_SHDW_VALUE				0x01004010	

#define EXT_PHY_CONTROL_10_SHDW_VALUE				0x00001004	

#define EXT_PHY_CONTROL_11_SHDW_VALUE				0x00000000
#define EXT_PHY_CONTROL_11_SHDW_ZEBU_5432_VALUE     0xC0300C03	

#define EXT_PHY_CONTROL_12_SHDW_VALUE				0x00000000
#define EXT_PHY_CONTROL_12_SHDW_ZEBU_5432_VALUE	    0x300C0300	

#define EXT_PHY_CONTROL_13_SHDW_VALUE				0x00000000
#define EXT_PHY_CONTROL_13_SHDW_ZEBU_5432_VALUE	    0x000000C0	

#define EXT_PHY_CONTROL_14_SHDW_VALUE				0x80080080
#define EXT_PHY_CONTROL_14_SHDW_ZEBU_5432_VALUE	    0x00800800	

#define EXT_PHY_CONTROL_15_SHDW_VALUE				0x00400000	//  (used for DLL unlocked)
#define EXT_PHY_CONTROL_15_SHDW_5432_VALUE	        0x00800800	

#define EXT_PHY_CONTROL_16_SHDW_VALUE				0x08102040	//  (DDR3 register mandatory)

#define EXT_PHY_CONTROL_17_SHDW_VALUE				0x00000001	 
#define EXT_PHY_CONTROL_17_SHDW_5432_VALUE  0x00000002
#define EXT_PHY_CONTROL_17_SHDW_ZEBU_5432_VALUE	    0x00000002

#define EXT_PHY_CONTROL_18_SHDW_VALUE				0x540A8150	
#define EXT_PHY_CONTROL_18_SHDW_5432_VALUE  0x00000000

#define EXT_PHY_CONTROL_19_SHDW_VALUE				0xA81502A0	
#define EXT_PHY_CONTROL_19_SHDW_5432_VALUE  0x00000000

#define EXT_PHY_CONTROL_20_SHDW_VALUE				0x002A0540	
#define EXT_PHY_CONTROL_20_SHDW_5432_VALUE  0x00000000

#define EXT_PHY_CONTROL_21_SHDW_VALUE				0x00000000	

#define EXT_PHY_CONTROL_22_SHDW_VALUE				0x00000000	

#define EXT_PHY_CONTROL_23_SHDW_VALUE				0x00000000	

#define EXT_PHY_CONTROL_24_SHDW_VALUE				0x00000077	
#define EXT_PHY_CONTROL_24_SHDW_5432_VALUE	        0x00000057
#define EXT_PHY_CONTROL_24_SHDW_ZEBU_5432_VALUE     0x00000077

#define EXT_PHY_CONTROL_25_SHDW_VALUE				0x00000000	

#define EXT_PHY_CONTROL_26_SHDW_VALUE				0x00000000	

#define EXT_PHY_CONTROL_27_SHDW_VALUE				0x00000000	

#define EXT_PHY_CONTROL_28_SHDW_VALUE				0x00000000	

#define EXT_PHY_CONTROL_29_SHDW_VALUE				0x00000000	

#define EXT_PHY_CONTROL_30_SHDW_VALUE				0x00000000	

//====================================================================//
//==================== defines for CONTROL module ====================//
//====================================================================//
#define CTRL_MODULE_WKUP					0x4AE0C000
#define SECURE_EMIF1_SDRAM_CONFIG               0x00000110
#define SECURE_EMIF2_SDRAM_CONFIG               0x00000118
#define EMIF1_SDRAM_CONFIG_EXT					0x00000144
#define EMIF2_SDRAM_CONFIG_EXT					0x00000148

#define CTRL_MODULE_WKUP_PAD					0x4AE0C800
#define PAD0_LLIA_WAKEREQIN_PAD1_LLIB_WAKEREQIN			0x00000040	// HW_WKDBG14 (LSB) - HW_WKDBG13 (MSB)
#define PAD0_DRM_EMU0_PAD1_DRM_EMU1				0x00000044	// HW_WKDBG6 (LSB) - HW_WKDBG7 (MSB)
#define PAD0_FREF_CLK0_OUT_PAD1_FREF_CLK1_OUT			0x00000058	// HW_WKDBG9 (LSB) - HW_WKDBG5 (MSB)
#define PAD0_FREF_CLK2_OUT_PAD1_FREF_CLK2_REQ			0x0000005C	// HW_WKDBG10 (LSB) - HW_WKDBG11 (MSB)
#define PAD0_FREF_CLK1_REQ_PAD1_SYS_NRESPWRON			0x00000060	// HW_WKDBG12 (LSB)
#define PAD0_SYS_NRESWARM_PAD1_SYS_PWR_REQ			0x00000064	// HW_WKDBG15 (MSB)
#define PAD0_SYS_BOOT0_PAD1_SYS_BOOT1				0x00000070	// HW_WKDBG0 (LSB) - HW_WKDBG1 (MSB)
#define PAD0_SYS_BOOT2_PAD1_SYS_BOOT3				0x00000074	// HW_WKDBG2 (LSB) - HW_WKDBG3 (MSB)
#define PAD0_SYS_BOOT4_PAD1_SYS_BOOT5				0x00000078	// HW_WKDBG4 (LSB) - HW_WKDBG8 (MSB)
#define EFUSE_1							0x000005C8
#define EFUSE_2							0x000005CC
#define EFUSE_3							0x000005D0
#define EFUSE_4							0x000005D4

#define CTRL_MODULE_CORE					0x4A002000
#define HWOBS_CONTROL						0x00000360
#define DEBOBS_FINAL_MUX_SEL					0x00000400
#define CONF_DEBUG_SEL_TST_0					0x000004D0	// 32 registers until 0x0000054C

#define CTRL_MODULE_CORE_PAD					0x4A002800
#define PAD0_C2C_DATAOUT0_PAD1_C2C_DATAOUT1			0x0000006C	// HW_DBG16 (LSB) - HW_DBG17 (MSB)
#define PAD0_C2C_DATAOUT2_PAD1_C2C_DATAOUT3			0x00000070	// HW_DBG18 (LSB) - HW_DBG19 (MSB)
#define PAD0_C2C_DATAOUT4_PAD1_C2C_DATAOUT5			0x00000074	// HW_DBG20 (LSB) - HW_DBG21 (MSB)
#define PAD0_C2C_DATAOUT6_PAD1_C2C_DATAOUT7			0x00000078	// HW_DBG22 (LSB) - HW_DBG23 (MSB)
#define PAD0_C2C_DATA8_PAD1_C2C_DATA9				0x0000007C	// HW_DBG24 (LSB) - HW_DBG25 (MSB)
#define PAD0_C2C_DATA10_PAD1_C2C_DATA11				0x00000080	// HW_DBG26 (LSB) - HW_DBG27 (MSB)
#define PAD0_C2C_DATA12_PAD1_C2C_DATA13				0x00000084	// HW_DBG28 (LSB) - HW_DBG29 (MSB)
#define PAD0_C2C_DATA14_PAD1_C2C_DATA15				0x00000088	// HW_DBG30 (LSB) - HW_DBG31 (MSB)

#define DDR_IO_EMIF1__DDR3CH                            0x00000630
#define DDR_IO_EMIF2__DDR3CH                            0x00000634
#define DDR_IO_EMIF1__ADDR_DQ0_DQS0_DQ1_DQS1			0x00000638
#define DDR_IO_EMIF1__ADDR_DQ2_DQS2_DQ3_DQS3			0x0000063C
#define DDR_IO_EMIF2__ADDR_DQ0_DQS0_DQ1_DQS1			0x00000640
#define DDR_IO_EMIF2__ADDR_DQ2_DQS2_DQ3_DQS3			0x00000644
#define DDR_IO_EMIF1__ADDR_NCS_CK_CKE_CA			0x00000648
#define DDR_IO_EMIF2__ADDR_NCS_CK_CKE_CA			0x0000064C
#define DDR_IO_0						0x00000650
#define DDR_IO_1						0x00000654
#define DDR_IO_2						0x00000658


#define DDR_IO__I_40OHM_SR_SLOWEST__WD_DQ_NO_PULL_DQS_NO_PULL 0x7C7C7C6C;

// reg_value for DQ and DQS
#define DDR_IO__I_34OHM_SR_FASTEST__WD_DQ_NO_PULL_DQS_NO_PULL	0x80808080
#define DDR_IO__I_34OHM_SR_FASTEST__WD_DQ_NO_PULL_DQS_PULL_DOWN	0x80828082
#define DDR_IO__I_40OHM_SR_FAST_____WD_DQ_NO_PULL_DQS_NO_PULL	0x64646464
#define DDR_IO__I_40OHM_SR_FAST_____WD_DQ_NO_PULL_DQS_PULL_DOWN	0x64666466

// reg_value for CK/CKE/NCS/CA
#define DDR_IO__I_34OHM_SR_FASTEST__WD_CK_CKE_NCS_CA_NO_PULL	0x80808000
#define DDR_IO__I_34OHM_SR_FASTEST__WD_CK_CKE_NCS_CA_PULL_DOWN	0x82828200
#define DDR_IO__I_40OHM_SR_FAST_____WD_CK_CKE_NCS_CA_NO_PULL	0x64646400
#define DDR_IO__I_40OHM_SR_FAST_____WD_CK_CKE_NCS_CA_PULL_DOWN	0x66666600

// reg_value for VREF
#define DDR_IO_0__DDR2_DQ_INT_EN_ALL__DDR3_CA_DIS_ALL		0x00008421
#define DDR_IO_0__DQ_INT_NO_CAP					0x00000000
#define DDR_IO_0__DQ_INT_CAP_VDD_ALL				0x00042108
#define DDR_IO_0__DQ_INT_CAP_VSS_ALL				0x00084210
#define DDR_IO_0__DQ_INT_CAP_VDD_VSS_ALL			0x000C6318
#define DDR_IO_0__DQ_INT_2UA_ALL				0x00000000
#define DDR_IO_0__DQ_INT_4UA_ALL				0x00010842
#define DDR_IO_0__DQ_INT_8UA_ALL				0x00021084
#define DDR_IO_0__DQ_INT_32UA_ALL				0x000318C6

#define DDR_IO_0_VREF_CELLS_DDR3_VALUE          0xBAE8C631
#define DDR_IO_1_VREF_CELLS_DDR3_VALUE          0xBC6318DC
#define DDR_IO_2_VREF_CELLS_DDR3_VALUE          0x00000000

#define DDR_IO_1__DQ_OUT_EN_ALL__DQ_INT_EN_ALL			0x08421084
#define DDR_IO_1__DQ_OUT_NO_CAP__DQ_INT_NO_CAP			0x00000000
#define DDR_IO_1__DQ_OUT_CAP_VSS__DQ_INT_CAP_VSS		0x84210840
#define DDR_IO_1__DQ_OUT_CAP_VDD__DQ_INT_CAP_VDD		0x42108420
#define DDR_IO_1__DQ_OUT_CAP_VDD_VSS__DQ_INT_CAP_VDD_VSS	0xC6318C60
#define DDR_IO_1__DQ_OUT_2UA__DQ_INT_2UA			0x00000000
#define DDR_IO_1__DQ_OUT_4UA__DQ_INT_4UA			0x21084210
#define DDR_IO_1__DQ_OUT_8UA__DQ_INT_8UA			0x10842108
#define DDR_IO_1__DQ_OUT_32UA__DQ_INT_32UA			0x318C6318

#define DDR_IO_2__CA_OUT_EN_ALL__CA_INT_EN_ALL			0x08421000
#define DDR_IO_2__CA_OUT_NO_CAP__CA_INT_NO_CAP			0x00000000
#define DDR_IO_2__CA_OUT_CAP_VSS__CA_INT_CAP_VSS		0x84210000
#define DDR_IO_2__CA_OUT_CAP_VDD__CA_INT_CAP_VDD		0x42108000
#define DDR_IO_2__DQ_OUT_CAP_VDD_VSS__DQ_INT_CAP_VDD_VSS	0xC6318000
#define DDR_IO_2__CA_OUT_2UA__CA_INT_2UA			0x00000000
#define DDR_IO_2__CA_OUT_4UA__CA_INT_4UA			0x21084000
#define DDR_IO_2__CA_OUT_8UA__CA_INT_8UA			0x10842000
#define DDR_IO_2__CA_OUT_32UA__CA_INT_32UA			0x318C6000

// reg_value for EFUSE_2
#define EFUSE_2__N_100000__P_100000				0x82000000

// reg_value for obervability
// codes for HW_DBG signal selection the CORE CONTROL module
#define MODE_FOR_EMIF1_DATA_BYTE_0				0x15
#define MODE_FOR_EMIF1_LEVELING_BYTE_0_RANK_0			0x16
#define MODE_FOR_EMIF1_LEVELING_BYTE_0_RANK_1			0x17
#define MODE_FOR_EMIF1_CMD_DLL					0x18
#define MODE_FOR_EMIF2_DATA_BYTE_0				0x19
#define MODE_FOR_EMIF2_LEVELING_BYTE_0_RANK_0			0x1A
#define MODE_FOR_EMIF2_LEVELING_BYTE_0_RANK_1			0x1B
#define MODE_FOR_EMIF2_CMD_DLL					0x1C


//==================================================================//
//==================== defines for MR registers ====================//
//==================================================================//
#define LPDDR2_MR1_VALUE_FOR_SILICON				0xC3
#define LPDDR2_MR1_VALUE_FOR_ZEBU				0x23

int ddr_data_pattern;

int sdram_config_val;
int sdram_config_2_val;
int sdram_ref_ctrl_val;
int sdram_ref_ctrl_shdw_val;
int sdram_tim_1_val;
int sdram_tim_1_shdw_val;
int sdram_tim_2_val;
int sdram_tim_2_shdw_val;
int sdram_tim_3_val;
int sdram_tim_3_shdw_val;
int lpddr2_nvm_tim_val;
int lpddr2_nvm_tim_shdw_val;
int power_mgmt_ctrl_val;
int power_mgmt_ctrl_shdw_val;
int ocp_cfg_val;
int iodft_tlgc_val;
int dll_calib_control_val;
int dll_calib_control_shdw_val;
int zq_cfg_val;
int temp_alert_config_val;
int read_write_leveling_ramp_window_val;
int read_write_leveling_ramp_control_val;
int read_write_leveling_control_val;
int ddr_phy_control_1_val;
int ddr_phy_control_1_shdw_val;
int ddr_phy_control_2_val;
int pri_cos_map_val;
int connid_cos_1_map;
int connid_cos_2_map;
int rd_wr_exec_thresh_val;
int cos_config_val;
int ext_phy_control_1_val;
int ext_phy_control_1_shdw_val;
int ext_phy_control_2_val;
int ext_phy_control_2_shdw_val;
int ext_phy_control_3_val;
int ext_phy_control_3_shdw_val;
int ext_phy_control_4_val;
int ext_phy_control_4_shdw_val;
int ext_phy_control_5_val;
int ext_phy_control_5_shdw_val;
int ext_phy_control_6_val;
int ext_phy_control_6_shdw_val;
int ext_phy_control_7_val;
int ext_phy_control_7_shdw_val;
int ext_phy_control_8_val;
int ext_phy_control_8_shdw_val;
int ext_phy_control_9_val;
int ext_phy_control_9_shdw_val;
int ext_phy_control_10_val;
int ext_phy_control_10_shdw_val;
int ext_phy_control_11_val;
int ext_phy_control_11_shdw_val;
int ext_phy_control_12_val;
int ext_phy_control_12_shdw_val;
int ext_phy_control_13_val;
int ext_phy_control_13_shdw_val;
int ext_phy_control_14_val;
int ext_phy_control_14_shdw_val;
int ext_phy_control_15_val;
int ext_phy_control_15_shdw_val;
int ext_phy_control_16_val;
int ext_phy_control_16_shdw_val;
int ext_phy_control_17_val;
int ext_phy_control_17_shdw_val;
int ext_phy_control_18_val;
int ext_phy_control_18_shdw_val;
int ext_phy_control_19_val;
int ext_phy_control_19_shdw_val;
int ext_phy_control_20_val;
int ext_phy_control_20_shdw_val;
int ext_phy_control_21_val;
int ext_phy_control_21_shdw_val;
int ext_phy_control_22_val;
int ext_phy_control_22_shdw_val;
int ext_phy_control_23_val;
int ext_phy_control_23_shdw_val;
int ext_phy_control_24_val;
int ext_phy_control_24_shdw_val;
int ext_phy_control_25_val;
int ext_phy_control_25_shdw_val;
int ext_phy_control_26_val;
int ext_phy_control_26_shdw_val;
int ext_phy_control_27_val;
int ext_phy_control_27_shdw_val;
int ext_phy_control_28_val;
int ext_phy_control_28_shdw_val;
int ext_phy_control_29_val;
int ext_phy_control_29_shdw_val;
int ext_phy_control_30_val;
int ext_phy_control_30_shdw_val;

int mr1_val;
int mr2_val;
int mr3_val;

int emif4d1_reg_config_val1;
int emif4d1_reg_data_val1;
int emif4d1_reg_config_val2;
int emif4d1_reg_data_val2;
int emif4d1_reg_config_val3;
int emif4d1_reg_data_val3;

int emif4d2_reg_config_val1;
int emif4d2_reg_data_val1;
int emif4d2_reg_config_val2;
int emif4d2_reg_data_val2;
int emif4d2_reg_config_val3;
int emif4d2_reg_data_val3; 


hotmenu set_obs_xls_emif1_pwrdn_dq0()
{
  int hwobsControl = 0;
  int muxMode = 0;
  int regValue = 0;
 
  // initializing all muxing paths from subsystem to pads 
 
  // putting clkdiv sel to 1 (mandatory - means outputs are not divided)
  hwobsControl = HWOBS_CONTROL_REG_ADDR;
  hwobsControl = (hwobsControl & 0xFFFFFF07) | 0x00000008;
  HWOBS_CONTROL_REG_ADDR = hwobsControl;
 
  // putting hwobs force bits to 0 (no forcing active)
  hwobsControl = HWOBS_CONTROL_REG_ADDR;
  hwobsControl = (hwobsControl & 0xFFFFFFF9) | 0x00000000;
  HWOBS_CONTROL_REG_ADDR = hwobsControl;
 
  // enabling hwobs in macro cells (subsystem level)
  hwobsControl = HWOBS_CONTROL_REG_ADDR;
  hwobsControl = (hwobsControl & 0xFFFFFFFE) | 0x00000001;
  HWOBS_CONTROL_REG_ADDR = hwobsControl;
 
  // selecting all bits to come from core domain in final mux
  DEBOBS_FINAL_MUX_SEL_REG_ADDR = 0xFFFFFFFF;
 
  // getting signal hw_dbg29 to pad SYSCFG_PAD_C2C_DATA13,
#define SYSCFG_PAD_C2C_DATA13 *(int *) 0x4A002886
  muxMode = SYSCFG_PAD_C2C_DATA13;
  muxMode = (muxMode & 0xFFFFFFF8) | 0x5;
  SYSCFG_PAD_C2C_DATA13 = muxMode;
 
  // getting signal hwobs_emif1_pwrdn_dq0 on dbg signal hw_dbg29
#define CORE_CONF_DEBUG_SEL_TST_29_REG_ADDR *(int *) 0x4A002544
  CORE_CONF_DEBUG_SEL_TST_29_REG_ADDR = 0x15;
  //CORE_CONF_DEBUG_SEL_TST_29_REG_ADDR = 0x19;
 
}

hotmenu set_obs_xls_emif2_sidlereg_sidle_ack()
{
  int hwobsControl = 0;
  int muxMode = 0;
  int regValue = 0;
 
  // initializing all muxing paths from subsystem to pads 
 
  // putting clkdiv sel to 1 (mandatory - means outputs are not divided)
  hwobsControl = HWOBS_CONTROL_REG_ADDR;
  hwobsControl = (hwobsControl & 0xFFFFFF07) | 0x00000008;
  HWOBS_CONTROL_REG_ADDR = hwobsControl;
 
  // putting hwobs force bits to 0 (no forcing active)
  hwobsControl = HWOBS_CONTROL_REG_ADDR;
  hwobsControl = (hwobsControl & 0xFFFFFFF9) | 0x00000000;
  HWOBS_CONTROL_REG_ADDR = hwobsControl;
 
  // enabling hwobs in macro cells (subsystem level)
  hwobsControl = HWOBS_CONTROL_REG_ADDR;
  hwobsControl = (hwobsControl & 0xFFFFFFFE) | 0x00000001;
  HWOBS_CONTROL_REG_ADDR = hwobsControl;
 
  // selecting all bits to come from core domain in final mux
  DEBOBS_FINAL_MUX_SEL_REG_ADDR = 0xFFFFFFFF;
 
  //================== sidlereq ==================//
  // getting signal hw_dbg22 to pad SYSCFG_PAD_C2C_DATAOUT6,
#define SYSCFG_PAD_C2C_DATAOUT6 *(int *) 0x4A002878
  muxMode = SYSCFG_PAD_C2C_DATAOUT6;
  muxMode = (muxMode & 0xFFFFFFF8) | 0x5;
  SYSCFG_PAD_C2C_DATAOUT6 = muxMode;
 
  // getting signal hwobs_emif2_pwr_sidlereq on dbg signal hw_dbg22
#define CORE_CONF_DEBUG_SEL_TST_22_REG_ADDR *(int *) 0x4A002528
  CORE_CONF_DEBUG_SEL_TST_22_REG_ADDR = 0x1;
 
  //================== sidleack(0) ==================//
  // getting signal hw_dbg24 to pad SYSCFG_PAD_C2C_DATA8,
#define SYSCFG_PAD_C2C_DATA8 *(int *) 0x4A00287C
  muxMode = SYSCFG_PAD_C2C_DATA8;
  muxMode = (muxMode & 0xFFFFFFF8) | 0x5;
  SYSCFG_PAD_C2C_DATA8 = muxMode;
 
  // getting signal hwobs_emif2_pwr_sidleack(0) on dbg signal hw_dbg24
#define CORE_CONF_DEBUG_SEL_TST_24_REG_ADDR *(int *) 0x4A002530
  CORE_CONF_DEBUG_SEL_TST_24_REG_ADDR = 0x1;
 
  //================== sidleack(1) ==================//
  // getting signal hw_dbg23 to pad SYSCFG_PAD_C2C_DATAOUT7,
#define SYSCFG_PAD_C2C_DATAOUT7 *(int *) 0x4A00287A
  muxMode = SYSCFG_PAD_C2C_DATAOUT7;
  muxMode = (muxMode & 0xFFFFFFF8) | 0x5;
  SYSCFG_PAD_C2C_DATAOUT7 = muxMode;
 
  // getting signal hwobs_emif2_pwr_sidleack(1) on dbg signal hw_dbg23
#define CORE_CONF_DEBUG_SEL_TST_23_REG_ADDR *(int *) 0x4A00252C
  CORE_CONF_DEBUG_SEL_TST_23_REG_ADDR = 0x1;
}

ddr_config_elpida_EDB8164B3PF1DF_2X4_LOW_ABE()
{  
  GEL_TextOut("ddr_config_elpida_EDB8164B3PF1DF_2X4_LOW_ABE NOT IMPLEMENTED\n");
}

ddr_config_elpida_EDBA164B1PB1DF_4X4_LOW_ABE()
{
  GEL_TextOut("ddr_config_elpida_EDBA164B1PB1DF_4X4_LOW_ABE NOT IMPLEMENTED\n");
}

ddr_config_samsung_K3PE0E000B_XGC2_4X4_LOW_ABE()
{  
  GEL_TextOut("ddr_config_samsung_K3PE0E000B_XGC2_4X4_LOW_ABE NOT IMPLEMENTED\n");
}

ddr_config_elpida_EDB8164B3PF1DF_2X4_OPP_WAKEUP_DDR_266()
{  
  GEL_TextOut("ddr_config_elpida_EDB8164B3PF1DF_2X4_OPP_WAKEUP_DDR_266 NOT IMPLEMENTED\n");
}

hotmenu DavesDDR()
{
 ddr_config_ddr3_nteb_532MHzs();
}

/* ddr3 config */
ddr_config_ddr3_sevm_532MHzs()
{

  if (INFO_PRINT) {
    GEL_TextOut(">> ddr_config_sevm_ddr3_532MHzs \n");
  }
            
  sdram_config_val=			SDRAM_CONFIG_5432_SEVM_VALUE;
  sdram_config_2_val=			SDRAM_CONFIG_2_5432_VALUE;	
  sdram_ref_ctrl_val=			SDRAM_REF_CTRL_5432_532_VALUE;		
  sdram_ref_ctrl_shdw_val=	SDRAM_REF_CTRL_SHDW_5432_532_VALUE;		
  sdram_tim_1_val= 			SDRAM_TIM_1_5432_532_VALUE;		
  sdram_tim_1_shdw_val= 		SDRAM_TIM_1_SHDW_5432_532_VALUE;		
  sdram_tim_2_val=			SDRAM_TIM_2_5432_532_VALUE;			
  sdram_tim_2_shdw_val=		SDRAM_TIM_2_SHDW_5432_532_VALUE;		
  sdram_tim_3_val=			SDRAM_TIM_3_5432_532_VALUE;			
  sdram_tim_3_shdw_val=		SDRAM_TIM_3_SHDW_532_5432_VALUE;		
  lpddr2_nvm_tim_val=         LPDDR2_NVM_TIM_5432_VALUE;
  lpddr2_nvm_tim_shdw_val=    LPDDR2_NVM_TIM_SHDW_5432_VALUE;
  power_mgmt_ctrl_val=		PWR_MGMT_CTRL_5432_VALUE;			
  power_mgmt_ctrl_shdw_val=	PWR_MGMT_CTRL_SHDW_5432_VALUE;			
  ocp_cfg_val=				OCP_CONFIG_VALUE;				
  iodft_tlgc_val=             IODFT_TLGC_5432_VALUE;
  dll_calib_control_val=			DLL_CALIB_CTRL_VALUE;				
  dll_calib_control_shdw_val=		DLL_CALIB_CTRL_SHDW_VALUE;			
  zq_cfg_val=				ZQ_CONFIG_5432_VALUE;				
  temp_alert_config_val=			TEMP_ALERT_CFG_5432_VALUE;				
  read_write_leveling_ramp_window_val =	READ_WRITE_LEVELING_RAMP_WINDOW_VALUE;		
  read_write_leveling_ramp_control_val =	READ_WRITE_LEVELING_RAMP_CONTROL_5432_VALUE;		
  read_write_leveling_control_val =	READ_WRITE_LEVELING_CONTROL_5432_VALUE;		
  ddr_phy_control_1_val=			DDR_PHY_CTRL_1_5432_532_VALUE;			
  ddr_phy_control_1_shdw_val=		DDR_PHY_CTRL_1_SHDW_5432_532_VALUE;		
  ddr_phy_control_2_val=			DDR_PHY_CTRL_2_VALUE;				
  pri_cos_map_val= PRI_COS_MAP_VALUE;
  connid_cos_1_map= CONNID_COS_1_MAP_5432_VALUE;
  connid_cos_2_map= CONNID_COS_2_MAP_5432_VALUE;
  rd_wr_exec_thresh_val=			RD_WR_EXEC_THRESH_VALUE;			
  cos_config_val=             COS_CONFIG_5432_VALUE;
  ext_phy_control_1_val=			EXT_PHY_CONTROL_1_5432_VALUE;		
  ext_phy_control_1_shdw_val=		EXT_PHY_CONTROL_1_SHDW_5432_VALUE;			
  ext_phy_control_2_val=			EXT_PHY_CONTROL_2_5432_VALUE;		
  ext_phy_control_2_shdw_val=		EXT_PHY_CONTROL_2_SHDW_5432_VALUE;	
  ext_phy_control_3_val=			EXT_PHY_CONTROL_3_5432_VALUE;	
  ext_phy_control_3_shdw_val=		EXT_PHY_CONTROL_3_SHDW_5432_VALUE;	
  ext_phy_control_4_val=			EXT_PHY_CONTROL_4_5432_VALUE;		
  ext_phy_control_4_shdw_val=		EXT_PHY_CONTROL_4_SHDW_5432_VALUE;	
  ext_phy_control_5_val=			EXT_PHY_CONTROL_5_5432_VALUE;			
  ext_phy_control_5_shdw_val=		EXT_PHY_CONTROL_5_SHDW_5432_VALUE;			
  ext_phy_control_6_val=			EXT_PHY_CONTROL_6_5432_VALUE;			
  ext_phy_control_6_shdw_val=		EXT_PHY_CONTROL_6_SHDW_5432_VALUE;			
  ext_phy_control_7_val=			EXT_PHY_CONTROL_7_5432_VALUE;			
  ext_phy_control_7_shdw_val=		EXT_PHY_CONTROL_7_SHDW_5432_VALUE;			
  ext_phy_control_8_val=			EXT_PHY_CONTROL_8_VALUE;			
  ext_phy_control_8_shdw_val=		EXT_PHY_CONTROL_8_SHDW_VALUE;			
  ext_phy_control_9_val=			EXT_PHY_CONTROL_9_VALUE;			
  ext_phy_control_9_shdw_val=		EXT_PHY_CONTROL_9_SHDW_VALUE;			
  ext_phy_control_10_val=			EXT_PHY_CONTROL_10_VALUE;			
  ext_phy_control_10_shdw_val=	EXT_PHY_CONTROL_10_SHDW_VALUE;		
  ext_phy_control_11_val=			EXT_PHY_CONTROL_11_VALUE;			
  ext_phy_control_11_shdw_val=	EXT_PHY_CONTROL_11_SHDW_VALUE;			
  ext_phy_control_12_val=			EXT_PHY_CONTROL_12_VALUE;			
  ext_phy_control_12_shdw_val=	EXT_PHY_CONTROL_12_SHDW_VALUE;		
  ext_phy_control_13_val=			EXT_PHY_CONTROL_13_VALUE;			
  ext_phy_control_13_shdw_val=	EXT_PHY_CONTROL_13_SHDW_VALUE;			
  ext_phy_control_14_val=			EXT_PHY_CONTROL_14_VALUE;			
  ext_phy_control_14_shdw_val=	EXT_PHY_CONTROL_14_SHDW_VALUE;		
  ext_phy_control_15_val=			EXT_PHY_CONTROL_15_5432_VALUE;			
  ext_phy_control_15_shdw_val=	EXT_PHY_CONTROL_15_SHDW_5432_VALUE;			
  ext_phy_control_16_val=			EXT_PHY_CONTROL_16_VALUE;			
  ext_phy_control_16_shdw_val=	EXT_PHY_CONTROL_16_SHDW_VALUE;			
  ext_phy_control_17_val=			EXT_PHY_CONTROL_17_5432_VALUE;			
  ext_phy_control_17_shdw_val=	EXT_PHY_CONTROL_17_SHDW_5432_VALUE;			
  ext_phy_control_18_val=			EXT_PHY_CONTROL_18_5432_VALUE;			
  ext_phy_control_18_shdw_val=	EXT_PHY_CONTROL_18_SHDW_5432_VALUE;			
  ext_phy_control_19_val=			EXT_PHY_CONTROL_19_5432_VALUE;			
  ext_phy_control_19_shdw_val=	EXT_PHY_CONTROL_19_SHDW_5432_VALUE;			
  ext_phy_control_20_val=			EXT_PHY_CONTROL_20_5432_VALUE;			
  ext_phy_control_20_shdw_val=	EXT_PHY_CONTROL_20_SHDW_5432_VALUE;			
  ext_phy_control_21_val=			EXT_PHY_CONTROL_21_VALUE;			
  ext_phy_control_21_shdw_val=	EXT_PHY_CONTROL_21_SHDW_VALUE;			
  ext_phy_control_22_val=			EXT_PHY_CONTROL_22_VALUE;			
  ext_phy_control_22_shdw_val=	EXT_PHY_CONTROL_22_SHDW_VALUE;			
  ext_phy_control_23_val=			EXT_PHY_CONTROL_23_VALUE;			
  ext_phy_control_23_shdw_val=	EXT_PHY_CONTROL_23_SHDW_VALUE;			
  ext_phy_control_24_val=			EXT_PHY_CONTROL_24_5432_VALUE;			
  ext_phy_control_24_shdw_val=	EXT_PHY_CONTROL_24_SHDW_5432_VALUE;			
  ext_phy_control_25_val=			EXT_PHY_CONTROL_25_VALUE;			
  ext_phy_control_25_shdw_val=	EXT_PHY_CONTROL_25_SHDW_VALUE;		
  ext_phy_control_26_val=			EXT_PHY_CONTROL_26_VALUE;			
  ext_phy_control_26_shdw_val=	EXT_PHY_CONTROL_26_SHDW_VALUE;			
  ext_phy_control_27_val=			EXT_PHY_CONTROL_27_VALUE;			
  ext_phy_control_27_shdw_val=	EXT_PHY_CONTROL_27_SHDW_VALUE;			
  ext_phy_control_28_val=			EXT_PHY_CONTROL_28_VALUE;			
  ext_phy_control_28_shdw_val=	EXT_PHY_CONTROL_28_SHDW_VALUE;		
  ext_phy_control_29_val=			EXT_PHY_CONTROL_29_VALUE;			
  ext_phy_control_29_shdw_val=	EXT_PHY_CONTROL_29_SHDW_VALUE;			
  ext_phy_control_30_val=			EXT_PHY_CONTROL_30_VALUE;			
  ext_phy_control_30_shdw_val=	EXT_PHY_CONTROL_30_SHDW_VALUE;			

  if (INFO_PRINT) {
    GEL_TextOut("<< ddr_config_sevm_ddr3_532MHzs \n");
  }
            
}

ddr_config_ddr3_nteb_532MHzs()
{

  if (INFO_PRINT) {
    GEL_TextOut(">> ddr_config_nteb_ddr3_532MHzs \n");
  }
            
  sdram_config_val=			0x61851B32; //SDRAM_CONFIG_5432_NTEB_VALUE;
  sdram_config_2_val=			0x00000010; //SDRAM_CONFIG_2_5432_VALUE;	
  sdram_ref_ctrl_val=			0x1035;     //SDRAM_REF_CTRL_5432_532_VALUE;		
  sdram_ref_ctrl_shdw_val=	        0x1035;     //SDRAM_REF_CTRL_SHDW_5432_532_VALUE;		
  sdram_tim_1_val= 			0xCCCF36B3; //SDRAM_TIM_1_5432_532_VALUE;		
  sdram_tim_1_shdw_val= 		0xCCCF36B3; //SDRAM_TIM_1_SHDW_5432_532_VALUE;		
  sdram_tim_2_val=			0x308F7FDA; //SDRAM_TIM_2_5432_532_VALUE;			
  sdram_tim_2_shdw_val=		        0x308F7FDA; //SDRAM_TIM_2_SHDW_5432_532_VALUE;		
  sdram_tim_3_val=			0x027F88A8; //SDRAM_TIM_3_5432_532_VALUE;			
  sdram_tim_3_shdw_val=		        0x027F88A8; //SDRAM_TIM_3_SHDW_532_5432_VALUE;		
//  *(unsigned volatile int *)0x4C000030 = 0x11220C0C;
//  *(unsigned volatile int *)0x4C000034 = 0x11220C0C;
  lpddr2_nvm_tim_val=                   0x11220C0C; //LPDDR2_NVM_TIM_5432_VALUE;
  lpddr2_nvm_tim_shdw_val=    0x11220C0C; //LPDDR2_NVM_TIM_SHDW_5432_VALUE;
  power_mgmt_ctrl_val=		        0xF0F0;     //PWR_MGMT_CTRL_5432_VALUE;			
  power_mgmt_ctrl_shdw_val=	        0xF0F0;     //PWR_MGMT_CTRL_SHDW_5432_VALUE;			
  ocp_cfg_val=				0x0A500000; // OCP_CONFIG_VALUE;				
  iodft_tlgc_val=             IODFT_TLGC_5432_VALUE;
  dll_calib_control_val=			DLL_CALIB_CTRL_VALUE;				
  dll_calib_control_shdw_val=		DLL_CALIB_CTRL_SHDW_VALUE;			
  zq_cfg_val=				ZQ_CONFIG_5432_VALUE;				
  temp_alert_config_val=			TEMP_ALERT_CFG_5432_VALUE;				
  read_write_leveling_ramp_window_val =	READ_WRITE_LEVELING_RAMP_WINDOW_VALUE;		
  read_write_leveling_ramp_control_val =	0x80000000; //READ_WRITE_LEVELING_RAMP_CONTROL_5432_VALUE;		
  read_write_leveling_control_val =	        0x00335973; // READ_WRITE_LEVELING_CONTROL_5432_VALUE;		
  ddr_phy_control_1_val=			DDR_PHY_CTRL_1_5432_532_VALUE;			
  ddr_phy_control_1_shdw_val=		DDR_PHY_CTRL_1_SHDW_5432_532_VALUE;		
  ddr_phy_control_2_val=			DDR_PHY_CTRL_2_VALUE;				
  pri_cos_map_val= PRI_COS_MAP_VALUE;
  connid_cos_1_map= CONNID_COS_1_MAP_5432_VALUE;
  connid_cos_2_map= CONNID_COS_2_MAP_5432_VALUE;
  rd_wr_exec_thresh_val=			RD_WR_EXEC_THRESH_VALUE;			
  cos_config_val=             COS_CONFIG_5432_VALUE;
  ext_phy_control_1_val=			0x04040100; //EXT_PHY_CONTROL_1_5432_VALUE;		
  ext_phy_control_1_shdw_val=		        0x04040100; //EXT_PHY_CONTROL_1_SHDW_5432_VALUE;			
  ext_phy_control_2_val=			0x0;        //EXT_PHY_CONTROL_2_5432_VALUE;		
  ext_phy_control_2_shdw_val=		        0x0;        //EXT_PHY_CONTROL_2_SHDW_5432_VALUE;	
  ext_phy_control_3_val=			0x0;        //EXT_PHY_CONTROL_3_5432_VALUE;	
  ext_phy_control_3_shdw_val=		        0x0;        //EXT_PHY_CONTROL_3_SHDW_5432_VALUE;	
  ext_phy_control_4_val=			0x0;        //EXT_PHY_CONTROL_4_5432_VALUE;		
  ext_phy_control_4_shdw_val=		        0x0;        //EXT_PHY_CONTROL_4_SHDW_5432_VALUE;	
  ext_phy_control_5_val=			0x04010040; //EXT_PHY_CONTROL_5_5432_VALUE;			
  ext_phy_control_5_shdw_val=		        0x04010040; //EXT_PHY_CONTROL_5_SHDW_5432_VALUE;			
  ext_phy_control_6_val=			0x01004010; //EXT_PHY_CONTROL_6_5432_VALUE;			
  ext_phy_control_6_shdw_val=		        0x01004010; //EXT_PHY_CONTROL_6_SHDW_5432_VALUE;			
  ext_phy_control_7_val=			0x00001004; //EXT_PHY_CONTROL_7_5432_VALUE;			
  ext_phy_control_7_shdw_val=		        0x00001004; //EXT_PHY_CONTROL_7_SHDW_5432_VALUE;			
  ext_phy_control_8_val=			0x04010040; //EXT_PHY_CONTROL_8_VALUE;			
  ext_phy_control_8_shdw_val=		        0x04010040; //EXT_PHY_CONTROL_8_SHDW_VALUE;			
  ext_phy_control_9_val=			0x01004010; //EXT_PHY_CONTROL_9_VALUE;			
  ext_phy_control_9_shdw_val=		        0x01004010; //EXT_PHY_CONTROL_9_SHDW_VALUE;			
  ext_phy_control_10_val=			0x00001004; //EXT_PHY_CONTROL_10_VALUE;			
  ext_phy_control_10_shdw_val=	                0x00001004; //EXT_PHY_CONTROL_10_SHDW_VALUE;		
  ext_phy_control_11_val=			0x0;        //EXT_PHY_CONTROL_11_VALUE;			
  ext_phy_control_11_shdw_val=	                0x0;        //EXT_PHY_CONTROL_11_SHDW_VALUE;			
  ext_phy_control_12_val=			0x0;        //EXT_PHY_CONTROL_12_VALUE;			
  ext_phy_control_12_shdw_val=	                0x0;        //EXT_PHY_CONTROL_12_SHDW_VALUE;		
  ext_phy_control_13_val=			0x0;        //EXT_PHY_CONTROL_13_VALUE;			
  ext_phy_control_13_shdw_val=	                0x0;        //EXT_PHY_CONTROL_13_SHDW_VALUE;			
  ext_phy_control_14_val=			0x80080080; //EXT_PHY_CONTROL_14_VALUE;			
  ext_phy_control_14_shdw_val=	                0x80080080; //EXT_PHY_CONTROL_14_SHDW_VALUE;		
  ext_phy_control_15_val=			0x00800800; //EXT_PHY_CONTROL_15_5432_VALUE;			
  ext_phy_control_15_shdw_val=	                0x00800800; //EXT_PHY_CONTROL_15_SHDW_5432_VALUE;			
  ext_phy_control_16_val=			0x08102040; //EXT_PHY_CONTROL_16_VALUE;			
  ext_phy_control_16_shdw_val=	                0x08102040; //EXT_PHY_CONTROL_16_SHDW_VALUE;			
  ext_phy_control_17_val=			0x2;        //EXT_PHY_CONTROL_17_5432_VALUE;			
  ext_phy_control_17_shdw_val=	                0x2;        //EXT_PHY_CONTROL_17_SHDW_5432_VALUE;			
  ext_phy_control_18_val=			0x0;        //EXT_PHY_CONTROL_18_5432_VALUE;			
  ext_phy_control_18_shdw_val=	                0x0;        //EXT_PHY_CONTROL_18_SHDW_5432_VALUE;			
  ext_phy_control_19_val=			0x0;        //EXT_PHY_CONTROL_19_5432_VALUE;			
  ext_phy_control_19_shdw_val=	                0x0;        //EXT_PHY_CONTROL_19_SHDW_5432_VALUE;			
  ext_phy_control_20_val=			0x0;        //EXT_PHY_CONTROL_20_5432_VALUE;			
  ext_phy_control_20_shdw_val=                  0x0;        //	EXT_PHY_CONTROL_20_SHDW_5432_VALUE;			
  ext_phy_control_21_val=			0x0;        //EXT_PHY_CONTROL_21_VALUE;			
  ext_phy_control_21_shdw_val=                  0x0;        //	EXT_PHY_CONTROL_21_SHDW_VALUE;			
  ext_phy_control_22_val=			0x0;        //EXT_PHY_CONTROL_22_VALUE;			
  ext_phy_control_22_shdw_val=                  0x0;        //	EXT_PHY_CONTROL_22_SHDW_VALUE;			
  ext_phy_control_23_val=			0x0;        //EXT_PHY_CONTROL_23_VALUE;			
  ext_phy_control_23_shdw_val=                  0x0;        //	EXT_PHY_CONTROL_23_SHDW_VALUE;			
  ext_phy_control_24_val=			0x57;       //EXT_PHY_CONTROL_24_5432_VALUE;			
  ext_phy_control_24_shdw_val=	                0x57;       //EXT_PHY_CONTROL_24_SHDW_5432_VALUE;			
  ext_phy_control_25_val=			0x0;        //EXT_PHY_CONTROL_25_VALUE;			
  ext_phy_control_25_shdw_val=	                0x0;        //EXT_PHY_CONTROL_25_SHDW_VALUE;		
  ext_phy_control_26_val=			0x0;        //EXT_PHY_CONTROL_26_VALUE;			
  ext_phy_control_26_shdw_val=	                0x0;        //EXT_PHY_CONTROL_26_SHDW_VALUE;			
  ext_phy_control_27_val=			0x0;        //EXT_PHY_CONTROL_27_VALUE;			
  ext_phy_control_27_shdw_val=	                0x0;        //EXT_PHY_CONTROL_27_SHDW_VALUE;			
  ext_phy_control_28_val=			0x0;        //EXT_PHY_CONTROL_28_VALUE;			
  ext_phy_control_28_shdw_val=	                0x0;        //EXT_PHY_CONTROL_28_SHDW_VALUE;		
  ext_phy_control_29_val=			0x0;        //EXT_PHY_CONTROL_29_VALUE;			
  ext_phy_control_29_shdw_val=	                0x0;        //EXT_PHY_CONTROL_29_SHDW_VALUE;			
  ext_phy_control_30_val=			0x0;        //EXT_PHY_CONTROL_30_VALUE;			
  ext_phy_control_30_shdw_val=	                0x0;        //EXT_PHY_CONTROL_30_SHDW_VALUE;			

  if (INFO_PRINT) {
    GEL_TextOut("<< ddr_config_nteb_ddr3_532MHzs \n");
  }
            
}

ddr_config_ddr3_ZEBU()
{

  if (INFO_PRINT) {
    GEL_TextOut(">> ddr_config_ddr3_ZEBU \n");
  }
  
  sdram_config_val=			SDRAM_CONFIG_VAL1_ZEBU_5432_VALUE;
  sdram_config_2_val=			SDRAM_CONFIG_2_ZEBU_5432_VALUE;	
  sdram_ref_ctrl_val=			SDRAM_REF_CTRL_ZEBU_5432_VALUE;		
  sdram_ref_ctrl_shdw_val=	SDRAM_REF_CTRL_SHDW_ZEBU_5432_VALUE;		
  sdram_tim_1_val= 			SDRAM_TIM_1_ZEBU_5432_VALUE;		
  sdram_tim_1_shdw_val= 		SDRAM_TIM_1_SHDW_ZEBU_5432_VALUE;		
  sdram_tim_2_val=			SDRAM_TIM_2_ZEBU_5432_VALUE;			
  sdram_tim_2_shdw_val=		SDRAM_TIM_2_SHDW_ZEBU_5432_VALUE;		
  sdram_tim_3_val=			SDRAM_TIM_3_ZEBU_5432_VALUE;			
  sdram_tim_3_shdw_val=		SDRAM_TIM_3_SHDW_ZEBU_5432_VALUE;		
  lpddr2_nvm_tim_val=         LPDDR2_NVM_TIM_5432_VALUE;
  lpddr2_nvm_tim_shdw_val=    LPDDR2_NVM_TIM_SHDW_5432_VALUE;
  power_mgmt_ctrl_val=		PWR_MGMT_CTRL_ZEBU_5432_VALUE;			
  power_mgmt_ctrl_shdw_val=	PWR_MGMT_CTRL_SHDW_ZEBU_5432_VALUE;			
  ocp_cfg_val=				OCP_CONFIG_VALUE;				
  iodft_tlgc_val=             IODFT_TLGC_5432_VALUE;
  dll_calib_control_val=			DLL_CALIB_CTRL_VALUE;				
  dll_calib_control_shdw_val=		DLL_CALIB_CTRL_SHDW_VALUE;			
  zq_cfg_val=				ZQ_CONFIG_ZEBU_5432_VALUE;				
  temp_alert_config_val=			TEMP_ALERT_CFG_5432_VALUE;				
  read_write_leveling_ramp_window_val =	READ_WRITE_LEVELING_RAMP_WINDOW_VALUE;		
  read_write_leveling_ramp_control_val =	READ_WRITE_LEVELING_RAMP_CONTROL_5432_VALUE;		
  read_write_leveling_control_val =	READ_WRITE_LEVELING_CONTROL_ZEBU_5432_VALUE;		
  ddr_phy_control_1_val=			DDR_PHY_CTRL_1_ZEBU_5432_VALUE;			
  ddr_phy_control_1_shdw_val=		DDR_PHY_CTRL_1_SHDW_ZEBU_5432_VALUE;		
  ddr_phy_control_2_val=			DDR_PHY_CTRL_2_ZEBU_5432_VALUE;				
  pri_cos_map_val= PRI_COS_MAP_VALUE;
  connid_cos_1_map= CONNID_COS_1_MAP_5432_VALUE;
  connid_cos_2_map= CONNID_COS_2_MAP_5432_VALUE;
  rd_wr_exec_thresh_val=			RD_WR_EXEC_THRESH_VALUE;			
  cos_config_val=             COS_CONFIG_5432_VALUE;
  ext_phy_control_1_val=			EXT_PHY_CONTROL_1_ZEBU_5432_VALUE;		
  ext_phy_control_1_shdw_val=		EXT_PHY_CONTROL_1_SHDW_ZEBU_5432_VALUE;			
  ext_phy_control_2_val=			EXT_PHY_CONTROL_2_ZEBU_5432_VALUE;		
  ext_phy_control_2_shdw_val=		EXT_PHY_CONTROL_2_SHDW_ZEBU_5432_VALUE;	
  ext_phy_control_3_val=			EXT_PHY_CONTROL_3_ZEBU_5432_VALUE;	
  ext_phy_control_3_shdw_val=		EXT_PHY_CONTROL_3_SHDW_ZEBU_5432_VALUE;	
  ext_phy_control_4_val=			EXT_PHY_CONTROL_4_ZEBU_5432_VALUE;		
  ext_phy_control_4_shdw_val=		EXT_PHY_CONTROL_4_SHDW_ZEBU_5432_VALUE;	
  ext_phy_control_5_val=			EXT_PHY_CONTROL_5_ZEBU_5432_VALUE;			
  ext_phy_control_5_shdw_val=		EXT_PHY_CONTROL_5_SHDW_ZEBU_5432_VALUE;			
  ext_phy_control_6_val=			EXT_PHY_CONTROL_6_ZEBU_5432_VALUE;			
  ext_phy_control_6_shdw_val=		EXT_PHY_CONTROL_6_SHDW_ZEBU_5432_VALUE;			
  ext_phy_control_7_val=			EXT_PHY_CONTROL_7_ZEBU_5432_VALUE;			
  ext_phy_control_7_shdw_val=		EXT_PHY_CONTROL_7_SHDW_ZEBU_5432_VALUE;			
  ext_phy_control_8_val=			EXT_PHY_CONTROL_8_VALUE;			
  ext_phy_control_8_shdw_val=		EXT_PHY_CONTROL_8_SHDW_VALUE;			
  ext_phy_control_9_val=			EXT_PHY_CONTROL_9_VALUE;			
  ext_phy_control_9_shdw_val=		EXT_PHY_CONTROL_9_SHDW_VALUE;			
  ext_phy_control_10_val=			EXT_PHY_CONTROL_10_VALUE;			
  ext_phy_control_10_shdw_val=	EXT_PHY_CONTROL_10_SHDW_VALUE;		
  ext_phy_control_11_val=			EXT_PHY_CONTROL_11_ZEBU_5432_VALUE;			
  ext_phy_control_11_shdw_val=	EXT_PHY_CONTROL_11_SHDW_ZEBU_5432_VALUE;			
  ext_phy_control_12_val=			EXT_PHY_CONTROL_12_ZEBU_5432_VALUE;			
  ext_phy_control_12_shdw_val=	EXT_PHY_CONTROL_12_SHDW_ZEBU_5432_VALUE;		
  ext_phy_control_13_val=			EXT_PHY_CONTROL_13_ZEBU_5432_VALUE;			
  ext_phy_control_13_shdw_val=	EXT_PHY_CONTROL_13_SHDW_ZEBU_5432_VALUE;			
  ext_phy_control_14_val=			EXT_PHY_CONTROL_14_ZEBU_5432_VALUE;			
  ext_phy_control_14_shdw_val=	EXT_PHY_CONTROL_14_SHDW_ZEBU_5432_VALUE;		
  ext_phy_control_15_val=			EXT_PHY_CONTROL_15_5432_VALUE;			
  ext_phy_control_15_shdw_val=	EXT_PHY_CONTROL_15_SHDW_5432_VALUE;			
  ext_phy_control_16_val=			EXT_PHY_CONTROL_16_VALUE;			
  ext_phy_control_16_shdw_val=	EXT_PHY_CONTROL_16_SHDW_VALUE;			
  ext_phy_control_17_val=			EXT_PHY_CONTROL_17_5432_VALUE;			
  ext_phy_control_17_shdw_val=	EXT_PHY_CONTROL_17_SHDW_5432_VALUE;			
  ext_phy_control_18_val=			EXT_PHY_CONTROL_18_5432_VALUE;			
  ext_phy_control_18_shdw_val=	EXT_PHY_CONTROL_18_SHDW_5432_VALUE;			
  ext_phy_control_19_val=			EXT_PHY_CONTROL_19_5432_VALUE;			
  ext_phy_control_19_shdw_val=	EXT_PHY_CONTROL_19_SHDW_5432_VALUE;			
  ext_phy_control_20_val=			EXT_PHY_CONTROL_20_5432_VALUE;			
  ext_phy_control_20_shdw_val=	EXT_PHY_CONTROL_20_SHDW_5432_VALUE;			
  ext_phy_control_21_val=			EXT_PHY_CONTROL_21_VALUE;			
  ext_phy_control_21_shdw_val=	EXT_PHY_CONTROL_21_SHDW_VALUE;			
  ext_phy_control_22_val=			EXT_PHY_CONTROL_22_VALUE;			
  ext_phy_control_22_shdw_val=	EXT_PHY_CONTROL_22_SHDW_VALUE;			
  ext_phy_control_23_val=			EXT_PHY_CONTROL_23_VALUE;			
  ext_phy_control_23_shdw_val=	EXT_PHY_CONTROL_23_SHDW_VALUE;			
  ext_phy_control_24_val=			EXT_PHY_CONTROL_24_ZEBU_5432_VALUE;			
  ext_phy_control_24_shdw_val=	EXT_PHY_CONTROL_24_SHDW_ZEBU_5432_VALUE;			
  ext_phy_control_25_val=			EXT_PHY_CONTROL_25_VALUE;			
  ext_phy_control_25_shdw_val=	EXT_PHY_CONTROL_25_SHDW_VALUE;		
  ext_phy_control_26_val=			EXT_PHY_CONTROL_26_VALUE;			
  ext_phy_control_26_shdw_val=	EXT_PHY_CONTROL_26_SHDW_VALUE;			
  ext_phy_control_27_val=			EXT_PHY_CONTROL_27_VALUE;			
  ext_phy_control_27_shdw_val=	EXT_PHY_CONTROL_27_SHDW_VALUE;			
  ext_phy_control_28_val=			EXT_PHY_CONTROL_28_VALUE;			
  ext_phy_control_28_shdw_val=	EXT_PHY_CONTROL_28_SHDW_VALUE;		
  ext_phy_control_29_val=			EXT_PHY_CONTROL_29_VALUE;			
  ext_phy_control_29_shdw_val=	EXT_PHY_CONTROL_29_SHDW_VALUE;			
  ext_phy_control_30_val=			EXT_PHY_CONTROL_30_VALUE;			
  ext_phy_control_30_shdw_val=	EXT_PHY_CONTROL_30_SHDW_VALUE;			


  if (INFO_PRINT) {
    GEL_TextOut("<< ddr_config_ddr3_ZEBU \n");
  }
            
}

ddr_config_elpida_EDBA164B1PB1DF_4X4_OPP_WAKEUP_DDR_266()
{
  sdram_config_val=			SDRAM_CONFIG_OPP_WAKEUP_DDR_266_4X4_VALUE;			// OK
  sdram_config_2_val=			SDRAM_CONFIG_2_OPP_WAKEUP_DDR_266_4X4_VALUE;		// OK
  sdram_ref_ctrl_val=			SDRAM_REF_CTRL_OPP_WAKEUP_DDR_266_4X4_VALUE;		// OK
  sdram_ref_ctrl_shdw_val=		SDRAM_REF_CTRL_SHDW_OPP_WAKEUP_DDR_266_4X4_VALUE;		// OK
  sdram_tim_1_val= 			SDRAM_TIM_1_OPP_WAKEUP_DDR_266_4X4_VALUE;			// OK
  sdram_tim_1_shdw_val= 			SDRAM_TIM_1_SHDW_OPP_WAKEUP_DDR_266_4X4_VALUE;		// OK
  sdram_tim_2_val=			SDRAM_TIM_2_OPP_WAKEUP_DDR_266_4X4_VALUE;			// OK
  sdram_tim_2_shdw_val=			SDRAM_TIM_2_SHDW_OPP_WAKEUP_DDR_266_4X4_VALUE;		// OK
  sdram_tim_3_val=			SDRAM_TIM_3_OPP_WAKEUP_DDR_266_4X4_VALUE;			// OK
  sdram_tim_3_shdw_val=			SDRAM_TIM_3_SHDW_OPP_WAKEUP_DDR_266_4X4_VALUE;		// OK
  power_mgmt_ctrl_val=			PWR_MGMT_CTRL_VALUE;				// OK
  power_mgmt_ctrl_shdw_val=		PWR_MGMT_CTRL_SHDW_VALUE;			// OK
  ocp_cfg_val=				OCP_CONFIG_VALUE;				// OK
  dll_calib_control_val=			DLL_CALIB_CTRL_VALUE;				// OK
  dll_calib_control_shdw_val=		DLL_CALIB_CTRL_SHDW_VALUE;			// OK
  zq_cfg_val=				ZQ_CONFIG_VALUE;				// OK
  temp_alert_config_val=			TEMP_ALERT_CFG_VALUE;				// OK
  read_write_leveling_ramp_window_val =	READ_WRITE_LEVELING_RAMP_WINDOW_VALUE;		// OK
  read_write_leveling_ramp_control_val =	READ_WRITE_LEVELING_RAMP_CONTROL_VALUE;		// OK
  read_write_leveling_control_val =	READ_WRITE_LEVELING_CONTROL_VALUE;		// OK
  ddr_phy_control_1_val=			DDR_PHY_CTRL_1_OPP_WAKEUP_DDR_266__FAST_DLL_LOCK__MAX_LOCK_DIFF_16_VALUE;			// OK
  ddr_phy_control_1_shdw_val=		DDR_PHY_CTRL_1_SHDW_OPP_WAKEUP_DDR_266__FAST_DLL_LOCK__MAX_LOCK_DIFF_16_VALUE;		// OK
  ddr_phy_control_2_val=			DDR_PHY_CTRL_2_VALUE;				// OK
  rd_wr_exec_thresh_val=			RD_WR_EXEC_THRESH_VALUE;			// OK
  ext_phy_control_1_val=			EXT_PHY_CONTROL_1_VALUE;			// OK
  ext_phy_control_1_shdw_val=		EXT_PHY_CONTROL_1_SHDW_VALUE;			// OK
  ext_phy_control_2_val=			EXT_PHY_CONTROL_2_OPP_WAKEUP_DDR_266_4X4_VALUE;		// OK
  ext_phy_control_2_shdw_val=		EXT_PHY_CONTROL_2_SHDW_OPP_WAKEUP_DDR_266_4X4_VALUE;	// OK
  ext_phy_control_3_val=			EXT_PHY_CONTROL_3_OPP_WAKEUP_DDR_266_4X4_VALUE;		// OK
  ext_phy_control_3_shdw_val=		EXT_PHY_CONTROL_3_SHDW_OPP_WAKEUP_DDR_266_4X4_VALUE;	// OK
  ext_phy_control_4_val=			EXT_PHY_CONTROL_4_OPP_WAKEUP_DDR_266_4X4_VALUE;		// OK
  ext_phy_control_4_shdw_val=		EXT_PHY_CONTROL_4_SHDW_OPP_WAKEUP_DDR_266_4X4_VALUE;	// OK
  ext_phy_control_5_val=			EXT_PHY_CONTROL_5_VALUE;			// OK
  ext_phy_control_5_shdw_val=		EXT_PHY_CONTROL_5_SHDW_VALUE;			// OK
  ext_phy_control_6_val=			EXT_PHY_CONTROL_6_VALUE;			// OK
  ext_phy_control_6_shdw_val=		EXT_PHY_CONTROL_6_SHDW_VALUE;			// OK
  ext_phy_control_7_val=			EXT_PHY_CONTROL_7_VALUE;			// OK
  ext_phy_control_7_shdw_val=		EXT_PHY_CONTROL_7_SHDW_VALUE;			// OK
  ext_phy_control_8_val=			EXT_PHY_CONTROL_8_VALUE;			// OK
  ext_phy_control_8_shdw_val=		EXT_PHY_CONTROL_8_SHDW_VALUE;			// OK
  ext_phy_control_9_val=			EXT_PHY_CONTROL_9_VALUE;			// OK
  ext_phy_control_9_shdw_val=		EXT_PHY_CONTROL_9_SHDW_VALUE;			// OK
  ext_phy_control_10_val=			EXT_PHY_CONTROL_10_VALUE;			// OK
  ext_phy_control_10_shdw_val=		EXT_PHY_CONTROL_10_SHDW_VALUE;			// OK
  ext_phy_control_11_val=			EXT_PHY_CONTROL_11_VALUE;			// OK
  ext_phy_control_11_shdw_val=		EXT_PHY_CONTROL_11_SHDW_VALUE;			// OK
  ext_phy_control_12_val=			EXT_PHY_CONTROL_12_VALUE;			// OK
  ext_phy_control_12_shdw_val=		EXT_PHY_CONTROL_12_SHDW_VALUE;			// OK
  ext_phy_control_13_val=			EXT_PHY_CONTROL_13_VALUE;			// OK
  ext_phy_control_13_shdw_val=		EXT_PHY_CONTROL_13_SHDW_VALUE;			// OK
  ext_phy_control_14_val=			EXT_PHY_CONTROL_14_VALUE;			// OK
  ext_phy_control_14_shdw_val=		EXT_PHY_CONTROL_14_SHDW_VALUE;			// OK
  ext_phy_control_15_val=			EXT_PHY_CONTROL_15_VALUE;			// OK
  ext_phy_control_15_shdw_val=		EXT_PHY_CONTROL_15_SHDW_VALUE;			// OK
  ext_phy_control_16_val=			EXT_PHY_CONTROL_16_VALUE;			// OK
  ext_phy_control_16_shdw_val=		EXT_PHY_CONTROL_16_SHDW_VALUE;			// OK
  ext_phy_control_17_val=			EXT_PHY_CONTROL_17_VALUE;			// OK
  ext_phy_control_17_shdw_val=		EXT_PHY_CONTROL_17_SHDW_VALUE;			// OK
  ext_phy_control_18_val=			EXT_PHY_CONTROL_18_VALUE;			// OK
  ext_phy_control_18_shdw_val=		EXT_PHY_CONTROL_18_SHDW_VALUE;			// OK
  ext_phy_control_19_val=			EXT_PHY_CONTROL_19_VALUE;			// OK
  ext_phy_control_19_shdw_val=		EXT_PHY_CONTROL_19_SHDW_VALUE;			// OK
  ext_phy_control_20_val=			EXT_PHY_CONTROL_20_VALUE;			// OK
  ext_phy_control_20_shdw_val=		EXT_PHY_CONTROL_20_SHDW_VALUE;			// OK
  ext_phy_control_21_val=			EXT_PHY_CONTROL_21_VALUE;			// OK
  ext_phy_control_21_shdw_val=		EXT_PHY_CONTROL_21_SHDW_VALUE;			// OK
  ext_phy_control_22_val=			EXT_PHY_CONTROL_22_VALUE;			// OK
  ext_phy_control_22_shdw_val=		EXT_PHY_CONTROL_22_SHDW_VALUE;			// OK
  ext_phy_control_23_val=			EXT_PHY_CONTROL_23_VALUE;			// OK
  ext_phy_control_23_shdw_val=		EXT_PHY_CONTROL_23_SHDW_VALUE;			// OK
  ext_phy_control_24_val=			EXT_PHY_CONTROL_24_VALUE;			// OK
  ext_phy_control_24_shdw_val=		EXT_PHY_CONTROL_24_SHDW_VALUE;			// OK
  ext_phy_control_25_val=			EXT_PHY_CONTROL_25_VALUE;			// OK
  ext_phy_control_25_shdw_val=		EXT_PHY_CONTROL_25_SHDW_VALUE;			// OK
  ext_phy_control_26_val=			EXT_PHY_CONTROL_26_VALUE;			// OK
  ext_phy_control_26_shdw_val=		EXT_PHY_CONTROL_26_SHDW_VALUE;			// OK
  ext_phy_control_27_val=			EXT_PHY_CONTROL_27_VALUE;			// OK
  ext_phy_control_27_shdw_val=		EXT_PHY_CONTROL_27_SHDW_VALUE;			// OK
  ext_phy_control_28_val=			EXT_PHY_CONTROL_28_VALUE;			// OK
  ext_phy_control_28_shdw_val=		EXT_PHY_CONTROL_28_SHDW_VALUE;			// OK
  ext_phy_control_29_val=			EXT_PHY_CONTROL_29_VALUE;			// OK
  ext_phy_control_29_shdw_val=		EXT_PHY_CONTROL_29_SHDW_VALUE;			// OK
  ext_phy_control_30_val=			EXT_PHY_CONTROL_30_VALUE;			// OK
  ext_phy_control_30_shdw_val=		EXT_PHY_CONTROL_30_SHDW_VALUE;			// OK

  mr1_val=				LPDDR2_MR1_VALUE_FOR_SILICON;			// OK
  mr2_val =				0x6;						// WL=4-RL=8
  mr3_val =				0x1;						// DS=34ohm
}


ddr_config_samsung_K3PE0E000B_XGC2_4X4_OPP_WAKEUP_DDR_266()
{

  sdram_config_val=			SDRAM_CONFIG_OPP_WAKEUP_DDR_266_4X4_VALUE;			// OK
  sdram_config_2_val=			SDRAM_CONFIG_2_OPP_WAKEUP_DDR_266_4X4_VALUE;		// OK
  sdram_ref_ctrl_val=			SDRAM_REF_CTRL_OPP_WAKEUP_DDR_266_4X4_VALUE;		// OK
  sdram_ref_ctrl_shdw_val=		SDRAM_REF_CTRL_SHDW_OPP_WAKEUP_DDR_266_4X4_VALUE;		// OK
  sdram_tim_1_val= 			SDRAM_TIM_1_OPP_WAKEUP_DDR_266_4X4_VALUE;			// OK
  sdram_tim_1_shdw_val= 			SDRAM_TIM_1_SHDW_OPP_WAKEUP_DDR_266_4X4_VALUE;		// OK
  sdram_tim_2_val=			SDRAM_TIM_2_OPP_WAKEUP_DDR_266_4X4_VALUE;			// OK
  sdram_tim_2_shdw_val=			SDRAM_TIM_2_SHDW_OPP_WAKEUP_DDR_266_4X4_VALUE;		// OK
  sdram_tim_3_val=			SDRAM_TIM_3_OPP_WAKEUP_DDR_266_4X4_VALUE;			// OK
  sdram_tim_3_shdw_val=			SDRAM_TIM_3_SHDW_OPP_WAKEUP_DDR_266_4X4_VALUE;		// OK
  power_mgmt_ctrl_val=			PWR_MGMT_CTRL_VALUE;				// OK
  power_mgmt_ctrl_shdw_val=		PWR_MGMT_CTRL_SHDW_VALUE;			// OK
  ocp_cfg_val=				OCP_CONFIG_VALUE;				// OK
  dll_calib_control_val=			DLL_CALIB_CTRL_VALUE;				// OK
  dll_calib_control_shdw_val=		DLL_CALIB_CTRL_SHDW_VALUE;			// OK
  zq_cfg_val=				ZQ_CONFIG_VALUE;				// OK
  temp_alert_config_val=			TEMP_ALERT_CFG_VALUE;				// OK
  read_write_leveling_ramp_window_val =	READ_WRITE_LEVELING_RAMP_WINDOW_VALUE;		// OK
  read_write_leveling_ramp_control_val =	READ_WRITE_LEVELING_RAMP_CONTROL_VALUE;		// OK
  read_write_leveling_control_val =	READ_WRITE_LEVELING_CONTROL_VALUE;		// OK
  ddr_phy_control_1_val=			DDR_PHY_CTRL_1_OPP_LOW__FAST_DLL_LOCK__MAX_LOCK_DIFF_16_VALUE;			// OK
  ddr_phy_control_1_shdw_val=		DDR_PHY_CTRL_1_SHDW_OPP_LOW__FAST_DLL_LOCK__MAX_LOCK_DIFF_16_VALUE;		// OK
  ddr_phy_control_2_val=			DDR_PHY_CTRL_2_VALUE;				// OK
  rd_wr_exec_thresh_val=			RD_WR_EXEC_THRESH_VALUE;			// OK
  ext_phy_control_1_val=			EXT_PHY_CONTROL_1_VALUE;			// OK
  ext_phy_control_1_shdw_val=		EXT_PHY_CONTROL_1_SHDW_VALUE;			// OK
  ext_phy_control_2_val=			EXT_PHY_CONTROL_2_OPP_WAKEUP_DDR_266_4X4_VALUE;		// OK
  ext_phy_control_2_shdw_val=		EXT_PHY_CONTROL_2_SHDW_OPP_WAKEUP_DDR_266_4X4_VALUE;	// OK
  ext_phy_control_3_val=			EXT_PHY_CONTROL_3_OPP_WAKEUP_DDR_266_4X4_VALUE;		// OK
  ext_phy_control_3_shdw_val=		EXT_PHY_CONTROL_3_SHDW_OPP_WAKEUP_DDR_266_4X4_VALUE;	// OK
  ext_phy_control_4_val=			EXT_PHY_CONTROL_4_OPP_WAKEUP_DDR_266_4X4_VALUE;		// OK
  ext_phy_control_4_shdw_val=		EXT_PHY_CONTROL_4_SHDW_OPP_WAKEUP_DDR_266_4X4_VALUE;	// OK
  ext_phy_control_5_val=			EXT_PHY_CONTROL_5_VALUE;			// OK
  ext_phy_control_5_shdw_val=		EXT_PHY_CONTROL_5_SHDW_VALUE;			// OK
  ext_phy_control_6_val=			EXT_PHY_CONTROL_6_VALUE;			// OK
  ext_phy_control_6_shdw_val=		EXT_PHY_CONTROL_6_SHDW_VALUE;			// OK
  ext_phy_control_7_val=			EXT_PHY_CONTROL_7_VALUE;			// OK
  ext_phy_control_7_shdw_val=		EXT_PHY_CONTROL_7_SHDW_VALUE;			// OK
  ext_phy_control_8_val=			EXT_PHY_CONTROL_8_VALUE;			// OK
  ext_phy_control_8_shdw_val=		EXT_PHY_CONTROL_8_SHDW_VALUE;			// OK
  ext_phy_control_9_val=			EXT_PHY_CONTROL_9_VALUE;			// OK
  ext_phy_control_9_shdw_val=		EXT_PHY_CONTROL_9_SHDW_VALUE;			// OK
  ext_phy_control_10_val=			EXT_PHY_CONTROL_10_VALUE;			// OK
  ext_phy_control_10_shdw_val=		EXT_PHY_CONTROL_10_SHDW_VALUE;			// OK
  ext_phy_control_11_val=			EXT_PHY_CONTROL_11_VALUE;			// OK
  ext_phy_control_11_shdw_val=		EXT_PHY_CONTROL_11_SHDW_VALUE;			// OK
  ext_phy_control_12_val=			EXT_PHY_CONTROL_12_VALUE;			// OK
  ext_phy_control_12_shdw_val=		EXT_PHY_CONTROL_12_SHDW_VALUE;			// OK
  ext_phy_control_13_val=			EXT_PHY_CONTROL_13_VALUE;			// OK
  ext_phy_control_13_shdw_val=		EXT_PHY_CONTROL_13_SHDW_VALUE;			// OK
  ext_phy_control_14_val=			EXT_PHY_CONTROL_14_VALUE;			// OK
  ext_phy_control_14_shdw_val=		EXT_PHY_CONTROL_14_SHDW_VALUE;			// OK
  ext_phy_control_15_val=			EXT_PHY_CONTROL_15_VALUE;			// OK
  ext_phy_control_15_shdw_val=		EXT_PHY_CONTROL_15_SHDW_VALUE;			// OK
  ext_phy_control_16_val=			EXT_PHY_CONTROL_16_VALUE;			// OK
  ext_phy_control_16_shdw_val=		EXT_PHY_CONTROL_16_SHDW_VALUE;			// OK
  ext_phy_control_17_val=			EXT_PHY_CONTROL_17_VALUE;			// OK
  ext_phy_control_17_shdw_val=		EXT_PHY_CONTROL_17_SHDW_VALUE;			// OK
  ext_phy_control_18_val=			EXT_PHY_CONTROL_18_VALUE;			// OK
  ext_phy_control_18_shdw_val=		EXT_PHY_CONTROL_18_SHDW_VALUE;			// OK
  ext_phy_control_19_val=			EXT_PHY_CONTROL_19_VALUE;			// OK
  ext_phy_control_19_shdw_val=		EXT_PHY_CONTROL_19_SHDW_VALUE;			// OK
  ext_phy_control_20_val=			EXT_PHY_CONTROL_20_VALUE;			// OK
  ext_phy_control_20_shdw_val=		EXT_PHY_CONTROL_20_SHDW_VALUE;			// OK
  ext_phy_control_21_val=			EXT_PHY_CONTROL_21_VALUE;			// OK
  ext_phy_control_21_shdw_val=		EXT_PHY_CONTROL_21_SHDW_VALUE;			// OK
  ext_phy_control_22_val=			EXT_PHY_CONTROL_22_VALUE;			// OK
  ext_phy_control_22_shdw_val=		EXT_PHY_CONTROL_22_SHDW_VALUE;			// OK
  ext_phy_control_23_val=			EXT_PHY_CONTROL_23_VALUE;			// OK
  ext_phy_control_23_shdw_val=		EXT_PHY_CONTROL_23_SHDW_VALUE;			// OK
  ext_phy_control_24_val=			EXT_PHY_CONTROL_24_VALUE;			// OK
  ext_phy_control_24_shdw_val=		EXT_PHY_CONTROL_24_SHDW_VALUE;			// OK
  ext_phy_control_25_val=			EXT_PHY_CONTROL_25_VALUE;			// OK
  ext_phy_control_25_shdw_val=		EXT_PHY_CONTROL_25_SHDW_VALUE;			// OK
  ext_phy_control_26_val=			EXT_PHY_CONTROL_26_VALUE;			// OK
  ext_phy_control_26_shdw_val=		EXT_PHY_CONTROL_26_SHDW_VALUE;			// OK
  ext_phy_control_27_val=			EXT_PHY_CONTROL_27_VALUE;			// OK
  ext_phy_control_27_shdw_val=		EXT_PHY_CONTROL_27_SHDW_VALUE;			// OK
  ext_phy_control_28_val=			EXT_PHY_CONTROL_28_VALUE;			// OK
  ext_phy_control_28_shdw_val=		EXT_PHY_CONTROL_28_SHDW_VALUE;			// OK
  ext_phy_control_29_val=			EXT_PHY_CONTROL_29_VALUE;			// OK
  ext_phy_control_29_shdw_val=		EXT_PHY_CONTROL_29_SHDW_VALUE;			// OK
  ext_phy_control_30_val=			EXT_PHY_CONTROL_30_VALUE;			// OK
  ext_phy_control_30_shdw_val=		EXT_PHY_CONTROL_30_SHDW_VALUE;			// OK

  mr1_val=				LPDDR2_MR1_VALUE_FOR_SILICON;			// OK
  mr2_val =				0x6;						// WL=4-RL=8
  mr3_val =				0x1;						// DS=34ohm
}


ddr_config_elpida_EDB8164B3PF1DF_2X4_OPP_WAKEUP_DDR_400()
{  
  GEL_TextOut("ddr_config_elpida_EDB8164B3PF1DF_2X4_OPP_WAKEUP_DDR_400 NOT IMPLEMENTED\n");
}

ddr_config_elpida_EDBA164B1PB1DF_4X4_OPP_WAKEUP_DDR_400()
{
  sdram_config_val=			SDRAM_CONFIG_OPP_WAKEUP_DDR_400_4X4_VALUE;		// OK
  sdram_config_2_val=			SDRAM_CONFIG_2_OPP_WAKEUP_DDR_400_4X4_VALUE;		// OK
  sdram_ref_ctrl_val=			SDRAM_REF_CTRL_OPP_WAKEUP_DDR_400_4X4_VALUE;		// OK
  sdram_ref_ctrl_shdw_val=		SDRAM_REF_CTRL_SHDW_OPP_WAKEUP_DDR_400_4X4_VALUE;	// OK
  sdram_tim_1_val=			SDRAM_TIM_1_OPP_WAKEUP_DDR_400_4X4_VALUE;		// OK
  sdram_tim_1_shdw_val=			SDRAM_TIM_1_SHDW_OPP_WAKEUP_DDR_400_4X4_VALUE;		// OK
  sdram_tim_2_val=			SDRAM_TIM_2_OPP_WAKEUP_DDR_400_4X4_VALUE;		// OK
  sdram_tim_2_shdw_val=			SDRAM_TIM_2_SHDW_OPP_WAKEUP_DDR_400_4X4_VALUE;		// OK
  sdram_tim_3_val=			SDRAM_TIM_3_OPP_WAKEUP_DDR_400_4X4_VALUE;		// OK
  sdram_tim_3_shdw_val=			SDRAM_TIM_3_SHDW_OPP_WAKEUP_DDR_400_4X4_VALUE;		// OK
  power_mgmt_ctrl_val=			PWR_MGMT_CTRL_VALUE;				// OK
  power_mgmt_ctrl_shdw_val=		PWR_MGMT_CTRL_SHDW_VALUE;			// OK
  ocp_cfg_val=				OCP_CONFIG_VALUE;				// OK
  dll_calib_control_val=			DLL_CALIB_CTRL_VALUE;				// OK
  dll_calib_control_shdw_val=		DLL_CALIB_CTRL_SHDW_VALUE;			// OK
  zq_cfg_val=				ZQ_CONFIG_VALUE;				// OK
  temp_alert_config_val=			TEMP_ALERT_CFG_VALUE;				// OK
  read_write_leveling_ramp_window_val =	READ_WRITE_LEVELING_RAMP_WINDOW_VALUE;		// OK
  read_write_leveling_ramp_control_val =	READ_WRITE_LEVELING_RAMP_CONTROL_VALUE;		// OK
  read_write_leveling_control_val =	READ_WRITE_LEVELING_CONTROL_VALUE;		// OK
  ddr_phy_control_1_val=			DDR_PHY_CTRL_1_OPP_WAKEUP_DDR_400__FAST_DLL_LOCK__MAX_LOCK_DIFF_16_VALUE;	// OK
  ddr_phy_control_1_shdw_val=		DDR_PHY_CTRL_1_SHDW_OPP_WAKEUP_DDR_400__FAST_DLL_LOCK__MAX_LOCK_DIFF_16_VALUE;	// OK
  ddr_phy_control_2_val=			DDR_PHY_CTRL_2_VALUE;				// OK
  rd_wr_exec_thresh_val=			RD_WR_EXEC_THRESH_VALUE;			// OK
  ext_phy_control_1_val=			EXT_PHY_CONTROL_1_VALUE;			// OK
  ext_phy_control_1_shdw_val=		EXT_PHY_CONTROL_1_SHDW_VALUE;			// OK
  ext_phy_control_2_val=			EXT_PHY_CONTROL_2_OPP_WAKEUP_DDR_400_4X4_VALUE;	// OK
  ext_phy_control_2_shdw_val=		EXT_PHY_CONTROL_2_SHDW_OPP_WAKEUP_DDR_400_4X4_VALUE;	// OK
  ext_phy_control_3_val=			EXT_PHY_CONTROL_3_OPP_WAKEUP_DDR_400_4X4_VALUE;	// OK
  ext_phy_control_3_shdw_val=		EXT_PHY_CONTROL_3_SHDW_OPP_WAKEUP_DDR_400_4X4_VALUE;	// OK
  ext_phy_control_4_val=			EXT_PHY_CONTROL_4_OPP_WAKEUP_DDR_400_4X4_VALUE;	// OK
  ext_phy_control_4_shdw_val=		EXT_PHY_CONTROL_4_SHDW_OPP_WAKEUP_DDR_400_4X4_VALUE;	// OK
  ext_phy_control_5_val=			EXT_PHY_CONTROL_5_VALUE;			// OK
  ext_phy_control_5_shdw_val=		EXT_PHY_CONTROL_5_SHDW_VALUE;			// OK
  ext_phy_control_6_val=			EXT_PHY_CONTROL_6_VALUE;			// OK
  ext_phy_control_6_shdw_val=		EXT_PHY_CONTROL_6_SHDW_VALUE;			// OK
  ext_phy_control_7_val=			EXT_PHY_CONTROL_7_VALUE;			// OK
  ext_phy_control_7_shdw_val=		EXT_PHY_CONTROL_7_SHDW_VALUE;			// OK
  ext_phy_control_8_val=			EXT_PHY_CONTROL_8_VALUE;			// OK
  ext_phy_control_8_shdw_val=		EXT_PHY_CONTROL_8_SHDW_VALUE;			// OK
  ext_phy_control_9_val=			EXT_PHY_CONTROL_9_VALUE;			// OK
  ext_phy_control_9_shdw_val=		EXT_PHY_CONTROL_9_SHDW_VALUE;			// OK
  ext_phy_control_10_val=			EXT_PHY_CONTROL_10_VALUE;			// OK
  ext_phy_control_10_shdw_val=		EXT_PHY_CONTROL_10_SHDW_VALUE;			// OK
  ext_phy_control_11_val=			EXT_PHY_CONTROL_11_VALUE;			// OK
  ext_phy_control_11_shdw_val=		EXT_PHY_CONTROL_11_SHDW_VALUE;			// OK
  ext_phy_control_12_val=			EXT_PHY_CONTROL_12_VALUE;			// OK
  ext_phy_control_12_shdw_val=		EXT_PHY_CONTROL_12_SHDW_VALUE;			// OK
  ext_phy_control_13_val=			EXT_PHY_CONTROL_13_VALUE;			// OK
  ext_phy_control_13_shdw_val=		EXT_PHY_CONTROL_13_SHDW_VALUE;			// OK
  ext_phy_control_14_val=			EXT_PHY_CONTROL_14_VALUE;			// OK
  ext_phy_control_14_shdw_val=		EXT_PHY_CONTROL_14_SHDW_VALUE;			// OK
  ext_phy_control_15_val=			EXT_PHY_CONTROL_15_VALUE;			// OK
  ext_phy_control_15_shdw_val=		EXT_PHY_CONTROL_15_SHDW_VALUE;			// OK
  ext_phy_control_16_val=			EXT_PHY_CONTROL_16_VALUE;			// OK
  ext_phy_control_16_shdw_val=		EXT_PHY_CONTROL_16_SHDW_VALUE;			// OK
  ext_phy_control_17_val=			EXT_PHY_CONTROL_17_VALUE;			// OK
  ext_phy_control_17_shdw_val=		EXT_PHY_CONTROL_17_SHDW_VALUE;			// OK
  ext_phy_control_18_val=			EXT_PHY_CONTROL_18_VALUE;			// OK
  ext_phy_control_18_shdw_val=		EXT_PHY_CONTROL_18_SHDW_VALUE;			// OK
  ext_phy_control_19_val=			EXT_PHY_CONTROL_19_VALUE;			// OK
  ext_phy_control_19_shdw_val=		EXT_PHY_CONTROL_19_SHDW_VALUE;			// OK
  ext_phy_control_20_val=			EXT_PHY_CONTROL_20_VALUE;			// OK
  ext_phy_control_20_shdw_val=		EXT_PHY_CONTROL_20_SHDW_VALUE;			// OK
  ext_phy_control_21_val=			EXT_PHY_CONTROL_21_VALUE;			// OK
  ext_phy_control_21_shdw_val=		EXT_PHY_CONTROL_21_SHDW_VALUE;			// OK
  ext_phy_control_22_val=			EXT_PHY_CONTROL_22_VALUE;			// OK
  ext_phy_control_22_shdw_val=		EXT_PHY_CONTROL_22_SHDW_VALUE;			// OK
  ext_phy_control_23_val=			EXT_PHY_CONTROL_23_VALUE;			// OK
  ext_phy_control_23_shdw_val=		EXT_PHY_CONTROL_23_SHDW_VALUE;			// OK
  ext_phy_control_24_val=			EXT_PHY_CONTROL_24_VALUE;			// OK
  ext_phy_control_24_shdw_val=		EXT_PHY_CONTROL_24_SHDW_VALUE;			// OK
  ext_phy_control_25_val=			EXT_PHY_CONTROL_25_VALUE;			// OK
  ext_phy_control_25_shdw_val=		EXT_PHY_CONTROL_25_SHDW_VALUE;			// OK
  ext_phy_control_26_val=			EXT_PHY_CONTROL_26_VALUE;			// OK
  ext_phy_control_26_shdw_val=		EXT_PHY_CONTROL_26_SHDW_VALUE;			// OK
  ext_phy_control_27_val=			EXT_PHY_CONTROL_27_VALUE;			// OK
  ext_phy_control_27_shdw_val=		EXT_PHY_CONTROL_27_SHDW_VALUE;			// OK
  ext_phy_control_28_val=			EXT_PHY_CONTROL_28_VALUE;			// OK
  ext_phy_control_28_shdw_val=		EXT_PHY_CONTROL_28_SHDW_VALUE;			// OK
  ext_phy_control_29_val=			EXT_PHY_CONTROL_29_VALUE;			// OK
  ext_phy_control_29_shdw_val=		EXT_PHY_CONTROL_29_SHDW_VALUE;			// OK
  ext_phy_control_30_val=			EXT_PHY_CONTROL_30_VALUE;			// OK
  ext_phy_control_30_shdw_val=		EXT_PHY_CONTROL_30_SHDW_VALUE;			// OK


  mr1_val=				LPDDR2_MR1_VALUE_FOR_SILICON;			// OK
  mr2_val =				0x6;						// WL=4-RL=8
  mr3_val =				0x1;						// DS=34ohm
}

ddr_config_samsung_K3PE0E000B_XGC2_4X4_OPP_WAKEUP_DDR_400()
{
  sdram_config_val=			SDRAM_CONFIG_OPP_WAKEUP_DDR_400_4X4_VALUE;		// OK
  sdram_config_2_val=			SDRAM_CONFIG_2_OPP_WAKEUP_DDR_400_4X4_VALUE;		// OK
  sdram_ref_ctrl_val=			SDRAM_REF_CTRL_OPP_WAKEUP_DDR_400_4X4_VALUE;		// OK
  sdram_ref_ctrl_shdw_val=		SDRAM_REF_CTRL_SHDW_OPP_WAKEUP_DDR_400_4X4_VALUE;	// OK
  sdram_tim_1_val=			SDRAM_TIM_1_OPP_WAKEUP_DDR_400_4X4_VALUE;		// OK
  sdram_tim_1_shdw_val=			SDRAM_TIM_1_SHDW_OPP_WAKEUP_DDR_400_4X4_VALUE;		// OK
  sdram_tim_2_val=			SDRAM_TIM_2_OPP_WAKEUP_DDR_400_4X4_VALUE;		// OK
  sdram_tim_2_shdw_val=			SDRAM_TIM_2_SHDW_OPP_WAKEUP_DDR_400_4X4_VALUE;		// OK
  sdram_tim_3_val=			SDRAM_TIM_3_OPP_WAKEUP_DDR_400_4X4_VALUE;		// OK
  sdram_tim_3_shdw_val=			SDRAM_TIM_3_SHDW_OPP_WAKEUP_DDR_400_4X4_VALUE;		// OK
  power_mgmt_ctrl_val=			PWR_MGMT_CTRL_VALUE;				// OK
  power_mgmt_ctrl_shdw_val=		PWR_MGMT_CTRL_SHDW_VALUE;			// OK
  ocp_cfg_val=				OCP_CONFIG_VALUE;				// OK
  dll_calib_control_val=			DLL_CALIB_CTRL_VALUE;				// OK
  dll_calib_control_shdw_val=		DLL_CALIB_CTRL_SHDW_VALUE;			// OK
  zq_cfg_val=				ZQ_CONFIG_VALUE;				// OK
  temp_alert_config_val=			TEMP_ALERT_CFG_VALUE;				// OK
  read_write_leveling_ramp_window_val =	READ_WRITE_LEVELING_RAMP_WINDOW_VALUE;		// OK
  read_write_leveling_ramp_control_val =	READ_WRITE_LEVELING_RAMP_CONTROL_VALUE;		// OK
  read_write_leveling_control_val =	READ_WRITE_LEVELING_CONTROL_VALUE;		// OK
  ddr_phy_control_1_val=			DDR_PHY_CTRL_1_OPP_WAKEUP_DDR_400__FAST_DLL_LOCK__MAX_LOCK_DIFF_16_VALUE;	// OK
  ddr_phy_control_1_shdw_val=		DDR_PHY_CTRL_1_SHDW_OPP_WAKEUP_DDR_400__FAST_DLL_LOCK__MAX_LOCK_DIFF_16_VALUE;	// OK
  ddr_phy_control_2_val=			DDR_PHY_CTRL_2_VALUE;				// OK
  rd_wr_exec_thresh_val=			RD_WR_EXEC_THRESH_VALUE;			// OK
  ext_phy_control_1_val=			EXT_PHY_CONTROL_1_VALUE;			// OK
  ext_phy_control_1_shdw_val=		EXT_PHY_CONTROL_1_SHDW_VALUE;			// OK
  ext_phy_control_2_val=			EXT_PHY_CONTROL_2_OPP_WAKEUP_DDR_400_4X4_VALUE;	// OK
  ext_phy_control_2_shdw_val=		EXT_PHY_CONTROL_2_SHDW_OPP_WAKEUP_DDR_400_4X4_VALUE;	// OK
  ext_phy_control_3_val=			EXT_PHY_CONTROL_3_OPP_WAKEUP_DDR_400_4X4_VALUE;	// OK
  ext_phy_control_3_shdw_val=		EXT_PHY_CONTROL_3_SHDW_OPP_WAKEUP_DDR_400_4X4_VALUE;	// OK
  ext_phy_control_4_val=			EXT_PHY_CONTROL_4_OPP_WAKEUP_DDR_400_4X4_VALUE;	// OK
  ext_phy_control_4_shdw_val=		EXT_PHY_CONTROL_4_SHDW_OPP_WAKEUP_DDR_400_4X4_VALUE;	// OK
  ext_phy_control_5_val=			EXT_PHY_CONTROL_5_VALUE;			// OK
  ext_phy_control_5_shdw_val=		EXT_PHY_CONTROL_5_SHDW_VALUE;			// OK
  ext_phy_control_6_val=			EXT_PHY_CONTROL_6_VALUE;			// OK
  ext_phy_control_6_shdw_val=		EXT_PHY_CONTROL_6_SHDW_VALUE;			// OK
  ext_phy_control_7_val=			EXT_PHY_CONTROL_7_VALUE;			// OK
  ext_phy_control_7_shdw_val=		EXT_PHY_CONTROL_7_SHDW_VALUE;			// OK
  ext_phy_control_8_val=			EXT_PHY_CONTROL_8_VALUE;			// OK
  ext_phy_control_8_shdw_val=		EXT_PHY_CONTROL_8_SHDW_VALUE;			// OK
  ext_phy_control_9_val=			EXT_PHY_CONTROL_9_VALUE;			// OK
  ext_phy_control_9_shdw_val=		EXT_PHY_CONTROL_9_SHDW_VALUE;			// OK
  ext_phy_control_10_val=			EXT_PHY_CONTROL_10_VALUE;			// OK
  ext_phy_control_10_shdw_val=		EXT_PHY_CONTROL_10_SHDW_VALUE;			// OK
  ext_phy_control_11_val=			EXT_PHY_CONTROL_11_VALUE;			// OK
  ext_phy_control_11_shdw_val=		EXT_PHY_CONTROL_11_SHDW_VALUE;			// OK
  ext_phy_control_12_val=			EXT_PHY_CONTROL_12_VALUE;			// OK
  ext_phy_control_12_shdw_val=		EXT_PHY_CONTROL_12_SHDW_VALUE;			// OK
  ext_phy_control_13_val=			EXT_PHY_CONTROL_13_VALUE;			// OK
  ext_phy_control_13_shdw_val=		EXT_PHY_CONTROL_13_SHDW_VALUE;			// OK
  ext_phy_control_14_val=			EXT_PHY_CONTROL_14_VALUE;			// OK
  ext_phy_control_14_shdw_val=		EXT_PHY_CONTROL_14_SHDW_VALUE;			// OK
  ext_phy_control_15_val=			EXT_PHY_CONTROL_15_VALUE;			// OK
  ext_phy_control_15_shdw_val=		EXT_PHY_CONTROL_15_SHDW_VALUE;			// OK
  ext_phy_control_16_val=			EXT_PHY_CONTROL_16_VALUE;			// OK
  ext_phy_control_16_shdw_val=		EXT_PHY_CONTROL_16_SHDW_VALUE;			// OK
  ext_phy_control_17_val=			EXT_PHY_CONTROL_17_VALUE;			// OK
  ext_phy_control_17_shdw_val=		EXT_PHY_CONTROL_17_SHDW_VALUE;			// OK
  ext_phy_control_18_val=			EXT_PHY_CONTROL_18_VALUE;			// OK
  ext_phy_control_18_shdw_val=		EXT_PHY_CONTROL_18_SHDW_VALUE;			// OK
  ext_phy_control_19_val=			EXT_PHY_CONTROL_19_VALUE;			// OK
  ext_phy_control_19_shdw_val=		EXT_PHY_CONTROL_19_SHDW_VALUE;			// OK
  ext_phy_control_20_val=			EXT_PHY_CONTROL_20_VALUE;			// OK
  ext_phy_control_20_shdw_val=		EXT_PHY_CONTROL_20_SHDW_VALUE;			// OK
  ext_phy_control_21_val=			EXT_PHY_CONTROL_21_VALUE;			// OK
  ext_phy_control_21_shdw_val=		EXT_PHY_CONTROL_21_SHDW_VALUE;			// OK
  ext_phy_control_22_val=			EXT_PHY_CONTROL_22_VALUE;			// OK
  ext_phy_control_22_shdw_val=		EXT_PHY_CONTROL_22_SHDW_VALUE;			// OK
  ext_phy_control_23_val=			EXT_PHY_CONTROL_23_VALUE;			// OK
  ext_phy_control_23_shdw_val=		EXT_PHY_CONTROL_23_SHDW_VALUE;			// OK
  ext_phy_control_24_val=			EXT_PHY_CONTROL_24_VALUE;			// OK
  ext_phy_control_24_shdw_val=		EXT_PHY_CONTROL_24_SHDW_VALUE;			// OK
  ext_phy_control_25_val=			EXT_PHY_CONTROL_25_VALUE;			// OK
  ext_phy_control_25_shdw_val=		EXT_PHY_CONTROL_25_SHDW_VALUE;			// OK
  ext_phy_control_26_val=			EXT_PHY_CONTROL_26_VALUE;			// OK
  ext_phy_control_26_shdw_val=		EXT_PHY_CONTROL_26_SHDW_VALUE;			// OK
  ext_phy_control_27_val=			EXT_PHY_CONTROL_27_VALUE;			// OK
  ext_phy_control_27_shdw_val=		EXT_PHY_CONTROL_27_SHDW_VALUE;			// OK
  ext_phy_control_28_val=			EXT_PHY_CONTROL_28_VALUE;			// OK
  ext_phy_control_28_shdw_val=		EXT_PHY_CONTROL_28_SHDW_VALUE;			// OK
  ext_phy_control_29_val=			EXT_PHY_CONTROL_29_VALUE;			// OK
  ext_phy_control_29_shdw_val=		EXT_PHY_CONTROL_29_SHDW_VALUE;			// OK
  ext_phy_control_30_val=			EXT_PHY_CONTROL_30_VALUE;			// OK
  ext_phy_control_30_shdw_val=		EXT_PHY_CONTROL_30_SHDW_VALUE;			// OK

  mr1_val=				LPDDR2_MR1_VALUE_FOR_SILICON;			// OK
  mr2_val =				0x6;						// WL=4-RL=8
  mr3_val =				0x1;						// DS=34ohm
}

ddr_config_elpida_EDB8164B3PF1DF_2X4_OPP_WAKEUP_DDR_532()
{ 
  GEL_TextOut("ddr_config_elpida_EDB8164B3PF1DF_2X4_OPP_WAKEUP_DDR_532 NOT IMPLEMENTED\n");
}

ddr_config_elpida_EDBA164B1PB1DF_4X4_OPP_WAKEUP_DDR_532()
{
  sdram_config_val=			SDRAM_CONFIG_OPP_WAKEUP_DDR_532_4X4_VALUE;			// OK
  sdram_config_2_val=			SDRAM_CONFIG_2_OPP_WAKEUP_DDR_532_4X4_VALUE;			// OK
  sdram_ref_ctrl_val=			SDRAM_REF_CTRL_OPP_WAKEUP_DDR_532_4X4_VALUE;			// OK
  sdram_ref_ctrl_shdw_val=		SDRAM_REF_CTRL_SHDW_OPP_WAKEUP_DDR_532_4X4_VALUE;		// OK
  sdram_tim_1_val=			SDRAM_TIM_1_OPP_WAKEUP_DDR_532_4X4_VALUE;			// OK
  sdram_tim_1_shdw_val=			SDRAM_TIM_1_SHDW_OPP_WAKEUP_DDR_532_4X4_VALUE;			// OK
  sdram_tim_2_val=			SDRAM_TIM_2_OPP_WAKEUP_DDR_532_4X4_VALUE;			// OK
  sdram_tim_2_shdw_val=			SDRAM_TIM_2_SHDW_OPP_WAKEUP_DDR_532_4X4_VALUE;			// OK
  sdram_tim_3_val=			SDRAM_TIM_3_OPP_WAKEUP_DDR_532_4X4_VALUE;			// OK
  sdram_tim_3_shdw_val=			SDRAM_TIM_3_SHDW_OPP_WAKEUP_DDR_532_4X4_VALUE;			// OK
  power_mgmt_ctrl_val=			PWR_MGMT_CTRL_VALUE;				// OK
  power_mgmt_ctrl_shdw_val=		PWR_MGMT_CTRL_SHDW_VALUE;			// OK
  ocp_cfg_val=				OCP_CONFIG_VALUE;				// OK
  dll_calib_control_val=			DLL_CALIB_CTRL_VALUE;				// OK
  dll_calib_control_shdw_val=		DLL_CALIB_CTRL_SHDW_VALUE;			// OK
  zq_cfg_val=				ZQ_CONFIG_VALUE;				// OK
  temp_alert_config_val=			TEMP_ALERT_CFG_VALUE;				// OK
  read_write_leveling_ramp_window_val =	READ_WRITE_LEVELING_RAMP_WINDOW_VALUE;		// OK
  read_write_leveling_ramp_control_val =	READ_WRITE_LEVELING_RAMP_CONTROL_VALUE;		// OK
  read_write_leveling_control_val =	READ_WRITE_LEVELING_CONTROL_VALUE;		// OK
  ddr_phy_control_1_val=			DDR_PHY_CTRL_1_OPP_WAKEUP_DDR_532__FAST_DLL_LOCK__MAX_LOCK_DIFF_16_VALUE;		// OK
  ddr_phy_control_1_shdw_val=		DDR_PHY_CTRL_1_SHDW_OPP_WAKEUP_DDR_532__FAST_DLL_LOCK__MAX_LOCK_DIFF_16_VALUE;		// OK
  ddr_phy_control_2_val=			DDR_PHY_CTRL_2_VALUE;				// OK
  rd_wr_exec_thresh_val=			RD_WR_EXEC_THRESH_VALUE;			// OK
  ext_phy_control_1_val=			EXT_PHY_CONTROL_1_VALUE;			// OK
  ext_phy_control_1_shdw_val=		EXT_PHY_CONTROL_1_SHDW_VALUE;			// OK
  ext_phy_control_2_val=			EXT_PHY_CONTROL_2_OPP_WAKEUP_DDR_532_4X4_VALUE;		// OK
  ext_phy_control_2_shdw_val=		EXT_PHY_CONTROL_2_SHDW_OPP_WAKEUP_DDR_532_4X4_VALUE;	// OK
  ext_phy_control_3_val=			EXT_PHY_CONTROL_3_OPP_WAKEUP_DDR_532_4X4_VALUE;		// OK
  ext_phy_control_3_shdw_val=		EXT_PHY_CONTROL_3_SHDW_OPP_WAKEUP_DDR_532_4X4_VALUE;	// OK
  ext_phy_control_4_val=			EXT_PHY_CONTROL_4_OPP_WAKEUP_DDR_532_4X4_VALUE;		// OK
  ext_phy_control_4_shdw_val=		EXT_PHY_CONTROL_4_SHDW_OPP_WAKEUP_DDR_532_4X4_VALUE;	// OK
  ext_phy_control_5_val=			EXT_PHY_CONTROL_5_VALUE;			// OK
  ext_phy_control_5_shdw_val=		EXT_PHY_CONTROL_5_SHDW_VALUE;			// OK
  ext_phy_control_6_val=			EXT_PHY_CONTROL_6_VALUE;			// OK
  ext_phy_control_6_shdw_val=		EXT_PHY_CONTROL_6_SHDW_VALUE;			// OK
  ext_phy_control_7_val=			EXT_PHY_CONTROL_7_VALUE;			// OK
  ext_phy_control_7_shdw_val=		EXT_PHY_CONTROL_7_SHDW_VALUE;			// OK
  ext_phy_control_8_val=			EXT_PHY_CONTROL_8_VALUE;			// OK
  ext_phy_control_8_shdw_val=		EXT_PHY_CONTROL_8_SHDW_VALUE;			// OK
  ext_phy_control_9_val=			EXT_PHY_CONTROL_9_VALUE;			// OK
  ext_phy_control_9_shdw_val=		EXT_PHY_CONTROL_9_SHDW_VALUE;			// OK
  ext_phy_control_10_val=			EXT_PHY_CONTROL_10_VALUE;			// OK
  ext_phy_control_10_shdw_val=		EXT_PHY_CONTROL_10_SHDW_VALUE;			// OK
  ext_phy_control_11_val=			EXT_PHY_CONTROL_11_VALUE;			// OK
  ext_phy_control_11_shdw_val=		EXT_PHY_CONTROL_11_SHDW_VALUE;			// OK
  ext_phy_control_12_val=			EXT_PHY_CONTROL_12_VALUE;			// OK
  ext_phy_control_12_shdw_val=		EXT_PHY_CONTROL_12_SHDW_VALUE;			// OK
  ext_phy_control_13_val=			EXT_PHY_CONTROL_13_VALUE;			// OK
  ext_phy_control_13_shdw_val=		EXT_PHY_CONTROL_13_SHDW_VALUE;			// OK
  ext_phy_control_14_val=			EXT_PHY_CONTROL_14_VALUE;			// OK
  ext_phy_control_14_shdw_val=		EXT_PHY_CONTROL_14_SHDW_VALUE;			// OK
  ext_phy_control_15_val=			EXT_PHY_CONTROL_15_VALUE;			// OK
  ext_phy_control_15_shdw_val=		EXT_PHY_CONTROL_15_SHDW_VALUE;			// OK
  ext_phy_control_16_val=			EXT_PHY_CONTROL_16_VALUE;			// OK
  ext_phy_control_16_shdw_val=		EXT_PHY_CONTROL_16_SHDW_VALUE;			// OK
  ext_phy_control_17_val=			EXT_PHY_CONTROL_17_VALUE;			// OK
  ext_phy_control_17_shdw_val=		EXT_PHY_CONTROL_17_SHDW_VALUE;			// OK
  ext_phy_control_18_val=			EXT_PHY_CONTROL_18_VALUE;			// OK
  ext_phy_control_18_shdw_val=		EXT_PHY_CONTROL_18_SHDW_VALUE;			// OK
  ext_phy_control_19_val=			EXT_PHY_CONTROL_19_VALUE;			// OK
  ext_phy_control_19_shdw_val=		EXT_PHY_CONTROL_19_SHDW_VALUE;			// OK
  ext_phy_control_20_val=			EXT_PHY_CONTROL_20_VALUE;			// OK
  ext_phy_control_20_shdw_val=		EXT_PHY_CONTROL_20_SHDW_VALUE;			// OK
  ext_phy_control_21_val=			EXT_PHY_CONTROL_21_VALUE;			// OK
  ext_phy_control_21_shdw_val=		EXT_PHY_CONTROL_21_SHDW_VALUE;			// OK
  ext_phy_control_22_val=			EXT_PHY_CONTROL_22_VALUE;			// OK
  ext_phy_control_22_shdw_val=		EXT_PHY_CONTROL_22_SHDW_VALUE;			// OK
  ext_phy_control_23_val=			EXT_PHY_CONTROL_23_VALUE;			// OK
  ext_phy_control_23_shdw_val=		EXT_PHY_CONTROL_23_SHDW_VALUE;			// OK
  ext_phy_control_24_val=			EXT_PHY_CONTROL_24_VALUE;			// OK
  ext_phy_control_24_shdw_val=		EXT_PHY_CONTROL_24_SHDW_VALUE;			// OK
  ext_phy_control_25_val=			EXT_PHY_CONTROL_25_VALUE;			// OK
  ext_phy_control_25_shdw_val=		EXT_PHY_CONTROL_25_SHDW_VALUE;			// OK
  ext_phy_control_26_val=			EXT_PHY_CONTROL_26_VALUE;			// OK
  ext_phy_control_26_shdw_val=		EXT_PHY_CONTROL_26_SHDW_VALUE;			// OK
  ext_phy_control_27_val=			EXT_PHY_CONTROL_27_VALUE;			// OK
  ext_phy_control_27_shdw_val=		EXT_PHY_CONTROL_27_SHDW_VALUE;			// OK
  ext_phy_control_28_val=			EXT_PHY_CONTROL_28_VALUE;			// OK
  ext_phy_control_28_shdw_val=		EXT_PHY_CONTROL_28_SHDW_VALUE;			// OK
  ext_phy_control_29_val=			EXT_PHY_CONTROL_29_VALUE;			// OK
  ext_phy_control_29_shdw_val=		EXT_PHY_CONTROL_29_SHDW_VALUE;			// OK
  ext_phy_control_30_val=			EXT_PHY_CONTROL_30_VALUE;			// OK
  ext_phy_control_30_shdw_val=		EXT_PHY_CONTROL_30_SHDW_VALUE;			// OK


  mr1_val=				LPDDR2_MR1_VALUE_FOR_SILICON;			// OK
  mr2_val =				0x6;						// WL=4-RL=8
  mr3_val =				0x1;						// DS=34ohm
}

ddr_config_samsung_K3PE0E000B_XGC2_4X4_OPP_WAKEUP_DDR_532()
{
  sdram_config_val=			SDRAM_CONFIG_OPP_WAKEUP_DDR_532_4X4_VALUE;			// OK
  sdram_config_2_val=			SDRAM_CONFIG_2_OPP_WAKEUP_DDR_532_4X4_VALUE;		// OK
  sdram_ref_ctrl_val=			SDRAM_REF_CTRL_OPP_WAKEUP_DDR_532_4X4_VALUE;		// OK
  sdram_ref_ctrl_shdw_val=		SDRAM_REF_CTRL_SHDW_OPP_WAKEUP_DDR_532_4X4_VALUE;		// OK
  sdram_tim_1_val=			SDRAM_TIM_1_OPP_WAKEUP_DDR_532_4X4_VALUE;			// OK
  sdram_tim_1_shdw_val=			SDRAM_TIM_1_SHDW_OPP_WAKEUP_DDR_532_4X4_VALUE;		// OK
  sdram_tim_2_val=			SDRAM_TIM_2_OPP_WAKEUP_DDR_532_4X4_VALUE;			// OK
  sdram_tim_2_shdw_val=			SDRAM_TIM_2_SHDW_OPP_WAKEUP_DDR_532_4X4_VALUE;		// OK
  sdram_tim_3_val=			SDRAM_TIM_3_OPP_WAKEUP_DDR_532_4X4_VALUE;			// OK
  sdram_tim_3_shdw_val=			SDRAM_TIM_3_SHDW_OPP_WAKEUP_DDR_532_4X4_VALUE;		// OK
  power_mgmt_ctrl_val=			PWR_MGMT_CTRL_VALUE;				// OK
  power_mgmt_ctrl_shdw_val=		PWR_MGMT_CTRL_SHDW_VALUE;			// OK
  ocp_cfg_val=				OCP_CONFIG_VALUE;				// OK
  dll_calib_control_val=			DLL_CALIB_CTRL_VALUE;				// OK
  dll_calib_control_shdw_val=		DLL_CALIB_CTRL_SHDW_VALUE;			// OK
  zq_cfg_val=				ZQ_CONFIG_VALUE;				// OK
  temp_alert_config_val=			TEMP_ALERT_CFG_VALUE;				// OK
  read_write_leveling_ramp_window_val =	READ_WRITE_LEVELING_RAMP_WINDOW_VALUE;		// OK
  read_write_leveling_ramp_control_val =	READ_WRITE_LEVELING_RAMP_CONTROL_VALUE;		// OK
  read_write_leveling_control_val =	READ_WRITE_LEVELING_CONTROL_VALUE;		// OK
  ddr_phy_control_1_val=			DDR_PHY_CTRL_1_OPP_WAKEUP_DDR_532__FAST_DLL_LOCK__MAX_LOCK_DIFF_16_VALUE;		// OK
  ddr_phy_control_1_shdw_val=		DDR_PHY_CTRL_1_SHDW_OPP_WAKEUP_DDR_532__FAST_DLL_LOCK__MAX_LOCK_DIFF_16_VALUE;	// OK
  ddr_phy_control_2_val=			DDR_PHY_CTRL_2_VALUE;				// OK
  rd_wr_exec_thresh_val=			RD_WR_EXEC_THRESH_VALUE;			// OK
  ext_phy_control_1_val=			EXT_PHY_CONTROL_1_VALUE;			// OK
  ext_phy_control_1_shdw_val=		EXT_PHY_CONTROL_1_SHDW_VALUE;			// OK
  ext_phy_control_2_val=		EXT_PHY_CONTROL_2_OPP_WAKEUP_DDR_532_4X4_VALUE;		// OK
  ext_phy_control_2_shdw_val=		EXT_PHY_CONTROL_2_SHDW_OPP_WAKEUP_DDR_532_4X4_VALUE;	// OK
  ext_phy_control_3_val=			EXT_PHY_CONTROL_3_OPP_WAKEUP_DDR_532_4X4_VALUE;		// OK
  ext_phy_control_3_shdw_val=		EXT_PHY_CONTROL_3_SHDW_OPP_WAKEUP_DDR_532_4X4_VALUE;	// OK
  ext_phy_control_4_val=			EXT_PHY_CONTROL_4_OPP_WAKEUP_DDR_532_4X4_VALUE;		// OK
  ext_phy_control_4_shdw_val=		EXT_PHY_CONTROL_4_SHDW_OPP_WAKEUP_DDR_532_4X4_VALUE;	// OK
  ext_phy_control_5_val=			EXT_PHY_CONTROL_5_VALUE;			// OK
  ext_phy_control_5_shdw_val=		EXT_PHY_CONTROL_5_SHDW_VALUE;			// OK
  ext_phy_control_6_val=			EXT_PHY_CONTROL_6_VALUE;			// OK
  ext_phy_control_6_shdw_val=		EXT_PHY_CONTROL_6_SHDW_VALUE;			// OK
  ext_phy_control_7_val=			EXT_PHY_CONTROL_7_VALUE;			// OK
  ext_phy_control_7_shdw_val=		EXT_PHY_CONTROL_7_SHDW_VALUE;			// OK
  ext_phy_control_8_val=			EXT_PHY_CONTROL_8_VALUE;			// OK
  ext_phy_control_8_shdw_val=		EXT_PHY_CONTROL_8_SHDW_VALUE;			// OK
  ext_phy_control_9_val=			EXT_PHY_CONTROL_9_VALUE;			// OK
  ext_phy_control_9_shdw_val=		EXT_PHY_CONTROL_9_SHDW_VALUE;			// OK
  ext_phy_control_10_val=			EXT_PHY_CONTROL_10_VALUE;			// OK
  ext_phy_control_10_shdw_val=		EXT_PHY_CONTROL_10_SHDW_VALUE;			// OK
  ext_phy_control_11_val=			EXT_PHY_CONTROL_11_VALUE;			// OK
  ext_phy_control_11_shdw_val=		EXT_PHY_CONTROL_11_SHDW_VALUE;			// OK
  ext_phy_control_12_val=			EXT_PHY_CONTROL_12_VALUE;			// OK
  ext_phy_control_12_shdw_val=		EXT_PHY_CONTROL_12_SHDW_VALUE;			// OK
  ext_phy_control_13_val=			EXT_PHY_CONTROL_13_VALUE;			// OK
  ext_phy_control_13_shdw_val=		EXT_PHY_CONTROL_13_SHDW_VALUE;			// OK
  ext_phy_control_14_val=			EXT_PHY_CONTROL_14_VALUE;			// OK
  ext_phy_control_14_shdw_val=		EXT_PHY_CONTROL_14_SHDW_VALUE;			// OK
  ext_phy_control_15_val=			EXT_PHY_CONTROL_15_VALUE;			// OK
  ext_phy_control_15_shdw_val=		EXT_PHY_CONTROL_15_SHDW_VALUE;			// OK
  ext_phy_control_16_val=			EXT_PHY_CONTROL_16_VALUE;			// OK
  ext_phy_control_16_shdw_val=		EXT_PHY_CONTROL_16_SHDW_VALUE;			// OK
  ext_phy_control_17_val=			EXT_PHY_CONTROL_17_VALUE;			// OK
  ext_phy_control_17_shdw_val=		EXT_PHY_CONTROL_17_SHDW_VALUE;			// OK
  ext_phy_control_18_val=			EXT_PHY_CONTROL_18_VALUE;			// OK
  ext_phy_control_18_shdw_val=		EXT_PHY_CONTROL_18_SHDW_VALUE;			// OK
  ext_phy_control_19_val=			EXT_PHY_CONTROL_19_VALUE;			// OK
  ext_phy_control_19_shdw_val=		EXT_PHY_CONTROL_19_SHDW_VALUE;			// OK
  ext_phy_control_20_val=			EXT_PHY_CONTROL_20_VALUE;			// OK
  ext_phy_control_20_shdw_val=		EXT_PHY_CONTROL_20_SHDW_VALUE;			// OK
  ext_phy_control_21_val=			EXT_PHY_CONTROL_21_VALUE;			// OK
  ext_phy_control_21_shdw_val=		EXT_PHY_CONTROL_21_SHDW_VALUE;			// OK
  ext_phy_control_22_val=			EXT_PHY_CONTROL_22_VALUE;			// OK
  ext_phy_control_22_shdw_val=		EXT_PHY_CONTROL_22_SHDW_VALUE;			// OK
  ext_phy_control_23_val=			EXT_PHY_CONTROL_23_VALUE;			// OK
  ext_phy_control_23_shdw_val=		EXT_PHY_CONTROL_23_SHDW_VALUE;			// OK
  ext_phy_control_24_val=			EXT_PHY_CONTROL_24_VALUE;			// OK
  ext_phy_control_24_shdw_val=		EXT_PHY_CONTROL_24_SHDW_VALUE;			// OK
  ext_phy_control_25_val=			EXT_PHY_CONTROL_25_VALUE;			// OK
  ext_phy_control_25_shdw_val=		EXT_PHY_CONTROL_25_SHDW_VALUE;			// OK
  ext_phy_control_26_val=			EXT_PHY_CONTROL_26_VALUE;			// OK
  ext_phy_control_26_shdw_val=		EXT_PHY_CONTROL_26_SHDW_VALUE;			// OK
  ext_phy_control_27_val=			EXT_PHY_CONTROL_27_VALUE;			// OK
  ext_phy_control_27_shdw_val=		EXT_PHY_CONTROL_27_SHDW_VALUE;			// OK
  ext_phy_control_28_val=			EXT_PHY_CONTROL_28_VALUE;			// OK
  ext_phy_control_28_shdw_val=		EXT_PHY_CONTROL_28_SHDW_VALUE;			// OK
  ext_phy_control_29_val=			EXT_PHY_CONTROL_29_VALUE;			// OK
  ext_phy_control_29_shdw_val=		EXT_PHY_CONTROL_29_SHDW_VALUE;			// OK
  ext_phy_control_30_val=			EXT_PHY_CONTROL_30_VALUE;			// OK
  ext_phy_control_30_shdw_val=		EXT_PHY_CONTROL_30_SHDW_VALUE;			// OK

  mr1_val=				LPDDR2_MR1_VALUE_FOR_SILICON;			// OK
  mr2_val =				0x6;						// WL=4-RL=8
  mr3_val =				0x1;						// DS=34ohm
}


ddr_config_zebu_NOM()
{
  sdram_config_val=			SDRAM_CONFIG_OPP_WAKEUP_DDR_532_2X4_VALUE;			// OK
  sdram_config_2_val=			SDRAM_CONFIG_2_OPP_WAKEUP_DDR_532_2X4_VALUE;		// OK
  sdram_ref_ctrl_val=			SDRAM_REF_CTRL_OPP_WAKEUP_DDR_532_2X4_VALUE;		// OK
  sdram_ref_ctrl_shdw_val=		SDRAM_REF_CTRL_SHDW_OPP_WAKEUP_DDR_532_2X4_VALUE;		// OK
  sdram_tim_1_val=			SDRAM_TIM_1_OPP_WAKEUP_DDR_532_2X4_VALUE;			// OK
  sdram_tim_1_shdw_val=			SDRAM_TIM_1_SHDW_OPP_WAKEUP_DDR_532_2X4_VALUE;		// OK
  sdram_tim_2_val=			SDRAM_TIM_2_OPP_WAKEUP_DDR_532_2X4_VALUE;			// OK
  sdram_tim_2_shdw_val=			SDRAM_TIM_2_SHDW_OPP_WAKEUP_DDR_532_2X4_VALUE;		// OK
  sdram_tim_3_val=			SDRAM_TIM_3_OPP_WAKEUP_DDR_532_2X4_VALUE;			// OK
  sdram_tim_3_shdw_val=			SDRAM_TIM_3_SHDW_OPP_WAKEUP_DDR_532_2X4_VALUE;		// OK
  power_mgmt_ctrl_val=			PWR_MGMT_CTRL_VALUE;				// OK
  power_mgmt_ctrl_shdw_val=		PWR_MGMT_CTRL_SHDW_VALUE;			// OK
  ocp_cfg_val=				OCP_CONFIG_VALUE;				// OK
  dll_calib_control_val=			DLL_CALIB_CTRL_VALUE;				// OK
  dll_calib_control_shdw_val=		DLL_CALIB_CTRL_SHDW_VALUE;			// OK
  zq_cfg_val=				ZQ_CONFIG_VALUE;				// OK
  temp_alert_config_val=			TEMP_ALERT_CFG_VALUE;				// OK
  read_write_leveling_ramp_window_val =	READ_WRITE_LEVELING_RAMP_WINDOW_VALUE;		// OK
  read_write_leveling_ramp_control_val =	READ_WRITE_LEVELING_RAMP_CONTROL_VALUE;		// OK
  read_write_leveling_control_val =	READ_WRITE_LEVELING_CONTROL_VALUE;		// OK
  ddr_phy_control_1_val=			DDR_PHY_CTRL_1_OPP_NOM_ZEBU__FAST_DLL_LOCK__MAX_LOCK_DIFF_16_VALUE;		// OK
  ddr_phy_control_1_shdw_val=		DDR_PHY_CTRL_1_SHDW_OPP_NOM_ZEBU__FAST_DLL_LOCK__MAX_LOCK_DIFF_16_VALUE;	// OK
  ddr_phy_control_2_val=			DDR_PHY_CTRL_2_VALUE;				// OK
  rd_wr_exec_thresh_val=			RD_WR_EXEC_THRESH_VALUE;			// OK
  ext_phy_control_1_val=			EXT_PHY_CONTROL_1_VALUE;			// OK
  ext_phy_control_1_shdw_val=		EXT_PHY_CONTROL_1_SHDW_VALUE;			// OK
  ext_phy_control_2_val=		    EXT_PHY_CONTROL_2_ZEBU_VALUE;			// OK
  ext_phy_control_2_shdw_val=		EXT_PHY_CONTROL_2_SHDW_ZEBU_VALUE;		// OK
  ext_phy_control_3_val=			EXT_PHY_CONTROL_3_ZEBU_VALUE;			// OK
  ext_phy_control_3_shdw_val=		EXT_PHY_CONTROL_3_SHDW_ZEBU_VALUE;		// OK
  ext_phy_control_4_val=			EXT_PHY_CONTROL_4_ZEBU_VALUE;			// OK
  ext_phy_control_4_shdw_val=		EXT_PHY_CONTROL_4_SHDW_ZEBU_VALUE;		// OK
  ext_phy_control_5_val=			EXT_PHY_CONTROL_5_VALUE;			// OK
  ext_phy_control_5_shdw_val=		EXT_PHY_CONTROL_5_SHDW_VALUE;			// OK
  ext_phy_control_6_val=			EXT_PHY_CONTROL_6_VALUE;			// OK
  ext_phy_control_6_shdw_val=		EXT_PHY_CONTROL_6_SHDW_VALUE;			// OK
  ext_phy_control_7_val=			EXT_PHY_CONTROL_7_VALUE;			// OK
  ext_phy_control_7_shdw_val=		EXT_PHY_CONTROL_7_SHDW_VALUE;			// OK
  ext_phy_control_8_val=			EXT_PHY_CONTROL_8_VALUE;			// OK
  ext_phy_control_8_shdw_val=		EXT_PHY_CONTROL_8_SHDW_VALUE;			// OK
  ext_phy_control_9_val=			EXT_PHY_CONTROL_9_VALUE;			// OK
  ext_phy_control_9_shdw_val=		EXT_PHY_CONTROL_9_SHDW_VALUE;			// OK
  ext_phy_control_10_val=			EXT_PHY_CONTROL_10_VALUE;			// OK
  ext_phy_control_10_shdw_val=		EXT_PHY_CONTROL_10_SHDW_VALUE;			// OK
  ext_phy_control_11_val=			EXT_PHY_CONTROL_11_VALUE;			// OK
  ext_phy_control_11_shdw_val=		EXT_PHY_CONTROL_11_SHDW_VALUE;			// OK
  ext_phy_control_12_val=			EXT_PHY_CONTROL_12_VALUE;			// OK
  ext_phy_control_12_shdw_val=		EXT_PHY_CONTROL_12_SHDW_VALUE;			// OK
  ext_phy_control_13_val=			EXT_PHY_CONTROL_13_VALUE;			// OK
  ext_phy_control_13_shdw_val=		EXT_PHY_CONTROL_13_SHDW_VALUE;			// OK
  ext_phy_control_14_val=			EXT_PHY_CONTROL_14_VALUE;			// OK
  ext_phy_control_14_shdw_val=		EXT_PHY_CONTROL_14_SHDW_VALUE;			// OK
  ext_phy_control_15_val=			EXT_PHY_CONTROL_15_VALUE;			// OK
  ext_phy_control_15_shdw_val=		EXT_PHY_CONTROL_15_SHDW_VALUE;			// OK
  ext_phy_control_16_val=			EXT_PHY_CONTROL_16_VALUE;			// OK
  ext_phy_control_16_shdw_val=		EXT_PHY_CONTROL_16_SHDW_VALUE;			// OK
  ext_phy_control_17_val=			EXT_PHY_CONTROL_17_VALUE;			// OK
  ext_phy_control_17_shdw_val=		EXT_PHY_CONTROL_17_SHDW_VALUE;			// OK
  ext_phy_control_18_val=			EXT_PHY_CONTROL_18_VALUE;			// OK
  ext_phy_control_18_shdw_val=		EXT_PHY_CONTROL_18_SHDW_VALUE;			// OK
  ext_phy_control_19_val=			EXT_PHY_CONTROL_19_VALUE;			// OK
  ext_phy_control_19_shdw_val=		EXT_PHY_CONTROL_19_SHDW_VALUE;			// OK
  ext_phy_control_20_val=			EXT_PHY_CONTROL_20_VALUE;			// OK
  ext_phy_control_20_shdw_val=		EXT_PHY_CONTROL_20_SHDW_VALUE;			// OK
  ext_phy_control_21_val=			EXT_PHY_CONTROL_21_VALUE;			// OK
  ext_phy_control_21_shdw_val=		EXT_PHY_CONTROL_21_SHDW_VALUE;			// OK
  ext_phy_control_22_val=			EXT_PHY_CONTROL_22_VALUE;			// OK
  ext_phy_control_22_shdw_val=		EXT_PHY_CONTROL_22_SHDW_VALUE;			// OK
  ext_phy_control_23_val=			EXT_PHY_CONTROL_23_VALUE;			// OK
  ext_phy_control_23_shdw_val=		EXT_PHY_CONTROL_23_SHDW_VALUE;			// OK
  ext_phy_control_24_val=			EXT_PHY_CONTROL_24_VALUE;			// OK
  ext_phy_control_24_shdw_val=		EXT_PHY_CONTROL_24_SHDW_VALUE;			// OK
  ext_phy_control_25_val=			EXT_PHY_CONTROL_25_VALUE;			// OK
  ext_phy_control_25_shdw_val=		EXT_PHY_CONTROL_25_SHDW_VALUE;			// OK
  ext_phy_control_26_val=			EXT_PHY_CONTROL_26_VALUE;			// OK
  ext_phy_control_26_shdw_val=		EXT_PHY_CONTROL_26_SHDW_VALUE;			// OK
  ext_phy_control_27_val=			EXT_PHY_CONTROL_27_VALUE;			// OK
  ext_phy_control_27_shdw_val=		EXT_PHY_CONTROL_27_SHDW_VALUE;			// OK
  ext_phy_control_28_val=			EXT_PHY_CONTROL_28_VALUE;			// OK
  ext_phy_control_28_shdw_val=		EXT_PHY_CONTROL_28_SHDW_VALUE;			// OK
  ext_phy_control_29_val=			EXT_PHY_CONTROL_29_VALUE;			// OK
  ext_phy_control_29_shdw_val=		EXT_PHY_CONTROL_29_SHDW_VALUE;			// OK
  ext_phy_control_30_val=			EXT_PHY_CONTROL_30_VALUE;			// OK
  ext_phy_control_30_shdw_val=		EXT_PHY_CONTROL_30_SHDW_VALUE;			// OK

  mr1_val=				LPDDR2_MR1_VALUE_FOR_ZEBU;			// OK
  mr2_val =				0x6;						// WL=4-RL=8
  mr3_val =				0x1;						// DS=34ohm
}

hotmenu DavesFillEmif()
{
  Fill_Emif_registers( 1, DDR3_LVL_NTEB_532 );
}
 
Fill_Emif_registers(int num_of_cs, int memory_type)
{
  int reg_temp;
  int loop_index;
    
  if (INFO_PRINT) {
    GEL_TextOut(">> START Fill_Emif_registers\n");
  }

  if ((memory_type==DDR3_LVL_SEVM_532)||(memory_type==DDR3_LVL_NTEB_532))
    {
      //=========//
      // DDR IOs //
      //=========//
        
      if (INFO_PRINT) {

	GEL_TextOut(">> START ==> EMIF1 and EMIF1 DDR IOs config (CTRL_MODULE_CORE_PAD module)\n");

      }
         
      //CONTROL_DDR3CH1_0 -- channel_1 CMDs / 40Ohm Ron (011) / SR=slowest-3 (111) on CMDs but CLK SR=slow (011) / No pulls (00)        
      *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_EMIF1__DDR3CH)	= DDR_IO__I_40OHM_SR_SLOWEST__WD_DQ_NO_PULL_DQS_NO_PULL;
      //CONTROL_DDRCH1_0 -- channel_1 DATA byte 0+1 / 40Ohm Ron (011) / SR=faster (001) / No Pull-up (00) on DQS / No pull (00) on DQ
      *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_EMIF1__ADDR_DQ0_DQS0_DQ1_DQS1)	= DDR_IO__I_40OHM_SR_FAST_____WD_DQ_NO_PULL_DQS_NO_PULL;
        
      //CONTROL_DDRCH1_1 -- channel_1 DATA byte 2+3 / 40Ohm Ron (011) / SR=faster (001) / No Pull-up (00) on DQS / No pull (00) on DQ
      *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_EMIF1__ADDR_DQ2_DQS2_DQ3_DQS3)	= DDR_IO__I_40OHM_SR_FAST_____WD_DQ_NO_PULL_DQS_NO_PULL;
    
      //CONTROL_DDR3CH2_0 -- channel_2 CMDs / 40Ohm Ron (011) / SR=slowest-3 (111) on CMDs but CLK SR=slow (011) / No pulls (00)
      *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_EMIF2__DDR3CH)	= DDR_IO__I_40OHM_SR_SLOWEST__WD_DQ_NO_PULL_DQS_NO_PULL;
      //CONTROL_DDRCH2_0 -- channel_2 DATA byte 0+1 / 40Ohm Ron (011) / SR=faster (001) / No Pull-up (00) on DQS / No pull (00) on DQ
      *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_EMIF2__ADDR_DQ0_DQS0_DQ1_DQS1)	= DDR_IO__I_40OHM_SR_FAST_____WD_DQ_NO_PULL_DQS_NO_PULL;
      //CONTROL_DDRCH2_1 -- channel_2 DATA byte 2+3 / 40Ohm Ron (011) / SR=faster (001) / No Pull-up (00) on DQS / No pull (00) on DQ
      *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_EMIF2__ADDR_DQ2_DQS2_DQ3_DQS3)	= DDR_IO__I_40OHM_SR_FAST_____WD_DQ_NO_PULL_DQS_NO_PULL;
	
      //======= VREF =======//
      //DDRIO_0 -- VREF cells (CH1 DQ3/0 INT 2uA / Cap to GND / CMD1/0 DDR3 INT-OUT 32uA / Cap to GND) 
      *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_0)					= DDR_IO_0_VREF_CELLS_DDR3_VALUE;
      //DDRIO_1 -- VREF cells (CH1 OUT 32uA Cap to GND / CH2 DQ3/0 INT 2uA / Cap to GND / CH2 OUT 32uA Cap to GND)
      *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_1)					= DDR_IO_1_VREF_CELLS_DDR3_VALUE;
      //DDRIO_2 -- VREF cells (LPDDR2 CH1/2 CA INT/OUT - unused on OMAP5432)
      *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_2)					= DDR_IO_2_VREF_CELLS_DDR3_VALUE;
        
      // channel_1 LPDDR2 CMD PHYs not used on 5432.
      //CONTROL_LPDDR2CH1_0 -- channel_1 LPDDR2 CMD PHYs IOs not used on OMAP5432
      *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_EMIF1__ADDR_NCS_CK_CKE_CA)					= 0x00000000;
      //CONTROL_CONTROL_LPDDR2CH1_1 -- channel_1 LPDDR2 CMD PHYs IOs not used on OMAP5432
      *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_EMIF2__ADDR_NCS_CK_CKE_CA)					= 0x00000000;
    }
  else
    {
      if (memory_type!=DDR3_ZEBU)
        {
	  //=========//
	  // DDR IOs //
	  //=========//      
	  //======= activating pull-down for DQS =======//
	  *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_EMIF1__ADDR_DQ0_DQS0_DQ1_DQS1)	= DDR_IO__I_34OHM_SR_FASTEST__WD_DQ_NO_PULL_DQS_PULL_DOWN;
	  *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_EMIF1__ADDR_DQ2_DQS2_DQ3_DQS3)	= DDR_IO__I_34OHM_SR_FASTEST__WD_DQ_NO_PULL_DQS_PULL_DOWN;
	  *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_EMIF2__ADDR_DQ0_DQS0_DQ1_DQS1)	= DDR_IO__I_34OHM_SR_FASTEST__WD_DQ_NO_PULL_DQS_PULL_DOWN;
	  *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_EMIF2__ADDR_DQ2_DQS2_DQ3_DQS3)	= DDR_IO__I_34OHM_SR_FASTEST__WD_DQ_NO_PULL_DQS_PULL_DOWN;

	  //======= activating pull-down for others =======//
	  *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_EMIF1__ADDR_NCS_CK_CKE_CA)		= DDR_IO__I_34OHM_SR_FASTEST__WD_CK_CKE_NCS_CA_PULL_DOWN;
	  *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_EMIF2__ADDR_NCS_CK_CKE_CA)		= DDR_IO__I_34OHM_SR_FASTEST__WD_CK_CKE_NCS_CA_PULL_DOWN;

	  //======= VREF =======//
	  *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_0)					= DDR_IO_0__DQ_INT_NO_CAP;
	  *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_0)					|= DDR_IO_0__DQ_INT_2UA_ALL;
	  *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_0)					|= DDR_IO_0__DDR2_DQ_INT_EN_ALL__DDR3_CA_DIS_ALL;

	  *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_1)					= DDR_IO_1__DQ_OUT_NO_CAP__DQ_INT_NO_CAP;
	  *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_1)					|= DDR_IO_1__DQ_OUT_2UA__DQ_INT_2UA;
	  *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_1)					|= DDR_IO_1__DQ_OUT_EN_ALL__DQ_INT_EN_ALL;

	  *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_2)					= DDR_IO_2__CA_OUT_NO_CAP__CA_INT_NO_CAP;
	  *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_2)					|= DDR_IO_2__CA_OUT_2UA__CA_INT_2UA;
	  *(int*)(CTRL_MODULE_CORE_PAD+DDR_IO_2)					|= DDR_IO_2__CA_OUT_EN_ALL__CA_INT_EN_ALL;
        }
    }       

	
        
  if ((memory_type==DDR3_LVL_SEVM_532)||(memory_type==DDR3_LVL_NTEB_532))
    {       
      // cslic_en[2:0] = 111/ local_odt =01 / dyn_pwrdwn=1/dis_reset=1/rd_lvl_samaples=11
      *(int*)(CTRL_MODULE_WKUP+EMIF1_SDRAM_CONFIG_EXT) = 0x0000C1A7;
      *(int*)(CTRL_MODULE_WKUP+EMIF2_SDRAM_CONFIG_EXT) = 0x0000C1A7;
        
      // Disable DLL select
      reg_temp=*(int*)(CTRL_MODULE_WKUP+SECURE_EMIF1_SDRAM_CONFIG);
      reg_temp&=0xFFEFFFFF;
      *(int*)(CTRL_MODULE_WKUP+SECURE_EMIF1_SDRAM_CONFIG) = reg_temp;
        
      // Disable DLL select
      reg_temp=*(int*)(CTRL_MODULE_WKUP+SECURE_EMIF2_SDRAM_CONFIG);
      reg_temp&=0xFFEFFFFF;
      *(int*)(CTRL_MODULE_WKUP+SECURE_EMIF2_SDRAM_CONFIG) = reg_temp;
      
    }
 
  //======= EFUSE_2 for non-trimmed devices =======//
  *(int*)0x4AE0CDC8	= 0x45145100;
  *(int*)0x4AE0CDCC	= 0x45145100;
  *(int*)0x4AE0CDD0	= 0x45145100;
  *(int*)0x4AE0CDD4	= 0x45145100;

  //=======//
  // EMIF1 //
  //=======//    
  if ((memory_type!=DDR3_LVL_SEVM_532)||(memory_type!=DDR3_LVL_NTEB_532))
    { 
      if (memory_type!=DDR3_ZEBU)
        {     
	  //======= preliminary settings for EMIF1 =======//
	  *(int*)(CTRL_MODULE_WKUP+EMIF1_SDRAM_CONFIG_EXT)			|= 0x0000C000;		// set num_of_sample
	  *(int*)(CTRL_MODULE_WKUP+EMIF1_SDRAM_CONFIG_EXT)			|= 0x00000100;		// enable dyn_pwr_dwn
        }  
    }
    
  //======= disabling (PU-PD) for DQS and DQ =======//
  if ((memory_type==DDR3_LVL_SEVM_532)||(memory_type==DDR3_LVL_NTEB_532)||(memory_type==DDR3_ZEBU))
    {
      SDRAM_CONFIG_2(EMIF4D1_BASE_ADDRESS)= sdram_config_2_val;    
    }
  else
    {    
      SDRAM_CONFIG_2(EMIF4D1_BASE_ADDRESS)= sdram_config_2_val;      
      SDRAM_CONFIG_2(EMIF4D1_BASE_ADDRESS) &= 0xF7FFFFFF;			// reset bit 27 - REG_EBANK_POS !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! != DV
      SDRAM_CONFIG_2(EMIF4D1_BASE_ADDRESS) &= 0xBFFFFFFF;			// reset bit 30 - REG_CS1NVMEN          
    }
        
  SDRAM_CONFIG(EMIF4D1_BASE_ADDRESS)= sdram_config_val;

  if ((memory_type!=DDR3_LVL_SEVM_532)||(memory_type!=DDR3_LVL_NTEB_532))
    {
      if(memory_type!=DDR3_ZEBU)
        {
	  //======= ZQ init =======//
	  *(int*)(EMIF4D1_BASE_ADDRESS+0x50)					= 0x0000000A;
	  *(int*)(EMIF4D1_BASE_ADDRESS+0x40)					= 0xFF;
	  if (num_of_cs == 2) 
            {
	      *(int*)(EMIF4D1_BASE_ADDRESS+0x50)				= 0x8000000A;
	      *(int*)(EMIF4D1_BASE_ADDRESS+0x40)				= 0xFF;
	    }

	  //======= MR1 =======//
	  *(int*)(EMIF4D1_BASE_ADDRESS+0x50)					= 0x00000001;
	  *(int*)(EMIF4D1_BASE_ADDRESS+0x40)					= mr1_val;
	  if (num_of_cs == 2) 
            {
	      *(int*)(EMIF4D1_BASE_ADDRESS+0x50)				= 0x80000001;
	      *(int*)(EMIF4D1_BASE_ADDRESS+0x40)				= mr1_val;
	    }

	  //======= MR2 =======//
	  *(int*)(EMIF4D1_BASE_ADDRESS+0x50)					= 0x00000002;
	  *(int*)(EMIF4D1_BASE_ADDRESS+0x40)					= mr2_val;
	  if (num_of_cs == 2) 
            {
	      *(int*)(EMIF4D1_BASE_ADDRESS+0x50)				= 0x80000002;
	      *(int*)(EMIF4D1_BASE_ADDRESS+0x40)				= mr2_val;
	    }

	  //======= MR3 =======//
	  *(int*)(EMIF4D1_BASE_ADDRESS+0x50)					= 0x00000003;
	  *(int*)(EMIF4D1_BASE_ADDRESS+0x40)					= mr3_val;
	  if (num_of_cs == 2) 
            {
	      *(int*)(EMIF4D1_BASE_ADDRESS+0x50)				= 0x80000003;
	      *(int*)(EMIF4D1_BASE_ADDRESS+0x40)				= mr3_val;
	    }
        }
      else
        {
	  *(int*)(EMIF4D1_BASE_ADDRESS+0x50)				= 0x40000000;
	  *(int*)(EMIF4D1_BASE_ADDRESS+0x40)				= 0x00000000;
        }
    }    
        
  //======= non shadowed registers =======//	
  if ((memory_type==DDR3_LVL_SEVM_532)||(memory_type==DDR3_LVL_NTEB_532))
    {
      IODFT_TLGC(EMIF4D1_BASE_ADDRESS)= iodft_tlgc_val;
    }
        
  SDRAM_OUTPUT_ZQ(EMIF4D1_BASE_ADDRESS) = zq_cfg_val;
  TEMP_ALERT_CFG(EMIF4D1_BASE_ADDRESS) = temp_alert_config_val;
  OCP_CONFIG(EMIF4D1_BASE_ADDRESS) = ocp_cfg_val;
  RD_WR_EXEC_THRESH(EMIF4D1_BASE_ADDRESS) = rd_wr_exec_thresh_val;
    
  if ((memory_type==DDR3_LVL_SEVM_532)||(memory_type==DDR3_LVL_NTEB_532))
    {
      PRI_COS_MAP(EMIF4D1_BASE_ADDRESS)=pri_cos_map_val;
      CONNID_COS_1(EMIF4D1_BASE_ADDRESS)=connid_cos_1_map;
      CONNID_COS_2(EMIF4D1_BASE_ADDRESS)=connid_cos_2_map;
      COS_CONFIG(EMIF4D1_BASE_ADDRESS)=cos_config_val;
    }
    
  DDR_PHY_CTRL_2(EMIF4D1_BASE_ADDRESS) = ddr_phy_control_2_val;

  if ((memory_type!=DDR3_LVL_SEVM_532)||(memory_type!=DDR3_LVL_NTEB_532))
    {
      //======= RAW registers =======//
      DDR_PHY_CTRL_1(EMIF4D1_BASE_ADDRESS) = ddr_phy_control_1_val;
      SDRAM_TIM_1(EMIF4D1_BASE_ADDRESS) = sdram_tim_1_val;
      SDRAM_TIM_2(EMIF4D1_BASE_ADDRESS) = sdram_tim_2_val;
      SDRAM_TIM_3(EMIF4D1_BASE_ADDRESS) = sdram_tim_3_val;
    }
  if ((memory_type!=DDR3_LVL_SEVM_532)||(memory_type!=DDR3_LVL_NTEB_532))
    {       
      PWR_MGMT_CTRL(EMIF4D1_BASE_ADDRESS) = power_mgmt_ctrl_val;
    }  
    
  if ((memory_type!=DDR3_LVL_SEVM_532)||(memory_type!=DDR3_LVL_NTEB_532))
    { 
      SDRAM_REF_CTRL(EMIF4D1_BASE_ADDRESS) = sdram_ref_ctrl_val;
      DLL_CALIB_CTRL(EMIF4D1_BASE_ADDRESS) = dll_calib_control_val;
      EXT_PHY_CONTROL_1(EMIF4D1_BASE_ADDRESS) = ext_phy_control_1_val;
      EXT_PHY_CONTROL_2(EMIF4D1_BASE_ADDRESS) = ext_phy_control_2_val;
      EXT_PHY_CONTROL_3(EMIF4D1_BASE_ADDRESS) = ext_phy_control_3_val;
      EXT_PHY_CONTROL_4(EMIF4D1_BASE_ADDRESS) = ext_phy_control_4_val;
      EXT_PHY_CONTROL_5(EMIF4D1_BASE_ADDRESS) = ext_phy_control_5_val;	
      EXT_PHY_CONTROL_6(EMIF4D1_BASE_ADDRESS) = ext_phy_control_6_val;	
      EXT_PHY_CONTROL_7(EMIF4D1_BASE_ADDRESS) = ext_phy_control_7_val;
      EXT_PHY_CONTROL_8(EMIF4D1_BASE_ADDRESS) = ext_phy_control_8_val;
      EXT_PHY_CONTROL_9(EMIF4D1_BASE_ADDRESS) = ext_phy_control_9_val;
      EXT_PHY_CONTROL_10(EMIF4D1_BASE_ADDRESS) = ext_phy_control_10_val;
      EXT_PHY_CONTROL_11(EMIF4D1_BASE_ADDRESS) = ext_phy_control_11_val;
      EXT_PHY_CONTROL_12(EMIF4D1_BASE_ADDRESS) = ext_phy_control_12_val;
      EXT_PHY_CONTROL_13(EMIF4D1_BASE_ADDRESS) = ext_phy_control_13_val;
      EXT_PHY_CONTROL_14(EMIF4D1_BASE_ADDRESS) = ext_phy_control_14_val;
      EXT_PHY_CONTROL_15(EMIF4D1_BASE_ADDRESS) = ext_phy_control_15_val;
      EXT_PHY_CONTROL_16(EMIF4D1_BASE_ADDRESS) = ext_phy_control_16_val;	
      EXT_PHY_CONTROL_17(EMIF4D1_BASE_ADDRESS) = ext_phy_control_17_val;	
      EXT_PHY_CONTROL_18(EMIF4D1_BASE_ADDRESS) = ext_phy_control_18_val;	
      EXT_PHY_CONTROL_19(EMIF4D1_BASE_ADDRESS) = ext_phy_control_19_val;	
      EXT_PHY_CONTROL_20(EMIF4D1_BASE_ADDRESS) = ext_phy_control_20_val;	
      EXT_PHY_CONTROL_21(EMIF4D1_BASE_ADDRESS) = ext_phy_control_21_val;
      EXT_PHY_CONTROL_22(EMIF4D1_BASE_ADDRESS) = ext_phy_control_22_val;
      EXT_PHY_CONTROL_23(EMIF4D1_BASE_ADDRESS) = ext_phy_control_23_val;
      EXT_PHY_CONTROL_24(EMIF4D1_BASE_ADDRESS) = ext_phy_control_24_val;	
      EXT_PHY_CONTROL_25(EMIF4D1_BASE_ADDRESS) = ext_phy_control_25_val;
      EXT_PHY_CONTROL_26(EMIF4D1_BASE_ADDRESS) = ext_phy_control_26_val;
      EXT_PHY_CONTROL_27(EMIF4D1_BASE_ADDRESS) = ext_phy_control_27_val;
      EXT_PHY_CONTROL_28(EMIF4D1_BASE_ADDRESS) = ext_phy_control_28_val;
      EXT_PHY_CONTROL_29(EMIF4D1_BASE_ADDRESS) = ext_phy_control_29_val;
      EXT_PHY_CONTROL_30(EMIF4D1_BASE_ADDRESS) = ext_phy_control_30_val;
    }
  READ_WRITE_LEVELING_RAMP_WINDOW(EMIF4D1_BASE_ADDRESS) = read_write_leveling_ramp_window_val;
  READ_WRITE_LEVELING_RAMP_CONTROL(EMIF4D1_BASE_ADDRESS) = read_write_leveling_ramp_control_val;
  READ_WRITE_LEVELING_CONTROL(EMIF4D1_BASE_ADDRESS) = read_write_leveling_control_val;

  //======= SHDW registers =======//
  DDR_PHY_CTRL_1_SHDW(EMIF4D1_BASE_ADDRESS) = ddr_phy_control_1_shdw_val;
  SDRAM_TIM_1_SHDW(EMIF4D1_BASE_ADDRESS)= sdram_tim_1_shdw_val;
  SDRAM_TIM_2_SHDW(EMIF4D1_BASE_ADDRESS) = sdram_tim_2_shdw_val;
  SDRAM_TIM_3_SHDW(EMIF4D1_BASE_ADDRESS) = sdram_tim_3_shdw_val;
    
  if ((memory_type==DDR3_LVL_SEVM_532)||(memory_type==DDR3_LVL_NTEB_532))
    {
      LPDDR2_NVM_TIM_SHDW(EMIF4D1_BASE_ADDRESS)= lpddr2_nvm_tim_shdw_val;
    }
    
  if ((memory_type!=DDR3_LVL_SEVM_532)||(memory_type!=DDR3_LVL_NTEB_532))
    { 
      PWR_MGMT_CTRL_SHDW(EMIF4D1_BASE_ADDRESS) = power_mgmt_ctrl_shdw_val;
    }
  SDRAM_REF_CTRL_SHDW(EMIF4D1_BASE_ADDRESS) = sdram_ref_ctrl_shdw_val;
  DLL_CALIB_CTRL_SHDW(EMIF4D1_BASE_ADDRESS) = dll_calib_control_shdw_val;
  EXT_PHY_CONTROL_1_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_1_shdw_val;
  EXT_PHY_CONTROL_2_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_2_shdw_val;
  EXT_PHY_CONTROL_3_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_3_shdw_val;
  EXT_PHY_CONTROL_4_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_4_shdw_val;
  EXT_PHY_CONTROL_5_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_5_shdw_val;	
  EXT_PHY_CONTROL_6_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_6_shdw_val;	
  EXT_PHY_CONTROL_7_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_7_shdw_val;	
  EXT_PHY_CONTROL_8_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_8_shdw_val;
  EXT_PHY_CONTROL_9_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_9_shdw_val;
  EXT_PHY_CONTROL_10_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_10_shdw_val;
  EXT_PHY_CONTROL_11_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_11_shdw_val;
  EXT_PHY_CONTROL_12_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_12_shdw_val;
  EXT_PHY_CONTROL_13_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_13_shdw_val;
  EXT_PHY_CONTROL_14_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_14_shdw_val;
  EXT_PHY_CONTROL_15_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_15_shdw_val;
  EXT_PHY_CONTROL_16_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_16_shdw_val;	
  EXT_PHY_CONTROL_17_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_17_shdw_val;	
  EXT_PHY_CONTROL_18_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_18_shdw_val;	
  EXT_PHY_CONTROL_19_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_19_shdw_val;	
  EXT_PHY_CONTROL_20_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_20_shdw_val;	
  EXT_PHY_CONTROL_21_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_21_shdw_val;
  EXT_PHY_CONTROL_22_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_22_shdw_val;
  EXT_PHY_CONTROL_23_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_23_shdw_val;
  EXT_PHY_CONTROL_24_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_24_shdw_val;
  EXT_PHY_CONTROL_25_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_25_shdw_val;
  EXT_PHY_CONTROL_26_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_26_shdw_val;
  EXT_PHY_CONTROL_27_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_27_shdw_val;
  EXT_PHY_CONTROL_28_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_28_shdw_val;
  EXT_PHY_CONTROL_29_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_29_shdw_val;
  EXT_PHY_CONTROL_30_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_30_shdw_val;

  if ((memory_type!=DDR3_LVL_SEVM_532)||(memory_type!=DDR3_LVL_NTEB_532))
    {
      if (memory_type!=DDR3_ZEBU)
        {  
	  //======= start refresh =======//
	  // *(int*)(EMIF4D1_BASE_ADDRESS+0x50)					= 0x40000010;
	  *(int*)(EMIF4D1_BASE_ADDRESS+0x50)					= 0x00000000;
	  *(int*)(EMIF4D1_BASE_ADDRESS+0x40)					= 0x00000000;
	  if (num_of_cs == 2) 
            {
	      *(int*)(EMIF4D1_BASE_ADDRESS+0x50)				= 0xC0000010;
	      *(int*)(EMIF4D1_BASE_ADDRESS+0x40)				= 0x00000000;
	    }
        }
    }
    
  if(memory_type==DDR3_ZEBU)
    {
      SDRAM_CONFIG_2(EMIF4D1_BASE_ADDRESS) = 0x79A122BA;
    }
        
 
  //=======//
  // EMIF2 //
  //=======//   
  if ((memory_type!=DDR3_LVL_SEVM_532)||(memory_type!=DDR3_LVL_NTEB_532))
    { 
      if (memory_type!=DDR3_ZEBU)
        {        
	  //======= preliminary settings for EMIF2 =======//
	  *(int*)(CTRL_MODULE_WKUP+EMIF2_SDRAM_CONFIG_EXT)			|= 0x0000C000;		// set num_of_sample
	  *(int*)(CTRL_MODULE_WKUP+EMIF2_SDRAM_CONFIG_EXT)			|= 0x00000100;		// enable dyn_pwr_dwn
        }
    }
    
  //======= disabling (PU-PD) for DQS and DQ =======//
  if ((memory_type==DDR3_LVL_SEVM_532)||(memory_type==DDR3_LVL_NTEB_532)||(memory_type==DDR3_ZEBU))
    {        
      SDRAM_CONFIG_2(EMIF4D2_BASE_ADDRESS)= sdram_config_2_val;
    }
  else
    {
      SDRAM_CONFIG_2(EMIF4D2_BASE_ADDRESS) &= 0xF7FFFFFF;			// reset bit 27 - REG_EBANK_POS !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! != DV
      SDRAM_CONFIG_2(EMIF4D2_BASE_ADDRESS) &= 0xBFFFFFFF;			// reset bit 30 - REG_CS1NVMEN
    }
    
  SDRAM_CONFIG(EMIF4D2_BASE_ADDRESS)= sdram_config_val;
    
  if ((memory_type!=DDR3_LVL_SEVM_532)||(memory_type!=DDR3_LVL_NTEB_532))
    {
      if(memory_type!=DDR3_ZEBU)
        {    
	  //======= ZQ init =======//
	  *(int*)(EMIF4D2_BASE_ADDRESS+0x50)					= 0x0000000A;
	  *(int*)(EMIF4D2_BASE_ADDRESS+0x40)					= 0xFF;
	  if (num_of_cs == 2) 
            {
	      *(int*)(EMIF4D2_BASE_ADDRESS+0x50)				= 0x8000000A;
	      *(int*)(EMIF4D2_BASE_ADDRESS+0x40)				= 0xFF;
	    }

	  //======= MR1 =======//
	  *(int*)(EMIF4D2_BASE_ADDRESS+0x50)					= 0x00000001;
	  *(int*)(EMIF4D2_BASE_ADDRESS+0x40)					= mr1_val;
	  if (num_of_cs == 2) 
            {
	      *(int*)(EMIF4D2_BASE_ADDRESS+0x50)				= 0x80000001;
	      *(int*)(EMIF4D2_BASE_ADDRESS+0x40)				= mr1_val;
	    }   

	  //======= MR2 =======//
	  *(int*)(EMIF4D2_BASE_ADDRESS+0x50)					= 0x00000002;
	  *(int*)(EMIF4D2_BASE_ADDRESS+0x40)					= mr2_val;
	  if (num_of_cs == 2) 
            {
	      *(int*)(EMIF4D2_BASE_ADDRESS+0x50)				= 0x80000002;
	      *(int*)(EMIF4D2_BASE_ADDRESS+0x40)				= mr2_val;
	    }

	  //======= MR3 =======//
	  *(int*)(EMIF4D2_BASE_ADDRESS+0x50)					= 0x00000003;
	  *(int*)(EMIF4D2_BASE_ADDRESS+0x40)					= mr3_val;
	  if (num_of_cs == 2)
            {
	      *(int*)(EMIF4D2_BASE_ADDRESS+0x50)				= 0x80000003;
	      *(int*)(EMIF4D2_BASE_ADDRESS+0x40)				= mr3_val;
	    }
        }
      else
        {
	  *(int*)(EMIF4D2_BASE_ADDRESS+0x50)				= 0x40000000;
	  *(int*)(EMIF4D2_BASE_ADDRESS+0x40)				= 0x00000000;
        }
    }    
    
  //======= non shadowed registers =======//
	
  if ((memory_type==DDR3_LVL_SEVM_532)||(memory_type==DDR3_LVL_NTEB_532))
    {
      IODFT_TLGC(EMIF4D2_BASE_ADDRESS)= iodft_tlgc_val;
    }
    
  SDRAM_OUTPUT_ZQ(EMIF4D2_BASE_ADDRESS) = zq_cfg_val;
  TEMP_ALERT_CFG(EMIF4D2_BASE_ADDRESS) = temp_alert_config_val;
  OCP_CONFIG(EMIF4D2_BASE_ADDRESS) = ocp_cfg_val;
  RD_WR_EXEC_THRESH(EMIF4D2_BASE_ADDRESS) = rd_wr_exec_thresh_val;
    
  if ((memory_type==DDR3_LVL_SEVM_532)||(memory_type==DDR3_LVL_NTEB_532))
    {
      PRI_COS_MAP(EMIF4D2_BASE_ADDRESS)=pri_cos_map_val;
      CONNID_COS_1(EMIF4D2_BASE_ADDRESS)=connid_cos_1_map;
      CONNID_COS_2(EMIF4D2_BASE_ADDRESS)=connid_cos_2_map;
      COS_CONFIG(EMIF4D2_BASE_ADDRESS)=cos_config_val;
    }
 
  DDR_PHY_CTRL_2(EMIF4D2_BASE_ADDRESS) = ddr_phy_control_2_val;

  //======= RAW registers =======//
  DDR_PHY_CTRL_1(EMIF4D2_BASE_ADDRESS) = ddr_phy_control_1_val;
  SDRAM_TIM_1(EMIF4D2_BASE_ADDRESS) = sdram_tim_1_val;
  SDRAM_TIM_2(EMIF4D2_BASE_ADDRESS) = sdram_tim_2_val;
  SDRAM_TIM_3(EMIF4D2_BASE_ADDRESS) = sdram_tim_3_val;
      
  if ((memory_type!=DDR3_LVL_SEVM_532)||(memory_type!=DDR3_LVL_NTEB_532))
    {       
      PWR_MGMT_CTRL(EMIF4D2_BASE_ADDRESS) = power_mgmt_ctrl_val;
    }  
    
  SDRAM_REF_CTRL(EMIF4D2_BASE_ADDRESS) = sdram_ref_ctrl_val;
  DLL_CALIB_CTRL(EMIF4D2_BASE_ADDRESS) = dll_calib_control_val;
  EXT_PHY_CONTROL_1(EMIF4D2_BASE_ADDRESS) = ext_phy_control_1_val;
  EXT_PHY_CONTROL_2(EMIF4D2_BASE_ADDRESS) = ext_phy_control_2_val;
  EXT_PHY_CONTROL_3(EMIF4D2_BASE_ADDRESS) = ext_phy_control_3_val;
  EXT_PHY_CONTROL_4(EMIF4D2_BASE_ADDRESS) = ext_phy_control_4_val;
  EXT_PHY_CONTROL_5(EMIF4D2_BASE_ADDRESS) = ext_phy_control_5_val;	
  EXT_PHY_CONTROL_6(EMIF4D2_BASE_ADDRESS) = ext_phy_control_6_val;	
  EXT_PHY_CONTROL_7(EMIF4D2_BASE_ADDRESS) = ext_phy_control_7_val;	
  EXT_PHY_CONTROL_8(EMIF4D2_BASE_ADDRESS) = ext_phy_control_8_val;
  EXT_PHY_CONTROL_9(EMIF4D2_BASE_ADDRESS) = ext_phy_control_9_val;
  EXT_PHY_CONTROL_10(EMIF4D2_BASE_ADDRESS) = ext_phy_control_10_val;
  EXT_PHY_CONTROL_11(EMIF4D2_BASE_ADDRESS) = ext_phy_control_11_val;
  EXT_PHY_CONTROL_12(EMIF4D2_BASE_ADDRESS) = ext_phy_control_12_val;
  EXT_PHY_CONTROL_13(EMIF4D2_BASE_ADDRESS) = ext_phy_control_13_val;
  EXT_PHY_CONTROL_14(EMIF4D2_BASE_ADDRESS) = ext_phy_control_14_val;
  EXT_PHY_CONTROL_15(EMIF4D2_BASE_ADDRESS) = ext_phy_control_15_val;
  EXT_PHY_CONTROL_16(EMIF4D2_BASE_ADDRESS) = ext_phy_control_16_val;	
  EXT_PHY_CONTROL_17(EMIF4D2_BASE_ADDRESS) = ext_phy_control_17_val;	
  EXT_PHY_CONTROL_18(EMIF4D2_BASE_ADDRESS) = ext_phy_control_18_val;	
  EXT_PHY_CONTROL_19(EMIF4D2_BASE_ADDRESS) = ext_phy_control_19_val;	
  EXT_PHY_CONTROL_20(EMIF4D2_BASE_ADDRESS) = ext_phy_control_20_val;
  EXT_PHY_CONTROL_21(EMIF4D2_BASE_ADDRESS) = ext_phy_control_21_val;
  EXT_PHY_CONTROL_22(EMIF4D2_BASE_ADDRESS) = ext_phy_control_22_val;
  EXT_PHY_CONTROL_23(EMIF4D2_BASE_ADDRESS) = ext_phy_control_23_val;
  EXT_PHY_CONTROL_24(EMIF4D2_BASE_ADDRESS) = ext_phy_control_24_val;	
  EXT_PHY_CONTROL_25(EMIF4D2_BASE_ADDRESS) = ext_phy_control_25_val;
  EXT_PHY_CONTROL_26(EMIF4D2_BASE_ADDRESS) = ext_phy_control_26_val;
  EXT_PHY_CONTROL_27(EMIF4D2_BASE_ADDRESS) = ext_phy_control_27_val;
  EXT_PHY_CONTROL_28(EMIF4D2_BASE_ADDRESS) = ext_phy_control_28_val;
  EXT_PHY_CONTROL_29(EMIF4D2_BASE_ADDRESS) = ext_phy_control_29_val;
  EXT_PHY_CONTROL_30(EMIF4D2_BASE_ADDRESS) = ext_phy_control_30_val;

  READ_WRITE_LEVELING_RAMP_WINDOW(EMIF4D2_BASE_ADDRESS) = read_write_leveling_ramp_window_val;
  READ_WRITE_LEVELING_RAMP_CONTROL(EMIF4D2_BASE_ADDRESS) = read_write_leveling_ramp_control_val;
  READ_WRITE_LEVELING_CONTROL(EMIF4D2_BASE_ADDRESS) = read_write_leveling_control_val;

  //======= SHDW registers =======//
  DDR_PHY_CTRL_1_SHDW(EMIF4D2_BASE_ADDRESS) = ddr_phy_control_1_shdw_val;
  SDRAM_TIM_1_SHDW(EMIF4D2_BASE_ADDRESS)= sdram_tim_1_shdw_val;
  SDRAM_TIM_2_SHDW(EMIF4D2_BASE_ADDRESS) = sdram_tim_2_shdw_val;
  SDRAM_TIM_3_SHDW(EMIF4D2_BASE_ADDRESS) = sdram_tim_3_shdw_val;
    
  if ((memory_type==DDR3_LVL_SEVM_532)||(memory_type==DDR3_LVL_NTEB_532))
    {
      LPDDR2_NVM_TIM_SHDW(EMIF4D2_BASE_ADDRESS)= lpddr2_nvm_tim_shdw_val;
    }
       
  if ((memory_type!=DDR3_LVL_SEVM_532)||(memory_type!=DDR3_LVL_NTEB_532))
    { 
      PWR_MGMT_CTRL_SHDW(EMIF4D2_BASE_ADDRESS) = power_mgmt_ctrl_shdw_val;
    }
    
  SDRAM_REF_CTRL_SHDW(EMIF4D2_BASE_ADDRESS) = sdram_ref_ctrl_shdw_val;
  DLL_CALIB_CTRL_SHDW(EMIF4D2_BASE_ADDRESS) = dll_calib_control_shdw_val;
  EXT_PHY_CONTROL_1_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_1_shdw_val;
  EXT_PHY_CONTROL_2_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_2_shdw_val;
  EXT_PHY_CONTROL_3_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_3_shdw_val;
  EXT_PHY_CONTROL_4_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_4_shdw_val;
  EXT_PHY_CONTROL_5_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_5_shdw_val;	
  EXT_PHY_CONTROL_6_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_6_shdw_val;
  EXT_PHY_CONTROL_7_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_7_shdw_val;
  EXT_PHY_CONTROL_8_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_8_shdw_val;
  EXT_PHY_CONTROL_9_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_9_shdw_val;
  EXT_PHY_CONTROL_10_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_10_shdw_val;
  EXT_PHY_CONTROL_11_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_11_shdw_val;
  EXT_PHY_CONTROL_12_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_12_shdw_val;
  EXT_PHY_CONTROL_13_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_13_shdw_val;
  EXT_PHY_CONTROL_14_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_14_shdw_val;
  EXT_PHY_CONTROL_15_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_15_shdw_val;

  if ((memory_type!=DDR3_LVL_SEVM_532)||(memory_type!=DDR3_LVL_NTEB_532))
    {
      if (memory_type!=DDR3_ZEBU)
        {
	  *(int *)0x4D000274 = 0x400000;
        }
    }
        
  EXT_PHY_CONTROL_16_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_16_shdw_val;	
  EXT_PHY_CONTROL_17_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_17_shdw_val;	
  EXT_PHY_CONTROL_18_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_18_shdw_val;	
  EXT_PHY_CONTROL_19_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_19_shdw_val;	
  EXT_PHY_CONTROL_20_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_20_shdw_val;	
  EXT_PHY_CONTROL_21_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_21_shdw_val;
  EXT_PHY_CONTROL_22_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_22_shdw_val;
  EXT_PHY_CONTROL_23_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_23_shdw_val;
  EXT_PHY_CONTROL_24_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_24_shdw_val;	
  EXT_PHY_CONTROL_25_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_25_shdw_val;
  EXT_PHY_CONTROL_26_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_26_shdw_val;
  EXT_PHY_CONTROL_27_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_27_shdw_val;
  EXT_PHY_CONTROL_28_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_28_shdw_val;
  EXT_PHY_CONTROL_29_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_29_shdw_val;
  EXT_PHY_CONTROL_30_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_30_shdw_val;


  if ((memory_type!=DDR3_LVL_SEVM_532)||(memory_type!=DDR3_LVL_NTEB_532))
    {
      if (memory_type!=DDR3_ZEBU)
        {
	  //======= start refresh =======//
	  *(int*)(EMIF4D2_BASE_ADDRESS+0x50)					= 0x40000010;
	  *(int*)(EMIF4D2_BASE_ADDRESS+0x40)					= 0x00000000;
	  if (num_of_cs == 2) 
            {
	      *(int*)(EMIF4D2_BASE_ADDRESS+0x50)				= 0xC0000010;
	      *(int*)(EMIF4D2_BASE_ADDRESS+0x40)				= 0x00000000;
	    }
        }
    } 
    
  if(memory_type==DDR3_ZEBU)
    {
      SDRAM_CONFIG_2(EMIF4D2_BASE_ADDRESS) = 0x79A122BA;
    }   
    
  if (INFO_PRINT) {
    GEL_TextOut(">> END Fill_Emif_registers\n");
  }   
}
    

//  memory selection:
//	mem_index==8	=> elpida_EDB8164B3PF1DF	- LPDDR2	- 2x4Gbit	- 1.875ns	(533MHz)	- spec: E1786E10
//	mem_index==9	=> elpida_EDBA164B1PB1DF	- LPDDR2	- 4x4Gbit	- 1.875ns	(533MHz)
//	mem_index==10	=> samsung_K3PE0E000B_XGC2	- LPDDR2	- 4x4Gbit	- 1.875ns	(533MHz) 

// looping through EMIf1 and EMIf2 
ddr3_sival_leveling(int memory_type)
{
   
  int reg_temp, dummy_read;
  int loop_index;
    
  if (INFO_PRINT) {

    GEL_TextOut(">> ddr3_sival_leveling \n");
  }

        
  // EMIF1 controller CONFIG - enter self-refresh and configure invert_clkout
  if (INFO_PRINT) {

    GEL_TextOut(">> START ==> Configure EMIF1 DDR in Self Refresh (CKE=0 and clk stopped) and configure invert_clkout\n");

  }

  *(int*)(0x4C0000E4)= 0x0020420a; //0x0024420b;  //0x00244208;   //DDR_PHY_CTRL_1 -- Set invert_clkout (if activated)
  *(int*)(0x4C0000E8)= 0x0020420a; //0x0024420b;     //DDR_PHY_CTRL_1_SHDW -- Set invert_clkout (if activated)

  EXT_PHY_CONTROL_1_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_1_shdw_val;
  EXT_PHY_CONTROL_1(EMIF4D1_BASE_ADDRESS) = ext_phy_control_1_val;


 

  // EMIF1 channel - Launch full leveling (WR_LVL + READ_GATE_LVL + READ_VLV)

  if (INFO_PRINT) {

    GEL_TextOut(">> START ==> EMIF1 channel - Launch full leveling (WR_LVL + READ_GATE_LVL + READ_VLV)\n");

  }

  *(int*)(0x4C0000DC)= 0x80000000;     //RDWR_LVL_CTRL -- force RDWRLVLFULL_START=1 / Launch full leveling

  //lauch 2nd full leveling
  // EMIF1 channel - Put back the Read Data Eye LVL num_of_samples=4
  *(int*)(0x4AE0C144)= 0x000001A7;     //EMIF1_SDRAM_CONFIG_EXT -- cslice_en[2:0]=111 / Local_odt=01 / dyn_pwrdn=1 / dis_reset=1 / rd_lvl_samples=00 (4)

  // EMIF1 channel - Launch 8 incremental WR_LVL (to compensate for a PHY limitation)

  *(int*)(0x4C0000DC)= 0x00000002;     //RDWR_LVL_CTRL -- Launch 8 incremental WR_LVL (to compensate for a PHY limitation)

  *(int*)(0x4C0000DC)= 0x00335973; //0x00335973; //0x00335900    //RDWR_LVL_CTRL -- incremental leveling all three WR/RD-gate/RD

// DC
  *(int*)(0x4C0000E4)= 0x0024420a; //0x0024420b;  //0x00244208;   //DDR_PHY_CTRL_1 -- Set invert_clkout (if activated)
  *(int*)(0x4C0000E8)= 0x0024420a; //0x0024420b;     //DDR_PHY_CTRL_1_SHDW -- Set invert_clkout (if activated)

  // EMIF1 channel - Turn-OFF any incremental LVL for first samples debug
//  *(int*)(0x4C0000DC)= 0x00000000;     //RDWR_LVL_CTRL -- Turn-OFF any incremental LVL for first samples debug

  // EMIF2 controller CONFIG - enter self-refresh and confirgure invert_clkout

  if (INFO_PRINT) {
    GEL_TextOut(">> START ==> Configure EMIF2 DDR in Self Refresh (CKE=0 and clk stopped) and configure invert_clkout\n");
  }

  *(int*)(0x4D0000E4)= 0x0024420a; //0x0024420b;     //DDR_PHY_CTRL_1 -- Set invert_clkout (if activated)
  *(int*)(0x4D0000E8)= 0x0024420a; //0x0024420b;     //DDR_PHY_CTRL_1_SHDW -- Set invert_clkout (if activated)

  EXT_PHY_CONTROL_1_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_1_shdw_val;
  EXT_PHY_CONTROL_1(EMIF4D2_BASE_ADDRESS) = ext_phy_control_1_val;

  // EMIF2 channel - Launch full leveling (WR_LVL + READ_GATE_LVL + READ_VLV)

  if (INFO_PRINT) {

    GEL_TextOut(">> START ==> EMIF2 channel - Launch full leveling (WR_LVL + READ_GATE_LVL + READ_VLV)\n");
  }

  *(int*)(0x4D0000DC)= 0x80000000;     //RDWR_LVL_CTRL -- force RDWRLVLFULL_START=1 / Launch full leveling


  //lauch 2nd full leveling

  // EMIF2 channel - Put back the Read Data Eye LVL num_of_samples=4
  *(int*)(0x4AE0C148)= 0x000001A7;     //EMIF2_SDRAM_CONFIG_EXT -- cslice_en[2:0]=111 / Local_odt=01 / dyn_pwrdn=1 / dis_reset=1 / rd_lvl_samples=00 (4)

  // EMIF2 channel - Launch 8 incremental WR_LVL (to compensate for a PHY limitation)
  *(int*)(0x4D0000DC)= 0x00000002;     //RDWR_LVL_CTRL -- Launch 8 incremental WR_LVL (to compensate for a PHY limitation)
  *(int*)(0x4D0000DC)= 0x00335973; //0x00335973; //0x00335900;     //RDWR_LVL_CTRL -- incremental leveling all three WR/RD-gate/RD

  // EMIF2 channel - Turn-OFF any incremental LVL for first samples debug
//  *(int*)(0x4D0000DC)= 0x00000000;     //RDWR_LVL_CTRL -- Turn-OFF any incremental LVL for first samples debug
        
  if (INFO_PRINT) {
    GEL_TextOut("<<  ddr3_sival_leveling \n");

  }
}

hotmenu incremental_ddr_debug()
{

  int i = 0;
  int j = 0;

  while (j<512)
    {
      *(int*)(j+0x80000000) = (int)(0xAABBCC00+i);        
      GEL_TextOut(">> address (%x) \n",,,,,(int)(j+0x80000000));
      GEL_TextOut(">> value (%x) \n",,,,,*(int*)((int)(j+0x80000000))); 
      i=i+1;
      j=j+4;
      GEL_TextOut("------------------------- \n");
    }

  check_incremental_ddr_debug();
}   

// looping through EMIF1 and EMIF2
check_incremental_ddr_debug()
{
  int i = 0;
  int j = 0;

  while(j<512)
    {
      if (*(int*)((int)(j+0x80000000))!= (int)((int)(0xAABBCC00+i)))
	{
	  GEL_TextOut(">> error index (%x) \n",,,,,i);
	  GEL_TextOut(">> error address (%x) \n",,,,,j+0x80000000);
	  GEL_TextOut(">> read value (%x) \n",,,,,*(int*)(j+0x80000000));
	  GEL_TextOut(">> value expected (%x) \n",,,,,(int)(0xAABBCC00+i));
	  GEL_TextOut("------------------------- \n");
	}
      i=i+1;
      j=j+4;

    }        


}

hotmenu incremental_ddr_debug_fill_0xFFFFFFFF()
{
  int j = 0;

  while (j<256)
    {
      *(int*)(j+0x80000000) = 0xFFFFFFFF; 
      GEL_TextOut(">> address (%x) \n",,,,,(j+0x80000000)); 
      j=j+4;
    }
} 

hotmenu incremental_ddr_debug_fill_0x00000000()
{
  int j = 0;

  while (j<256)
    {
      *(int*)(j+0x80000000) = 0x0;
      GEL_TextOut(">> address (%x) \n",,,,,(j+0x80000000));
      j=j+4; 
    }
} 

ddr_config_top(int OPP, int memoryType)
{
  int num_of_cs;
	
  if (memoryType==ZEBU)
    {
      if (INFO_PRINT) {
	GEL_TextOut(">> ZEBU MEMORY \n");
      }
        
      num_of_cs = 1;
      if ((OPP==OPP_NOM)||(OPP==OPP_ZEBU))
        {
	  ddr_config_zebu_NOM();
	  Fill_Emif_registers(num_of_cs, memoryType);
	  if (INFO_PRINT) {
            GEL_TextOut(">> OPP NOM or OPP ZEBU \n");
	  }
        }
        
    }
  else
    if (memoryType==DDR3_LVL_NTEB_532)
      {
        if (INFO_PRINT) {
	  GEL_TextOut(">> DDR3 NTEB MEMORY \n");
        }
  //      num_of_cs = 2;
        num_of_cs = 1; 
        ddr_config_ddr3_nteb_532MHzs(); 
        Fill_Emif_registers(num_of_cs, memoryType);
        if (INFO_PRINT) {
	  GEL_TextOut(">> DDR NTEB levelling set to 532MHz  \n");
	}               
      }
    else
      if (memoryType==DDR3_LVL_SEVM_532)
	{
	  if (INFO_PRINT) {
            GEL_TextOut(">> DDR3 SEVM MEMORY \n");
	  }
	  num_of_cs = 2;
    
	  ddr_config_ddr3_sevm_532MHzs(); 
	  Fill_Emif_registers(num_of_cs, memoryType);
	  if (INFO_PRINT) {
	    GEL_TextOut(">> DDR SEVM levelling set to 532MHz  \n");
	  }               
	}
      else
	if (memoryType==DDR3_ZEBU)
	  {
	    if (INFO_PRINT) {
	      GEL_TextOut(">> DDR3 ZEBU MEMORY \n");
            }
	    num_of_cs = 1;
   
	    if (OPP==OPP_NOM)
	      {
		ddr_config_ddr3_ZEBU();
		Fill_Emif_registers(num_of_cs, memoryType);
		if (INFO_PRINT) {
		  GEL_TextOut(">> OPP NOM  \n");
		}
	      }
                
	  }
	else
	  if (memoryType==ELPIDA_EDB8164B3PF1DF)
	    {
	      if (INFO_PRINT) {
		GEL_TextOut(">> ELPIDA_EDB8164B3PF1DF 2X4 MEMORY \n");
	      }
 
	      num_of_cs = 1;  
	      if (OPP==OPP_LOW)
		{
		  ddr_config_elpida_EDB8164B3PF1DF_2X4_LOW();
		  Fill_Emif_registers(num_of_cs, memoryType);
		  if (INFO_PRINT) {
		    GEL_TextOut(">> OPP LOW  \n");
		  }
		}
	      else
		if (OPP==OPP_NOM)
		  {
		    ddr_config_elpida_EDB8164B3PF1DF_2X4_NOM();
		    Fill_Emif_registers(num_of_cs, memoryType);
		    if (INFO_PRINT) {
		      GEL_TextOut(">> OPP NOM  \n");
		    }
		  }
		else
		  if (OPP==OPP_LOW_ABE)
		    {
		      ddr_config_elpida_EDB8164B3PF1DF_2X4_LOW_ABE();
		      Fill_Emif_registers(num_of_cs, memoryType);
		      if (INFO_PRINT) {
			GEL_TextOut(">> OPP LOW ABE  \n");
		      }
		    }
		  else
		    if (OPP==OPP_WAKEUP_DDR_532)
		      {
			ddr_config_elpida_EDB8164B3PF1DF_2X4_OPP_WAKEUP_DDR_532();
			Fill_Emif_registers(num_of_cs, memoryType);
			if (INFO_PRINT) {
			  GEL_TextOut(">> OPP_WAKEUP_DDR_532  \n");
			}
		      } 
		    else
		      if (OPP==OPP_WAKEUP_DDR_400)
			{
			  ddr_config_elpida_EDB8164B3PF1DF_2X4_OPP_WAKEUP_DDR_400();
			  Fill_Emif_registers(num_of_cs, memoryType);
			  if (INFO_PRINT) {
			    GEL_TextOut(">> OPP_WAKEUP_DDR_400  \n");
			  }
			}
		      else
			if (OPP==OPP_WAKEUP_DDR_266)
			  {
			    ddr_config_elpida_EDB8164B3PF1DF_2X4_OPP_WAKEUP_DDR_266();
			    Fill_Emif_registers(num_of_cs, memoryType);
			    if (INFO_PRINT) {
			      GEL_TextOut(">> OPP_WAKEUP_DDR_266 \n");
			    }
			  }       
			else
			  if (OPP==OPP_HIGH)
			    {
			      ddr_config_elpida_EDB8164B3PF1DF_2X4_NOM();
			      Fill_Emif_registers(num_of_cs, memoryType);
			      if (INFO_PRINT) {
				GEL_TextOut(">> OPP HIGH  \n");
			      }
			    }
			  else
			    if (OPP==OPP_OD)
			      {
				ddr_config_elpida_EDB8164B3PF1DF_2X4_NOM();
				Fill_Emif_registers(num_of_cs, memoryType);
				if (INFO_PRINT) {
				  GEL_TextOut(">> OPP OD  \n");
				}
			      }
			    else 
			      {
				GEL_TextOut(">> OPP type not defined \n");
			      }
	      //dmm_settings_board(memoryType);
	    }
	  else
	    if (memoryType==ELPIDA_EDBA164B1PB1DF)
	      {
		if (INFO_PRINT) {
		  GEL_TextOut(">> ELPIDA_EDBA164B1PB1DF 4X4 MEMORY \n");
		}
                    
		num_of_cs = 2;
		if (OPP==OPP_LOW)
		  {
		    ddr_config_elpida_EDBA164B1PB1DF_4X4_LOW();
		    Fill_Emif_registers(num_of_cs, memoryType);
		    if (INFO_PRINT) {
		      GEL_TextOut(">> OPP LOW \n");
		    }
		  }
		else
		  if (OPP==OPP_NOM)
		    {
		      ddr_config_elpida_EDBA164B1PB1DF_4X4_NOM();
		      Fill_Emif_registers(num_of_cs, memoryType);
		      if (INFO_PRINT) {
			GEL_TextOut(">> OPP NOM  \n");
		      }
		    }
		  else
		    if (OPP==OPP_LOW_ABE)
		      {
			ddr_config_elpida_EDBA164B1PB1DF_4X4_LOW_ABE();
			Fill_Emif_registers(num_of_cs, memoryType);
			if (INFO_PRINT) {
			  GEL_TextOut(">> OPP LOW ABE  \n");
			}
		      }
		    else
		      if (OPP==OPP_WAKEUP_DDR_532)
			{
			  ddr_config_elpida_EDBA164B1PB1DF_4X4_OPP_WAKEUP_DDR_532();
			  Fill_Emif_registers(num_of_cs, memoryType);
			  if (INFO_PRINT) {
			    GEL_TextOut(">> OPP_WAKEUP_DDR_532  \n");
			  }
			}
		      else
			if (OPP==OPP_WAKEUP_DDR_400)
			  {
			    ddr_config_elpida_EDBA164B1PB1DF_4X4_OPP_WAKEUP_DDR_400();
			    Fill_Emif_registers(num_of_cs, memoryType);
			    if (INFO_PRINT) {
			      GEL_TextOut(">> OPP_WAKEUP_DDR_400  \n");
			    }
			  }       
			else
			  if (OPP==OPP_WAKEUP_DDR_266)
			    {
			      ddr_config_elpida_EDBA164B1PB1DF_4X4_OPP_WAKEUP_DDR_266();
			      Fill_Emif_registers(num_of_cs, memoryType);
			      if (INFO_PRINT) {
				GEL_TextOut(">> OPP_WAKEUP_DDR_266  \n");
			      }
			    }
			  else
			    if (OPP==OPP_HIGH)
			      {
				ddr_config_elpida_EDBA164B1PB1DF_4X4_NOM();
				Fill_Emif_registers(num_of_cs, memoryType);
				if (INFO_PRINT) {
				  GEL_TextOut(">> OPP HIGH  \n");
				}
			      }
			    else
			      if (OPP==OPP_OD)
				{
				  ddr_config_elpida_EDBA164B1PB1DF_4X4_NOM();
				  Fill_Emif_registers(num_of_cs, memoryType);
				  if (INFO_PRINT) {
				    GEL_TextOut(">> OPP OD  \n");
				  }
				}
			      else 
				{
				  GEL_TextOut(">> OPP type not defined \n");
				}        
	      }
	    else
	      if (memoryType==SAMSUNG_K3PE0E000B_XGC2)
		{
		  if (INFO_PRINT) {
                    GEL_TextOut(">> SAMSUNG_K3PE0E000B_XGC2 4X4 MEMORY \n");
		  }
                    
		  num_of_cs = 1;
		  if (OPP==OPP_LOW)
		    {
		      ddr_config_samsung_K3PE0E000B_XGC2_4X4_LOW();
		      Fill_Emif_registers(num_of_cs, memoryType);
		      if (INFO_PRINT) {
			GEL_TextOut(">> OPP LOW \n");
		      }
		    }
		  else
		    if (OPP==OPP_NOM)
		      {
			ddr_config_samsung_K3PE0E000B_XGC2_4X4_NOM();
			Fill_Emif_registers(num_of_cs, memoryType);
			if (INFO_PRINT) {
			  GEL_TextOut(">> OPP NOM  \n");
			}
		      }
		    else
		      if (OPP==OPP_LOW_ABE)
			{
			  ddr_config_samsung_K3PE0E000B_XGC2_4X4_LOW_ABE();
			  Fill_Emif_registers(num_of_cs, memoryType);
			  if (INFO_PRINT) {
			    GEL_TextOut(">> OPP LOW ABE  \n");
			  }
			}
		      else
			if (OPP==OPP_WAKEUP_DDR_532)
			  {
			    ddr_config_samsung_K3PE0E000B_XGC2_4X4_OPP_WAKEUP_DDR_532();
			    Fill_Emif_registers(num_of_cs, memoryType);
			    if (INFO_PRINT) {
			      GEL_TextOut(">> OPP_WAKEUP_DDR_532  \n");
			    }
			  }
			else
			  if (OPP==OPP_WAKEUP_DDR_400)
			    {
			      ddr_config_samsung_K3PE0E000B_XGC2_4X4_OPP_WAKEUP_DDR_400();
			      Fill_Emif_registers(num_of_cs, memoryType);
			      if (INFO_PRINT) {
				GEL_TextOut(">> OPP_WAKEUP_DDR_400  \n");
			      }
			    }
			  else
			    if (OPP==OPP_WAKEUP_DDR_266)
			      {
				ddr_config_samsung_K3PE0E000B_XGC2_4X4_OPP_WAKEUP_DDR_266();
				Fill_Emif_registers(num_of_cs, memoryType);
				if (INFO_PRINT) {
				  GEL_TextOut(">> OPP_WAKEUP_DDR_266 \n");
				}
			      }       
			    else
			      if (OPP==OPP_HIGH)
				{
				  ddr_config_samsung_K3PE0E000B_XGC2_4X4_NOM();
				  Fill_Emif_registers(num_of_cs, memoryType);
				  if (INFO_PRINT) {
				    GEL_TextOut(">> OPP HIGH  \n");
				  }
				}
			      else
				if (OPP==OPP_OD)
				  {
				    ddr_config_samsung_K3PE0E000B_XGC2_4X4_NOM();
				    Fill_Emif_registers(num_of_cs, memoryType);
				    if (INFO_PRINT) {
				      GEL_TextOut(">> OPP OD  \n");
				    }
				  }
				else 
				  {
				    GEL_TextOut(">> OPP type not defined \n");
				  }        
		}
	      else
		{
		  GEL_TextOut(">> MEMORY type not defined \n");
		}

  //	emif_set_obs(MODE_FOR_EMIF1_DATA_BYTE_0);
  //	emif_set_obs(MODE_FOR_EMIF1_LEVELING_BYTE_0_RANK_0);
  //	emif_set_obs(MODE_FOR_EMIF1_LEVELING_BYTE_0_RANK_1);
  //	emif_set_obs(MODE_FOR_EMIF1_CMD_DLL);
  //	emif_set_obs(MODE_FOR_EMIF2_DATA_BYTE_0);
  //	emif_set_obs(MODE_FOR_EMIF2_LEVELING_BYTE_0_RANK_0);
  //	emif_set_obs(MODE_FOR_EMIF2_LEVELING_BYTE_0_RANK_1);
  //	emif_set_obs(MODE_FOR_EMIF2_CMD_DLL);

  //	emif_set_obs(0x15);
  //	emif_Fill_Emif_registersset_obs(0x19);
  dmm_settings_board(memoryType);   	

  //ddr_data_pattern = BIT_SWAP_PATTERN;
  ddr_data_pattern = BLOCK_BURST_PATTERN;
}



hotmenu use_emif1_only()
{
  // SET MA LISA1 register for non interleaved memory 
  MA_LISA_1_REG(MA_LISA__BASE__ADDR) = MA_LISA_MAP__0__SDRAM_EMIF1_ONLY_VALUE;
        
  /* Write @40 DMM LISA_MAP_0 */
  DMM_LISA_MAP_0(DMM_BASE_ADDRESS) = MA_LISA_MAP__0__SDRAM_EMIF1_ONLY_VALUE;   
}

hotmenu use_emif2_only()
{
  // SET MA LISA1 register for non interleaved memory 
  MA_LISA_1_REG(MA_LISA__BASE__ADDR) = MA_LISA_MAP__0__SDRAM_EMIF2_ONLY_VALUE;
        
  /* Write @40 DMM LISA_MAP_0 */
  DMM_LISA_MAP_0(DMM_BASE_ADDRESS) = MA_LISA_MAP__0__SDRAM_EMIF2_ONLY_VALUE;   
}

hotmenu use_emif_interleaved()
{
  // SET MA LISA1 register for non interleaved memory 
  MA_LISA_1_REG(MA_LISA__BASE__ADDR) = MA_LISA_MAP__0__SDRAM_INTERLEAVED_VALUE;
        
  /* Write @40 DMM LISA_MAP_0 */
  DMM_LISA_MAP_0(DMM_BASE_ADDRESS) = MA_LISA_MAP__0__SDRAM_INTERLEAVED_VALUE;   
}

dmm_settings_board(int memoryType)
{

  if (INFO_PRINT) {
    GEL_TextOut(">> START dmm_settings_board \n");
  }    

  if (memoryType==ZEBU)
    {       
      // SET MA LISA1 register for interleaved memory 
      MA_LISA_1_REG(MA_LISA__BASE__ADDR) = MA_LISA_MAP__0__SDRAM_INTERLEAVED_VALUE;
      // SET MA LISA1 register for non interleaved memory 
      //MA_LISA_1_REG(MA_LISA__BASE__ADDR) = MA_LISA_MAP__0__SDRAM_EMIF1_ONLY_VALUE;

        
      /* Write @40 DMM LISA_MAP_0 */
      DMM_LISA_MAP_0(DMM_BASE_ADDRESS) = MA_LISA_MAP__0__SDRAM_INTERLEAVED_VALUE;        
 
    }
  else
    if (memoryType==DDR3_LVL_SEVM_532)
      {
        // SET MA LISA1 register for interleaved memory 
        MA_LISA_1_REG(MA_LISA__BASE__ADDR) = MA_LISA_MAP__0__SDRAM_INTERLEAVED_VALUE;
        // SET MA LISA1 register for non interleaved memory 
        //MA_LISA_1_REG(MA_LISA__BASE__ADDR) = MA_LISA_MAP__0__SDRAM_EMIF1_ONLY_VALUE;

        
	/* Write @40 DMM LISA_MAP_0 */
        DMM_LISA_MAP_0(DMM_BASE_ADDRESS) = MA_LISA_MAP__0__SDRAM_INTERLEAVED_VALUE; 
        //DMM_LISA_MAP_0(DMM_BASE_ADDRESS) = MA_LISA_MAP__0__SDRAM_EMIF1_ONLY_VALUE;            
      }
    else
      if (memoryType==DDR3_LVL_NTEB_532)
	{
	  // SET MA LISA1 register for interleaved memory 
	  MA_LISA_1_REG(MA_LISA__BASE__ADDR) = MA_LISA_MAP__0__SDRAM_INTERLEAVED_VALUE;
	  // SET MA LISA1 register for non interleaved memory 
	  //MA_LISA_1_REG(MA_LISA__BASE__ADDR) = MA_LISA_MAP__0__SDRAM_EMIF1_ONLY_VALUE;

        
	  /* Write @40 DMM LISA_MAP_0 */
	  DMM_LISA_MAP_0(DMM_BASE_ADDRESS) = MA_LISA_MAP__0__SDRAM_INTERLEAVED_VALUE; 
	  //DMM_LISA_MAP_0(DMM_BASE_ADDRESS) = MA_LISA_MAP__0__SDRAM_EMIF1_ONLY_VALUE;            
	}
      else
	if (memoryType==DDR3_ZEBU)
	  {
	    // SET MA LISA1 register for interleaved memory 
	    //MA_LISA_1_REG(MA_LISA__BASE__ADDR) = MA_LISA_MAP__0__SDRAM_INTERLEAVED_VALUE;
	    // SET MA LISA1 register for non interleaved memory 
	    MA_LISA_1_REG(MA_LISA__BASE__ADDR) = MA_LISA_MAP__0__SDRAM_EMIF1_ONLY_VALUE;

        
	    /* Write @40 DMM LISA_MAP_0 */
	    DMM_LISA_MAP_0(DMM_BASE_ADDRESS) = MA_LISA_MAP__0__SDRAM_EMIF1_ONLY_VALUE;            
	  }
	else
	  if (memoryType==ELPIDA_EDBA164B1PB1DF)
	    {
	      // SET MA LISA1 register for interleaved memory 
	      MA_LISA_1_REG(MA_LISA__BASE__ADDR) = MA_LISA_MAP__0__SDRAM_INTERLEAVED_VALUE;
	      // SET MA LISA1 register for non interleaved memory 
	      //MA_LISA_1_REG(MA_LISA__BASE__ADDR) = MA_LISA_MAP__0__SDRAM_EMIF1_ONLY_VALUE;

        
	      /* Write @40 DMM LISA_MAP_0 */
	      DMM_LISA_MAP_0(DMM_BASE_ADDRESS) = MA_LISA_MAP__0__SDRAM_INTERLEAVED_VALUE;        
    
	    }
	  else
	    if (memoryType==ELPIDA_EDB8164B3PF1DF)
	      {
		// SET MA LISA1 register for interleaved memory 
		MA_LISA_1_REG(MA_LISA__BASE__ADDR) = MA_LISA_MAP__0__SDRAM_INTERLEAVED_VALUE;
		// SET MA LISA1 register for non interleaved memory 
		//MA_LISA_1_REG(MA_LISA__BASE__ADDR) = MA_LISA_MAP__0__SDRAM_EMIF1_ONLY_VALUE;

        
		/* Write @40 DMM LISA_MAP_0 */
		DMM_LISA_MAP_0(DMM_BASE_ADDRESS) = MA_LISA_MAP__0__SDRAM_INTERLEAVED_VALUE;        
    
	      }
	    else
	      if (memoryType==SAMSUNG_K3PE0E000B_XGC2)
		{
		  // SET MA LISA1 register for interleaved memory 
		  MA_LISA_1_REG(MA_LISA__BASE__ADDR) = MA_LISA_MAP__0__SDRAM_INTERLEAVED_VALUE;
		  // SET MA LISA1 register for non interleaved memory 
		  //MA_LISA_1_REG(MA_LISA__BASE__ADDR) = MA_LISA_MAP__0__SDRAM_EMIF1_ONLY_VALUE;

        
		  /* Write @40 DMM LISA_MAP_0 */
		  DMM_LISA_MAP_0(DMM_BASE_ADDRESS) = MA_LISA_MAP__0__SDRAM_INTERLEAVED_VALUE;        
    
		}
	      else
		{
		  GEL_TextOut(">> memory type unkown \n");
		}  
  if (INFO_PRINT) {
    GEL_TextOut(">> END dmm_settings_board\n");
  }
}


hotmenu ConfigureObservabilityOMAP5432()
{

  int hwobsControl = 0;

  int muxMode = 0;

  int regValue = 0;

 

  // initializing all muxing paths from subsystem to pads 

 

  // putting clkdiv sel to 1 (means outputs are not divided)

  hwobsControl = HWOBS_CONTROL_REG_ADDR;

  hwobsControl = (hwobsControl & 0xFFFFFF07) | 0x8;

  HWOBS_CONTROL_REG_ADDR = hwobsControl;

 

  // putting hwobs force bits to 0 (no forcing active)

  hwobsControl = HWOBS_CONTROL_REG_ADDR;

  hwobsControl = (hwobsControl & 0xFFFFFFF9) | 0x00000000;

  HWOBS_CONTROL_REG_ADDR = hwobsControl;

 

  // enabling hwobs in macro cells (subsystem level)

  hwobsControl = HWOBS_CONTROL_REG_ADDR;

  hwobsControl = (hwobsControl & 0xFFFFFFFE) | 0x00000001;

  HWOBS_CONTROL_REG_ADDR = hwobsControl;

 

  // selecting all bits to come from core domain in final mux

  DEBOBS_FINAL_MUX_SEL_REG_ADDR = 0xFFFFFFFF;

 

  // getting signal hw_dbg21 to pad SYSCFG_PAD_C2C_DATAOUT5,

#define SYSCFG_PAD_C2C_DATAOUT5 *(int *) 0x4A002876

  muxMode = SYSCFG_PAD_C2C_DATAOUT5;

  muxMode = (muxMode & 0xFFFFFFF8) | 0x5;

  SYSCFG_PAD_C2C_DATAOUT5 = muxMode;

 

  // getting signal hwobs_emif1_phy_reg_gate_level_fsm_byte0(0) on dbg signal hw_dbg21

#define CORE_CONF_DEBUG_SEL_TST_21_REG_ADDR *(int *) 0x4A002524

  CORE_CONF_DEBUG_SEL_TST_21_REG_ADDR = 0x16;

 

  // getting signal hw_dbg22 to pad SYSCFG_PAD_C2C_DATAOUT6,

#define SYSCFG_PAD_C2C_DATAOUT6 *(int *) 0x4A002878

  muxMode = SYSCFG_PAD_C2C_DATAOUT6;

  muxMode = (muxMode & 0xFFFFFFF8) | 0x5;

  SYSCFG_PAD_C2C_DATAOUT6 = muxMode;

 

  // getting signal hwobs_emif1_phy_reg_gate_level_fsm_byte0(1) on dbg signal hw_dbg22

#define CORE_CONF_DEBUG_SEL_TST_22_REG_ADDR *(int *) 0x4A002528

  CORE_CONF_DEBUG_SEL_TST_22_REG_ADDR = 0x16;

 

  // getting signal hw_dbg23 to pad SYSCFG_PAD_C2C_DATAOUT7,

#define SYSCFG_PAD_C2C_DATAOUT7 *(int *) 0x4A00287A

  muxMode = SYSCFG_PAD_C2C_DATAOUT7;

  muxMode = (muxMode & 0xFFFFFFF8) | 0x5;

  SYSCFG_PAD_C2C_DATAOUT7 = muxMode;

 

  // getting signal hwobs_emif1_phy_reg_gate_level_fsm_byte0(2) on dbg signal hw_dbg23

#define CORE_CONF_DEBUG_SEL_TST_23_REG_ADDR *(int *) 0x4A00252C

  CORE_CONF_DEBUG_SEL_TST_23_REG_ADDR = 0x16;

 

  // getting signal hw_dbg24 to pad SYSCFG_PAD_C2C_DATA8,

#define SYSCFG_PAD_C2C_DATA8 *(int *) 0x4A00287C

  muxMode = SYSCFG_PAD_C2C_DATA8;

  muxMode = (muxMode & 0xFFFFFFF8) | 0x5;

  SYSCFG_PAD_C2C_DATA8 = muxMode;

 

  // getting signal hwobs_emif1_phy_reg_rd_level_fsm_byte0(0) on dbg signal hw_dbg24

#define CORE_CONF_DEBUG_SEL_TST_24_REG_ADDR *(int *) 0x4A002530

  CORE_CONF_DEBUG_SEL_TST_24_REG_ADDR = 0x16;

 

  // getting signal hw_dbg25 to pad SYSCFG_PAD_C2C_DATA9,

#define SYSCFG_PAD_C2C_DATA9 *(int *) 0x4A00287E

  muxMode = SYSCFG_PAD_C2C_DATA9;

  muxMode = (muxMode & 0xFFFFFFF8) | 0x5;

  SYSCFG_PAD_C2C_DATA9 = muxMode;

 

  // getting signal hwobs_emif1_phy_reg_rd_level_fsm_byte0(1) on dbg signal hw_dbg25

#define CORE_CONF_DEBUG_SEL_TST_25_REG_ADDR *(int *) 0x4A002534

  CORE_CONF_DEBUG_SEL_TST_25_REG_ADDR = 0x16;

 

  // getting signal hw_dbg26 to pad SYSCFG_PAD_C2C_DATA10,

#define SYSCFG_PAD_C2C_DATA10 *(int *) 0x4A002880

  muxMode = SYSCFG_PAD_C2C_DATA10;

  muxMode = (muxMode & 0xFFFFFFF8) | 0x5;

  SYSCFG_PAD_C2C_DATA10 = muxMode;

 

  // getting signal hwobs_emif1_phy_reg_rd_level_fsm_byte0(2) on dbg signal hw_dbg26

#define CORE_CONF_DEBUG_SEL_TST_26_REG_ADDR *(int *) 0x4A002538

  CORE_CONF_DEBUG_SEL_TST_26_REG_ADDR = 0x16;

 

  // getting signal hw_dbg27 to pad SYSCFG_PAD_C2C_DATA11,

#define SYSCFG_PAD_C2C_DATA11 *(int *) 0x4A002882

  muxMode = SYSCFG_PAD_C2C_DATA11;

  muxMode = (muxMode & 0xFFFFFFF8) | 0x5;

  SYSCFG_PAD_C2C_DATA11 = muxMode;

 

  // getting signal hwobs_emif1_phy_reg_rd_level_fsm_byte0(3) on dbg signal hw_dbg27

#define CORE_CONF_DEBUG_SEL_TST_27_REG_ADDR *(int *) 0x4A00253C

  CORE_CONF_DEBUG_SEL_TST_27_REG_ADDR = 0x16;

 

  // getting signal hw_dbg28 to pad SYSCFG_PAD_C2C_DATA12,

#define SYSCFG_PAD_C2C_DATA12 *(int *) 0x4A002884

  muxMode = SYSCFG_PAD_C2C_DATA12;

  muxMode = (muxMode & 0xFFFFFFF8) | 0x5;

  SYSCFG_PAD_C2C_DATA12 = muxMode;

 

  // getting signal hwobs_emif1_phy_reg_wr_level_fsm_byte0(0) on dbg signal hw_dbg28

#define CORE_CONF_DEBUG_SEL_TST_28_REG_ADDR *(int *) 0x4A002540

  CORE_CONF_DEBUG_SEL_TST_28_REG_ADDR = 0x16;

 

  // getting signal hw_dbg29 to pad SYSCFG_PAD_C2C_DATA13,

#define SYSCFG_PAD_C2C_DATA13 *(int *) 0x4A002886

  muxMode = SYSCFG_PAD_C2C_DATA13;

  muxMode = (muxMode & 0xFFFFFFF8) | 0x5;

  SYSCFG_PAD_C2C_DATA13 = muxMode;

 

  // getting signal hwobs_emif1_phy_reg_wr_level_fsm_byte0(1) on dbg signal hw_dbg29

#define CORE_CONF_DEBUG_SEL_TST_29_REG_ADDR *(int *) 0x4A002544

  CORE_CONF_DEBUG_SEL_TST_29_REG_ADDR = 0x16;

 

  // getting signal hw_dbg30 to pad SYSCFG_PAD_C2C_DATA14,

#define SYSCFG_PAD_C2C_DATA14 *(int *) 0x4A002888

  muxMode = SYSCFG_PAD_C2C_DATA14;

  muxMode = (muxMode & 0xFFFFFFF8) | 0x5;

  SYSCFG_PAD_C2C_DATA14 = muxMode;
 

  // getting signal hwobs_emif1_phy_reg_wr_level_fsm_byte0(2) on dbg signal hw_dbg30

#define CORE_CONF_DEBUG_SEL_TST_30_REG_ADDR *(int *) 0x4A002548

  CORE_CONF_DEBUG_SEL_TST_30_REG_ADDR = 0x16;

 

 

  // getting signal hw_dbg0 to pad SYSCFG_PAD_SYS_BOOT0,

#define SYSCFG_PAD_SYS_BOOT0 *(int *) 0x4AE0C870

  muxMode = SYSCFG_PAD_SYS_BOOT0;

  muxMode = (muxMode & 0xFFFFFFF8) | 0x5;

  SYSCFG_PAD_SYS_BOOT0 = muxMode;

 

  // getting signal hwobs_emif1_phy_reg_status_phy_ctrl_dll_lock(0) on dbg signal hw_dbg0

#define CORE_CONF_DEBUG_SEL_TST_0_REG_ADDR *(int *) 0x4A0024D0

  CORE_CONF_DEBUG_SEL_TST_0_REG_ADDR = 0x15;

 

  // getting signal hw_dbg1 to pad SYSCFG_PAD_SYS_BOOT1,

#define SYSCFG_PAD_SYS_BOOT1 *(int *) 0x4AE0C872

  muxMode = SYSCFG_PAD_SYS_BOOT1;

  muxMode = (muxMode & 0xFFFFFFF8) | 0x5;

  SYSCFG_PAD_SYS_BOOT1 = muxMode;

 

  // getting signal hwobs_emif1_phy_reg_status_phy_ctrl_dll_lock(1) on dbg signal hw_dbg1

#define CORE_CONF_DEBUG_SEL_TST_1_REG_ADDR *(int *) 0x4A0024D4

  CORE_CONF_DEBUG_SEL_TST_1_REG_ADDR = 0x15;

 

  // getting signal hw_dbg2 to pad SYSCFG_PAD_SYS_BOOT2,

#define SYSCFG_PAD_SYS_BOOT2 *(int *) 0x4AE0C874

  muxMode = SYSCFG_PAD_SYS_BOOT2;

  muxMode = (muxMode & 0xFFFFFFF8) | 0x5;

  SYSCFG_PAD_SYS_BOOT2 = muxMode;

 

  // getting signal hwobs_emif1_phy_reg_status_dll_lock_byte0 on dbg signal hw_dbg2

#define CORE_CONF_DEBUG_SEL_TST_2_REG_ADDR *(int *) 0x4A0024D8

  CORE_CONF_DEBUG_SEL_TST_2_REG_ADDR = 0x15;

}

emif_set_obs(int mode)
{

  if (INFO_PRINT) {
    GEL_TextOut(">> START emif_set_obs \n");
  }    

  //======= select signals from CORE CONTROL =======//
  *(int*)(CTRL_MODULE_CORE+DEBOBS_FINAL_MUX_SEL)	= 0xFFFFFFFF;	//  (@ = 0x4A002400)

  //======= disable all zero mode =======//
  *(int*)(CTRL_MODULE_CORE+HWOBS_CONTROL)	&= 0xFFFFFFFB;

  //======= disable all one mode =======//
  *(int*)(CTRL_MODULE_CORE+HWOBS_CONTROL)	&= 0xFFFFFFFD;

  //======= set mode =======//
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0)		= mode;	// CONF_DEBUG_SEL_TST_0
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x04)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x08)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x0C)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x10)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x14)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x18)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x1C)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x20)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x24)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x28)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x2C)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x30)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x34)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x38)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x3C)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x40)	= mode;	// CONF_DEBUG_SEL_TST_16
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x44)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x48)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x4C)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x50)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x54)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x58)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x5C)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x60)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x64)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x68)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x6C)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x70)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x74)	= mode; // (@ = 0x4A002544)
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x78)	= mode;
  *(int*)(CTRL_MODULE_CORE+CONF_DEBUG_SEL_TST_0+0x7C)	= mode;	// CONF_DEBUG_SEL_TST_31

  //======= set PADs =======//
  // HW_WKDBG0 (LSB) - HW_WKDBG1 (MSB)
  *(int*)(CTRL_MODULE_WKUP_PAD+PAD0_SYS_BOOT0_PAD1_SYS_BOOT1)	&= 0xFFF8FFF8;	// reset muxmode
  *(int*)(CTRL_MODULE_WKUP_PAD+PAD0_SYS_BOOT0_PAD1_SYS_BOOT1)	|= 0x00050005;	// set HW_WKDBG mode

  // HW_WKDBG2 (LSB) - HW_WKDBG3 (MSB)
  *(int*)(CTRL_MODULE_WKUP_PAD+PAD0_SYS_BOOT2_PAD1_SYS_BOOT3)	&= 0xFFF8FFF8;	// reset muxmode
  *(int*)(CTRL_MODULE_WKUP_PAD+PAD0_SYS_BOOT2_PAD1_SYS_BOOT3)	|= 0x00050005;	// set HW_WKDBG mode

  // HW_WKDBG4 (LSB) - HW_WKDBG8 (MSB)
  *(int*)(CTRL_MODULE_WKUP_PAD+PAD0_SYS_BOOT4_PAD1_SYS_BOOT5)	&= 0xFFF8FFF8;	// reset muxmode
  *(int*)(CTRL_MODULE_WKUP_PAD+PAD0_SYS_BOOT4_PAD1_SYS_BOOT5)	|= 0x00050005;	// set HW_WKDBG mode

  // HW_WKDBG9 (LSB) - HW_WKDBG5 (MSB)
  *(int*)(CTRL_MODULE_WKUP_PAD+PAD0_FREF_CLK0_OUT_PAD1_FREF_CLK1_OUT)	&= 0xFFF8FFF8;	// reset muxmode
  *(int*)(CTRL_MODULE_WKUP_PAD+PAD0_FREF_CLK0_OUT_PAD1_FREF_CLK1_OUT)	|= 0x00050005;	// set HW_WKDBG mode

  // HW_WKDBG6 (LSB) - HW_WKDBG7 (MSB)
  *(int*)(CTRL_MODULE_WKUP_PAD+PAD0_DRM_EMU0_PAD1_DRM_EMU1)	&= 0xFFF8FFF8;	// reset muxmode
  *(int*)(CTRL_MODULE_WKUP_PAD+PAD0_DRM_EMU0_PAD1_DRM_EMU1)	|= 0x00050005;	// set HW_WKDBG mode

  // HW_WKDBG10 (LSB) - HW_WKDBG11 (MSB)
  *(int*)(CTRL_MODULE_WKUP_PAD+PAD0_FREF_CLK2_OUT_PAD1_FREF_CLK2_REQ)	&= 0xFFF8FFF8;	// reset muxmode
  *(int*)(CTRL_MODULE_WKUP_PAD+PAD0_FREF_CLK2_OUT_PAD1_FREF_CLK2_REQ)	|= 0x00050005;	// set HW_WKDBG mode

  // HW_WKDBG12 (LSB)
  *(int*)(CTRL_MODULE_WKUP_PAD+PAD0_FREF_CLK1_REQ_PAD1_SYS_NRESPWRON)	&= 0xFFFFFFF8;	// reset muxmode
  *(int*)(CTRL_MODULE_WKUP_PAD+PAD0_FREF_CLK1_REQ_PAD1_SYS_NRESPWRON)	|= 0x00000005;	// set HW_WKDBG mode

  // HW_WKDBG14 (LSB) - HW_WKDBG13 (MSB)
  *(int*)(CTRL_MODULE_WKUP_PAD+PAD0_LLIA_WAKEREQIN_PAD1_LLIB_WAKEREQIN)	&= 0xFFF8FFF8;	// reset muxmode
  *(int*)(CTRL_MODULE_WKUP_PAD+PAD0_LLIA_WAKEREQIN_PAD1_LLIB_WAKEREQIN)	|= 0x00050005;	// set HW_WKDBG mode

  // HW_WKDBG15 (MSB)
  *(int*)(CTRL_MODULE_WKUP_PAD+PAD0_SYS_NRESWARM_PAD1_SYS_PWR_REQ)	&= 0xFFF8FFFF;	// reset muxmode
  *(int*)(CTRL_MODULE_WKUP_PAD+PAD0_SYS_NRESWARM_PAD1_SYS_PWR_REQ)	|= 0x00050000;	// set HW_WKDBG mode

  // HW_DBG16 (LSB) - HW_DBG17 (MSB)
  *(int*)(CTRL_MODULE_CORE_PAD+PAD0_C2C_DATAOUT0_PAD1_C2C_DATAOUT1)	&= 0xFFF8FFF8;	// reset muxmode
  *(int*)(CTRL_MODULE_CORE_PAD+PAD0_C2C_DATAOUT0_PAD1_C2C_DATAOUT1)	|= 0x00050005;	// set HW_DBG mode

  // HW_DBG18 (LSB) - HW_DBG19 (MSB)
  *(int*)(CTRL_MODULE_CORE_PAD+PAD0_C2C_DATAOUT2_PAD1_C2C_DATAOUT3)	&= 0xFFF8FFF8;	// reset muxmode
  *(int*)(CTRL_MODULE_CORE_PAD+PAD0_C2C_DATAOUT2_PAD1_C2C_DATAOUT3)	|= 0x00050005;	// set HW_DBG mode

  // HW_DBG20 (LSB) - HW_DBG21 (MSB)
  *(int*)(CTRL_MODULE_CORE_PAD+PAD0_C2C_DATAOUT4_PAD1_C2C_DATAOUT5)	&= 0xFFF8FFF8;	// reset muxmode
  *(int*)(CTRL_MODULE_CORE_PAD+PAD0_C2C_DATAOUT4_PAD1_C2ddr_phy_control_1_shdw_valC_DATAOUT5)	|= 0x00050005;	// set HW_DBG mode

  // HW_DBG22 (LSB) - HW_DBG23 (MSB)
  *(int*)(CTRL_MODULE_CORE_PAD+PAD0_C2C_DATAOUT6_PAD1_C2C_DATAOUT7)	&= 0xFFF8FFF8;	// reset muxmode
  *(int*)(CTRL_MODULE_CORE_PAD+PAD0_C2C_DATAOUT6_PAD1_C2C_DATAOUT7)	|= 0x00050005;	// set HW_DBG mode

  // HW_DBG24 (LSB) - HW_DBG25 (MSB)
  *(int*)(CTRL_MODULE_CORE_PAD+PAD0_C2C_DATA8_PAD1_C2C_DATA9)	&= 0xFFF8FFF8;	// reset muxmode
  *(int*)(CTRL_MODULE_CORE_PAD+PAD0_C2C_DATA8_PAD1_C2C_DATA9)	|= 0x00050005;	// set HW_DBG mode

  // HW_DBG26 (LSB) - HW_DBG27 (MSB)
  *(int*)(CTRL_MODULE_CORE_PAD+PAD0_C2C_DATA10_PAD1_C2C_DATA11)	&= 0xFFF8FFF8;	// reset muxmode
  *(int*)(CTRL_MODULE_CORE_PAD+PAD0_C2C_DATA10_PAD1_C2C_DATA11)	|= 0x00050005;	// set HW_DBG mode

  // HW_DBG28 (LSB) - HW_DBG29 (MSB)
  *(int*)(CTRL_MODULE_CORE_PAD+PAD0_C2C_DATA12_PAD1_C2C_DATA13)	&= 0xFFF8FFF8;	// reset muxmode
  *(int*)(CTRL_MODULE_CORE_PAD+PAD0_C2C_DATA12_PAD1_C2C_DATA13)	|= 0x00050005;	// set HW_DBG mode - (@ = 0x4A002884)

  // HW_DBG30 (LSB) - HW_DBG31 (MSB)
  *(int*)(CTRL_MODULE_CORE_PAD+PAD0_C2C_DATA14_PAD1_C2C_DATA15)	&= 0xFFF8FFF8;	// reset muxmode
  *(int*)(CTRL_MODULE_CORE_PAD+PAD0_C2C_DATA14_PAD1_C2C_DATA15)	|= 0x00050005;	// set HW_DBG mode


}

set_shadow_registers()
{
  if (INFO_PRINT) {
    GEL_TextOut(">> START set_shadow_registers\n");
  }




  //=======//
  // EMIF1 //
  //=======//

  //======= SHDW registers =======//
  DDR_PHY_CTRL_1_SHDW(EMIF4D1_BASE_ADDRESS) = ddr_phy_control_1_shdw_val;
  SDRAM_TIM_1_SHDW(EMIF4D1_BASE_ADDRESS)= sdram_tim_1_shdw_val;
  SDRAM_TIM_2_SHDW(EMIF4D1_BASE_ADDRESS) = sdram_tim_2_shdw_val;
  SDRAM_TIM_3_SHDW(EMIF4D1_BASE_ADDRESS) = sdram_tim_3_shdw_val;
  PWR_MGMT_CTRL_SHDW(EMIF4D1_BASE_ADDRESS) = power_mgmt_ctrl_shdw_val;
  SDRAM_REF_CTRL_SHDW(EMIF4D1_BASE_ADDRESS) = sdram_ref_ctrl_shdw_val;
  DLL_CALIB_CTRL_SHDW(EMIF4D1_BASE_ADDRESS) = dll_calib_control_shdw_val;
  EXT_PHY_CONTROL_1_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_1_shdw_val;
  EXT_PHY_CONTROL_2_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_2_shdw_val;
  EXT_PHY_CONTROL_3_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_3_shdw_val;
  EXT_PHY_CONTROL_4_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_4_shdw_val;
  EXT_PHY_CONTROL_5_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_5_shdw_val;	//!!!!!!!!!!!!!!!! != DV : different slave ratios
  EXT_PHY_CONTROL_6_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_6_shdw_val;	//!!!!!!!!!!!!!!!! != DV : different slave ratios
  EXT_PHY_CONTROL_7_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_7_shdw_val;	//!!!!!!!!!!!!!!!! != DV : different slave ratios
  EXT_PHY_CONTROL_8_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_8_shdw_val;
  EXT_PHY_CONTROL_9_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_9_shdw_val;
  EXT_PHY_CONTROL_10_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_10_shdw_val;
  EXT_PHY_CONTROL_11_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_11_shdw_val;
  EXT_PHY_CONTROL_12_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_12_shdw_val;
  EXT_PHY_CONTROL_13_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_13_shdw_val;
  EXT_PHY_CONTROL_14_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_14_shdw_val;
  EXT_PHY_CONTROL_15_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_15_shdw_val;

  //	*(int *)0x4C000274 = 0x400000;

  EXT_PHY_CONTROL_16_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_16_shdw_val;	//!!!!!!!!!!!!!!!! != DV (dq_offset0 = dq_offset1 = dq_offset2 = dq_offset3 = 128)
  EXT_PHY_CONTROL_17_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_17_shdw_val;	//!!!!!!!!!!!!!!!! != DV (use_rank0_delays = 2)
  EXT_PHY_CONTROL_18_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_18_shdw_val;	//!!!!!!!!!!!!!!!! != DV : ext_phy_ctrl_18 = ext_phy_ctrl_2
  EXT_PHY_CONTROL_19_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_19_shdw_val;	//!!!!!!!!!!!!!!!! != DV : ext_phy_ctrl_19 = ext_phy_ctrl_3
  EXT_PHY_CONTROL_20_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_20_shdw_val;	//!!!!!!!!!!!!!!!! != DV : ext_phy_ctrl_20 = ext_phy_ctrl_4
  EXT_PHY_CONTROL_21_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_21_shdw_val;
  EXT_PHY_CONTROL_22_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_22_shdw_val;
  EXT_PHY_CONTROL_23_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_23_shdw_val;
  EXT_PHY_CONTROL_24_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_24_shdw_val;	//!!!!!!!!!!!!!!!! != DV : DDR3 specific
  EXT_PHY_CONTROL_25_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_25_shdw_val;
  EXT_PHY_CONTROL_26_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_26_shdw_val;
  EXT_PHY_CONTROL_27_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_27_shdw_val;
  EXT_PHY_CONTROL_28_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_28_shdw_val;
  EXT_PHY_CONTROL_29_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_29_shdw_val;
  EXT_PHY_CONTROL_30_SHDW(EMIF4D1_BASE_ADDRESS) = ext_phy_control_30_shdw_val;




  //=======//
  // EMIF2 //
  //=======//

  //======= SHDW registers =======//
  DDR_PHY_CTRL_1_SHDW(EMIF4D2_BASE_ADDRESS) = ddr_phy_control_1_shdw_val;
  SDRAM_TIM_1_SHDW(EMIF4D2_BASE_ADDRESS)= sdram_tim_1_shdw_val;
  SDRAM_TIM_2_SHDW(EMIF4D2_BASE_ADDRESS) = sdram_tim_2_shdw_val;memory_type
								  SDRAM_TIM_3_SHDW(EMIF4D2_BASE_ADDRESS) = sdram_tim_3_shdw_val;
  PWR_MGMT_CTRL_SHDW(EMIF4D2_BASE_ADDRESS) = power_mgmt_ctrl_shdw_val;
  SDRAM_REF_CTRL_SHDW(EMIF4D2_BASE_ADDRESS) = sdram_ref_ctrl_shdw_val;
  DLL_CALIB_CTRL_SHDW(EMIF4D2_BASE_ADDRESS) = dll_calib_control_shdw_val;
  EXT_PHY_CONTROL_1_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_1_shdw_val;
  EXT_PHY_CONTROL_2_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_2_shdw_val;
  EXT_PHY_CONTROL_3_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_3_shdw_val;
  EXT_PHY_CONTROL_4_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_4_shdw_val;
  EXT_PHY_CONTROL_5_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_5_shdw_val;	//!!!!!!!!!!!!!!!! != DV : different slave ratios
  EXT_PHY_CONTROL_6_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_6_shdw_val;	//!!!!!!!!!!!!!!!! != DV : different slave ratios
  EXT_PHY_CONTROL_7_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_7_shdw_val;	//!!!!!!!!!!!!!!!! != DV : different slave ratios
  EXT_PHY_CONTROL_8_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_8_shdw_val;
  EXT_PHY_CONTROL_9_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_9_shdw_val;
  EXT_PHY_CONTROL_10_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_10_shdw_val;
  EXT_PHY_CONTROL_11_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_11_shdw_val;
  EXT_PHY_CONTROL_12_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_12_shdw_val;
  EXT_PHY_CONTROL_13_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_13_shdw_val;
  EXT_PHY_CONTROL_14_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_14_shdw_val;
  EXT_PHY_CONTROL_15_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_15_shdw_val;

  //	*(int *)0x4D000274 = 0x400000;

  EXT_PHY_CONTROL_16_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_16_shdw_val;	//!!!!!!!!!!!!!!!! != DV (dq_offset0 = dq_offset1 = dq_offset2 = dq_offset3 = 128)
  EXT_PHY_CONTROL_17_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_17_shdw_val;	//!!!!!!!!!!!!!!!! != DV (use_rank0_delays = 2)
  EXT_PHY_CONTROL_18_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_18_shdw_val;	//!!!!!!!!!!!!!!!! != DV : ext_phy_ctrl_18 = ext_phy_ctrl_2
  EXT_PHY_CONTROL_19_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_19_shdw_val;	//!!!!!!!!!!!!!!!! != DV : ext_phy_ctrl_19 = ext_phy_ctrl_3
  EXT_PHY_CONTROL_20_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_20_shdw_val;	//!!!!!!!!!!!!!!!! != DV : ext_phy_ctrl_20 = ext_phy_ctrl_4
  EXT_PHY_CONTROL_21_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_21_shdw_val;
  EXT_PHY_CONTROL_22_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_22_shdw_val;
  EXT_PHY_CONTROL_23_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_23_shdw_val;
  EXT_PHY_CONTROL_24_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_24_shdw_val;	//!!!!!!!!!!!!!!!! != DV : DDR3 specific
  EXT_PHY_CONTROL_25_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_25_shdw_val;
  EXT_PHY_CONTROL_26_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_26_shdw_val;
  EXT_PHY_CONTROL_27_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_27_shdw_val;
  EXT_PHY_CONTROL_28_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_28_shdw_val;
  EXT_PHY_CONTROL_29_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_29_shdw_val;
  EXT_PHY_CONTROL_30_SHDW(EMIF4D2_BASE_ADDRESS) = ext_phy_control_30_shdw_val;




   
  if (INFO_PRINT) {
    GEL_TextOut(">> END set_shadow_registers\n");
  }
}
 










hotmenu opp_change_to_opp_low()
{
  GEL_TextOut(">> START opp_change_to_opp_low\n");

  // set variables for OPP_LOW
  ddr_config_elpida_EDBA164B1PB1DF_4X4_OPP_WAKEUP_DDR_266();
  set_shadow_registers();


  //opp_default_config_board_WAKEUP_19_2_DDR_266();
  // Core DPLL programming
  prcm_clock_def_opp_wakeUp_SYSCLK_19_2_DDR_266();
  dpll_core_opp_config_board(OPP_WAKEUP_DDR_266);

  GEL_TextOut(">> END opp_change_to_opp_low\n");

}


hotmenu opp_change_to_opp_nom()
{
  GEL_TextOut(">> START opp_change_to_opp_nom\n");

  // set variables for OPP_NOM
  ddr_config_elpida_EDBA164B1PB1DF_4X4_OPP_WAKEUP_DDR_532();
  set_shadow_registers();


  //opp_default_config_board_WAKEUP_19_2_DDR_532();
  // Core DPLL programming
  prcm_clock_def_opp_wakeUp_SYSCLK_19_2_DDR_532();
  dpll_core_opp_config_board(OPP_WAKEUP_DDR_532);

  GEL_TextOut(">> END opp_change_to_opp_nom\n");

}


hotmenu bit_swap_ddr_debug()
{

  int i;
  int j;
  int local_data;
  int read_value;


  GEL_TextOut(">> START bit_swap_ddr_debug\n");

  i = 0;
  j = 0;
  local_data = ddr_data_pattern;
  while (j<(int)(BIT_SWAP_SIZE))
    {
      *(int*)(j+0x80000000) = (int)(local_data);        
      //GEL_TextOut(">> address (%x) \n",,,,,(int)(j+0x80000000));
      //GEL_TextOut(">> value (%x) \n",,,,,*(int*)((int)(j+0x80000000))); 
      i=i+1;
      j=j+4;
      local_data = ~local_data;
    }

  i = 0;
  j = 0;
  local_data = ddr_data_pattern;
  while (j<(int)(BIT_SWAP_SIZE))
    {
      read_value = *(int*)((int)(j+0x80000000));
      if (read_value!= (int)(local_data))
	{
	  GEL_TextOut(">> error address (%x) \n",,,,,j+0x80000000);
	  GEL_TextOut(">> read value (%x) \n",,,,,read_value);
	  GEL_TextOut(">> value expected (%x) \n",,,,,local_data);
	}
      i=i+1;
      j=j+4;
      local_data = ~local_data;
    }

  ddr_data_pattern = ~ddr_data_pattern;
  GEL_TextOut(">> END bit_swap_ddr_debug\n");

}   

hotmenu block_burst_ddr_debug()
{

  int i;
  int j;
  int local_data;
  int write_value;
  int read_value;


  GEL_TextOut(">> START block_burst_ddr_debug\n");

  i = 0;
  j = 0;
  local_data = ddr_data_pattern;
  while (j<(int)(BIT_SWAP_SIZE))
    {
      write_value = local_data | (local_data << 8) | (local_data << 16) | (local_data << 24);
      *(int*)(j+0x80000000) = (int)(write_value);        
      //GEL_TextOut(">> address (%x) \n",,,,,(int)(j+0x80000000));
      //GEL_TextOut(">> value (%x) \n",,,,,*(int*)((int)(j+0x80000000))); 
      i=i+1;
      j=j+4;
      if (local_data < 255) 
	{
	  local_data = local_data + 1;
	}
      else
	{
	  local_data = 0;
	}
    }

  i = 0;
  j = 0;
  local_data = ddr_data_pattern;
  while (j<(int)(BIT_SWAP_SIZE))
    {
      write_value = local_data | (local_data << 8) | (local_data << 16) | (local_data << 24);
      read_value = *(int*)((int)(j+0x80000000));
      if (read_value!= write_value)
	{
	  GEL_TextOut(">> error address (%x) \n",,,,,j+0x80000000);
	  GEL_TextOut(">> read value (%x) \n",,,,,read_value);
	  GEL_TextOut(">> value expected (%x) \n",,,,,write_value);
	}
      i=i+1;
      j=j+4;
      if (local_data < 255) 
	{
	  local_data = local_data + 1;
	}
      else
	{
	  local_data = 0;
	}
    }

  if (ddr_data_pattern < 255) 
    {
      ddr_data_pattern = ddr_data_pattern + 1;
    }
  else
    {
      ddr_data_pattern = 1;
    }
  GEL_TextOut(">> END block_burst_ddr_debug\n");

}   



hotmenu repetitive_opp_change()
{
  int i;

  i = 0;
  while (i<(int)(NUM_OF_OPP_CHG))
    {

      opp_change_to_opp_low();
      //	bit_swap_ddr_debug();
      block_burst_ddr_debug();
      opp_change_to_opp_nom();
      //	bit_swap_ddr_debug();
      block_burst_ddr_debug();
      i=i+1;
    }


}





