/*******************************************************************/ 
/* This GEL file allows controlling VCORE1/VCORE2/VCORE3 from      */
/* OMAP SmartReflex Force command                                  */
/* All voltages supported from Phoenix PMIC spec (cf. VSEL table)  */
/* Note that it is matching Phoenix Power IC ES2.0 EEPROM 03       */
/* (to be updated with EEPROM 05                                   */
/* Author: Yoan Hebrard (y-hebrard@ti.com)                    	   */
/*******************************************************************/

menuitem "Force Phoenix Voltage"

#define PHOENIX_PMIC_I2C_AD                     0x12
#define PHOENIX_PMIC_VCORE1_CFG_FORCE_REG       0x55
#define PHOENIX_PMIC_VCORE2_CFG_FORCE_REG       0x5B
#define PHOENIX_PMIC_VCORE3_CFG_FORCE_REG       0x61
#define PHOENIX_PMIC_V1V29_CFG_VOLTAGE_REG      0x44
#define PHOENIX_PMIC_VCORE3_CFG_FORCE_CMD       (0x1 << 24)

#define PHOENIX_PMIC_MIN_VOLTAGE_x10            6000
#define PHOENIX_PMIC_MAX_VOLTAGE_x10            13000
#define PHOENIX_PMIC_STEP_VOLTAGE_x10           125

#define INFO_PRINT								0

dialog Force_Phoenix_PMIC_Voltage(voltage_rail "Voltage Rail (VCORE1:1/VCORE2:2/VCORE3:3/V1V29:0", voltage_value "Voltage (mV)" )
{
	char rail    = voltage_rail;
	int value = voltage_value;
	
	if (!((value == 0) || (value >= 600) || (value <=1300) || (value == 1350) || (value == 1500) || (value == 1800) || (value == 1900))){
	       GEL_TextOut("--->>> Sorry, unsupported voltage value!!! <<<---\n");	       
								return;
	} else {
	       
	       if (rail == 0){
	               GEL_TextOut("--->>> Sorry, V1V29 not yet supported... <<<---\n");
        	} else if (rail == 1){
                GEL_TextOut("--->>> VCORE1 set to %d mV... <<<---\n",,,,,value);
        	       Force_PMIC_VCORE(PHOENIX_PMIC_VCORE1_CFG_FORCE_REG, value);
        	} else if (rail == 2){
                GEL_TextOut("--->>> VCORE2 set to %d mV... <<<---\n",,,,,value);
        	       Force_PMIC_VCORE(PHOENIX_PMIC_VCORE2_CFG_FORCE_REG, value);	
        	} else if (rail == 3){
                GEL_TextOut("--->>> VCORE3 set to %d mV... <<<---\n",,,,,value);
        	       Force_PMIC_VCORE(PHOENIX_PMIC_VCORE3_CFG_FORCE_REG, value);

        	} else {
        	      GEL_TextOut("--->>> Error: Voltage rail unknown!!! <<<---\n");
        							return;
        	}
	       
	}
}



/*******************************************************************/ 
/* Forcing VCORE thru VCORE3_CFG_FORCE Register                    */
/*******************************************************************/ 
Force_PMIC_VCORE(int reg_adress, int voltage_value_mV){

        int vcore_force_value, vsel_code, voltage_value_mV_x10; 

        voltage_value_mV_x10 = voltage_value_mV * 10; // to avoid computing float numbers
								
        if ((voltage_value_mV_x10 >= PHOENIX_PMIC_MIN_VOLTAGE_x10) && (voltage_value_mV_x10 <= PHOENIX_PMIC_MAX_VOLTAGE_x10)){
								       vsel_code =  ((voltage_value_mV_x10 - PHOENIX_PMIC_MIN_VOLTAGE_x10) / PHOENIX_PMIC_STEP_VOLTAGE_x10) + 1;
								} else if (voltage_value_mV_x10 == 0){
								        vsel_code = 0;
								} else if (voltage_value_mV_x10 == 13500){
								        vsel_code = 0x3A;
								} else if (voltage_value_mV_x10 == 15000){
								        vsel_code = 0x3B;
								} else if (voltage_value_mV_x10 == 18000){
								        vsel_code = 0x3C;
								} else if (voltage_value_mV_x10 == 19000){
								        vsel_code = 0x3D;				
								}												
																
        vcore_force_value = PHOENIX_PMIC_VCORE3_CFG_FORCE_CMD + (vsel_code<<16) + (reg_adress<<8) + PHOENIX_PMIC_I2C_AD;
        
								if (INFO_PRINT) {
									GEL_TextOut("--->>> Voltage update done (%x) <<<---\n",,,,,vcore_force_value);
								}

        // Forcing VCORE thru VCORE3_CFG_FORCE Register
        *(int*)0x4A307BAC = 0x6026;
        *(int*)0x4A307BA8 = 0x0;
        *(int*)0x4A307BA0 = vcore_force_value;


}


