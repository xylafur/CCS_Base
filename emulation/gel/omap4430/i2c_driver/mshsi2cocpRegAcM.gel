/***************************************************************************** 
*            TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION          
*                          
*   Property of Texas Instruments                  
*   For  Unrestricted  Internal  Use  Only               
*   Unauthorized reproduction and/or distribution is strictly prohibited.      
*   This product is protected under copyright law and trade secret law         
*   as an unpublished work.                    
*   Created 2005, (C) Copyright 2005 Texas Instruments.  All rights reserved.
*                      
*          ***** PROVISIONAL CODE - FOR DEMONSTRATION USE ONLY *****
*                    
*   File content:        C Header file containing all level 1 EASI
*                        macro definitions
*
*   Generated by:        EASI-GEN from Beach Solutions Ltd.
*                        
*   Generator version:   Version 3.2.0 build 304
*                        
*   Template version:    Template v1.21 Build
*                        
*   Generation time:     Mar 30 2005 22:39:47
*                        
*                        
*   Filename:            MSHSI2COCPRegAcM.h
*                      
*   Description:         MSHSI2COCP access macros
*                      
*   Module name:         MSHSI2COCP
*                       
*   Module version:      0.1
*                   
*****************************************************************************/  



#define MSHSI2COCPI2C_REVReadRegister32U(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_REV_OFFSET +\
      LOWER_WORD_UPPER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_REVReadRegister32L(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_REV_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_REVReadRegister32UU(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_REV_OFFSET +\
      LOWER_WORD_UPPER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_REVReadRegister32UM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_REV_OFFSET +\
      LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_REVReadRegister32LM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_REV_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_REVReadRegister32LL(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_REV_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_REVREVRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_REV_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_REV_REV_LO_16_MASK) >> \
      MSHSI2COCP_I2C_REV_REV_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_REVREVRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_REV_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_REV_REV_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_REV_REV_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_REVREVGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_REV_REV_LO_16_MASK) >> \
      MSHSI2COCP_I2C_REV_REV_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_REVREVGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_REV_REV_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_REV_REV_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEReadRegister32U(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_UPPER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEReadRegister32L(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEReadRegister32UU(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_UPPER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEReadRegister32UM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEReadRegister32LM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEReadRegister32LL(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEWriteRegister32U(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_UPPER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEWriteRegister32L(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEWriteRegister32UU(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_UPPER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEWriteRegister32UM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEWriteRegister32LM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEWriteRegister32LL(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEAL_IERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_AL_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_AL_IE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEAL_IERead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_AL_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_AL_IE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEAL_IEReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_IEAL_IEdisable==(MSHSI2COCPI2C_IEAL_IEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_AL_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_AL_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEAL_IEReadIsdisable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_IEAL_IEdisable==(MSHSI2COCPI2C_IEAL_IEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_AL_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_AL_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEAL_IEReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_IEAL_IEenable==(MSHSI2COCPI2C_IEAL_IEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_AL_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_AL_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEAL_IEReadIsenable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_IEAL_IEenable==(MSHSI2COCPI2C_IEAL_IEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_AL_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_AL_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEAL_IEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_IE_AL_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_AL_IE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEAL_IEGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_IE_AL_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_AL_IE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEAL_IEIsdisable32L(var)\
    (      (MSHSI2COCPI2C_IEAL_IEdisable==(MSHSI2COCPI2C_IEAL_IEE)((((short)(var)) & MSHSI2COCP_I2C_IE_AL_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_AL_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEAL_IEIsdisable32LL(var)\
    (      (MSHSI2COCPI2C_IEAL_IEdisable==(MSHSI2COCPI2C_IEAL_IEE)((((char)(var)) & MSHSI2COCP_I2C_IE_AL_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_AL_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEAL_IEIsenable32L(var)\
    (      (MSHSI2COCPI2C_IEAL_IEenable==(MSHSI2COCPI2C_IEAL_IEE)((((short)(var)) & MSHSI2COCP_I2C_IE_AL_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_AL_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEAL_IEIsenable32LL(var)\
    (      (MSHSI2COCPI2C_IEAL_IEenable==(MSHSI2COCPI2C_IEAL_IEE)((((char)(var)) & MSHSI2COCP_I2C_IE_AL_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_AL_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEAL_IEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_IE_AL_IE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_IE_AL_IE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_IE_AL_IE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEAL_IEWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_IE_AL_IE_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_IE_AL_IE_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_IE_AL_IE_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEAL_IEWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_IEAL_IEdisable <<\
                               MSHSI2COCP_I2C_IE_AL_IE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_AL_IE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEAL_IEWritedisable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_IEAL_IEdisable <<\
                               MSHSI2COCP_I2C_IE_AL_IE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_AL_IE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEAL_IEWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_IEAL_IEenable <<\
                               MSHSI2COCP_I2C_IE_AL_IE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_AL_IE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEAL_IEWriteenable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_IEAL_IEenable <<\
                               MSHSI2COCP_I2C_IE_AL_IE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_AL_IE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEAL_IESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_IE_AL_IE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_IE_AL_IE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_IE_AL_IE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_IEAL_IESet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_IE_AL_IE_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_IE_AL_IE_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_IE_AL_IE_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_IENACK_IERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_NACK_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_NACK_IE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IENACK_IERead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_NACK_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_NACK_IE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IENACK_IEReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_IENACK_IEdisable==(MSHSI2COCPI2C_IENACK_IEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_NACK_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_NACK_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IENACK_IEReadIsdisable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_IENACK_IEdisable==(MSHSI2COCPI2C_IENACK_IEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_NACK_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_NACK_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IENACK_IEReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_IENACK_IEenable==(MSHSI2COCPI2C_IENACK_IEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_NACK_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_NACK_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IENACK_IEReadIsenable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_IENACK_IEenable==(MSHSI2COCPI2C_IENACK_IEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_NACK_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_NACK_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IENACK_IEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_IE_NACK_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_NACK_IE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IENACK_IEGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_IE_NACK_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_NACK_IE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IENACK_IEIsdisable32L(var)\
    (      (MSHSI2COCPI2C_IENACK_IEdisable==(MSHSI2COCPI2C_IENACK_IEE)((((short)(var)) & MSHSI2COCP_I2C_IE_NACK_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_NACK_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IENACK_IEIsdisable32LL(var)\
    (      (MSHSI2COCPI2C_IENACK_IEdisable==(MSHSI2COCPI2C_IENACK_IEE)((((char)(var)) & MSHSI2COCP_I2C_IE_NACK_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_NACK_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IENACK_IEIsenable32L(var)\
    (      (MSHSI2COCPI2C_IENACK_IEenable==(MSHSI2COCPI2C_IENACK_IEE)((((short)(var)) & MSHSI2COCP_I2C_IE_NACK_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_NACK_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IENACK_IEIsenable32LL(var)\
    (      (MSHSI2COCPI2C_IENACK_IEenable==(MSHSI2COCPI2C_IENACK_IEE)((((char)(var)) & MSHSI2COCP_I2C_IE_NACK_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_NACK_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IENACK_IEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_IE_NACK_IE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_IE_NACK_IE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_IE_NACK_IE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IENACK_IEWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_IE_NACK_IE_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_IE_NACK_IE_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_IE_NACK_IE_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IENACK_IEWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_IENACK_IEdisable <<\
                               MSHSI2COCP_I2C_IE_NACK_IE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_NACK_IE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IENACK_IEWritedisable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_IENACK_IEdisable <<\
                               MSHSI2COCP_I2C_IE_NACK_IE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_NACK_IE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IENACK_IEWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_IENACK_IEenable <<\
                               MSHSI2COCP_I2C_IE_NACK_IE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_NACK_IE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IENACK_IEWriteenable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_IENACK_IEenable <<\
                               MSHSI2COCP_I2C_IE_NACK_IE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_NACK_IE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IENACK_IESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_IE_NACK_IE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_IE_NACK_IE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_IE_NACK_IE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_IENACK_IESet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_IE_NACK_IE_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_IE_NACK_IE_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_IE_NACK_IE_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_IEARDY_IERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_ARDY_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_ARDY_IE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEARDY_IERead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_ARDY_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_ARDY_IE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEARDY_IEReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_IEARDY_IEdisable==(MSHSI2COCPI2C_IEARDY_IEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_ARDY_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_ARDY_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEARDY_IEReadIsdisable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_IEARDY_IEdisable==(MSHSI2COCPI2C_IEARDY_IEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_ARDY_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_ARDY_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEARDY_IEReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_IEARDY_IEenable==(MSHSI2COCPI2C_IEARDY_IEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_ARDY_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_ARDY_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEARDY_IEReadIsenable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_IEARDY_IEenable==(MSHSI2COCPI2C_IEARDY_IEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_ARDY_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_ARDY_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEARDY_IEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_IE_ARDY_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_ARDY_IE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEARDY_IEGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_IE_ARDY_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_ARDY_IE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEARDY_IEIsdisable32L(var)\
    (      (MSHSI2COCPI2C_IEARDY_IEdisable==(MSHSI2COCPI2C_IEARDY_IEE)((((short)(var)) & MSHSI2COCP_I2C_IE_ARDY_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_ARDY_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEARDY_IEIsdisable32LL(var)\
    (      (MSHSI2COCPI2C_IEARDY_IEdisable==(MSHSI2COCPI2C_IEARDY_IEE)((((char)(var)) & MSHSI2COCP_I2C_IE_ARDY_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_ARDY_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEARDY_IEIsenable32L(var)\
    (      (MSHSI2COCPI2C_IEARDY_IEenable==(MSHSI2COCPI2C_IEARDY_IEE)((((short)(var)) & MSHSI2COCP_I2C_IE_ARDY_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_ARDY_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEARDY_IEIsenable32LL(var)\
    (      (MSHSI2COCPI2C_IEARDY_IEenable==(MSHSI2COCPI2C_IEARDY_IEE)((((char)(var)) & MSHSI2COCP_I2C_IE_ARDY_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_ARDY_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEARDY_IEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_IE_ARDY_IE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_IE_ARDY_IE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_IE_ARDY_IE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEARDY_IEWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_IE_ARDY_IE_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_IE_ARDY_IE_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_IE_ARDY_IE_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEARDY_IEWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_IEARDY_IEdisable <<\
                               MSHSI2COCP_I2C_IE_ARDY_IE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_ARDY_IE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEARDY_IEWritedisable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_IEARDY_IEdisable <<\
                               MSHSI2COCP_I2C_IE_ARDY_IE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_ARDY_IE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEARDY_IEWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_IEARDY_IEenable <<\
                               MSHSI2COCP_I2C_IE_ARDY_IE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_ARDY_IE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEARDY_IEWriteenable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_IEARDY_IEenable <<\
                               MSHSI2COCP_I2C_IE_ARDY_IE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_ARDY_IE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEARDY_IESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_IE_ARDY_IE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_IE_ARDY_IE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_IE_ARDY_IE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_IEARDY_IESet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_IE_ARDY_IE_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_IE_ARDY_IE_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_IE_ARDY_IE_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_IERRDY_IERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_RRDY_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_RRDY_IE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IERRDY_IERead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_RRDY_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_RRDY_IE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IERRDY_IEReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_IERRDY_IEdisable==(MSHSI2COCPI2C_IERRDY_IEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_RRDY_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_RRDY_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IERRDY_IEReadIsdisable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_IERRDY_IEdisable==(MSHSI2COCPI2C_IERRDY_IEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_RRDY_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_RRDY_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IERRDY_IEReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_IERRDY_IEenable==(MSHSI2COCPI2C_IERRDY_IEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_RRDY_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_RRDY_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IERRDY_IEReadIsenable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_IERRDY_IEenable==(MSHSI2COCPI2C_IERRDY_IEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_RRDY_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_RRDY_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IERRDY_IEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_IE_RRDY_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_RRDY_IE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IERRDY_IEGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_IE_RRDY_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_RRDY_IE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IERRDY_IEIsdisable32L(var)\
    (      (MSHSI2COCPI2C_IERRDY_IEdisable==(MSHSI2COCPI2C_IERRDY_IEE)((((short)(var)) & MSHSI2COCP_I2C_IE_RRDY_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_RRDY_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IERRDY_IEIsdisable32LL(var)\
    (      (MSHSI2COCPI2C_IERRDY_IEdisable==(MSHSI2COCPI2C_IERRDY_IEE)((((char)(var)) & MSHSI2COCP_I2C_IE_RRDY_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_RRDY_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IERRDY_IEIsenable32L(var)\
    (      (MSHSI2COCPI2C_IERRDY_IEenable==(MSHSI2COCPI2C_IERRDY_IEE)((((short)(var)) & MSHSI2COCP_I2C_IE_RRDY_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_RRDY_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IERRDY_IEIsenable32LL(var)\
    (      (MSHSI2COCPI2C_IERRDY_IEenable==(MSHSI2COCPI2C_IERRDY_IEE)((((char)(var)) & MSHSI2COCP_I2C_IE_RRDY_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_RRDY_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IERRDY_IEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_IE_RRDY_IE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_IE_RRDY_IE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_IE_RRDY_IE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IERRDY_IEWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_IE_RRDY_IE_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_IE_RRDY_IE_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_IE_RRDY_IE_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IERRDY_IEWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_IERRDY_IEdisable <<\
                               MSHSI2COCP_I2C_IE_RRDY_IE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_RRDY_IE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IERRDY_IEWritedisable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_IERRDY_IEdisable <<\
                               MSHSI2COCP_I2C_IE_RRDY_IE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_RRDY_IE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IERRDY_IEWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_IERRDY_IEenable <<\
                               MSHSI2COCP_I2C_IE_RRDY_IE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_RRDY_IE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IERRDY_IEWriteenable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_IERRDY_IEenable <<\
                               MSHSI2COCP_I2C_IE_RRDY_IE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_RRDY_IE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IERRDY_IESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_IE_RRDY_IE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_IE_RRDY_IE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_IE_RRDY_IE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_IERRDY_IESet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_IE_RRDY_IE_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_IE_RRDY_IE_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_IE_RRDY_IE_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_IEXRDY_IERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_XRDY_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_XRDY_IE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEXRDY_IERead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_XRDY_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_XRDY_IE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEXRDY_IEReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_IEXRDY_IEdisable==(MSHSI2COCPI2C_IEXRDY_IEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_XRDY_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_XRDY_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEXRDY_IEReadIsdisable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_IEXRDY_IEdisable==(MSHSI2COCPI2C_IEXRDY_IEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_XRDY_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_XRDY_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEXRDY_IEReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_IEXRDY_IEenable==(MSHSI2COCPI2C_IEXRDY_IEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_XRDY_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_XRDY_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEXRDY_IEReadIsenable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_IEXRDY_IEenable==(MSHSI2COCPI2C_IEXRDY_IEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_XRDY_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_XRDY_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEXRDY_IEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_IE_XRDY_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_XRDY_IE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEXRDY_IEGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_IE_XRDY_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_XRDY_IE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEXRDY_IEIsdisable32L(var)\
    (      (MSHSI2COCPI2C_IEXRDY_IEdisable==(MSHSI2COCPI2C_IEXRDY_IEE)((((short)(var)) & MSHSI2COCP_I2C_IE_XRDY_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_XRDY_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEXRDY_IEIsdisable32LL(var)\
    (      (MSHSI2COCPI2C_IEXRDY_IEdisable==(MSHSI2COCPI2C_IEXRDY_IEE)((((char)(var)) & MSHSI2COCP_I2C_IE_XRDY_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_XRDY_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEXRDY_IEIsenable32L(var)\
    (      (MSHSI2COCPI2C_IEXRDY_IEenable==(MSHSI2COCPI2C_IEXRDY_IEE)((((short)(var)) & MSHSI2COCP_I2C_IE_XRDY_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_XRDY_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEXRDY_IEIsenable32LL(var)\
    (      (MSHSI2COCPI2C_IEXRDY_IEenable==(MSHSI2COCPI2C_IEXRDY_IEE)((((char)(var)) & MSHSI2COCP_I2C_IE_XRDY_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_XRDY_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEXRDY_IEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_IE_XRDY_IE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_IE_XRDY_IE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_IE_XRDY_IE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEXRDY_IEWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_IE_XRDY_IE_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_IE_XRDY_IE_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_IE_XRDY_IE_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEXRDY_IEWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_IEXRDY_IEdisable <<\
                               MSHSI2COCP_I2C_IE_XRDY_IE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_XRDY_IE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEXRDY_IEWritedisable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_IEXRDY_IEdisable <<\
                               MSHSI2COCP_I2C_IE_XRDY_IE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_XRDY_IE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEXRDY_IEWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_IEXRDY_IEenable <<\
                               MSHSI2COCP_I2C_IE_XRDY_IE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_XRDY_IE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEXRDY_IEWriteenable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_IEXRDY_IEenable <<\
                               MSHSI2COCP_I2C_IE_XRDY_IE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_XRDY_IE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEXRDY_IESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_IE_XRDY_IE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_IE_XRDY_IE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_IE_XRDY_IE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_IEXRDY_IESet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_IE_XRDY_IE_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_IE_XRDY_IE_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_IE_XRDY_IE_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_IEGC_IERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_GC_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_GC_IE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEGC_IERead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_GC_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_GC_IE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEGC_IEReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_IEGC_IEdisable==(MSHSI2COCPI2C_IEGC_IEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_GC_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_GC_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEGC_IEReadIsdisable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_IEGC_IEdisable==(MSHSI2COCPI2C_IEGC_IEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_GC_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_GC_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEGC_IEReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_IEGC_IEenable==(MSHSI2COCPI2C_IEGC_IEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_GC_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_GC_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEGC_IEReadIsenable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_IEGC_IEenable==(MSHSI2COCPI2C_IEGC_IEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_GC_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_GC_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEGC_IEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_IE_GC_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_GC_IE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEGC_IEGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_IE_GC_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_GC_IE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEGC_IEIsdisable32L(var)\
    (      (MSHSI2COCPI2C_IEGC_IEdisable==(MSHSI2COCPI2C_IEGC_IEE)((((short)(var)) & MSHSI2COCP_I2C_IE_GC_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_GC_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEGC_IEIsdisable32LL(var)\
    (      (MSHSI2COCPI2C_IEGC_IEdisable==(MSHSI2COCPI2C_IEGC_IEE)((((char)(var)) & MSHSI2COCP_I2C_IE_GC_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_GC_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEGC_IEIsenable32L(var)\
    (      (MSHSI2COCPI2C_IEGC_IEenable==(MSHSI2COCPI2C_IEGC_IEE)((((short)(var)) & MSHSI2COCP_I2C_IE_GC_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_GC_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEGC_IEIsenable32LL(var)\
    (      (MSHSI2COCPI2C_IEGC_IEenable==(MSHSI2COCPI2C_IEGC_IEE)((((char)(var)) & MSHSI2COCP_I2C_IE_GC_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_GC_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEGC_IEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_IE_GC_IE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_IE_GC_IE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_IE_GC_IE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEGC_IEWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_IE_GC_IE_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_IE_GC_IE_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_IE_GC_IE_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEGC_IEWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_IEGC_IEdisable <<\
                               MSHSI2COCP_I2C_IE_GC_IE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_GC_IE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEGC_IEWritedisable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_IEGC_IEdisable <<\
                               MSHSI2COCP_I2C_IE_GC_IE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_GC_IE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEGC_IEWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_IEGC_IEenable <<\
                               MSHSI2COCP_I2C_IE_GC_IE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_GC_IE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEGC_IEWriteenable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_IEGC_IEenable <<\
                               MSHSI2COCP_I2C_IE_GC_IE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_GC_IE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEGC_IESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_IE_GC_IE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_IE_GC_IE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_IE_GC_IE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_IEGC_IESet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_IE_GC_IE_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_IE_GC_IE_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_IE_GC_IE_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_IESTC_IERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_STC_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_STC_IE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IESTC_IERead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_STC_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_STC_IE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IESTC_IEReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_IESTC_IEdisable==(MSHSI2COCPI2C_IESTC_IEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_STC_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_STC_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IESTC_IEReadIsdisable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_IESTC_IEdisable==(MSHSI2COCPI2C_IESTC_IEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_STC_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_STC_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IESTC_IEReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_IESTC_IEenable==(MSHSI2COCPI2C_IESTC_IEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_STC_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_STC_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IESTC_IEReadIsenable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_IESTC_IEenable==(MSHSI2COCPI2C_IESTC_IEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_STC_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_STC_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IESTC_IEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_IE_STC_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_STC_IE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IESTC_IEGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_IE_STC_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_STC_IE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IESTC_IEIsdisable32L(var)\
    (      (MSHSI2COCPI2C_IESTC_IEdisable==(MSHSI2COCPI2C_IESTC_IEE)((((short)(var)) & MSHSI2COCP_I2C_IE_STC_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_STC_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IESTC_IEIsdisable32LL(var)\
    (      (MSHSI2COCPI2C_IESTC_IEdisable==(MSHSI2COCPI2C_IESTC_IEE)((((char)(var)) & MSHSI2COCP_I2C_IE_STC_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_STC_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IESTC_IEIsenable32L(var)\
    (      (MSHSI2COCPI2C_IESTC_IEenable==(MSHSI2COCPI2C_IESTC_IEE)((((short)(var)) & MSHSI2COCP_I2C_IE_STC_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_STC_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IESTC_IEIsenable32LL(var)\
    (      (MSHSI2COCPI2C_IESTC_IEenable==(MSHSI2COCPI2C_IESTC_IEE)((((char)(var)) & MSHSI2COCP_I2C_IE_STC_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_STC_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IESTC_IEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_IE_STC_IE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_IE_STC_IE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_IE_STC_IE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IESTC_IEWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_IE_STC_IE_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_IE_STC_IE_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_IE_STC_IE_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IESTC_IEWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_IESTC_IEdisable <<\
                               MSHSI2COCP_I2C_IE_STC_IE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_STC_IE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IESTC_IEWritedisable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_IESTC_IEdisable <<\
                               MSHSI2COCP_I2C_IE_STC_IE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_STC_IE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IESTC_IEWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_IESTC_IEenable <<\
                               MSHSI2COCP_I2C_IE_STC_IE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_STC_IE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IESTC_IEWriteenable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_IESTC_IEenable <<\
                               MSHSI2COCP_I2C_IE_STC_IE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_STC_IE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IESTC_IESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_IE_STC_IE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_IE_STC_IE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_IE_STC_IE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_IESTC_IESet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_IE_STC_IE_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_IE_STC_IE_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_IE_STC_IE_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_IEAERR_IERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_AERR_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_AERR_IE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEAERR_IERead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_AERR_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_AERR_IE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEAERR_IEReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_IEAERR_IEdisable==(MSHSI2COCPI2C_IEAERR_IEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_AERR_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_AERR_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEAERR_IEReadIsdisable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_IEAERR_IEdisable==(MSHSI2COCPI2C_IEAERR_IEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_AERR_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_AERR_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEAERR_IEReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_IEAERR_IEenable==(MSHSI2COCPI2C_IEAERR_IEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_AERR_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_AERR_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEAERR_IEReadIsenable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_IEAERR_IEenable==(MSHSI2COCPI2C_IEAERR_IEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_AERR_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_AERR_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEAERR_IEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_IE_AERR_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_AERR_IE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEAERR_IEGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_IE_AERR_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_AERR_IE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEAERR_IEIsdisable32L(var)\
    (      (MSHSI2COCPI2C_IEAERR_IEdisable==(MSHSI2COCPI2C_IEAERR_IEE)((((short)(var)) & MSHSI2COCP_I2C_IE_AERR_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_AERR_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEAERR_IEIsdisable32LL(var)\
    (      (MSHSI2COCPI2C_IEAERR_IEdisable==(MSHSI2COCPI2C_IEAERR_IEE)((((char)(var)) & MSHSI2COCP_I2C_IE_AERR_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_AERR_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEAERR_IEIsenable32L(var)\
    (      (MSHSI2COCPI2C_IEAERR_IEenable==(MSHSI2COCPI2C_IEAERR_IEE)((((short)(var)) & MSHSI2COCP_I2C_IE_AERR_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_AERR_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEAERR_IEIsenable32LL(var)\
    (      (MSHSI2COCPI2C_IEAERR_IEenable==(MSHSI2COCPI2C_IEAERR_IEE)((((char)(var)) & MSHSI2COCP_I2C_IE_AERR_IE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_IE_AERR_IE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEAERR_IEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_IE_AERR_IE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_IE_AERR_IE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_IE_AERR_IE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEAERR_IEWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_IE_AERR_IE_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_IE_AERR_IE_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_IE_AERR_IE_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEAERR_IEWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_IEAERR_IEdisable <<\
                               MSHSI2COCP_I2C_IE_AERR_IE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_AERR_IE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEAERR_IEWritedisable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_IEAERR_IEdisable <<\
                               MSHSI2COCP_I2C_IE_AERR_IE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_AERR_IE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEAERR_IEWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_IEAERR_IEenable <<\
                               MSHSI2COCP_I2C_IE_AERR_IE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_AERR_IE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEAERR_IEWriteenable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_IEAERR_IEenable <<\
                               MSHSI2COCP_I2C_IE_AERR_IE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_AERR_IE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEAERR_IESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_IE_AERR_IE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_IE_AERR_IE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_IE_AERR_IE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_IEAERR_IESet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_IE_AERR_IE_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_IE_AERR_IE_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_IE_AERR_IE_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_IEBF_IERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_BF_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_BF_IE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEBF_IERead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_BF_IE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_IE_BF_IE_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEBF_IEReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_IEBF_IEdisable==(MSHSI2COCPI2C_IEBF_IEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_BF_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_BF_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEBF_IEReadIsdisable32LM(baseAddress)\
    (      (MSHSI2COCPI2C_IEBF_IEdisable==(MSHSI2COCPI2C_IEBF_IEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_BF_IE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_IE_BF_IE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEBF_IEReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_IEBF_IEenable==(MSHSI2COCPI2C_IEBF_IEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_BF_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_BF_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEBF_IEReadIsenable32LM(baseAddress)\
    (      (MSHSI2COCPI2C_IEBF_IEenable==(MSHSI2COCPI2C_IEBF_IEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_BF_IE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_IE_BF_IE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEBF_IEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_IE_BF_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_BF_IE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEBF_IEGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_IE_BF_IE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_IE_BF_IE_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEBF_IEIsdisable32L(var)\
    (      (MSHSI2COCPI2C_IEBF_IEdisable==(MSHSI2COCPI2C_IEBF_IEE)((((short)(var)) & MSHSI2COCP_I2C_IE_BF_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_BF_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEBF_IEIsdisable32LM(var)\
    (      (MSHSI2COCPI2C_IEBF_IEdisable==(MSHSI2COCPI2C_IEBF_IEE)((((char)(var)) & MSHSI2COCP_I2C_IE_BF_IE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_IE_BF_IE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEBF_IEIsenable32L(var)\
    (      (MSHSI2COCPI2C_IEBF_IEenable==(MSHSI2COCPI2C_IEBF_IEE)((((short)(var)) & MSHSI2COCP_I2C_IE_BF_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_BF_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEBF_IEIsenable32LM(var)\
    (      (MSHSI2COCPI2C_IEBF_IEenable==(MSHSI2COCPI2C_IEBF_IEE)((((char)(var)) & MSHSI2COCP_I2C_IE_BF_IE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_IE_BF_IE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEBF_IEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_IE_BF_IE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_IE_BF_IE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_IE_BF_IE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEBF_IEWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_IE_BF_IE_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_IE_BF_IE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_IE_BF_IE_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEBF_IEWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_IEBF_IEdisable <<\
                               MSHSI2COCP_I2C_IE_BF_IE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_BF_IE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEBF_IEWritedisable32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_IEBF_IEdisable <<\
                               MSHSI2COCP_I2C_IE_BF_IE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_BF_IE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEBF_IEWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_IEBF_IEenable <<\
                               MSHSI2COCP_I2C_IE_BF_IE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_BF_IE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEBF_IEWriteenable32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_IEBF_IEenable <<\
                               MSHSI2COCP_I2C_IE_BF_IE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_BF_IE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEBF_IESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_IE_BF_IE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_IE_BF_IE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_IE_BF_IE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_IEBF_IESet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_IE_BF_IE_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_IE_BF_IE_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_IE_BF_IE_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_IEASS_IERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_ASS_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_ASS_IE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEASS_IERead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_ASS_IE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_IE_ASS_IE_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEASS_IEReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_IEASS_IEdisable==(MSHSI2COCPI2C_IEASS_IEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_ASS_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_ASS_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEASS_IEReadIsdisable32LM(baseAddress)\
    (      (MSHSI2COCPI2C_IEASS_IEdisable==(MSHSI2COCPI2C_IEASS_IEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_ASS_IE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_IE_ASS_IE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEASS_IEReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_IEASS_IEenable==(MSHSI2COCPI2C_IEASS_IEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_ASS_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_ASS_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEASS_IEReadIsenable32LM(baseAddress)\
    (      (MSHSI2COCPI2C_IEASS_IEenable==(MSHSI2COCPI2C_IEASS_IEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_ASS_IE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_IE_ASS_IE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEASS_IEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_IE_ASS_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_ASS_IE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEASS_IEGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_IE_ASS_IE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_IE_ASS_IE_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEASS_IEIsdisable32L(var)\
    (      (MSHSI2COCPI2C_IEASS_IEdisable==(MSHSI2COCPI2C_IEASS_IEE)((((short)(var)) & MSHSI2COCP_I2C_IE_ASS_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_ASS_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEASS_IEIsdisable32LM(var)\
    (      (MSHSI2COCPI2C_IEASS_IEdisable==(MSHSI2COCPI2C_IEASS_IEE)((((char)(var)) & MSHSI2COCP_I2C_IE_ASS_IE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_IE_ASS_IE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEASS_IEIsenable32L(var)\
    (      (MSHSI2COCPI2C_IEASS_IEenable==(MSHSI2COCPI2C_IEASS_IEE)((((short)(var)) & MSHSI2COCP_I2C_IE_ASS_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_ASS_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEASS_IEIsenable32LM(var)\
    (      (MSHSI2COCPI2C_IEASS_IEenable==(MSHSI2COCPI2C_IEASS_IEE)((((char)(var)) & MSHSI2COCP_I2C_IE_ASS_IE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_IE_ASS_IE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEASS_IEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_IE_ASS_IE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_IE_ASS_IE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_IE_ASS_IE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEASS_IEWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_IE_ASS_IE_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_IE_ASS_IE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_IE_ASS_IE_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEASS_IEWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_IEASS_IEdisable <<\
                               MSHSI2COCP_I2C_IE_ASS_IE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_ASS_IE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEASS_IEWritedisable32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_IEASS_IEdisable <<\
                               MSHSI2COCP_I2C_IE_ASS_IE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_ASS_IE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEASS_IEWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_IEASS_IEenable <<\
                               MSHSI2COCP_I2C_IE_ASS_IE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_ASS_IE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEASS_IEWriteenable32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_IEASS_IEenable <<\
                               MSHSI2COCP_I2C_IE_ASS_IE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_ASS_IE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEASS_IESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_IE_ASS_IE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_IE_ASS_IE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_IE_ASS_IE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_IEASS_IESet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_IE_ASS_IE_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_IE_ASS_IE_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_IE_ASS_IE_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_IERDR_IERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_RDR_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_RDR_IE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IERDR_IERead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_RDR_IE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_IE_RDR_IE_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IERDR_IEReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_IERDR_IEdisable==(MSHSI2COCPI2C_IERDR_IEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_RDR_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_RDR_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IERDR_IEReadIsdisable32LM(baseAddress)\
    (      (MSHSI2COCPI2C_IERDR_IEdisable==(MSHSI2COCPI2C_IERDR_IEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_RDR_IE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_IE_RDR_IE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IERDR_IEReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_IERDR_IEenable==(MSHSI2COCPI2C_IERDR_IEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_RDR_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_RDR_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IERDR_IEReadIsenable32LM(baseAddress)\
    (      (MSHSI2COCPI2C_IERDR_IEenable==(MSHSI2COCPI2C_IERDR_IEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_RDR_IE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_IE_RDR_IE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IERDR_IEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_IE_RDR_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_RDR_IE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IERDR_IEGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_IE_RDR_IE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_IE_RDR_IE_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IERDR_IEIsdisable32L(var)\
    (      (MSHSI2COCPI2C_IERDR_IEdisable==(MSHSI2COCPI2C_IERDR_IEE)((((short)(var)) & MSHSI2COCP_I2C_IE_RDR_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_RDR_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IERDR_IEIsdisable32LM(var)\
    (      (MSHSI2COCPI2C_IERDR_IEdisable==(MSHSI2COCPI2C_IERDR_IEE)((((char)(var)) & MSHSI2COCP_I2C_IE_RDR_IE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_IE_RDR_IE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IERDR_IEIsenable32L(var)\
    (      (MSHSI2COCPI2C_IERDR_IEenable==(MSHSI2COCPI2C_IERDR_IEE)((((short)(var)) & MSHSI2COCP_I2C_IE_RDR_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_RDR_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IERDR_IEIsenable32LM(var)\
    (      (MSHSI2COCPI2C_IERDR_IEenable==(MSHSI2COCPI2C_IERDR_IEE)((((char)(var)) & MSHSI2COCP_I2C_IE_RDR_IE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_IE_RDR_IE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IERDR_IEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_IE_RDR_IE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_IE_RDR_IE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_IE_RDR_IE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IERDR_IEWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_IE_RDR_IE_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_IE_RDR_IE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_IE_RDR_IE_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IERDR_IEWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_IERDR_IEdisable <<\
                               MSHSI2COCP_I2C_IE_RDR_IE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_RDR_IE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IERDR_IEWritedisable32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_IERDR_IEdisable <<\
                               MSHSI2COCP_I2C_IE_RDR_IE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_RDR_IE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IERDR_IEWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_IERDR_IEenable <<\
                               MSHSI2COCP_I2C_IE_RDR_IE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_RDR_IE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IERDR_IEWriteenable32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_IERDR_IEenable <<\
                               MSHSI2COCP_I2C_IE_RDR_IE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_RDR_IE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IERDR_IESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_IE_RDR_IE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_IE_RDR_IE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_IE_RDR_IE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_IERDR_IESet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_IE_RDR_IE_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_IE_RDR_IE_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_IE_RDR_IE_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_IEXDR_IERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_XDR_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_XDR_IE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEXDR_IERead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_XDR_IE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_IE_XDR_IE_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEXDR_IEReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_IEXDR_IEdisable==(MSHSI2COCPI2C_IEXDR_IEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_XDR_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_XDR_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEXDR_IEReadIsdisable32LM(baseAddress)\
    (      (MSHSI2COCPI2C_IEXDR_IEdisable==(MSHSI2COCPI2C_IEXDR_IEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_XDR_IE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_IE_XDR_IE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEXDR_IEReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_IEXDR_IEenable==(MSHSI2COCPI2C_IEXDR_IEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_XDR_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_XDR_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEXDR_IEReadIsenable32LM(baseAddress)\
    (      (MSHSI2COCPI2C_IEXDR_IEenable==(MSHSI2COCPI2C_IEXDR_IEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_IE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_IE_XDR_IE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_IE_XDR_IE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEXDR_IEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_IE_XDR_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_XDR_IE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEXDR_IEGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_IE_XDR_IE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_IE_XDR_IE_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_IEXDR_IEIsdisable32L(var)\
    (      (MSHSI2COCPI2C_IEXDR_IEdisable==(MSHSI2COCPI2C_IEXDR_IEE)((((short)(var)) & MSHSI2COCP_I2C_IE_XDR_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_XDR_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEXDR_IEIsdisable32LM(var)\
    (      (MSHSI2COCPI2C_IEXDR_IEdisable==(MSHSI2COCPI2C_IEXDR_IEE)((((char)(var)) & MSHSI2COCP_I2C_IE_XDR_IE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_IE_XDR_IE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEXDR_IEIsenable32L(var)\
    (      (MSHSI2COCPI2C_IEXDR_IEenable==(MSHSI2COCPI2C_IEXDR_IEE)((((short)(var)) & MSHSI2COCP_I2C_IE_XDR_IE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_IE_XDR_IE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEXDR_IEIsenable32LM(var)\
    (      (MSHSI2COCPI2C_IEXDR_IEenable==(MSHSI2COCPI2C_IEXDR_IEE)((((char)(var)) & MSHSI2COCP_I2C_IE_XDR_IE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_IE_XDR_IE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_IEXDR_IEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_IE_XDR_IE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_IE_XDR_IE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_IE_XDR_IE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEXDR_IEWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_IE_XDR_IE_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_IE_XDR_IE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_IE_XDR_IE_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEXDR_IEWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_IEXDR_IEdisable <<\
                               MSHSI2COCP_I2C_IE_XDR_IE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_XDR_IE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEXDR_IEWritedisable32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_IEXDR_IEdisable <<\
                               MSHSI2COCP_I2C_IE_XDR_IE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_XDR_IE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEXDR_IEWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_IEXDR_IEenable <<\
                               MSHSI2COCP_I2C_IE_XDR_IE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_XDR_IE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEXDR_IEWriteenable32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_IE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_IEXDR_IEenable <<\
                               MSHSI2COCP_I2C_IE_XDR_IE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_IE_XDR_IE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_IEXDR_IESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_IE_XDR_IE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_IE_XDR_IE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_IE_XDR_IE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_IEXDR_IESet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_IE_XDR_IE_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_IE_XDR_IE_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_IE_XDR_IE_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATReadRegister32U(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_UPPER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATReadRegister32L(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATReadRegister32UU(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_UPPER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATReadRegister32UM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATReadRegister32LM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATReadRegister32LL(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATWriteRegister32U(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_UPPER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATWriteRegister32L(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATWriteRegister32UU(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_UPPER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATWriteRegister32UM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATWriteRegister32LM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATWriteRegister32LL(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATALRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_AL_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_AL_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATALRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_AL_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_AL_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATALReadIsclear32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATALclear==(MSHSI2COCPI2C_STATALE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_AL_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_AL_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATALReadIsclear32LL(baseAddress)\
    (      (MSHSI2COCPI2C_STATALclear==(MSHSI2COCPI2C_STATALE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_AL_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_AL_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATALReadIsset32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATALset==(MSHSI2COCPI2C_STATALE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_AL_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_AL_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATALReadIsset32LL(baseAddress)\
    (      (MSHSI2COCPI2C_STATALset==(MSHSI2COCPI2C_STATALE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_AL_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_AL_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATALGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_STAT_AL_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_AL_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATALGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_STAT_AL_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_AL_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATALIsclear32L(var)\
    (      (MSHSI2COCPI2C_STATALclear==(MSHSI2COCPI2C_STATALE)((((short)(var)) & MSHSI2COCP_I2C_STAT_AL_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_AL_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATALIsclear32LL(var)\
    (      (MSHSI2COCPI2C_STATALclear==(MSHSI2COCPI2C_STATALE)((((char)(var)) & MSHSI2COCP_I2C_STAT_AL_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_AL_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATALIsset32L(var)\
    (      (MSHSI2COCPI2C_STATALset==(MSHSI2COCPI2C_STATALE)((((short)(var)) & MSHSI2COCP_I2C_STAT_AL_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_AL_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATALIsset32LL(var)\
    (      (MSHSI2COCPI2C_STATALset==(MSHSI2COCPI2C_STATALE)((((char)(var)) & MSHSI2COCP_I2C_STAT_AL_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_AL_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATALWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_AL_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_AL_LO_16_MASK;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATALWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_AL_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_AL_LO_WORD_LO_8_MASK;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATALWriteclear32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATALclear <<\
                               MSHSI2COCP_I2C_STAT_AL_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATALWriteclear32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATALclear <<\
                               MSHSI2COCP_I2C_STAT_AL_LO_WORD_LO_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATALWriteset32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATALset <<\
                               MSHSI2COCP_I2C_STAT_AL_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATALWriteset32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATALset <<\
                               MSHSI2COCP_I2C_STAT_AL_LO_WORD_LO_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATALSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_STAT_AL_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_STAT_AL_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_STAT_AL_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATALSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_STAT_AL_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_STAT_AL_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_STAT_AL_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATNACKRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_NACK_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_NACK_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATNACKRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_NACK_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_NACK_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATNACKReadIsclear32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATNACKclear==(MSHSI2COCPI2C_STATNACKE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_NACK_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_NACK_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATNACKReadIsclear32LL(baseAddress)\
    (      (MSHSI2COCPI2C_STATNACKclear==(MSHSI2COCPI2C_STATNACKE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_NACK_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_NACK_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATNACKReadIsset32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATNACKset==(MSHSI2COCPI2C_STATNACKE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_NACK_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_NACK_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATNACKReadIsset32LL(baseAddress)\
    (      (MSHSI2COCPI2C_STATNACKset==(MSHSI2COCPI2C_STATNACKE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_NACK_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_NACK_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATNACKGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_STAT_NACK_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_NACK_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATNACKGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_STAT_NACK_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_NACK_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATNACKIsclear32L(var)\
    (      (MSHSI2COCPI2C_STATNACKclear==(MSHSI2COCPI2C_STATNACKE)((((short)(var)) & MSHSI2COCP_I2C_STAT_NACK_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_NACK_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATNACKIsclear32LL(var)\
    (      (MSHSI2COCPI2C_STATNACKclear==(MSHSI2COCPI2C_STATNACKE)((((char)(var)) & MSHSI2COCP_I2C_STAT_NACK_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_NACK_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATNACKIsset32L(var)\
    (      (MSHSI2COCPI2C_STATNACKset==(MSHSI2COCPI2C_STATNACKE)((((short)(var)) & MSHSI2COCP_I2C_STAT_NACK_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_NACK_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATNACKIsset32LL(var)\
    (      (MSHSI2COCPI2C_STATNACKset==(MSHSI2COCPI2C_STATNACKE)((((char)(var)) & MSHSI2COCP_I2C_STAT_NACK_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_NACK_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATNACKWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_NACK_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_NACK_LO_16_MASK;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATNACKWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_NACK_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_NACK_LO_WORD_LO_8_MASK;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATNACKWriteclear32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATNACKclear <<\
                               MSHSI2COCP_I2C_STAT_NACK_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATNACKWriteclear32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATNACKclear <<\
                               MSHSI2COCP_I2C_STAT_NACK_LO_WORD_LO_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATNACKWriteset32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATNACKset <<\
                               MSHSI2COCP_I2C_STAT_NACK_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATNACKWriteset32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATNACKset <<\
                               MSHSI2COCP_I2C_STAT_NACK_LO_WORD_LO_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATNACKSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_STAT_NACK_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_STAT_NACK_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_STAT_NACK_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATNACKSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_STAT_NACK_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_STAT_NACK_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_STAT_NACK_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATARDYRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_ARDY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_ARDY_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATARDYRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_ARDY_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_ARDY_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATARDYReadIsclear32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATARDYclear==(MSHSI2COCPI2C_STATARDYE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_ARDY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_ARDY_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATARDYReadIsclear32LL(baseAddress)\
    (      (MSHSI2COCPI2C_STATARDYclear==(MSHSI2COCPI2C_STATARDYE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_ARDY_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_ARDY_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATARDYReadIsset32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATARDYset==(MSHSI2COCPI2C_STATARDYE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_ARDY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_ARDY_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATARDYReadIsset32LL(baseAddress)\
    (      (MSHSI2COCPI2C_STATARDYset==(MSHSI2COCPI2C_STATARDYE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_ARDY_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_ARDY_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATARDYGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_STAT_ARDY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_ARDY_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATARDYGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_STAT_ARDY_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_ARDY_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATARDYIsclear32L(var)\
    (      (MSHSI2COCPI2C_STATARDYclear==(MSHSI2COCPI2C_STATARDYE)((((short)(var)) & MSHSI2COCP_I2C_STAT_ARDY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_ARDY_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATARDYIsclear32LL(var)\
    (      (MSHSI2COCPI2C_STATARDYclear==(MSHSI2COCPI2C_STATARDYE)((((char)(var)) & MSHSI2COCP_I2C_STAT_ARDY_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_ARDY_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATARDYIsset32L(var)\
    (      (MSHSI2COCPI2C_STATARDYset==(MSHSI2COCPI2C_STATARDYE)((((short)(var)) & MSHSI2COCP_I2C_STAT_ARDY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_ARDY_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATARDYIsset32LL(var)\
    (      (MSHSI2COCPI2C_STATARDYset==(MSHSI2COCPI2C_STATARDYE)((((char)(var)) & MSHSI2COCP_I2C_STAT_ARDY_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_ARDY_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATARDYWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_ARDY_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_ARDY_LO_16_MASK;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATARDYWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_ARDY_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_ARDY_LO_WORD_LO_8_MASK;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATARDYWriteclear32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATARDYclear <<\
                               MSHSI2COCP_I2C_STAT_ARDY_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATARDYWriteclear32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATARDYclear <<\
                               MSHSI2COCP_I2C_STAT_ARDY_LO_WORD_LO_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATARDYWriteset32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATARDYset <<\
                               MSHSI2COCP_I2C_STAT_ARDY_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATARDYWriteset32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATARDYset <<\
                               MSHSI2COCP_I2C_STAT_ARDY_LO_WORD_LO_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATARDYSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_STAT_ARDY_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_STAT_ARDY_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_STAT_ARDY_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATARDYSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_STAT_ARDY_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_STAT_ARDY_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_STAT_ARDY_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATRRDYRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_RRDY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_RRDY_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATRRDYRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_RRDY_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_RRDY_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATRRDYReadIsclear32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATRRDYclear==(MSHSI2COCPI2C_STATRRDYE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_RRDY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_RRDY_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATRRDYReadIsclear32LL(baseAddress)\
    (      (MSHSI2COCPI2C_STATRRDYclear==(MSHSI2COCPI2C_STATRRDYE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_RRDY_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_RRDY_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATRRDYReadIsset32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATRRDYset==(MSHSI2COCPI2C_STATRRDYE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_RRDY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_RRDY_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATRRDYReadIsset32LL(baseAddress)\
    (      (MSHSI2COCPI2C_STATRRDYset==(MSHSI2COCPI2C_STATRRDYE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_RRDY_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_RRDY_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATRRDYGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_STAT_RRDY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_RRDY_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATRRDYGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_STAT_RRDY_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_RRDY_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATRRDYIsclear32L(var)\
    (      (MSHSI2COCPI2C_STATRRDYclear==(MSHSI2COCPI2C_STATRRDYE)((((short)(var)) & MSHSI2COCP_I2C_STAT_RRDY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_RRDY_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATRRDYIsclear32LL(var)\
    (      (MSHSI2COCPI2C_STATRRDYclear==(MSHSI2COCPI2C_STATRRDYE)((((char)(var)) & MSHSI2COCP_I2C_STAT_RRDY_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_RRDY_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATRRDYIsset32L(var)\
    (      (MSHSI2COCPI2C_STATRRDYset==(MSHSI2COCPI2C_STATRRDYE)((((short)(var)) & MSHSI2COCP_I2C_STAT_RRDY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_RRDY_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATRRDYIsset32LL(var)\
    (      (MSHSI2COCPI2C_STATRRDYset==(MSHSI2COCPI2C_STATRRDYE)((((char)(var)) & MSHSI2COCP_I2C_STAT_RRDY_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_RRDY_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATRRDYWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_RRDY_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_RRDY_LO_16_MASK;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATRRDYWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_RRDY_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_RRDY_LO_WORD_LO_8_MASK;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATRRDYWriteclear32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATRRDYclear <<\
                               MSHSI2COCP_I2C_STAT_RRDY_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATRRDYWriteclear32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATRRDYclear <<\
                               MSHSI2COCP_I2C_STAT_RRDY_LO_WORD_LO_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATRRDYWriteset32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATRRDYset <<\
                               MSHSI2COCP_I2C_STAT_RRDY_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATRRDYWriteset32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATRRDYset <<\
                               MSHSI2COCP_I2C_STAT_RRDY_LO_WORD_LO_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATRRDYSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_STAT_RRDY_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_STAT_RRDY_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_STAT_RRDY_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATRRDYSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_STAT_RRDY_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_STAT_RRDY_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_STAT_RRDY_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXRDYRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_XRDY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_XRDY_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATXRDYRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_XRDY_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_XRDY_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATXRDYReadIsclear32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATXRDYclear==(MSHSI2COCPI2C_STATXRDYE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_XRDY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_XRDY_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXRDYReadIsclear32LL(baseAddress)\
    (      (MSHSI2COCPI2C_STATXRDYclear==(MSHSI2COCPI2C_STATXRDYE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_XRDY_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_XRDY_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXRDYReadIsset32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATXRDYset==(MSHSI2COCPI2C_STATXRDYE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_XRDY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_XRDY_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXRDYReadIsset32LL(baseAddress)\
    (      (MSHSI2COCPI2C_STATXRDYset==(MSHSI2COCPI2C_STATXRDYE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_XRDY_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_XRDY_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXRDYGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_STAT_XRDY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_XRDY_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATXRDYGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_STAT_XRDY_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_XRDY_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATXRDYIsclear32L(var)\
    (      (MSHSI2COCPI2C_STATXRDYclear==(MSHSI2COCPI2C_STATXRDYE)((((short)(var)) & MSHSI2COCP_I2C_STAT_XRDY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_XRDY_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXRDYIsclear32LL(var)\
    (      (MSHSI2COCPI2C_STATXRDYclear==(MSHSI2COCPI2C_STATXRDYE)((((char)(var)) & MSHSI2COCP_I2C_STAT_XRDY_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_XRDY_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXRDYIsset32L(var)\
    (      (MSHSI2COCPI2C_STATXRDYset==(MSHSI2COCPI2C_STATXRDYE)((((short)(var)) & MSHSI2COCP_I2C_STAT_XRDY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_XRDY_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXRDYIsset32LL(var)\
    (      (MSHSI2COCPI2C_STATXRDYset==(MSHSI2COCPI2C_STATXRDYE)((((char)(var)) & MSHSI2COCP_I2C_STAT_XRDY_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_XRDY_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXRDYWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_XRDY_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_XRDY_LO_16_MASK;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATXRDYWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_XRDY_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_XRDY_LO_WORD_LO_8_MASK;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATXRDYWriteclear32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATXRDYclear <<\
                               MSHSI2COCP_I2C_STAT_XRDY_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATXRDYWriteclear32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATXRDYclear <<\
                               MSHSI2COCP_I2C_STAT_XRDY_LO_WORD_LO_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATXRDYWriteset32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATXRDYset <<\
                               MSHSI2COCP_I2C_STAT_XRDY_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATXRDYWriteset32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATXRDYset <<\
                               MSHSI2COCP_I2C_STAT_XRDY_LO_WORD_LO_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATXRDYSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_STAT_XRDY_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_STAT_XRDY_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_STAT_XRDY_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXRDYSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_STAT_XRDY_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_STAT_XRDY_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_STAT_XRDY_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATGCRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_GC_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_GC_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATGCRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_GC_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_GC_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATGCReadIsclear32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATGCclear==(MSHSI2COCPI2C_STATGCE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_GC_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_GC_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATGCReadIsclear32LL(baseAddress)\
    (      (MSHSI2COCPI2C_STATGCclear==(MSHSI2COCPI2C_STATGCE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_GC_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_GC_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATGCReadIsset32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATGCset==(MSHSI2COCPI2C_STATGCE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_GC_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_GC_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATGCReadIsset32LL(baseAddress)\
    (      (MSHSI2COCPI2C_STATGCset==(MSHSI2COCPI2C_STATGCE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_GC_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_GC_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATGCGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_STAT_GC_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_GC_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATGCGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_STAT_GC_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_GC_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATGCIsclear32L(var)\
    (      (MSHSI2COCPI2C_STATGCclear==(MSHSI2COCPI2C_STATGCE)((((short)(var)) & MSHSI2COCP_I2C_STAT_GC_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_GC_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATGCIsclear32LL(var)\
    (      (MSHSI2COCPI2C_STATGCclear==(MSHSI2COCPI2C_STATGCE)((((char)(var)) & MSHSI2COCP_I2C_STAT_GC_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_GC_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATGCIsset32L(var)\
    (      (MSHSI2COCPI2C_STATGCset==(MSHSI2COCPI2C_STATGCE)((((short)(var)) & MSHSI2COCP_I2C_STAT_GC_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_GC_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATGCIsset32LL(var)\
    (      (MSHSI2COCPI2C_STATGCset==(MSHSI2COCPI2C_STATGCE)((((char)(var)) & MSHSI2COCP_I2C_STAT_GC_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_GC_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATGCWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_GC_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_GC_LO_16_MASK;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATGCWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_GC_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_GC_LO_WORD_LO_8_MASK;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATGCWriteclear32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATGCclear <<\
                               MSHSI2COCP_I2C_STAT_GC_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATGCWriteclear32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATGCclear <<\
                               MSHSI2COCP_I2C_STAT_GC_LO_WORD_LO_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATGCWriteset32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATGCset <<\
                               MSHSI2COCP_I2C_STAT_GC_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATGCWriteset32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATGCset <<\
                               MSHSI2COCP_I2C_STAT_GC_LO_WORD_LO_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATGCSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_STAT_GC_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_STAT_GC_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_STAT_GC_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATGCSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_STAT_GC_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_STAT_GC_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_STAT_GC_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATSTCRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_STC_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_STC_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATSTCRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_STC_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_STC_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATSTCReadIsclear32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATSTCclear==(MSHSI2COCPI2C_STATSTCE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_STC_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_STC_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATSTCReadIsclear32LL(baseAddress)\
    (      (MSHSI2COCPI2C_STATSTCclear==(MSHSI2COCPI2C_STATSTCE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_STC_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_STC_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATSTCReadIsset32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATSTCset==(MSHSI2COCPI2C_STATSTCE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_STC_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_STC_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATSTCReadIsset32LL(baseAddress)\
    (      (MSHSI2COCPI2C_STATSTCset==(MSHSI2COCPI2C_STATSTCE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_STC_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_STC_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATSTCGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_STAT_STC_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_STC_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATSTCGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_STAT_STC_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_STC_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATSTCIsclear32L(var)\
    (      (MSHSI2COCPI2C_STATSTCclear==(MSHSI2COCPI2C_STATSTCE)((((short)(var)) & MSHSI2COCP_I2C_STAT_STC_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_STC_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATSTCIsclear32LL(var)\
    (      (MSHSI2COCPI2C_STATSTCclear==(MSHSI2COCPI2C_STATSTCE)((((char)(var)) & MSHSI2COCP_I2C_STAT_STC_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_STC_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATSTCIsset32L(var)\
    (      (MSHSI2COCPI2C_STATSTCset==(MSHSI2COCPI2C_STATSTCE)((((short)(var)) & MSHSI2COCP_I2C_STAT_STC_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_STC_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATSTCIsset32LL(var)\
    (      (MSHSI2COCPI2C_STATSTCset==(MSHSI2COCPI2C_STATSTCE)((((char)(var)) & MSHSI2COCP_I2C_STAT_STC_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_STC_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATSTCWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_STC_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_STC_LO_16_MASK;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATSTCWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_STC_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_STC_LO_WORD_LO_8_MASK;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATSTCWriteclear32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATSTCclear <<\
                               MSHSI2COCP_I2C_STAT_STC_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATSTCWriteclear32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATSTCclear <<\
                               MSHSI2COCP_I2C_STAT_STC_LO_WORD_LO_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATSTCWriteset32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATSTCset <<\
                               MSHSI2COCP_I2C_STAT_STC_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATSTCWriteset32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATSTCset <<\
                               MSHSI2COCP_I2C_STAT_STC_LO_WORD_LO_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATSTCSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_STAT_STC_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_STAT_STC_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_STAT_STC_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATSTCSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_STAT_STC_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_STAT_STC_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_STAT_STC_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATAERRRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_AERR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_AERR_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATAERRRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_AERR_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_AERR_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATAERRReadIsclear32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATAERRclear==(MSHSI2COCPI2C_STATAERRE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_AERR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_AERR_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATAERRReadIsclear32LL(baseAddress)\
    (      (MSHSI2COCPI2C_STATAERRclear==(MSHSI2COCPI2C_STATAERRE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_AERR_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_AERR_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATAERRReadIsset32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATAERRset==(MSHSI2COCPI2C_STATAERRE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_AERR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_AERR_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATAERRReadIsset32LL(baseAddress)\
    (      (MSHSI2COCPI2C_STATAERRset==(MSHSI2COCPI2C_STATAERRE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_AERR_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_AERR_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATAERRGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_STAT_AERR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_AERR_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATAERRGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_STAT_AERR_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_AERR_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATAERRIsclear32L(var)\
    (      (MSHSI2COCPI2C_STATAERRclear==(MSHSI2COCPI2C_STATAERRE)((((short)(var)) & MSHSI2COCP_I2C_STAT_AERR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_AERR_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATAERRIsclear32LL(var)\
    (      (MSHSI2COCPI2C_STATAERRclear==(MSHSI2COCPI2C_STATAERRE)((((char)(var)) & MSHSI2COCP_I2C_STAT_AERR_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_AERR_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATAERRIsset32L(var)\
    (      (MSHSI2COCPI2C_STATAERRset==(MSHSI2COCPI2C_STATAERRE)((((short)(var)) & MSHSI2COCP_I2C_STAT_AERR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_AERR_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATAERRIsset32LL(var)\
    (      (MSHSI2COCPI2C_STATAERRset==(MSHSI2COCPI2C_STATAERRE)((((char)(var)) & MSHSI2COCP_I2C_STAT_AERR_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_AERR_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATAERRWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_AERR_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_AERR_LO_16_MASK;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATAERRWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_AERR_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_AERR_LO_WORD_LO_8_MASK;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATAERRWriteclear32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATAERRclear <<\
                               MSHSI2COCP_I2C_STAT_AERR_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATAERRWriteclear32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATAERRclear <<\
                               MSHSI2COCP_I2C_STAT_AERR_LO_WORD_LO_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATAERRWriteset32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATAERRset <<\
                               MSHSI2COCP_I2C_STAT_AERR_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATAERRWriteset32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATAERRset <<\
                               MSHSI2COCP_I2C_STAT_AERR_LO_WORD_LO_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATAERRSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_STAT_AERR_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_STAT_AERR_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_STAT_AERR_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATAERRSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_STAT_AERR_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_STAT_AERR_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_STAT_AERR_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATBFRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_BF_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_BF_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATBFRead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_BF_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_BF_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATBFReadIsclear32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATBFclear==(MSHSI2COCPI2C_STATBFE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_BF_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_BF_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATBFReadIsclear32LM(baseAddress)\
    (      (MSHSI2COCPI2C_STATBFclear==(MSHSI2COCPI2C_STATBFE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_BF_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_BF_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATBFReadIsset32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATBFset==(MSHSI2COCPI2C_STATBFE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_BF_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_BF_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATBFReadIsset32LM(baseAddress)\
    (      (MSHSI2COCPI2C_STATBFset==(MSHSI2COCPI2C_STATBFE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_BF_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_BF_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATBFGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_STAT_BF_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_BF_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATBFGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_STAT_BF_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_BF_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATBFIsclear32L(var)\
    (      (MSHSI2COCPI2C_STATBFclear==(MSHSI2COCPI2C_STATBFE)((((short)(var)) & MSHSI2COCP_I2C_STAT_BF_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_BF_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATBFIsclear32LM(var)\
    (      (MSHSI2COCPI2C_STATBFclear==(MSHSI2COCPI2C_STATBFE)((((char)(var)) & MSHSI2COCP_I2C_STAT_BF_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_BF_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATBFIsset32L(var)\
    (      (MSHSI2COCPI2C_STATBFset==(MSHSI2COCPI2C_STATBFE)((((short)(var)) & MSHSI2COCP_I2C_STAT_BF_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_BF_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATBFIsset32LM(var)\
    (      (MSHSI2COCPI2C_STATBFset==(MSHSI2COCPI2C_STATBFE)((((char)(var)) & MSHSI2COCP_I2C_STAT_BF_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_BF_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATBFWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_BF_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_BF_LO_16_MASK;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATBFWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_BF_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_BF_LO_WORD_LO_MIDDLE_8_MASK;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATBFWriteclear32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATBFclear <<\
                               MSHSI2COCP_I2C_STAT_BF_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATBFWriteclear32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATBFclear <<\
                               MSHSI2COCP_I2C_STAT_BF_LO_WORD_LO_MIDDLE_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATBFWriteset32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATBFset <<\
                               MSHSI2COCP_I2C_STAT_BF_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATBFWriteset32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATBFset <<\
                               MSHSI2COCP_I2C_STAT_BF_LO_WORD_LO_MIDDLE_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATBFSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_STAT_BF_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_STAT_BF_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_STAT_BF_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATBFSet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_STAT_BF_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_STAT_BF_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_STAT_BF_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATAASRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_AAS_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_AAS_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATAASRead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_AAS_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_AAS_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATAASReadIsclear32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATAASclear==(MSHSI2COCPI2C_STATAASE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_AAS_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_AAS_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATAASReadIsclear32LM(baseAddress)\
    (      (MSHSI2COCPI2C_STATAASclear==(MSHSI2COCPI2C_STATAASE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_AAS_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_AAS_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATAASReadIsset32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATAASset==(MSHSI2COCPI2C_STATAASE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_AAS_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_AAS_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATAASReadIsset32LM(baseAddress)\
    (      (MSHSI2COCPI2C_STATAASset==(MSHSI2COCPI2C_STATAASE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_AAS_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_AAS_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATAASGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_STAT_AAS_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_AAS_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATAASGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_STAT_AAS_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_AAS_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATAASIsclear32L(var)\
    (      (MSHSI2COCPI2C_STATAASclear==(MSHSI2COCPI2C_STATAASE)((((short)(var)) & MSHSI2COCP_I2C_STAT_AAS_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_AAS_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATAASIsclear32LM(var)\
    (      (MSHSI2COCPI2C_STATAASclear==(MSHSI2COCPI2C_STATAASE)((((char)(var)) & MSHSI2COCP_I2C_STAT_AAS_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_AAS_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATAASIsset32L(var)\
    (      (MSHSI2COCPI2C_STATAASset==(MSHSI2COCPI2C_STATAASE)((((short)(var)) & MSHSI2COCP_I2C_STAT_AAS_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_AAS_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATAASIsset32LM(var)\
    (      (MSHSI2COCPI2C_STATAASset==(MSHSI2COCPI2C_STATAASE)((((char)(var)) & MSHSI2COCP_I2C_STAT_AAS_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_AAS_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATAASWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_AAS_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_AAS_LO_16_MASK;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATAASWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_AAS_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_AAS_LO_WORD_LO_MIDDLE_8_MASK;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATAASWriteclear32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATAASclear <<\
                               MSHSI2COCP_I2C_STAT_AAS_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATAASWriteclear32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATAASclear <<\
                               MSHSI2COCP_I2C_STAT_AAS_LO_WORD_LO_MIDDLE_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATAASWriteset32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATAASset <<\
                               MSHSI2COCP_I2C_STAT_AAS_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATAASWriteset32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATAASset <<\
                               MSHSI2COCP_I2C_STAT_AAS_LO_WORD_LO_MIDDLE_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATAASSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_STAT_AAS_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_STAT_AAS_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_STAT_AAS_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATAASSet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_STAT_AAS_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_STAT_AAS_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_STAT_AAS_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXUDFRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_XUDF_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_XUDF_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATXUDFRead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_XUDF_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_XUDF_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATXUDFReadIsclear32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATXUDFclear==(MSHSI2COCPI2C_STATXUDFE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_XUDF_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_XUDF_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXUDFReadIsclear32LM(baseAddress)\
    (      (MSHSI2COCPI2C_STATXUDFclear==(MSHSI2COCPI2C_STATXUDFE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_XUDF_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_XUDF_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXUDFReadIsset32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATXUDFset==(MSHSI2COCPI2C_STATXUDFE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_XUDF_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_XUDF_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXUDFReadIsset32LM(baseAddress)\
    (      (MSHSI2COCPI2C_STATXUDFset==(MSHSI2COCPI2C_STATXUDFE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_XUDF_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_XUDF_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXUDFGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_STAT_XUDF_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_XUDF_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATXUDFGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_STAT_XUDF_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_XUDF_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATXUDFIsclear32L(var)\
    (      (MSHSI2COCPI2C_STATXUDFclear==(MSHSI2COCPI2C_STATXUDFE)((((short)(var)) & MSHSI2COCP_I2C_STAT_XUDF_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_XUDF_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXUDFIsclear32LM(var)\
    (      (MSHSI2COCPI2C_STATXUDFclear==(MSHSI2COCPI2C_STATXUDFE)((((char)(var)) & MSHSI2COCP_I2C_STAT_XUDF_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_XUDF_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXUDFIsset32L(var)\
    (      (MSHSI2COCPI2C_STATXUDFset==(MSHSI2COCPI2C_STATXUDFE)((((short)(var)) & MSHSI2COCP_I2C_STAT_XUDF_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_XUDF_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXUDFIsset32LM(var)\
    (      (MSHSI2COCPI2C_STATXUDFset==(MSHSI2COCPI2C_STATXUDFE)((((char)(var)) & MSHSI2COCP_I2C_STAT_XUDF_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_XUDF_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXUDFWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_XUDF_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_XUDF_LO_16_MASK;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATXUDFWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_XUDF_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_XUDF_LO_WORD_LO_MIDDLE_8_MASK;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATXUDFWriteclear32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATXUDFclear <<\
                               MSHSI2COCP_I2C_STAT_XUDF_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATXUDFWriteclear32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATXUDFclear <<\
                               MSHSI2COCP_I2C_STAT_XUDF_LO_WORD_LO_MIDDLE_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATXUDFWriteset32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATXUDFset <<\
                               MSHSI2COCP_I2C_STAT_XUDF_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATXUDFWriteset32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATXUDFset <<\
                               MSHSI2COCP_I2C_STAT_XUDF_LO_WORD_LO_MIDDLE_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATXUDFSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_STAT_XUDF_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_STAT_XUDF_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_STAT_XUDF_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXUDFSet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_STAT_XUDF_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_STAT_XUDF_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_STAT_XUDF_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATROVRRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_ROVR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_ROVR_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATROVRRead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_ROVR_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_ROVR_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATROVRReadIsclear32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATROVRclear==(MSHSI2COCPI2C_STATROVRE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_ROVR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_ROVR_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATROVRReadIsclear32LM(baseAddress)\
    (      (MSHSI2COCPI2C_STATROVRclear==(MSHSI2COCPI2C_STATROVRE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_ROVR_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_ROVR_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATROVRReadIsset32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATROVRset==(MSHSI2COCPI2C_STATROVRE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_ROVR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_ROVR_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATROVRReadIsset32LM(baseAddress)\
    (      (MSHSI2COCPI2C_STATROVRset==(MSHSI2COCPI2C_STATROVRE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_ROVR_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_ROVR_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATROVRGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_STAT_ROVR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_ROVR_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATROVRGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_STAT_ROVR_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_ROVR_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATROVRIsclear32L(var)\
    (      (MSHSI2COCPI2C_STATROVRclear==(MSHSI2COCPI2C_STATROVRE)((((short)(var)) & MSHSI2COCP_I2C_STAT_ROVR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_ROVR_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATROVRIsclear32LM(var)\
    (      (MSHSI2COCPI2C_STATROVRclear==(MSHSI2COCPI2C_STATROVRE)((((char)(var)) & MSHSI2COCP_I2C_STAT_ROVR_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_ROVR_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATROVRIsset32L(var)\
    (      (MSHSI2COCPI2C_STATROVRset==(MSHSI2COCPI2C_STATROVRE)((((short)(var)) & MSHSI2COCP_I2C_STAT_ROVR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_ROVR_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATROVRIsset32LM(var)\
    (      (MSHSI2COCPI2C_STATROVRset==(MSHSI2COCPI2C_STATROVRE)((((char)(var)) & MSHSI2COCP_I2C_STAT_ROVR_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_ROVR_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATROVRWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_ROVR_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_ROVR_LO_16_MASK;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATROVRWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_ROVR_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_ROVR_LO_WORD_LO_MIDDLE_8_MASK;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATROVRWriteclear32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATROVRclear <<\
                               MSHSI2COCP_I2C_STAT_ROVR_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATROVRWriteclear32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATROVRclear <<\
                               MSHSI2COCP_I2C_STAT_ROVR_LO_WORD_LO_MIDDLE_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATROVRWriteset32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATROVRset <<\
                               MSHSI2COCP_I2C_STAT_ROVR_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATROVRWriteset32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATROVRset <<\
                               MSHSI2COCP_I2C_STAT_ROVR_LO_WORD_LO_MIDDLE_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATROVRSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_STAT_ROVR_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_STAT_ROVR_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_STAT_ROVR_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATROVRSet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_STAT_ROVR_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_STAT_ROVR_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_STAT_ROVR_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATBBRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_BB_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_BB_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATBBRead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_BB_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_BB_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATBBReadIsclear32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATBBclear==(MSHSI2COCPI2C_STATBBE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_BB_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_BB_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATBBReadIsclear32LM(baseAddress)\
    (      (MSHSI2COCPI2C_STATBBclear==(MSHSI2COCPI2C_STATBBE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_BB_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_BB_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATBBReadIsset32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATBBset==(MSHSI2COCPI2C_STATBBE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_BB_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_BB_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATBBReadIsset32LM(baseAddress)\
    (      (MSHSI2COCPI2C_STATBBset==(MSHSI2COCPI2C_STATBBE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_BB_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_BB_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATBBGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_STAT_BB_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_BB_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATBBGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_STAT_BB_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_BB_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATBBIsclear32L(var)\
    (      (MSHSI2COCPI2C_STATBBclear==(MSHSI2COCPI2C_STATBBE)((((short)(var)) & MSHSI2COCP_I2C_STAT_BB_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_BB_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATBBIsclear32LM(var)\
    (      (MSHSI2COCPI2C_STATBBclear==(MSHSI2COCPI2C_STATBBE)((((char)(var)) & MSHSI2COCP_I2C_STAT_BB_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_BB_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATBBIsset32L(var)\
    (      (MSHSI2COCPI2C_STATBBset==(MSHSI2COCPI2C_STATBBE)((((short)(var)) & MSHSI2COCP_I2C_STAT_BB_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_BB_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATBBIsset32LM(var)\
    (      (MSHSI2COCPI2C_STATBBset==(MSHSI2COCPI2C_STATBBE)((((char)(var)) & MSHSI2COCP_I2C_STAT_BB_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_BB_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATBBWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_BB_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_BB_LO_16_MASK;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATBBWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_BB_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_BB_LO_WORD_LO_MIDDLE_8_MASK;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATBBWriteclear32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATBBclear <<\
                               MSHSI2COCP_I2C_STAT_BB_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATBBWriteclear32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATBBclear <<\
                               MSHSI2COCP_I2C_STAT_BB_LO_WORD_LO_MIDDLE_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATBBWriteset32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATBBset <<\
                               MSHSI2COCP_I2C_STAT_BB_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATBBWriteset32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATBBset <<\
                               MSHSI2COCP_I2C_STAT_BB_LO_WORD_LO_MIDDLE_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATBBSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_STAT_BB_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_STAT_BB_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_STAT_BB_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATBBSet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_STAT_BB_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_STAT_BB_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_STAT_BB_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATRDRRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_RDR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_RDR_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATRDRRead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_RDR_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_RDR_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATRDRReadIsclear32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATRDRclear==(MSHSI2COCPI2C_STATRDRE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_RDR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_RDR_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATRDRReadIsclear32LM(baseAddress)\
    (      (MSHSI2COCPI2C_STATRDRclear==(MSHSI2COCPI2C_STATRDRE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_RDR_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_RDR_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATRDRReadIsset32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATRDRset==(MSHSI2COCPI2C_STATRDRE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_RDR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_RDR_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATRDRReadIsset32LM(baseAddress)\
    (      (MSHSI2COCPI2C_STATRDRset==(MSHSI2COCPI2C_STATRDRE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_RDR_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_RDR_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATRDRGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_STAT_RDR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_RDR_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATRDRGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_STAT_RDR_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_RDR_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATRDRIsclear32L(var)\
    (      (MSHSI2COCPI2C_STATRDRclear==(MSHSI2COCPI2C_STATRDRE)((((short)(var)) & MSHSI2COCP_I2C_STAT_RDR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_RDR_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATRDRIsclear32LM(var)\
    (      (MSHSI2COCPI2C_STATRDRclear==(MSHSI2COCPI2C_STATRDRE)((((char)(var)) & MSHSI2COCP_I2C_STAT_RDR_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_RDR_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATRDRIsset32L(var)\
    (      (MSHSI2COCPI2C_STATRDRset==(MSHSI2COCPI2C_STATRDRE)((((short)(var)) & MSHSI2COCP_I2C_STAT_RDR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_RDR_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATRDRIsset32LM(var)\
    (      (MSHSI2COCPI2C_STATRDRset==(MSHSI2COCPI2C_STATRDRE)((((char)(var)) & MSHSI2COCP_I2C_STAT_RDR_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_RDR_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATRDRWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_RDR_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_RDR_LO_16_MASK;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATRDRWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_RDR_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_RDR_LO_WORD_LO_MIDDLE_8_MASK;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATRDRWriteclear32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATRDRclear <<\
                               MSHSI2COCP_I2C_STAT_RDR_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATRDRWriteclear32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATRDRclear <<\
                               MSHSI2COCP_I2C_STAT_RDR_LO_WORD_LO_MIDDLE_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATRDRWriteset32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATRDRset <<\
                               MSHSI2COCP_I2C_STAT_RDR_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATRDRWriteset32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATRDRset <<\
                               MSHSI2COCP_I2C_STAT_RDR_LO_WORD_LO_MIDDLE_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATRDRSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_STAT_RDR_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_STAT_RDR_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_STAT_RDR_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATRDRSet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_STAT_RDR_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_STAT_RDR_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_STAT_RDR_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXDRRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_XDR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_XDR_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATXDRRead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_XDR_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_XDR_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATXDRReadIsclear32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATXDRclear==(MSHSI2COCPI2C_STATXDRE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_XDR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_XDR_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXDRReadIsclear32LM(baseAddress)\
    (      (MSHSI2COCPI2C_STATXDRclear==(MSHSI2COCPI2C_STATXDRE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_XDR_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_XDR_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXDRReadIsset32L(baseAddress)\
    (      (MSHSI2COCPI2C_STATXDRset==(MSHSI2COCPI2C_STATXDRE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_XDR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_XDR_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXDRReadIsset32LM(baseAddress)\
    (      (MSHSI2COCPI2C_STATXDRset==(MSHSI2COCPI2C_STATXDRE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_STAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_STAT_XDR_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_XDR_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXDRGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_STAT_XDR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_XDR_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATXDRGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_STAT_XDR_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_XDR_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_STATXDRIsclear32L(var)\
    (      (MSHSI2COCPI2C_STATXDRclear==(MSHSI2COCPI2C_STATXDRE)((((short)(var)) & MSHSI2COCP_I2C_STAT_XDR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_XDR_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXDRIsclear32LM(var)\
    (      (MSHSI2COCPI2C_STATXDRclear==(MSHSI2COCPI2C_STATXDRE)((((char)(var)) & MSHSI2COCP_I2C_STAT_XDR_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_XDR_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXDRIsset32L(var)\
    (      (MSHSI2COCPI2C_STATXDRset==(MSHSI2COCPI2C_STATXDRE)((((short)(var)) & MSHSI2COCP_I2C_STAT_XDR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_STAT_XDR_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXDRIsset32LM(var)\
    (      (MSHSI2COCPI2C_STATXDRset==(MSHSI2COCPI2C_STATXDRE)((((char)(var)) & MSHSI2COCP_I2C_STAT_XDR_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_STAT_XDR_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXDRWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_XDR_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_XDR_LO_16_MASK;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATXDRWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    newValue <<= MSHSI2COCP_I2C_STAT_XDR_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_STAT_XDR_LO_WORD_LO_MIDDLE_8_MASK;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATXDRWriteclear32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATXDRclear <<\
                               MSHSI2COCP_I2C_STAT_XDR_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATXDRWriteclear32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATXDRclear <<\
                               MSHSI2COCP_I2C_STAT_XDR_LO_WORD_LO_MIDDLE_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATXDRWriteset32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_STATXDRset <<\
                               MSHSI2COCP_I2C_STAT_XDR_LO_16_OFFSET;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATXDRWriteset32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_STAT_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_STATXDRset <<\
                               MSHSI2COCP_I2C_STAT_XDR_LO_WORD_LO_MIDDLE_8_OFFSET;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_STATXDRSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_STAT_XDR_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_STAT_XDR_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_STAT_XDR_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_STATXDRSet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_STAT_XDR_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_STAT_XDR_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_STAT_XDR_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_WEReadRegister32U(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_UPPER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEReadRegister32L(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEReadRegister32UU(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_UPPER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEReadRegister32UM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEReadRegister32LM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEReadRegister32LL(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEWriteRegister32U(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_UPPER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEWriteRegister32L(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEWriteRegister32UU(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_UPPER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEWriteRegister32UM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEWriteRegister32LM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEWriteRegister32LL(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEAL_WERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_AL_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_AL_WE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEAL_WERead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_AL_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_AL_WE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEAL_WEReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_WEAL_WEdisable==(MSHSI2COCPI2C_WEAL_WEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_AL_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_AL_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEAL_WEReadIsdisable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_WEAL_WEdisable==(MSHSI2COCPI2C_WEAL_WEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_AL_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_AL_WE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEAL_WEReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_WEAL_WEenable==(MSHSI2COCPI2C_WEAL_WEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_AL_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_AL_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEAL_WEReadIsenable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_WEAL_WEenable==(MSHSI2COCPI2C_WEAL_WEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_AL_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_AL_WE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEAL_WEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_WE_AL_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_AL_WE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEAL_WEGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_WE_AL_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_AL_WE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEAL_WEIsdisable32L(var)\
    (      (MSHSI2COCPI2C_WEAL_WEdisable==(MSHSI2COCPI2C_WEAL_WEE)((((short)(var)) & MSHSI2COCP_I2C_WE_AL_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_AL_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEAL_WEIsdisable32LL(var)\
    (      (MSHSI2COCPI2C_WEAL_WEdisable==(MSHSI2COCPI2C_WEAL_WEE)((((char)(var)) & MSHSI2COCP_I2C_WE_AL_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_AL_WE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEAL_WEIsenable32L(var)\
    (      (MSHSI2COCPI2C_WEAL_WEenable==(MSHSI2COCPI2C_WEAL_WEE)((((short)(var)) & MSHSI2COCP_I2C_WE_AL_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_AL_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEAL_WEIsenable32LL(var)\
    (      (MSHSI2COCPI2C_WEAL_WEenable==(MSHSI2COCPI2C_WEAL_WEE)((((char)(var)) & MSHSI2COCP_I2C_WE_AL_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_AL_WE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEAL_WEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_WE_AL_WE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_WE_AL_WE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_WE_AL_WE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEAL_WEWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_WE_AL_WE_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_WE_AL_WE_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_WE_AL_WE_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEAL_WEWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_WEAL_WEdisable <<\
                               MSHSI2COCP_I2C_WE_AL_WE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_AL_WE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEAL_WEWritedisable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_WEAL_WEdisable <<\
                               MSHSI2COCP_I2C_WE_AL_WE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_AL_WE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEAL_WEWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_WEAL_WEenable <<\
                               MSHSI2COCP_I2C_WE_AL_WE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_AL_WE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEAL_WEWriteenable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_WEAL_WEenable <<\
                               MSHSI2COCP_I2C_WE_AL_WE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_AL_WE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEAL_WESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_WE_AL_WE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_WE_AL_WE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_WE_AL_WE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_WEAL_WESet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_WE_AL_WE_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_WE_AL_WE_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_WE_AL_WE_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_WENACK_WERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_NACK_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_NACK_WE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WENACK_WERead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_NACK_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_NACK_WE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WENACK_WEReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_WENACK_WEdisable==(MSHSI2COCPI2C_WENACK_WEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_NACK_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_NACK_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WENACK_WEReadIsdisable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_WENACK_WEdisable==(MSHSI2COCPI2C_WENACK_WEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_NACK_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_NACK_WE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WENACK_WEReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_WENACK_WEenable==(MSHSI2COCPI2C_WENACK_WEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_NACK_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_NACK_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WENACK_WEReadIsenable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_WENACK_WEenable==(MSHSI2COCPI2C_WENACK_WEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_NACK_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_NACK_WE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WENACK_WEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_WE_NACK_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_NACK_WE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WENACK_WEGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_WE_NACK_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_NACK_WE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WENACK_WEIsdisable32L(var)\
    (      (MSHSI2COCPI2C_WENACK_WEdisable==(MSHSI2COCPI2C_WENACK_WEE)((((short)(var)) & MSHSI2COCP_I2C_WE_NACK_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_NACK_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WENACK_WEIsdisable32LL(var)\
    (      (MSHSI2COCPI2C_WENACK_WEdisable==(MSHSI2COCPI2C_WENACK_WEE)((((char)(var)) & MSHSI2COCP_I2C_WE_NACK_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_NACK_WE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WENACK_WEIsenable32L(var)\
    (      (MSHSI2COCPI2C_WENACK_WEenable==(MSHSI2COCPI2C_WENACK_WEE)((((short)(var)) & MSHSI2COCP_I2C_WE_NACK_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_NACK_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WENACK_WEIsenable32LL(var)\
    (      (MSHSI2COCPI2C_WENACK_WEenable==(MSHSI2COCPI2C_WENACK_WEE)((((char)(var)) & MSHSI2COCP_I2C_WE_NACK_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_NACK_WE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WENACK_WEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_WE_NACK_WE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_WE_NACK_WE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_WE_NACK_WE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WENACK_WEWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_WE_NACK_WE_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_WE_NACK_WE_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_WE_NACK_WE_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WENACK_WEWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_WENACK_WEdisable <<\
                               MSHSI2COCP_I2C_WE_NACK_WE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_NACK_WE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WENACK_WEWritedisable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_WENACK_WEdisable <<\
                               MSHSI2COCP_I2C_WE_NACK_WE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_NACK_WE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WENACK_WEWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_WENACK_WEenable <<\
                               MSHSI2COCP_I2C_WE_NACK_WE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_NACK_WE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WENACK_WEWriteenable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_WENACK_WEenable <<\
                               MSHSI2COCP_I2C_WE_NACK_WE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_NACK_WE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WENACK_WESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_WE_NACK_WE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_WE_NACK_WE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_WE_NACK_WE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_WENACK_WESet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_WE_NACK_WE_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_WE_NACK_WE_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_WE_NACK_WE_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_WEARDY_WERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_ARDY_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_ARDY_WE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEARDY_WERead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_ARDY_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_ARDY_WE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEARDY_WEReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_WEARDY_WEdisable==(MSHSI2COCPI2C_WEARDY_WEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_ARDY_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_ARDY_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEARDY_WEReadIsdisable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_WEARDY_WEdisable==(MSHSI2COCPI2C_WEARDY_WEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_ARDY_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_ARDY_WE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEARDY_WEReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_WEARDY_WEenable==(MSHSI2COCPI2C_WEARDY_WEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_ARDY_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_ARDY_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEARDY_WEReadIsenable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_WEARDY_WEenable==(MSHSI2COCPI2C_WEARDY_WEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_ARDY_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_ARDY_WE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEARDY_WEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_WE_ARDY_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_ARDY_WE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEARDY_WEGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_WE_ARDY_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_ARDY_WE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEARDY_WEIsdisable32L(var)\
    (      (MSHSI2COCPI2C_WEARDY_WEdisable==(MSHSI2COCPI2C_WEARDY_WEE)((((short)(var)) & MSHSI2COCP_I2C_WE_ARDY_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_ARDY_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEARDY_WEIsdisable32LL(var)\
    (      (MSHSI2COCPI2C_WEARDY_WEdisable==(MSHSI2COCPI2C_WEARDY_WEE)((((char)(var)) & MSHSI2COCP_I2C_WE_ARDY_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_ARDY_WE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEARDY_WEIsenable32L(var)\
    (      (MSHSI2COCPI2C_WEARDY_WEenable==(MSHSI2COCPI2C_WEARDY_WEE)((((short)(var)) & MSHSI2COCP_I2C_WE_ARDY_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_ARDY_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEARDY_WEIsenable32LL(var)\
    (      (MSHSI2COCPI2C_WEARDY_WEenable==(MSHSI2COCPI2C_WEARDY_WEE)((((char)(var)) & MSHSI2COCP_I2C_WE_ARDY_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_ARDY_WE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEARDY_WEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_WE_ARDY_WE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_WE_ARDY_WE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_WE_ARDY_WE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEARDY_WEWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_WE_ARDY_WE_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_WE_ARDY_WE_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_WE_ARDY_WE_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEARDY_WEWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_WEARDY_WEdisable <<\
                               MSHSI2COCP_I2C_WE_ARDY_WE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_ARDY_WE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEARDY_WEWritedisable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_WEARDY_WEdisable <<\
                               MSHSI2COCP_I2C_WE_ARDY_WE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_ARDY_WE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEARDY_WEWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_WEARDY_WEenable <<\
                               MSHSI2COCP_I2C_WE_ARDY_WE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_ARDY_WE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEARDY_WEWriteenable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_WEARDY_WEenable <<\
                               MSHSI2COCP_I2C_WE_ARDY_WE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_ARDY_WE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEARDY_WESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_WE_ARDY_WE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_WE_ARDY_WE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_WE_ARDY_WE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_WEARDY_WESet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_WE_ARDY_WE_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_WE_ARDY_WE_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_WE_ARDY_WE_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_WEDRDY_WERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_DRDY_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_DRDY_WE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEDRDY_WERead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_DRDY_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_DRDY_WE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEDRDY_WEReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_WEDRDY_WEdisable==(MSHSI2COCPI2C_WEDRDY_WEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_DRDY_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_DRDY_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEDRDY_WEReadIsdisable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_WEDRDY_WEdisable==(MSHSI2COCPI2C_WEDRDY_WEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_DRDY_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_DRDY_WE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEDRDY_WEReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_WEDRDY_WEenable==(MSHSI2COCPI2C_WEDRDY_WEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_DRDY_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_DRDY_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEDRDY_WEReadIsenable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_WEDRDY_WEenable==(MSHSI2COCPI2C_WEDRDY_WEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_DRDY_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_DRDY_WE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEDRDY_WEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_WE_DRDY_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_DRDY_WE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEDRDY_WEGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_WE_DRDY_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_DRDY_WE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEDRDY_WEIsdisable32L(var)\
    (      (MSHSI2COCPI2C_WEDRDY_WEdisable==(MSHSI2COCPI2C_WEDRDY_WEE)((((short)(var)) & MSHSI2COCP_I2C_WE_DRDY_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_DRDY_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEDRDY_WEIsdisable32LL(var)\
    (      (MSHSI2COCPI2C_WEDRDY_WEdisable==(MSHSI2COCPI2C_WEDRDY_WEE)((((char)(var)) & MSHSI2COCP_I2C_WE_DRDY_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_DRDY_WE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEDRDY_WEIsenable32L(var)\
    (      (MSHSI2COCPI2C_WEDRDY_WEenable==(MSHSI2COCPI2C_WEDRDY_WEE)((((short)(var)) & MSHSI2COCP_I2C_WE_DRDY_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_DRDY_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEDRDY_WEIsenable32LL(var)\
    (      (MSHSI2COCPI2C_WEDRDY_WEenable==(MSHSI2COCPI2C_WEDRDY_WEE)((((char)(var)) & MSHSI2COCP_I2C_WE_DRDY_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_DRDY_WE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEDRDY_WEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_WE_DRDY_WE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_WE_DRDY_WE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_WE_DRDY_WE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEDRDY_WEWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_WE_DRDY_WE_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_WE_DRDY_WE_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_WE_DRDY_WE_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEDRDY_WEWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_WEDRDY_WEdisable <<\
                               MSHSI2COCP_I2C_WE_DRDY_WE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_DRDY_WE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEDRDY_WEWritedisable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_WEDRDY_WEdisable <<\
                               MSHSI2COCP_I2C_WE_DRDY_WE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_DRDY_WE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEDRDY_WEWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_WEDRDY_WEenable <<\
                               MSHSI2COCP_I2C_WE_DRDY_WE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_DRDY_WE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEDRDY_WEWriteenable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_WEDRDY_WEenable <<\
                               MSHSI2COCP_I2C_WE_DRDY_WE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_DRDY_WE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEDRDY_WESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_WE_DRDY_WE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_WE_DRDY_WE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_WE_DRDY_WE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_WEDRDY_WESet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_WE_DRDY_WE_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_WE_DRDY_WE_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_WE_DRDY_WE_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_WEGC_WERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_GC_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_GC_WE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEGC_WERead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_GC_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_GC_WE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEGC_WEReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_WEGC_WEdisable==(MSHSI2COCPI2C_WEGC_WEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_GC_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_GC_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEGC_WEReadIsdisable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_WEGC_WEdisable==(MSHSI2COCPI2C_WEGC_WEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_GC_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_GC_WE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEGC_WEReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_WEGC_WEenable==(MSHSI2COCPI2C_WEGC_WEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_GC_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_GC_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEGC_WEReadIsenable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_WEGC_WEenable==(MSHSI2COCPI2C_WEGC_WEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_GC_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_GC_WE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEGC_WEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_WE_GC_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_GC_WE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEGC_WEGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_WE_GC_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_GC_WE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEGC_WEIsdisable32L(var)\
    (      (MSHSI2COCPI2C_WEGC_WEdisable==(MSHSI2COCPI2C_WEGC_WEE)((((short)(var)) & MSHSI2COCP_I2C_WE_GC_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_GC_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEGC_WEIsdisable32LL(var)\
    (      (MSHSI2COCPI2C_WEGC_WEdisable==(MSHSI2COCPI2C_WEGC_WEE)((((char)(var)) & MSHSI2COCP_I2C_WE_GC_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_GC_WE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEGC_WEIsenable32L(var)\
    (      (MSHSI2COCPI2C_WEGC_WEenable==(MSHSI2COCPI2C_WEGC_WEE)((((short)(var)) & MSHSI2COCP_I2C_WE_GC_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_GC_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEGC_WEIsenable32LL(var)\
    (      (MSHSI2COCPI2C_WEGC_WEenable==(MSHSI2COCPI2C_WEGC_WEE)((((char)(var)) & MSHSI2COCP_I2C_WE_GC_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_GC_WE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEGC_WEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_WE_GC_WE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_WE_GC_WE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_WE_GC_WE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEGC_WEWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_WE_GC_WE_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_WE_GC_WE_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_WE_GC_WE_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEGC_WEWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_WEGC_WEdisable <<\
                               MSHSI2COCP_I2C_WE_GC_WE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_GC_WE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEGC_WEWritedisable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_WEGC_WEdisable <<\
                               MSHSI2COCP_I2C_WE_GC_WE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_GC_WE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEGC_WEWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_WEGC_WEenable <<\
                               MSHSI2COCP_I2C_WE_GC_WE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_GC_WE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEGC_WEWriteenable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_WEGC_WEenable <<\
                               MSHSI2COCP_I2C_WE_GC_WE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_GC_WE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEGC_WESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_WE_GC_WE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_WE_GC_WE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_WE_GC_WE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_WEGC_WESet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_WE_GC_WE_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_WE_GC_WE_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_WE_GC_WE_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_WESTC_WERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_STC_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_STC_WE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WESTC_WERead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_STC_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_STC_WE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WESTC_WEReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_WESTC_WEdisable==(MSHSI2COCPI2C_WESTC_WEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_STC_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_STC_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WESTC_WEReadIsdisable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_WESTC_WEdisable==(MSHSI2COCPI2C_WESTC_WEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_STC_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_STC_WE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WESTC_WEReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_WESTC_WEenable==(MSHSI2COCPI2C_WESTC_WEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_STC_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_STC_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WESTC_WEReadIsenable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_WESTC_WEenable==(MSHSI2COCPI2C_WESTC_WEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_STC_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_STC_WE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WESTC_WEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_WE_STC_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_STC_WE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WESTC_WEGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_WE_STC_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_STC_WE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WESTC_WEIsdisable32L(var)\
    (      (MSHSI2COCPI2C_WESTC_WEdisable==(MSHSI2COCPI2C_WESTC_WEE)((((short)(var)) & MSHSI2COCP_I2C_WE_STC_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_STC_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WESTC_WEIsdisable32LL(var)\
    (      (MSHSI2COCPI2C_WESTC_WEdisable==(MSHSI2COCPI2C_WESTC_WEE)((((char)(var)) & MSHSI2COCP_I2C_WE_STC_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_STC_WE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WESTC_WEIsenable32L(var)\
    (      (MSHSI2COCPI2C_WESTC_WEenable==(MSHSI2COCPI2C_WESTC_WEE)((((short)(var)) & MSHSI2COCP_I2C_WE_STC_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_STC_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WESTC_WEIsenable32LL(var)\
    (      (MSHSI2COCPI2C_WESTC_WEenable==(MSHSI2COCPI2C_WESTC_WEE)((((char)(var)) & MSHSI2COCP_I2C_WE_STC_WE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_WE_STC_WE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WESTC_WEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_WE_STC_WE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_WE_STC_WE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_WE_STC_WE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WESTC_WEWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_WE_STC_WE_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_WE_STC_WE_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_WE_STC_WE_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WESTC_WEWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_WESTC_WEdisable <<\
                               MSHSI2COCP_I2C_WE_STC_WE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_STC_WE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WESTC_WEWritedisable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_WESTC_WEdisable <<\
                               MSHSI2COCP_I2C_WE_STC_WE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_STC_WE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WESTC_WEWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_WESTC_WEenable <<\
                               MSHSI2COCP_I2C_WE_STC_WE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_STC_WE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WESTC_WEWriteenable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_WESTC_WEenable <<\
                               MSHSI2COCP_I2C_WE_STC_WE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_STC_WE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WESTC_WESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_WE_STC_WE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_WE_STC_WE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_WE_STC_WE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_WESTC_WESet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_WE_STC_WE_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_WE_STC_WE_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_WE_STC_WE_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_WEBF_WERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_BF_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_BF_WE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEBF_WERead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_BF_WE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_WE_BF_WE_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEBF_WEReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_WEBF_WEdisable==(MSHSI2COCPI2C_WEBF_WEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_BF_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_BF_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEBF_WEReadIsdisable32LM(baseAddress)\
    (      (MSHSI2COCPI2C_WEBF_WEdisable==(MSHSI2COCPI2C_WEBF_WEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_BF_WE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_WE_BF_WE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEBF_WEReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_WEBF_WEenable==(MSHSI2COCPI2C_WEBF_WEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_BF_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_BF_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEBF_WEReadIsenable32LM(baseAddress)\
    (      (MSHSI2COCPI2C_WEBF_WEenable==(MSHSI2COCPI2C_WEBF_WEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_BF_WE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_WE_BF_WE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEBF_WEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_WE_BF_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_BF_WE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEBF_WEGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_WE_BF_WE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_WE_BF_WE_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEBF_WEIsdisable32L(var)\
    (      (MSHSI2COCPI2C_WEBF_WEdisable==(MSHSI2COCPI2C_WEBF_WEE)((((short)(var)) & MSHSI2COCP_I2C_WE_BF_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_BF_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEBF_WEIsdisable32LM(var)\
    (      (MSHSI2COCPI2C_WEBF_WEdisable==(MSHSI2COCPI2C_WEBF_WEE)((((char)(var)) & MSHSI2COCP_I2C_WE_BF_WE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_WE_BF_WE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEBF_WEIsenable32L(var)\
    (      (MSHSI2COCPI2C_WEBF_WEenable==(MSHSI2COCPI2C_WEBF_WEE)((((short)(var)) & MSHSI2COCP_I2C_WE_BF_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_BF_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEBF_WEIsenable32LM(var)\
    (      (MSHSI2COCPI2C_WEBF_WEenable==(MSHSI2COCPI2C_WEBF_WEE)((((char)(var)) & MSHSI2COCP_I2C_WE_BF_WE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_WE_BF_WE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEBF_WEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_WE_BF_WE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_WE_BF_WE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_WE_BF_WE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEBF_WEWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_WE_BF_WE_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_WE_BF_WE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_WE_BF_WE_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEBF_WEWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_WEBF_WEdisable <<\
                               MSHSI2COCP_I2C_WE_BF_WE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_BF_WE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEBF_WEWritedisable32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_WEBF_WEdisable <<\
                               MSHSI2COCP_I2C_WE_BF_WE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_BF_WE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEBF_WEWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_WEBF_WEenable <<\
                               MSHSI2COCP_I2C_WE_BF_WE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_BF_WE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEBF_WEWriteenable32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_WEBF_WEenable <<\
                               MSHSI2COCP_I2C_WE_BF_WE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_BF_WE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEBF_WESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_WE_BF_WE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_WE_BF_WE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_WE_BF_WE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_WEBF_WESet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_WE_BF_WE_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_WE_BF_WE_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_WE_BF_WE_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_WEAAS_WERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_AAS_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_AAS_WE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEAAS_WERead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_AAS_WE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_WE_AAS_WE_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEAAS_WEReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_WEAAS_WEdisable==(MSHSI2COCPI2C_WEAAS_WEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_AAS_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_AAS_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEAAS_WEReadIsdisable32LM(baseAddress)\
    (      (MSHSI2COCPI2C_WEAAS_WEdisable==(MSHSI2COCPI2C_WEAAS_WEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_AAS_WE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_WE_AAS_WE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEAAS_WEReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_WEAAS_WEenable==(MSHSI2COCPI2C_WEAAS_WEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_AAS_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_AAS_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEAAS_WEReadIsenable32LM(baseAddress)\
    (      (MSHSI2COCPI2C_WEAAS_WEenable==(MSHSI2COCPI2C_WEAAS_WEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_AAS_WE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_WE_AAS_WE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEAAS_WEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_WE_AAS_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_AAS_WE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEAAS_WEGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_WE_AAS_WE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_WE_AAS_WE_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEAAS_WEIsdisable32L(var)\
    (      (MSHSI2COCPI2C_WEAAS_WEdisable==(MSHSI2COCPI2C_WEAAS_WEE)((((short)(var)) & MSHSI2COCP_I2C_WE_AAS_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_AAS_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEAAS_WEIsdisable32LM(var)\
    (      (MSHSI2COCPI2C_WEAAS_WEdisable==(MSHSI2COCPI2C_WEAAS_WEE)((((char)(var)) & MSHSI2COCP_I2C_WE_AAS_WE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_WE_AAS_WE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEAAS_WEIsenable32L(var)\
    (      (MSHSI2COCPI2C_WEAAS_WEenable==(MSHSI2COCPI2C_WEAAS_WEE)((((short)(var)) & MSHSI2COCP_I2C_WE_AAS_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_AAS_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEAAS_WEIsenable32LM(var)\
    (      (MSHSI2COCPI2C_WEAAS_WEenable==(MSHSI2COCPI2C_WEAAS_WEE)((((char)(var)) & MSHSI2COCP_I2C_WE_AAS_WE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_WE_AAS_WE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEAAS_WEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_WE_AAS_WE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_WE_AAS_WE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_WE_AAS_WE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEAAS_WEWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_WE_AAS_WE_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_WE_AAS_WE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_WE_AAS_WE_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEAAS_WEWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_WEAAS_WEdisable <<\
                               MSHSI2COCP_I2C_WE_AAS_WE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_AAS_WE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEAAS_WEWritedisable32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_WEAAS_WEdisable <<\
                               MSHSI2COCP_I2C_WE_AAS_WE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_AAS_WE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEAAS_WEWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_WEAAS_WEenable <<\
                               MSHSI2COCP_I2C_WE_AAS_WE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_AAS_WE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEAAS_WEWriteenable32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_WEAAS_WEenable <<\
                               MSHSI2COCP_I2C_WE_AAS_WE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_AAS_WE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEAAS_WESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_WE_AAS_WE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_WE_AAS_WE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_WE_AAS_WE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_WEAAS_WESet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_WE_AAS_WE_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_WE_AAS_WE_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_WE_AAS_WE_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_WERDR_WERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_RDR_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_RDR_WE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WERDR_WERead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_RDR_WE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_WE_RDR_WE_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WERDR_WEReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_WERDR_WEdisable==(MSHSI2COCPI2C_WERDR_WEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_RDR_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_RDR_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WERDR_WEReadIsdisable32LM(baseAddress)\
    (      (MSHSI2COCPI2C_WERDR_WEdisable==(MSHSI2COCPI2C_WERDR_WEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_RDR_WE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_WE_RDR_WE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WERDR_WEReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_WERDR_WEenable==(MSHSI2COCPI2C_WERDR_WEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_RDR_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_RDR_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WERDR_WEReadIsenable32LM(baseAddress)\
    (      (MSHSI2COCPI2C_WERDR_WEenable==(MSHSI2COCPI2C_WERDR_WEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_RDR_WE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_WE_RDR_WE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WERDR_WEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_WE_RDR_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_RDR_WE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WERDR_WEGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_WE_RDR_WE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_WE_RDR_WE_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WERDR_WEIsdisable32L(var)\
    (      (MSHSI2COCPI2C_WERDR_WEdisable==(MSHSI2COCPI2C_WERDR_WEE)((((short)(var)) & MSHSI2COCP_I2C_WE_RDR_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_RDR_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WERDR_WEIsdisable32LM(var)\
    (      (MSHSI2COCPI2C_WERDR_WEdisable==(MSHSI2COCPI2C_WERDR_WEE)((((char)(var)) & MSHSI2COCP_I2C_WE_RDR_WE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_WE_RDR_WE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WERDR_WEIsenable32L(var)\
    (      (MSHSI2COCPI2C_WERDR_WEenable==(MSHSI2COCPI2C_WERDR_WEE)((((short)(var)) & MSHSI2COCP_I2C_WE_RDR_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_RDR_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WERDR_WEIsenable32LM(var)\
    (      (MSHSI2COCPI2C_WERDR_WEenable==(MSHSI2COCPI2C_WERDR_WEE)((((char)(var)) & MSHSI2COCP_I2C_WE_RDR_WE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_WE_RDR_WE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WERDR_WEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_WE_RDR_WE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_WE_RDR_WE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_WE_RDR_WE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WERDR_WEWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_WE_RDR_WE_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_WE_RDR_WE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_WE_RDR_WE_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WERDR_WEWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_WERDR_WEdisable <<\
                               MSHSI2COCP_I2C_WE_RDR_WE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_RDR_WE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WERDR_WEWritedisable32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_WERDR_WEdisable <<\
                               MSHSI2COCP_I2C_WE_RDR_WE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_RDR_WE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WERDR_WEWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_WERDR_WEenable <<\
                               MSHSI2COCP_I2C_WE_RDR_WE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_RDR_WE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WERDR_WEWriteenable32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_WERDR_WEenable <<\
                               MSHSI2COCP_I2C_WE_RDR_WE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_RDR_WE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WERDR_WESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_WE_RDR_WE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_WE_RDR_WE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_WE_RDR_WE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_WERDR_WESet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_WE_RDR_WE_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_WE_RDR_WE_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_WE_RDR_WE_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_WEXDR_WERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_XDR_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_XDR_WE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEXDR_WERead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_XDR_WE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_WE_XDR_WE_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEXDR_WEReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_WEXDR_WEdisable==(MSHSI2COCPI2C_WEXDR_WEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_XDR_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_XDR_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEXDR_WEReadIsdisable32LM(baseAddress)\
    (      (MSHSI2COCPI2C_WEXDR_WEdisable==(MSHSI2COCPI2C_WEXDR_WEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_XDR_WE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_WE_XDR_WE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEXDR_WEReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_WEXDR_WEenable==(MSHSI2COCPI2C_WEXDR_WEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_XDR_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_XDR_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEXDR_WEReadIsenable32LM(baseAddress)\
    (      (MSHSI2COCPI2C_WEXDR_WEenable==(MSHSI2COCPI2C_WEXDR_WEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_WE_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_WE_XDR_WE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_WE_XDR_WE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEXDR_WEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_WE_XDR_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_XDR_WE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEXDR_WEGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_WE_XDR_WE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_WE_XDR_WE_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_WEXDR_WEIsdisable32L(var)\
    (      (MSHSI2COCPI2C_WEXDR_WEdisable==(MSHSI2COCPI2C_WEXDR_WEE)((((short)(var)) & MSHSI2COCP_I2C_WE_XDR_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_XDR_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEXDR_WEIsdisable32LM(var)\
    (      (MSHSI2COCPI2C_WEXDR_WEdisable==(MSHSI2COCPI2C_WEXDR_WEE)((((char)(var)) & MSHSI2COCP_I2C_WE_XDR_WE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_WE_XDR_WE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEXDR_WEIsenable32L(var)\
    (      (MSHSI2COCPI2C_WEXDR_WEenable==(MSHSI2COCPI2C_WEXDR_WEE)((((short)(var)) & MSHSI2COCP_I2C_WE_XDR_WE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_WE_XDR_WE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEXDR_WEIsenable32LM(var)\
    (      (MSHSI2COCPI2C_WEXDR_WEenable==(MSHSI2COCPI2C_WEXDR_WEE)((((char)(var)) & MSHSI2COCP_I2C_WE_XDR_WE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_WE_XDR_WE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_WEXDR_WEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_WE_XDR_WE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_WE_XDR_WE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_WE_XDR_WE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEXDR_WEWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_WE_XDR_WE_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_WE_XDR_WE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_WE_XDR_WE_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEXDR_WEWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_WEXDR_WEdisable <<\
                               MSHSI2COCP_I2C_WE_XDR_WE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_XDR_WE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEXDR_WEWritedisable32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_WEXDR_WEdisable <<\
                               MSHSI2COCP_I2C_WE_XDR_WE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_XDR_WE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEXDR_WEWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_WEXDR_WEenable <<\
                               MSHSI2COCP_I2C_WE_XDR_WE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_XDR_WE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEXDR_WEWriteenable32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_WE_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_WEXDR_WEenable <<\
                               MSHSI2COCP_I2C_WE_XDR_WE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_WE_XDR_WE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_WEXDR_WESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_WE_XDR_WE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_WE_XDR_WE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_WE_XDR_WE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_WEXDR_WESet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_WE_XDR_WE_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_WE_XDR_WE_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_WE_XDR_WE_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSSReadRegister32U(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SYSS_OFFSET +\
      LOWER_WORD_UPPER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSSReadRegister32L(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SYSS_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSSReadRegister32UU(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SYSS_OFFSET +\
      LOWER_WORD_UPPER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSSReadRegister32UM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SYSS_OFFSET +\
      LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSSReadRegister32LM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SYSS_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSSReadRegister32LL(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SYSS_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSSRDONERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSS_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSS_RDONE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSS_RDONE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSSRDONERead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSS_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSS_RDONE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSS_RDONE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSSRDONEReadIsrstongoing32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSSRDONErstongoing==(MSHSI2COCPI2C_SYSSRDONEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSS_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSS_RDONE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSS_RDONE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSSRDONEReadIsrstongoing32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SYSSRDONErstongoing==(MSHSI2COCPI2C_SYSSRDONEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSS_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSS_RDONE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSS_RDONE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSSRDONEReadIsrstcomp32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSSRDONErstcomp==(MSHSI2COCPI2C_SYSSRDONEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSS_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSS_RDONE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSS_RDONE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSSRDONEReadIsrstcomp32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SYSSRDONErstcomp==(MSHSI2COCPI2C_SYSSRDONEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSS_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSS_RDONE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSS_RDONE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSSRDONEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_SYSS_RDONE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSS_RDONE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSSRDONEGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SYSS_RDONE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSS_RDONE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSSRDONEIsrstongoing32L(var)\
    (      (MSHSI2COCPI2C_SYSSRDONErstongoing==(MSHSI2COCPI2C_SYSSRDONEE)((((short)(var)) & MSHSI2COCP_I2C_SYSS_RDONE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSS_RDONE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSSRDONEIsrstongoing32LL(var)\
    (      (MSHSI2COCPI2C_SYSSRDONErstongoing==(MSHSI2COCPI2C_SYSSRDONEE)((((char)(var)) & MSHSI2COCP_I2C_SYSS_RDONE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSS_RDONE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSSRDONEIsrstcomp32L(var)\
    (      (MSHSI2COCPI2C_SYSSRDONErstcomp==(MSHSI2COCPI2C_SYSSRDONEE)((((short)(var)) & MSHSI2COCP_I2C_SYSS_RDONE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSS_RDONE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSSRDONEIsrstcomp32LL(var)\
    (      (MSHSI2COCPI2C_SYSSRDONErstcomp==(MSHSI2COCPI2C_SYSSRDONEE)((((char)(var)) & MSHSI2COCP_I2C_SYSS_RDONE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSS_RDONE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFReadRegister32U(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_UPPER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFReadRegister32L(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFReadRegister32UU(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_UPPER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFReadRegister32UM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFReadRegister32LM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFReadRegister32LL(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFWriteRegister32U(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_UPPER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFWriteRegister32L(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFWriteRegister32UU(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_UPPER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFWriteRegister32UM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFWriteRegister32LM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFWriteRegister32LL(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFXTRSHRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_XTRSH_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_XTRSH_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFXTRSHRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_XTRSH_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_XTRSH_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFXTRSHGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_BUF_XTRSH_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_XTRSH_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFXTRSHGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_BUF_XTRSH_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_XTRSH_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFXTRSHWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_BUF_XTRSH_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_BUF_XTRSH_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_BUF_XTRSH_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFXTRSHWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_BUF_XTRSH_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_BUF_XTRSH_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_BUF_XTRSH_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFXTRSHSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_BUF_XTRSH_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_BUF_XTRSH_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_BUF_XTRSH_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFXTRSHSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_BUF_XTRSH_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_BUF_XTRSH_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_BUF_XTRSH_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFTXFIFO_CLRRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFTXFIFO_CLRRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFTXFIFO_CLRReadIsnmode32L(baseAddress)\
    (      (MSHSI2COCPI2C_BUFTXFIFO_CLRnmode==(MSHSI2COCPI2C_BUFTXFIFO_CLRE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFTXFIFO_CLRReadIsnmode32LL(baseAddress)\
    (      (MSHSI2COCPI2C_BUFTXFIFO_CLRnmode==(MSHSI2COCPI2C_BUFTXFIFO_CLRE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFTXFIFO_CLRReadIsrstmode32L(baseAddress)\
    (      (MSHSI2COCPI2C_BUFTXFIFO_CLRrstmode==(MSHSI2COCPI2C_BUFTXFIFO_CLRE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFTXFIFO_CLRReadIsrstmode32LL(baseAddress)\
    (      (MSHSI2COCPI2C_BUFTXFIFO_CLRrstmode==(MSHSI2COCPI2C_BUFTXFIFO_CLRE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFTXFIFO_CLRGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFTXFIFO_CLRGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFTXFIFO_CLRIsnmode32L(var)\
    (      (MSHSI2COCPI2C_BUFTXFIFO_CLRnmode==(MSHSI2COCPI2C_BUFTXFIFO_CLRE)((((short)(var)) & MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFTXFIFO_CLRIsnmode32LL(var)\
    (      (MSHSI2COCPI2C_BUFTXFIFO_CLRnmode==(MSHSI2COCPI2C_BUFTXFIFO_CLRE)((((char)(var)) & MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFTXFIFO_CLRIsrstmode32L(var)\
    (      (MSHSI2COCPI2C_BUFTXFIFO_CLRrstmode==(MSHSI2COCPI2C_BUFTXFIFO_CLRE)((((short)(var)) & MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFTXFIFO_CLRIsrstmode32LL(var)\
    (      (MSHSI2COCPI2C_BUFTXFIFO_CLRrstmode==(MSHSI2COCPI2C_BUFTXFIFO_CLRE)((((char)(var)) & MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFTXFIFO_CLRWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFTXFIFO_CLRWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFTXFIFO_CLRWritenmode32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_BUFTXFIFO_CLRnmode <<\
                               MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFTXFIFO_CLRWritenmode32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_BUFTXFIFO_CLRnmode <<\
                               MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFTXFIFO_CLRWriterstmode32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_BUFTXFIFO_CLRrstmode <<\
                               MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFTXFIFO_CLRWriterstmode32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_BUFTXFIFO_CLRrstmode <<\
                               MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFTXFIFO_CLRSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFTXFIFO_CLRSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_BUF_TXFIFO_CLR_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFXDMA_ENRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_XDMA_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_XDMA_EN_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFXDMA_ENRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_XDMA_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_XDMA_EN_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFXDMA_ENReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_BUFXDMA_ENdisable==(MSHSI2COCPI2C_BUFXDMA_ENE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_XDMA_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_XDMA_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFXDMA_ENReadIsdisable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_BUFXDMA_ENdisable==(MSHSI2COCPI2C_BUFXDMA_ENE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_XDMA_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_XDMA_EN_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFXDMA_ENReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_BUFXDMA_ENenable==(MSHSI2COCPI2C_BUFXDMA_ENE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_XDMA_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_XDMA_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFXDMA_ENReadIsenable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_BUFXDMA_ENenable==(MSHSI2COCPI2C_BUFXDMA_ENE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_XDMA_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_XDMA_EN_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFXDMA_ENGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_BUF_XDMA_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_XDMA_EN_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFXDMA_ENGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_BUF_XDMA_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_XDMA_EN_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFXDMA_ENIsdisable32L(var)\
    (      (MSHSI2COCPI2C_BUFXDMA_ENdisable==(MSHSI2COCPI2C_BUFXDMA_ENE)((((short)(var)) & MSHSI2COCP_I2C_BUF_XDMA_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_XDMA_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFXDMA_ENIsdisable32LL(var)\
    (      (MSHSI2COCPI2C_BUFXDMA_ENdisable==(MSHSI2COCPI2C_BUFXDMA_ENE)((((char)(var)) & MSHSI2COCP_I2C_BUF_XDMA_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_XDMA_EN_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFXDMA_ENIsenable32L(var)\
    (      (MSHSI2COCPI2C_BUFXDMA_ENenable==(MSHSI2COCPI2C_BUFXDMA_ENE)((((short)(var)) & MSHSI2COCP_I2C_BUF_XDMA_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_XDMA_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFXDMA_ENIsenable32LL(var)\
    (      (MSHSI2COCPI2C_BUFXDMA_ENenable==(MSHSI2COCPI2C_BUFXDMA_ENE)((((char)(var)) & MSHSI2COCP_I2C_BUF_XDMA_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_XDMA_EN_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFXDMA_ENWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_BUF_XDMA_EN_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_BUF_XDMA_EN_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_BUF_XDMA_EN_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFXDMA_ENWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_BUF_XDMA_EN_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_BUF_XDMA_EN_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_BUF_XDMA_EN_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFXDMA_ENWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_BUFXDMA_ENdisable <<\
                               MSHSI2COCP_I2C_BUF_XDMA_EN_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_BUF_XDMA_EN_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFXDMA_ENWritedisable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_BUFXDMA_ENdisable <<\
                               MSHSI2COCP_I2C_BUF_XDMA_EN_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_BUF_XDMA_EN_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFXDMA_ENWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_BUFXDMA_ENenable <<\
                               MSHSI2COCP_I2C_BUF_XDMA_EN_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_BUF_XDMA_EN_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFXDMA_ENWriteenable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_BUFXDMA_ENenable <<\
                               MSHSI2COCP_I2C_BUF_XDMA_EN_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_BUF_XDMA_EN_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFXDMA_ENSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_BUF_XDMA_EN_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_BUF_XDMA_EN_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_BUF_XDMA_EN_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFXDMA_ENSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_BUF_XDMA_EN_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_BUF_XDMA_EN_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_BUF_XDMA_EN_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRTRSHRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_RTRSH_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_RTRSH_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRTRSHRead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_RTRSH_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_RTRSH_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRTRSHGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_BUF_RTRSH_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_RTRSH_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRTRSHGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_BUF_RTRSH_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_RTRSH_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRTRSHWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_BUF_RTRSH_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_BUF_RTRSH_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_BUF_RTRSH_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFRTRSHWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_BUF_RTRSH_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_BUF_RTRSH_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_BUF_RTRSH_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFRTRSHSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_BUF_RTRSH_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_BUF_RTRSH_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_BUF_RTRSH_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRTRSHSet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_BUF_RTRSH_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_BUF_RTRSH_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_BUF_RTRSH_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRXFIFO_CLRRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRXFIFO_CLRRead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRXFIFO_CLRReadIsnmode32L(baseAddress)\
    (      (MSHSI2COCPI2C_BUFRXFIFO_CLRnmode==(MSHSI2COCPI2C_BUFRXFIFO_CLRE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRXFIFO_CLRReadIsnmode32LM(baseAddress)\
    (      (MSHSI2COCPI2C_BUFRXFIFO_CLRnmode==(MSHSI2COCPI2C_BUFRXFIFO_CLRE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRXFIFO_CLRReadIsrstmode32L(baseAddress)\
    (      (MSHSI2COCPI2C_BUFRXFIFO_CLRrstmode==(MSHSI2COCPI2C_BUFRXFIFO_CLRE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRXFIFO_CLRReadIsrstmode32LM(baseAddress)\
    (      (MSHSI2COCPI2C_BUFRXFIFO_CLRrstmode==(MSHSI2COCPI2C_BUFRXFIFO_CLRE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRXFIFO_CLRGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRXFIFO_CLRGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRXFIFO_CLRIsnmode32L(var)\
    (      (MSHSI2COCPI2C_BUFRXFIFO_CLRnmode==(MSHSI2COCPI2C_BUFRXFIFO_CLRE)((((short)(var)) & MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRXFIFO_CLRIsnmode32LM(var)\
    (      (MSHSI2COCPI2C_BUFRXFIFO_CLRnmode==(MSHSI2COCPI2C_BUFRXFIFO_CLRE)((((char)(var)) & MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRXFIFO_CLRIsrstmode32L(var)\
    (      (MSHSI2COCPI2C_BUFRXFIFO_CLRrstmode==(MSHSI2COCPI2C_BUFRXFIFO_CLRE)((((short)(var)) & MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRXFIFO_CLRIsrstmode32LM(var)\
    (      (MSHSI2COCPI2C_BUFRXFIFO_CLRrstmode==(MSHSI2COCPI2C_BUFRXFIFO_CLRE)((((char)(var)) & MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRXFIFO_CLRWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFRXFIFO_CLRWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFRXFIFO_CLRWritenmode32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_BUFRXFIFO_CLRnmode <<\
                               MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFRXFIFO_CLRWritenmode32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_BUFRXFIFO_CLRnmode <<\
                               MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFRXFIFO_CLRWriterstmode32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_BUFRXFIFO_CLRrstmode <<\
                               MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFRXFIFO_CLRWriterstmode32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_BUFRXFIFO_CLRrstmode <<\
                               MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFRXFIFO_CLRSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRXFIFO_CLRSet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_BUF_RXFIFO_CLR_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRDMA_ENRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_RDMA_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_RDMA_EN_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRDMA_ENRead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_RDMA_EN_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_RDMA_EN_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRDMA_ENReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_BUFRDMA_ENdisable==(MSHSI2COCPI2C_BUFRDMA_ENE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_RDMA_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_RDMA_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRDMA_ENReadIsdisable32LM(baseAddress)\
    (      (MSHSI2COCPI2C_BUFRDMA_ENdisable==(MSHSI2COCPI2C_BUFRDMA_ENE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_RDMA_EN_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_RDMA_EN_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRDMA_ENReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_BUFRDMA_ENenable==(MSHSI2COCPI2C_BUFRDMA_ENE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_RDMA_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_RDMA_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRDMA_ENReadIsenable32LM(baseAddress)\
    (      (MSHSI2COCPI2C_BUFRDMA_ENenable==(MSHSI2COCPI2C_BUFRDMA_ENE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUF_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUF_RDMA_EN_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_RDMA_EN_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRDMA_ENGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_BUF_RDMA_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_RDMA_EN_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRDMA_ENGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_BUF_RDMA_EN_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_RDMA_EN_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRDMA_ENIsdisable32L(var)\
    (      (MSHSI2COCPI2C_BUFRDMA_ENdisable==(MSHSI2COCPI2C_BUFRDMA_ENE)((((short)(var)) & MSHSI2COCP_I2C_BUF_RDMA_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_RDMA_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRDMA_ENIsdisable32LM(var)\
    (      (MSHSI2COCPI2C_BUFRDMA_ENdisable==(MSHSI2COCPI2C_BUFRDMA_ENE)((((char)(var)) & MSHSI2COCP_I2C_BUF_RDMA_EN_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_RDMA_EN_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRDMA_ENIsenable32L(var)\
    (      (MSHSI2COCPI2C_BUFRDMA_ENenable==(MSHSI2COCPI2C_BUFRDMA_ENE)((((short)(var)) & MSHSI2COCP_I2C_BUF_RDMA_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUF_RDMA_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRDMA_ENIsenable32LM(var)\
    (      (MSHSI2COCPI2C_BUFRDMA_ENenable==(MSHSI2COCPI2C_BUFRDMA_ENE)((((char)(var)) & MSHSI2COCP_I2C_BUF_RDMA_EN_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUF_RDMA_EN_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRDMA_ENWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_BUF_RDMA_EN_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_BUF_RDMA_EN_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_BUF_RDMA_EN_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFRDMA_ENWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_BUF_RDMA_EN_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_BUF_RDMA_EN_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_BUF_RDMA_EN_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFRDMA_ENWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_BUFRDMA_ENdisable <<\
                               MSHSI2COCP_I2C_BUF_RDMA_EN_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_BUF_RDMA_EN_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFRDMA_ENWritedisable32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_BUFRDMA_ENdisable <<\
                               MSHSI2COCP_I2C_BUF_RDMA_EN_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_BUF_RDMA_EN_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFRDMA_ENWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_BUFRDMA_ENenable <<\
                               MSHSI2COCP_I2C_BUF_RDMA_EN_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_BUF_RDMA_EN_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFRDMA_ENWriteenable32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_BUF_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_BUFRDMA_ENenable <<\
                               MSHSI2COCP_I2C_BUF_RDMA_EN_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_BUF_RDMA_EN_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_BUFRDMA_ENSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_BUF_RDMA_EN_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_BUF_RDMA_EN_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_BUF_RDMA_EN_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFRDMA_ENSet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_BUF_RDMA_EN_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_BUF_RDMA_EN_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_BUF_RDMA_EN_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CNTReadRegister32U(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_CNT_OFFSET +\
      LOWER_WORD_UPPER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CNTReadRegister32L(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_CNT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CNTReadRegister32UU(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_CNT_OFFSET +\
      LOWER_WORD_UPPER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CNTReadRegister32UM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_CNT_OFFSET +\
      LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CNTReadRegister32LM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_CNT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CNTReadRegister32LL(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_CNT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CNTWriteRegister32U(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_CNT_OFFSET +\
                             LOWER_WORD_UPPER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CNTWriteRegister32L(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_CNT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CNTWriteRegister32UU(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_CNT_OFFSET +\
                             LOWER_WORD_UPPER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CNTWriteRegister32UM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_CNT_OFFSET +\
                             LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CNTWriteRegister32LM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_CNT_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CNTWriteRegister32LL(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_CNT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CNTDCOUNTRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CNT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CNT_DCOUNT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CNT_DCOUNT_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CNTDCOUNTRead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CNT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CNT_DCOUNT_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CNT_DCOUNT_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CNTDCOUNTRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CNT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CNT_DCOUNT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CNT_DCOUNT_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CNTDCOUNTGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_CNT_DCOUNT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CNT_DCOUNT_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CNTDCOUNTGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_CNT_DCOUNT_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CNT_DCOUNT_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CNTDCOUNTGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_CNT_DCOUNT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CNT_DCOUNT_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CNTDCOUNTWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CNT_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_CNT_DCOUNT_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_CNT_DCOUNT_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CNT_DCOUNT_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CNTDCOUNTWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CNT_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_CNT_DCOUNT_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_CNT_DCOUNT_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CNT_DCOUNT_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CNTDCOUNTWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CNT_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_CNT_DCOUNT_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_CNT_DCOUNT_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CNT_DCOUNT_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CNTDCOUNTSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_CNT_DCOUNT_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_CNT_DCOUNT_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_CNT_DCOUNT_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CNTDCOUNTSet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_CNT_DCOUNT_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_CNT_DCOUNT_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_CNT_DCOUNT_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CNTDCOUNTSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_CNT_DCOUNT_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_CNT_DCOUNT_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_CNT_DCOUNT_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_DATAReadRegister32U(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_DATA_OFFSET +\
      LOWER_WORD_UPPER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_DATAReadRegister32L(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_DATA_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_DATAReadRegister32UU(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_DATA_OFFSET +\
      LOWER_WORD_UPPER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_DATAReadRegister32UM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_DATA_OFFSET +\
      LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_DATAReadRegister32LM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_DATA_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_DATAReadRegister32LL(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_DATA_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_DATAWriteRegister32U(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_DATA_OFFSET +\
                             LOWER_WORD_UPPER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_DATAWriteRegister32L(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_DATA_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_DATAWriteRegister32UU(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_DATA_OFFSET +\
                             LOWER_WORD_UPPER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_DATAWriteRegister32UM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_DATA_OFFSET +\
                             LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_DATAWriteRegister32LM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_DATA_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_DATAWriteRegister32LL(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_DATA_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_DATADATARead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_DATA_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_DATA_DATA_LO_16_MASK) >> \
      MSHSI2COCP_I2C_DATA_DATA_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_DATADATARead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_DATA_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_DATA_DATA_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_DATA_DATA_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_DATADATAGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_DATA_DATA_LO_16_MASK) >> \
      MSHSI2COCP_I2C_DATA_DATA_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_DATADATAGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_DATA_DATA_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_DATA_DATA_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_DATADATAWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_DATA_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    newValue <<= MSHSI2COCP_I2C_DATA_DATA_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_DATA_DATA_LO_16_MASK;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_DATADATAWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_DATA_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    newValue <<= MSHSI2COCP_I2C_DATA_DATA_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_DATA_DATA_LO_WORD_LO_8_MASK;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_DATADATASet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_DATA_DATA_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_DATA_DATA_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_DATA_DATA_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_DATADATASet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_DATA_DATA_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_DATA_DATA_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_DATA_DATA_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCReadRegister32U(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_UPPER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCReadRegister32L(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCReadRegister32UU(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_UPPER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCReadRegister32UM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCReadRegister32LM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCReadRegister32LL(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCWriteRegister32U(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_UPPER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCWriteRegister32L(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCWriteRegister32UU(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_UPPER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCWriteRegister32UM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCWriteRegister32LM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCWriteRegister32LL(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCAUTOIDLERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCAUTOIDLERead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCAUTOIDLEReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCAUTOIDLEdisable==(MSHSI2COCPI2C_SYSCAUTOIDLEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCAUTOIDLEReadIsdisable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCAUTOIDLEdisable==(MSHSI2COCPI2C_SYSCAUTOIDLEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCAUTOIDLEReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCAUTOIDLEenable==(MSHSI2COCPI2C_SYSCAUTOIDLEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCAUTOIDLEReadIsenable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCAUTOIDLEenable==(MSHSI2COCPI2C_SYSCAUTOIDLEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCAUTOIDLEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCAUTOIDLEGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCAUTOIDLEIsdisable32L(var)\
    (      (MSHSI2COCPI2C_SYSCAUTOIDLEdisable==(MSHSI2COCPI2C_SYSCAUTOIDLEE)((((short)(var)) & MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCAUTOIDLEIsdisable32LL(var)\
    (      (MSHSI2COCPI2C_SYSCAUTOIDLEdisable==(MSHSI2COCPI2C_SYSCAUTOIDLEE)((((char)(var)) & MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCAUTOIDLEIsenable32L(var)\
    (      (MSHSI2COCPI2C_SYSCAUTOIDLEenable==(MSHSI2COCPI2C_SYSCAUTOIDLEE)((((short)(var)) & MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCAUTOIDLEIsenable32LL(var)\
    (      (MSHSI2COCPI2C_SYSCAUTOIDLEenable==(MSHSI2COCPI2C_SYSCAUTOIDLEE)((((char)(var)) & MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCAUTOIDLEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCAUTOIDLEWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCAUTOIDLEWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSCAUTOIDLEdisable <<\
                               MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCAUTOIDLEWritedisable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSCAUTOIDLEdisable <<\
                               MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCAUTOIDLEWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSCAUTOIDLEenable <<\
                               MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCAUTOIDLEWriteenable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSCAUTOIDLEenable <<\
                               MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCAUTOIDLESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCAUTOIDLESet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_SYSC_AUTOIDLE_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCSRSTRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_SRST_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_SRST_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCSRSTRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_SRST_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_SRST_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCSRSTReadIsnmode32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCSRSTnmode==(MSHSI2COCPI2C_SYSCSRSTE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_SRST_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_SRST_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCSRSTReadIsnmode32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCSRSTnmode==(MSHSI2COCPI2C_SYSCSRSTE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_SRST_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_SRST_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCSRSTReadIsrstmode32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCSRSTrstmode==(MSHSI2COCPI2C_SYSCSRSTE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_SRST_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_SRST_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCSRSTReadIsrstmode32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCSRSTrstmode==(MSHSI2COCPI2C_SYSCSRSTE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_SRST_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_SRST_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCSRSTGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_SYSC_SRST_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_SRST_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCSRSTGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SYSC_SRST_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_SRST_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCSRSTIsnmode32L(var)\
    (      (MSHSI2COCPI2C_SYSCSRSTnmode==(MSHSI2COCPI2C_SYSCSRSTE)((((short)(var)) & MSHSI2COCP_I2C_SYSC_SRST_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_SRST_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCSRSTIsnmode32LL(var)\
    (      (MSHSI2COCPI2C_SYSCSRSTnmode==(MSHSI2COCPI2C_SYSCSRSTE)((((char)(var)) & MSHSI2COCP_I2C_SYSC_SRST_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_SRST_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCSRSTIsrstmode32L(var)\
    (      (MSHSI2COCPI2C_SYSCSRSTrstmode==(MSHSI2COCPI2C_SYSCSRSTE)((((short)(var)) & MSHSI2COCP_I2C_SYSC_SRST_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_SRST_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCSRSTIsrstmode32LL(var)\
    (      (MSHSI2COCPI2C_SYSCSRSTrstmode==(MSHSI2COCPI2C_SYSCSRSTE)((((char)(var)) & MSHSI2COCP_I2C_SYSC_SRST_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_SRST_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCSRSTWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSC_SRST_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSC_SRST_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSC_SRST_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCSRSTWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSC_SRST_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSC_SRST_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSC_SRST_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCSRSTWritenmode32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSCSRSTnmode <<\
                               MSHSI2COCP_I2C_SYSC_SRST_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_SRST_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCSRSTWritenmode32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSCSRSTnmode <<\
                               MSHSI2COCP_I2C_SYSC_SRST_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_SRST_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCSRSTWriterstmode32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSCSRSTrstmode <<\
                               MSHSI2COCP_I2C_SYSC_SRST_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_SRST_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCSRSTWriterstmode32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSCSRSTrstmode <<\
                               MSHSI2COCP_I2C_SYSC_SRST_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_SRST_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCSRSTSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_SYSC_SRST_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_SYSC_SRST_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_SYSC_SRST_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCSRSTSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_SYSC_SRST_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_SYSC_SRST_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_SYSC_SRST_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCENAWAKEUPRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCENAWAKEUPRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCENAWAKEUPReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCENAWAKEUPdisable==(MSHSI2COCPI2C_SYSCENAWAKEUPE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCENAWAKEUPReadIsdisable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCENAWAKEUPdisable==(MSHSI2COCPI2C_SYSCENAWAKEUPE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCENAWAKEUPReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCENAWAKEUPenable==(MSHSI2COCPI2C_SYSCENAWAKEUPE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCENAWAKEUPReadIsenable32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCENAWAKEUPenable==(MSHSI2COCPI2C_SYSCENAWAKEUPE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCENAWAKEUPGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCENAWAKEUPGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCENAWAKEUPIsdisable32L(var)\
    (      (MSHSI2COCPI2C_SYSCENAWAKEUPdisable==(MSHSI2COCPI2C_SYSCENAWAKEUPE)((((short)(var)) & MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCENAWAKEUPIsdisable32LL(var)\
    (      (MSHSI2COCPI2C_SYSCENAWAKEUPdisable==(MSHSI2COCPI2C_SYSCENAWAKEUPE)((((char)(var)) & MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCENAWAKEUPIsenable32L(var)\
    (      (MSHSI2COCPI2C_SYSCENAWAKEUPenable==(MSHSI2COCPI2C_SYSCENAWAKEUPE)((((short)(var)) & MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCENAWAKEUPIsenable32LL(var)\
    (      (MSHSI2COCPI2C_SYSCENAWAKEUPenable==(MSHSI2COCPI2C_SYSCENAWAKEUPE)((((char)(var)) & MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCENAWAKEUPWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCENAWAKEUPWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCENAWAKEUPWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSCENAWAKEUPdisable <<\
                               MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCENAWAKEUPWritedisable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSCENAWAKEUPdisable <<\
                               MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCENAWAKEUPWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSCENAWAKEUPenable <<\
                               MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCENAWAKEUPWriteenable32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSCENAWAKEUPenable <<\
                               MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCENAWAKEUPSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCENAWAKEUPSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_SYSC_ENAWAKEUP_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODERead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEReadIsforceidle32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCIDLEMODEforceidle==(MSHSI2COCPI2C_SYSCIDLEMODEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEReadIsforceidle32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCIDLEMODEforceidle==(MSHSI2COCPI2C_SYSCIDLEMODEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEReadIsnoidle32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCIDLEMODEnoidle==(MSHSI2COCPI2C_SYSCIDLEMODEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEReadIsnoidle32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCIDLEMODEnoidle==(MSHSI2COCPI2C_SYSCIDLEMODEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEReadIssmartidle32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCIDLEMODEsmartidle==(MSHSI2COCPI2C_SYSCIDLEMODEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEReadIssmartidle32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCIDLEMODEsmartidle==(MSHSI2COCPI2C_SYSCIDLEMODEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEReadIsreserved32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCIDLEMODEreserved==(MSHSI2COCPI2C_SYSCIDLEMODEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEReadIsreserved32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCIDLEMODEreserved==(MSHSI2COCPI2C_SYSCIDLEMODEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEIsforceidle32L(var)\
    (      (MSHSI2COCPI2C_SYSCIDLEMODEforceidle==(MSHSI2COCPI2C_SYSCIDLEMODEE)((((short)(var)) & MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEIsforceidle32LL(var)\
    (      (MSHSI2COCPI2C_SYSCIDLEMODEforceidle==(MSHSI2COCPI2C_SYSCIDLEMODEE)((((char)(var)) & MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEIsnoidle32L(var)\
    (      (MSHSI2COCPI2C_SYSCIDLEMODEnoidle==(MSHSI2COCPI2C_SYSCIDLEMODEE)((((short)(var)) & MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEIsnoidle32LL(var)\
    (      (MSHSI2COCPI2C_SYSCIDLEMODEnoidle==(MSHSI2COCPI2C_SYSCIDLEMODEE)((((char)(var)) & MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEIssmartidle32L(var)\
    (      (MSHSI2COCPI2C_SYSCIDLEMODEsmartidle==(MSHSI2COCPI2C_SYSCIDLEMODEE)((((short)(var)) & MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEIssmartidle32LL(var)\
    (      (MSHSI2COCPI2C_SYSCIDLEMODEsmartidle==(MSHSI2COCPI2C_SYSCIDLEMODEE)((((char)(var)) & MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEIsreserved32L(var)\
    (      (MSHSI2COCPI2C_SYSCIDLEMODEreserved==(MSHSI2COCPI2C_SYSCIDLEMODEE)((((short)(var)) & MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEIsreserved32LL(var)\
    (      (MSHSI2COCPI2C_SYSCIDLEMODEreserved==(MSHSI2COCPI2C_SYSCIDLEMODEE)((((char)(var)) & MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEWriteforceidle32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSCIDLEMODEforceidle <<\
                               MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEWriteforceidle32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSCIDLEMODEforceidle <<\
                               MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEWritenoidle32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSCIDLEMODEnoidle <<\
                               MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEWritenoidle32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSCIDLEMODEnoidle <<\
                               MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEWritesmartidle32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSCIDLEMODEsmartidle <<\
                               MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEWritesmartidle32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSCIDLEMODEsmartidle <<\
                               MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEWritereserved32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSCIDLEMODEreserved <<\
                               MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODEWritereserved32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSCIDLEMODEreserved <<\
                               MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCIDLEMODESet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_SYSC_IDLEMODE_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYRead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYReadIsboothoff32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYboothoff==(MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYReadIsboothoff32LM(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYboothoff==(MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYReadIsocpon32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYocpon==(MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYReadIsocpon32LM(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYocpon==(MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYReadIssyson32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYsyson==(MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYReadIssyson32LM(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYsyson==(MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYReadIsboothon32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYboothon==(MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYReadIsboothon32LM(baseAddress)\
    (      (MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYboothon==(MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSC_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYIsboothoff32L(var)\
    (      (MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYboothoff==(MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYE)((((short)(var)) & MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYIsboothoff32LM(var)\
    (      (MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYboothoff==(MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYE)((((char)(var)) & MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYIsocpon32L(var)\
    (      (MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYocpon==(MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYE)((((short)(var)) & MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYIsocpon32LM(var)\
    (      (MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYocpon==(MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYE)((((char)(var)) & MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYIssyson32L(var)\
    (      (MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYsyson==(MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYE)((((short)(var)) & MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYIssyson32LM(var)\
    (      (MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYsyson==(MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYE)((((char)(var)) & MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYIsboothon32L(var)\
    (      (MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYboothon==(MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYE)((((short)(var)) & MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYIsboothon32LM(var)\
    (      (MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYboothon==(MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYE)((((char)(var)) & MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYWriteboothoff32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYboothoff <<\
                               MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYWriteboothoff32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYboothoff <<\
                               MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYWriteocpon32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYocpon <<\
                               MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYWriteocpon32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYocpon <<\
                               MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYWritesyson32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYsyson <<\
                               MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYWritesyson32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYsyson <<\
                               MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYWriteboothon32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYboothon <<\
                               MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYWriteboothon32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSC_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYboothon <<\
                               MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSCCLOCK_ACTIVITYSet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_SYSC_CLOCK_ACTIVITY_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CONReadRegister32U(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_UPPER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONReadRegister32L(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONReadRegister32UU(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_UPPER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONReadRegister32UM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONReadRegister32LM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONReadRegister32LL(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONWriteRegister32U(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_UPPER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONWriteRegister32L(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONWriteRegister32UU(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_UPPER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONWriteRegister32UM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONWriteRegister32LM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONWriteRegister32LL(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONSTTRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_STT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_STT_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTTRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_STT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_STT_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTTReadIsnstt32L(baseAddress)\
    (      (MSHSI2COCPI2C_CONSTTnstt==(MSHSI2COCPI2C_CONSTTE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_STT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_STT_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTTReadIsnstt32LL(baseAddress)\
    (      (MSHSI2COCPI2C_CONSTTnstt==(MSHSI2COCPI2C_CONSTTE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_STT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_STT_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTTReadIsstt32L(baseAddress)\
    (      (MSHSI2COCPI2C_CONSTTstt==(MSHSI2COCPI2C_CONSTTE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_STT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_STT_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTTReadIsstt32LL(baseAddress)\
    (      (MSHSI2COCPI2C_CONSTTstt==(MSHSI2COCPI2C_CONSTTE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_STT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_STT_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTTGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_CON_STT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_STT_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTTGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_CON_STT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_STT_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTTIsnstt32L(var)\
    (      (MSHSI2COCPI2C_CONSTTnstt==(MSHSI2COCPI2C_CONSTTE)((((short)(var)) & MSHSI2COCP_I2C_CON_STT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_STT_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTTIsnstt32LL(var)\
    (      (MSHSI2COCPI2C_CONSTTnstt==(MSHSI2COCPI2C_CONSTTE)((((char)(var)) & MSHSI2COCP_I2C_CON_STT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_STT_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTTIsstt32L(var)\
    (      (MSHSI2COCPI2C_CONSTTstt==(MSHSI2COCPI2C_CONSTTE)((((short)(var)) & MSHSI2COCP_I2C_CON_STT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_STT_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTTIsstt32LL(var)\
    (      (MSHSI2COCPI2C_CONSTTstt==(MSHSI2COCPI2C_CONSTTE)((((char)(var)) & MSHSI2COCP_I2C_CON_STT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_STT_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTTWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_CON_STT_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_CON_STT_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CON_STT_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONSTTWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_CON_STT_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_CON_STT_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CON_STT_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONSTTWritenstt32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONSTTnstt <<\
                               MSHSI2COCP_I2C_CON_STT_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_STT_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONSTTWritenstt32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONSTTnstt <<\
                               MSHSI2COCP_I2C_CON_STT_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_STT_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONSTTWritestt32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONSTTstt <<\
                               MSHSI2COCP_I2C_CON_STT_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_STT_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONSTTWritestt32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONSTTstt <<\
                               MSHSI2COCP_I2C_CON_STT_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_STT_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONSTTSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_CON_STT_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_CON_STT_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_CON_STT_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTTSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_CON_STT_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_CON_STT_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_CON_STT_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTPRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_STP_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_STP_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTPRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_STP_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_STP_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTPReadIsnstp32L(baseAddress)\
    (      (MSHSI2COCPI2C_CONSTPnstp==(MSHSI2COCPI2C_CONSTPE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_STP_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_STP_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTPReadIsnstp32LL(baseAddress)\
    (      (MSHSI2COCPI2C_CONSTPnstp==(MSHSI2COCPI2C_CONSTPE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_STP_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_STP_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTPReadIsstp32L(baseAddress)\
    (      (MSHSI2COCPI2C_CONSTPstp==(MSHSI2COCPI2C_CONSTPE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_STP_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_STP_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTPReadIsstp32LL(baseAddress)\
    (      (MSHSI2COCPI2C_CONSTPstp==(MSHSI2COCPI2C_CONSTPE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_STP_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_STP_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTPGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_CON_STP_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_STP_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTPGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_CON_STP_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_STP_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTPIsnstp32L(var)\
    (      (MSHSI2COCPI2C_CONSTPnstp==(MSHSI2COCPI2C_CONSTPE)((((short)(var)) & MSHSI2COCP_I2C_CON_STP_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_STP_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTPIsnstp32LL(var)\
    (      (MSHSI2COCPI2C_CONSTPnstp==(MSHSI2COCPI2C_CONSTPE)((((char)(var)) & MSHSI2COCP_I2C_CON_STP_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_STP_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTPIsstp32L(var)\
    (      (MSHSI2COCPI2C_CONSTPstp==(MSHSI2COCPI2C_CONSTPE)((((short)(var)) & MSHSI2COCP_I2C_CON_STP_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_STP_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTPIsstp32LL(var)\
    (      (MSHSI2COCPI2C_CONSTPstp==(MSHSI2COCPI2C_CONSTPE)((((char)(var)) & MSHSI2COCP_I2C_CON_STP_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_STP_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTPWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_CON_STP_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_CON_STP_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CON_STP_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONSTPWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_CON_STP_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_CON_STP_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CON_STP_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONSTPWritenstp32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONSTPnstp <<\
                               MSHSI2COCP_I2C_CON_STP_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_STP_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONSTPWritenstp32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONSTPnstp <<\
                               MSHSI2COCP_I2C_CON_STP_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_STP_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONSTPWritestp32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONSTPstp <<\
                               MSHSI2COCP_I2C_CON_STP_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_STP_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONSTPWritestp32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONSTPstp <<\
                               MSHSI2COCP_I2C_CON_STP_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_STP_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONSTPSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_CON_STP_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_CON_STP_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_CON_STP_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTPSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_CON_STP_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_CON_STP_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_CON_STP_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA3Read32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XOA3_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA3_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA3Read32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XOA3_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA3_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA3ReadIsb0732L(baseAddress)\
    (      (MSHSI2COCPI2C_CONXOA3b07==(MSHSI2COCPI2C_CONXOA3E)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XOA3_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA3_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA3ReadIsb0732LL(baseAddress)\
    (      (MSHSI2COCPI2C_CONXOA3b07==(MSHSI2COCPI2C_CONXOA3E)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XOA3_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA3_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA3ReadIsb1032L(baseAddress)\
    (      (MSHSI2COCPI2C_CONXOA3b10==(MSHSI2COCPI2C_CONXOA3E)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XOA3_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA3_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA3ReadIsb1032LL(baseAddress)\
    (      (MSHSI2COCPI2C_CONXOA3b10==(MSHSI2COCPI2C_CONXOA3E)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XOA3_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA3_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA3Get32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_CON_XOA3_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA3_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA3Get32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_CON_XOA3_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA3_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA3Isb0732L(var)\
    (      (MSHSI2COCPI2C_CONXOA3b07==(MSHSI2COCPI2C_CONXOA3E)((((short)(var)) & MSHSI2COCP_I2C_CON_XOA3_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA3_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA3Isb0732LL(var)\
    (      (MSHSI2COCPI2C_CONXOA3b07==(MSHSI2COCPI2C_CONXOA3E)((((char)(var)) & MSHSI2COCP_I2C_CON_XOA3_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA3_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA3Isb1032L(var)\
    (      (MSHSI2COCPI2C_CONXOA3b10==(MSHSI2COCPI2C_CONXOA3E)((((short)(var)) & MSHSI2COCP_I2C_CON_XOA3_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA3_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA3Isb1032LL(var)\
    (      (MSHSI2COCPI2C_CONXOA3b10==(MSHSI2COCPI2C_CONXOA3E)((((char)(var)) & MSHSI2COCP_I2C_CON_XOA3_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA3_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA3Write32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_CON_XOA3_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_CON_XOA3_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CON_XOA3_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA3Write32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_CON_XOA3_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_CON_XOA3_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CON_XOA3_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA3Writeb0732L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONXOA3b07 <<\
                               MSHSI2COCP_I2C_CON_XOA3_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_XOA3_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA3Writeb0732LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONXOA3b07 <<\
                               MSHSI2COCP_I2C_CON_XOA3_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_XOA3_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA3Writeb1032L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONXOA3b10 <<\
                               MSHSI2COCP_I2C_CON_XOA3_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_XOA3_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA3Writeb1032LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONXOA3b10 <<\
                               MSHSI2COCP_I2C_CON_XOA3_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_XOA3_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA3Set32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_CON_XOA3_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_CON_XOA3_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_CON_XOA3_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA3Set32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_CON_XOA3_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_CON_XOA3_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_CON_XOA3_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA2Read32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XOA2_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA2_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA2Read32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XOA2_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA2_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA2ReadIsb0732L(baseAddress)\
    (      (MSHSI2COCPI2C_CONXOA2b07==(MSHSI2COCPI2C_CONXOA2E)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XOA2_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA2_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA2ReadIsb0732LL(baseAddress)\
    (      (MSHSI2COCPI2C_CONXOA2b07==(MSHSI2COCPI2C_CONXOA2E)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XOA2_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA2_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA2ReadIsb1032L(baseAddress)\
    (      (MSHSI2COCPI2C_CONXOA2b10==(MSHSI2COCPI2C_CONXOA2E)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XOA2_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA2_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA2ReadIsb1032LL(baseAddress)\
    (      (MSHSI2COCPI2C_CONXOA2b10==(MSHSI2COCPI2C_CONXOA2E)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XOA2_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA2_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA2Get32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_CON_XOA2_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA2_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA2Get32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_CON_XOA2_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA2_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA2Isb0732L(var)\
    (      (MSHSI2COCPI2C_CONXOA2b07==(MSHSI2COCPI2C_CONXOA2E)((((short)(var)) & MSHSI2COCP_I2C_CON_XOA2_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA2_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA2Isb0732LL(var)\
    (      (MSHSI2COCPI2C_CONXOA2b07==(MSHSI2COCPI2C_CONXOA2E)((((char)(var)) & MSHSI2COCP_I2C_CON_XOA2_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA2_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA2Isb1032L(var)\
    (      (MSHSI2COCPI2C_CONXOA2b10==(MSHSI2COCPI2C_CONXOA2E)((((short)(var)) & MSHSI2COCP_I2C_CON_XOA2_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA2_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA2Isb1032LL(var)\
    (      (MSHSI2COCPI2C_CONXOA2b10==(MSHSI2COCPI2C_CONXOA2E)((((char)(var)) & MSHSI2COCP_I2C_CON_XOA2_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA2_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA2Write32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_CON_XOA2_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_CON_XOA2_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CON_XOA2_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA2Write32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_CON_XOA2_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_CON_XOA2_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CON_XOA2_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA2Writeb0732L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONXOA2b07 <<\
                               MSHSI2COCP_I2C_CON_XOA2_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_XOA2_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA2Writeb0732LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONXOA2b07 <<\
                               MSHSI2COCP_I2C_CON_XOA2_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_XOA2_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA2Writeb1032L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONXOA2b10 <<\
                               MSHSI2COCP_I2C_CON_XOA2_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_XOA2_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA2Writeb1032LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONXOA2b10 <<\
                               MSHSI2COCP_I2C_CON_XOA2_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_XOA2_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA2Set32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_CON_XOA2_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_CON_XOA2_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_CON_XOA2_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA2Set32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_CON_XOA2_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_CON_XOA2_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_CON_XOA2_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA1Read32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XOA1_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA1_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA1Read32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XOA1_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA1_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA1ReadIsb0732L(baseAddress)\
    (      (MSHSI2COCPI2C_CONXOA1b07==(MSHSI2COCPI2C_CONXOA1E)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XOA1_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA1_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA1ReadIsb0732LL(baseAddress)\
    (      (MSHSI2COCPI2C_CONXOA1b07==(MSHSI2COCPI2C_CONXOA1E)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XOA1_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA1_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA1ReadIsb1032L(baseAddress)\
    (      (MSHSI2COCPI2C_CONXOA1b10==(MSHSI2COCPI2C_CONXOA1E)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XOA1_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA1_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA1ReadIsb1032LL(baseAddress)\
    (      (MSHSI2COCPI2C_CONXOA1b10==(MSHSI2COCPI2C_CONXOA1E)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XOA1_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA1_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA1Get32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_CON_XOA1_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA1_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA1Get32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_CON_XOA1_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA1_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA1Isb0732L(var)\
    (      (MSHSI2COCPI2C_CONXOA1b07==(MSHSI2COCPI2C_CONXOA1E)((((short)(var)) & MSHSI2COCP_I2C_CON_XOA1_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA1_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA1Isb0732LL(var)\
    (      (MSHSI2COCPI2C_CONXOA1b07==(MSHSI2COCPI2C_CONXOA1E)((((char)(var)) & MSHSI2COCP_I2C_CON_XOA1_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA1_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA1Isb1032L(var)\
    (      (MSHSI2COCPI2C_CONXOA1b10==(MSHSI2COCPI2C_CONXOA1E)((((short)(var)) & MSHSI2COCP_I2C_CON_XOA1_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA1_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA1Isb1032LL(var)\
    (      (MSHSI2COCPI2C_CONXOA1b10==(MSHSI2COCPI2C_CONXOA1E)((((char)(var)) & MSHSI2COCP_I2C_CON_XOA1_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA1_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA1Write32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_CON_XOA1_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_CON_XOA1_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CON_XOA1_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA1Write32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_CON_XOA1_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_CON_XOA1_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CON_XOA1_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA1Writeb0732L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONXOA1b07 <<\
                               MSHSI2COCP_I2C_CON_XOA1_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_XOA1_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA1Writeb0732LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONXOA1b07 <<\
                               MSHSI2COCP_I2C_CON_XOA1_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_XOA1_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA1Writeb1032L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONXOA1b10 <<\
                               MSHSI2COCP_I2C_CON_XOA1_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_XOA1_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA1Writeb1032LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONXOA1b10 <<\
                               MSHSI2COCP_I2C_CON_XOA1_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_XOA1_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA1Set32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_CON_XOA1_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_CON_XOA1_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_CON_XOA1_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA1Set32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_CON_XOA1_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_CON_XOA1_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_CON_XOA1_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA0Read32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XOA0_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA0_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA0Read32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XOA0_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA0_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA0ReadIsb0732L(baseAddress)\
    (      (MSHSI2COCPI2C_CONXOA0b07==(MSHSI2COCPI2C_CONXOA0E)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XOA0_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA0_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA0ReadIsb0732LL(baseAddress)\
    (      (MSHSI2COCPI2C_CONXOA0b07==(MSHSI2COCPI2C_CONXOA0E)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XOA0_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA0_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA0ReadIsb1032L(baseAddress)\
    (      (MSHSI2COCPI2C_CONXOA0b10==(MSHSI2COCPI2C_CONXOA0E)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XOA0_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA0_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA0ReadIsb1032LL(baseAddress)\
    (      (MSHSI2COCPI2C_CONXOA0b10==(MSHSI2COCPI2C_CONXOA0E)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XOA0_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA0_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA0Get32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_CON_XOA0_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA0_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA0Get32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_CON_XOA0_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA0_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA0Isb0732L(var)\
    (      (MSHSI2COCPI2C_CONXOA0b07==(MSHSI2COCPI2C_CONXOA0E)((((short)(var)) & MSHSI2COCP_I2C_CON_XOA0_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA0_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA0Isb0732LL(var)\
    (      (MSHSI2COCPI2C_CONXOA0b07==(MSHSI2COCPI2C_CONXOA0E)((((char)(var)) & MSHSI2COCP_I2C_CON_XOA0_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA0_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA0Isb1032L(var)\
    (      (MSHSI2COCPI2C_CONXOA0b10==(MSHSI2COCPI2C_CONXOA0E)((((short)(var)) & MSHSI2COCP_I2C_CON_XOA0_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA0_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA0Isb1032LL(var)\
    (      (MSHSI2COCPI2C_CONXOA0b10==(MSHSI2COCPI2C_CONXOA0E)((((char)(var)) & MSHSI2COCP_I2C_CON_XOA0_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XOA0_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA0Write32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_CON_XOA0_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_CON_XOA0_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CON_XOA0_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA0Write32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_CON_XOA0_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_CON_XOA0_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CON_XOA0_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA0Writeb0732L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONXOA0b07 <<\
                               MSHSI2COCP_I2C_CON_XOA0_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_XOA0_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA0Writeb0732LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONXOA0b07 <<\
                               MSHSI2COCP_I2C_CON_XOA0_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_XOA0_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA0Writeb1032L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONXOA0b10 <<\
                               MSHSI2COCP_I2C_CON_XOA0_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_XOA0_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA0Writeb1032LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONXOA0b10 <<\
                               MSHSI2COCP_I2C_CON_XOA0_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_XOA0_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA0Set32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_CON_XOA0_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_CON_XOA0_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_CON_XOA0_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXOA0Set32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_CON_XOA0_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_CON_XOA0_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_CON_XOA0_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXSARead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XSA_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XSA_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONXSARead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XSA_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XSA_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONXSAReadIsb0732L(baseAddress)\
    (      (MSHSI2COCPI2C_CONXSAb07==(MSHSI2COCPI2C_CONXSAE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XSA_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XSA_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXSAReadIsb0732LM(baseAddress)\
    (      (MSHSI2COCPI2C_CONXSAb07==(MSHSI2COCPI2C_CONXSAE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XSA_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XSA_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXSAReadIsb1032L(baseAddress)\
    (      (MSHSI2COCPI2C_CONXSAb10==(MSHSI2COCPI2C_CONXSAE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XSA_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XSA_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXSAReadIsb1032LM(baseAddress)\
    (      (MSHSI2COCPI2C_CONXSAb10==(MSHSI2COCPI2C_CONXSAE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_XSA_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XSA_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXSAGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_CON_XSA_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XSA_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONXSAGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_CON_XSA_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XSA_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONXSAIsb0732L(var)\
    (      (MSHSI2COCPI2C_CONXSAb07==(MSHSI2COCPI2C_CONXSAE)((((short)(var)) & MSHSI2COCP_I2C_CON_XSA_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XSA_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXSAIsb0732LM(var)\
    (      (MSHSI2COCPI2C_CONXSAb07==(MSHSI2COCPI2C_CONXSAE)((((char)(var)) & MSHSI2COCP_I2C_CON_XSA_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XSA_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXSAIsb1032L(var)\
    (      (MSHSI2COCPI2C_CONXSAb10==(MSHSI2COCPI2C_CONXSAE)((((short)(var)) & MSHSI2COCP_I2C_CON_XSA_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_XSA_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXSAIsb1032LM(var)\
    (      (MSHSI2COCPI2C_CONXSAb10==(MSHSI2COCPI2C_CONXSAE)((((char)(var)) & MSHSI2COCP_I2C_CON_XSA_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_XSA_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXSAWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_CON_XSA_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_CON_XSA_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CON_XSA_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXSAWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_CON_XSA_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_CON_XSA_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CON_XSA_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXSAWriteb0732L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONXSAb07 <<\
                               MSHSI2COCP_I2C_CON_XSA_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_XSA_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXSAWriteb0732LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONXSAb07 <<\
                               MSHSI2COCP_I2C_CON_XSA_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_XSA_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXSAWriteb1032L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONXSAb10 <<\
                               MSHSI2COCP_I2C_CON_XSA_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_XSA_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXSAWriteb1032LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONXSAb10 <<\
                               MSHSI2COCP_I2C_CON_XSA_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_XSA_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONXSASet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_CON_XSA_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_CON_XSA_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_CON_XSA_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CONXSASet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_CON_XSA_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_CON_XSA_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_CON_XSA_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CONTRXRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_TRX_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_TRX_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONTRXRead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_TRX_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_TRX_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONTRXReadIsrcv32L(baseAddress)\
    (      (MSHSI2COCPI2C_CONTRXrcv==(MSHSI2COCPI2C_CONTRXE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_TRX_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_TRX_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONTRXReadIsrcv32LM(baseAddress)\
    (      (MSHSI2COCPI2C_CONTRXrcv==(MSHSI2COCPI2C_CONTRXE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_TRX_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_TRX_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONTRXReadIstrx32L(baseAddress)\
    (      (MSHSI2COCPI2C_CONTRXtrx==(MSHSI2COCPI2C_CONTRXE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_TRX_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_TRX_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONTRXReadIstrx32LM(baseAddress)\
    (      (MSHSI2COCPI2C_CONTRXtrx==(MSHSI2COCPI2C_CONTRXE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_TRX_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_TRX_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONTRXGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_CON_TRX_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_TRX_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONTRXGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_CON_TRX_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_TRX_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONTRXIsrcv32L(var)\
    (      (MSHSI2COCPI2C_CONTRXrcv==(MSHSI2COCPI2C_CONTRXE)((((short)(var)) & MSHSI2COCP_I2C_CON_TRX_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_TRX_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONTRXIsrcv32LM(var)\
    (      (MSHSI2COCPI2C_CONTRXrcv==(MSHSI2COCPI2C_CONTRXE)((((char)(var)) & MSHSI2COCP_I2C_CON_TRX_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_TRX_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONTRXIstrx32L(var)\
    (      (MSHSI2COCPI2C_CONTRXtrx==(MSHSI2COCPI2C_CONTRXE)((((short)(var)) & MSHSI2COCP_I2C_CON_TRX_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_TRX_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONTRXIstrx32LM(var)\
    (      (MSHSI2COCPI2C_CONTRXtrx==(MSHSI2COCPI2C_CONTRXE)((((char)(var)) & MSHSI2COCP_I2C_CON_TRX_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_TRX_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONTRXWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_CON_TRX_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_CON_TRX_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CON_TRX_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONTRXWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_CON_TRX_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_CON_TRX_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CON_TRX_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONTRXWritercv32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONTRXrcv <<\
                               MSHSI2COCP_I2C_CON_TRX_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_TRX_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONTRXWritercv32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONTRXrcv <<\
                               MSHSI2COCP_I2C_CON_TRX_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_TRX_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONTRXWritetrx32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONTRXtrx <<\
                               MSHSI2COCP_I2C_CON_TRX_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_TRX_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONTRXWritetrx32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONTRXtrx <<\
                               MSHSI2COCP_I2C_CON_TRX_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_TRX_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONTRXSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_CON_TRX_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_CON_TRX_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_CON_TRX_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CONTRXSet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_CON_TRX_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_CON_TRX_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_CON_TRX_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CONMSTRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_MST_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_MST_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONMSTRead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_MST_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_MST_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONMSTReadIsslv32L(baseAddress)\
    (      (MSHSI2COCPI2C_CONMSTslv==(MSHSI2COCPI2C_CONMSTE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_MST_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_MST_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONMSTReadIsslv32LM(baseAddress)\
    (      (MSHSI2COCPI2C_CONMSTslv==(MSHSI2COCPI2C_CONMSTE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_MST_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_MST_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONMSTReadIsmst32L(baseAddress)\
    (      (MSHSI2COCPI2C_CONMSTmst==(MSHSI2COCPI2C_CONMSTE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_MST_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_MST_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONMSTReadIsmst32LM(baseAddress)\
    (      (MSHSI2COCPI2C_CONMSTmst==(MSHSI2COCPI2C_CONMSTE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_MST_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_MST_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONMSTGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_CON_MST_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_MST_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONMSTGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_CON_MST_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_MST_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONMSTIsslv32L(var)\
    (      (MSHSI2COCPI2C_CONMSTslv==(MSHSI2COCPI2C_CONMSTE)((((short)(var)) & MSHSI2COCP_I2C_CON_MST_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_MST_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONMSTIsslv32LM(var)\
    (      (MSHSI2COCPI2C_CONMSTslv==(MSHSI2COCPI2C_CONMSTE)((((char)(var)) & MSHSI2COCP_I2C_CON_MST_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_MST_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONMSTIsmst32L(var)\
    (      (MSHSI2COCPI2C_CONMSTmst==(MSHSI2COCPI2C_CONMSTE)((((short)(var)) & MSHSI2COCP_I2C_CON_MST_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_MST_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONMSTIsmst32LM(var)\
    (      (MSHSI2COCPI2C_CONMSTmst==(MSHSI2COCPI2C_CONMSTE)((((char)(var)) & MSHSI2COCP_I2C_CON_MST_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_MST_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONMSTWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_CON_MST_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_CON_MST_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CON_MST_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONMSTWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_CON_MST_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_CON_MST_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CON_MST_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONMSTWriteslv32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONMSTslv <<\
                               MSHSI2COCP_I2C_CON_MST_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_MST_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONMSTWriteslv32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONMSTslv <<\
                               MSHSI2COCP_I2C_CON_MST_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_MST_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONMSTWritemst32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONMSTmst <<\
                               MSHSI2COCP_I2C_CON_MST_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_MST_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONMSTWritemst32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONMSTmst <<\
                               MSHSI2COCP_I2C_CON_MST_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_MST_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONMSTSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_CON_MST_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_CON_MST_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_CON_MST_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CONMSTSet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_CON_MST_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_CON_MST_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_CON_MST_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTBRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_STB_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_STB_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTBRead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_STB_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_STB_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTBReadIsnormal32L(baseAddress)\
    (      (MSHSI2COCPI2C_CONSTBnormal==(MSHSI2COCPI2C_CONSTBE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_STB_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_STB_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTBReadIsnormal32LM(baseAddress)\
    (      (MSHSI2COCPI2C_CONSTBnormal==(MSHSI2COCPI2C_CONSTBE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_STB_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_STB_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTBReadIsstb32L(baseAddress)\
    (      (MSHSI2COCPI2C_CONSTBstb==(MSHSI2COCPI2C_CONSTBE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_STB_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_STB_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTBReadIsstb32LM(baseAddress)\
    (      (MSHSI2COCPI2C_CONSTBstb==(MSHSI2COCPI2C_CONSTBE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_STB_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_STB_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTBGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_CON_STB_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_STB_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTBGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_CON_STB_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_STB_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTBIsnormal32L(var)\
    (      (MSHSI2COCPI2C_CONSTBnormal==(MSHSI2COCPI2C_CONSTBE)((((short)(var)) & MSHSI2COCP_I2C_CON_STB_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_STB_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTBIsnormal32LM(var)\
    (      (MSHSI2COCPI2C_CONSTBnormal==(MSHSI2COCPI2C_CONSTBE)((((char)(var)) & MSHSI2COCP_I2C_CON_STB_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_STB_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTBIsstb32L(var)\
    (      (MSHSI2COCPI2C_CONSTBstb==(MSHSI2COCPI2C_CONSTBE)((((short)(var)) & MSHSI2COCP_I2C_CON_STB_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_STB_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTBIsstb32LM(var)\
    (      (MSHSI2COCPI2C_CONSTBstb==(MSHSI2COCPI2C_CONSTBE)((((char)(var)) & MSHSI2COCP_I2C_CON_STB_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_STB_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTBWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_CON_STB_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_CON_STB_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CON_STB_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONSTBWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_CON_STB_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_CON_STB_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CON_STB_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONSTBWritenormal32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONSTBnormal <<\
                               MSHSI2COCP_I2C_CON_STB_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_STB_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONSTBWritenormal32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONSTBnormal <<\
                               MSHSI2COCP_I2C_CON_STB_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_STB_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONSTBWritestb32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONSTBstb <<\
                               MSHSI2COCP_I2C_CON_STB_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_STB_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONSTBWritestb32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONSTBstb <<\
                               MSHSI2COCP_I2C_CON_STB_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_STB_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONSTBSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_CON_STB_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_CON_STB_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_CON_STB_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CONSTBSet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_CON_STB_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_CON_STB_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_CON_STB_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_OPMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_OPMODE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODERead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEReadIsfsi2c32L(baseAddress)\
    (      (MSHSI2COCPI2C_CONOPMODEfsi2c==(MSHSI2COCPI2C_CONOPMODEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_OPMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_OPMODE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEReadIsfsi2c32LM(baseAddress)\
    (      (MSHSI2COCPI2C_CONOPMODEfsi2c==(MSHSI2COCPI2C_CONOPMODEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEReadIshsi2c32L(baseAddress)\
    (      (MSHSI2COCPI2C_CONOPMODEhsi2c==(MSHSI2COCPI2C_CONOPMODEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_OPMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_OPMODE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEReadIshsi2c32LM(baseAddress)\
    (      (MSHSI2COCPI2C_CONOPMODEhsi2c==(MSHSI2COCPI2C_CONOPMODEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEReadIssccb32L(baseAddress)\
    (      (MSHSI2COCPI2C_CONOPMODEsccb==(MSHSI2COCPI2C_CONOPMODEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_OPMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_OPMODE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEReadIssccb32LM(baseAddress)\
    (      (MSHSI2COCPI2C_CONOPMODEsccb==(MSHSI2COCPI2C_CONOPMODEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEReadIsreserved32L(baseAddress)\
    (      (MSHSI2COCPI2C_CONOPMODEreserved==(MSHSI2COCPI2C_CONOPMODEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_OPMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_OPMODE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEReadIsreserved32LM(baseAddress)\
    (      (MSHSI2COCPI2C_CONOPMODEreserved==(MSHSI2COCPI2C_CONOPMODEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_CON_OPMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_OPMODE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEIsfsi2c32L(var)\
    (      (MSHSI2COCPI2C_CONOPMODEfsi2c==(MSHSI2COCPI2C_CONOPMODEE)((((short)(var)) & MSHSI2COCP_I2C_CON_OPMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_OPMODE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEIsfsi2c32LM(var)\
    (      (MSHSI2COCPI2C_CONOPMODEfsi2c==(MSHSI2COCPI2C_CONOPMODEE)((((char)(var)) & MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEIshsi2c32L(var)\
    (      (MSHSI2COCPI2C_CONOPMODEhsi2c==(MSHSI2COCPI2C_CONOPMODEE)((((short)(var)) & MSHSI2COCP_I2C_CON_OPMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_OPMODE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEIshsi2c32LM(var)\
    (      (MSHSI2COCPI2C_CONOPMODEhsi2c==(MSHSI2COCPI2C_CONOPMODEE)((((char)(var)) & MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEIssccb32L(var)\
    (      (MSHSI2COCPI2C_CONOPMODEsccb==(MSHSI2COCPI2C_CONOPMODEE)((((short)(var)) & MSHSI2COCP_I2C_CON_OPMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_OPMODE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEIssccb32LM(var)\
    (      (MSHSI2COCPI2C_CONOPMODEsccb==(MSHSI2COCPI2C_CONOPMODEE)((((char)(var)) & MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEIsreserved32L(var)\
    (      (MSHSI2COCPI2C_CONOPMODEreserved==(MSHSI2COCPI2C_CONOPMODEE)((((short)(var)) & MSHSI2COCP_I2C_CON_OPMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_OPMODE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEIsreserved32LM(var)\
    (      (MSHSI2COCPI2C_CONOPMODEreserved==(MSHSI2COCPI2C_CONOPMODEE)((((char)(var)) & MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_CON_OPMODE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_CON_OPMODE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CON_OPMODE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEWritefsi2c32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONOPMODEfsi2c <<\
                               MSHSI2COCP_I2C_CON_OPMODE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_OPMODE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEWritefsi2c32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONOPMODEfsi2c <<\
                               MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEWritehsi2c32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONOPMODEhsi2c <<\
                               MSHSI2COCP_I2C_CON_OPMODE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_OPMODE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEWritehsi2c32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONOPMODEhsi2c <<\
                               MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEWritesccb32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONOPMODEsccb <<\
                               MSHSI2COCP_I2C_CON_OPMODE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_OPMODE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEWritesccb32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONOPMODEsccb <<\
                               MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEWritereserved32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONOPMODEreserved <<\
                               MSHSI2COCP_I2C_CON_OPMODE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_OPMODE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODEWritereserved32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONOPMODEreserved <<\
                               MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_CON_OPMODE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_CON_OPMODE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_CON_OPMODE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CONOPMODESet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_CON_OPMODE_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CONI2C_ENRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_I2C_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_I2C_EN_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONI2C_ENRead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_I2C_EN_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_I2C_EN_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONI2C_ENReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_CONI2C_ENdisable==(MSHSI2COCPI2C_CONI2C_ENE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_I2C_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_I2C_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONI2C_ENReadIsdisable32LM(baseAddress)\
    (      (MSHSI2COCPI2C_CONI2C_ENdisable==(MSHSI2COCPI2C_CONI2C_ENE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_I2C_EN_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_I2C_EN_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONI2C_ENReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_CONI2C_ENenable==(MSHSI2COCPI2C_CONI2C_ENE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_I2C_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_I2C_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONI2C_ENReadIsenable32LM(baseAddress)\
    (      (MSHSI2COCPI2C_CONI2C_ENenable==(MSHSI2COCPI2C_CONI2C_ENE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_CON_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_CON_I2C_EN_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_I2C_EN_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONI2C_ENGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_CON_I2C_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_I2C_EN_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONI2C_ENGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_CON_I2C_EN_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_I2C_EN_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_CONI2C_ENIsdisable32L(var)\
    (      (MSHSI2COCPI2C_CONI2C_ENdisable==(MSHSI2COCPI2C_CONI2C_ENE)((((short)(var)) & MSHSI2COCP_I2C_CON_I2C_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_I2C_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONI2C_ENIsdisable32LM(var)\
    (      (MSHSI2COCPI2C_CONI2C_ENdisable==(MSHSI2COCPI2C_CONI2C_ENE)((((char)(var)) & MSHSI2COCP_I2C_CON_I2C_EN_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_I2C_EN_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONI2C_ENIsenable32L(var)\
    (      (MSHSI2COCPI2C_CONI2C_ENenable==(MSHSI2COCPI2C_CONI2C_ENE)((((short)(var)) & MSHSI2COCP_I2C_CON_I2C_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_CON_I2C_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONI2C_ENIsenable32LM(var)\
    (      (MSHSI2COCPI2C_CONI2C_ENenable==(MSHSI2COCPI2C_CONI2C_ENE)((((char)(var)) & MSHSI2COCP_I2C_CON_I2C_EN_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_CON_I2C_EN_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_CONI2C_ENWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_CON_I2C_EN_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_CON_I2C_EN_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CON_I2C_EN_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONI2C_ENWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_CON_I2C_EN_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_CON_I2C_EN_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_CON_I2C_EN_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONI2C_ENWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONI2C_ENdisable <<\
                               MSHSI2COCP_I2C_CON_I2C_EN_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_I2C_EN_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONI2C_ENWritedisable32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONI2C_ENdisable <<\
                               MSHSI2COCP_I2C_CON_I2C_EN_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_I2C_EN_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONI2C_ENWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_CONI2C_ENenable <<\
                               MSHSI2COCP_I2C_CON_I2C_EN_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_I2C_EN_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONI2C_ENWriteenable32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_CON_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_CONI2C_ENenable <<\
                               MSHSI2COCP_I2C_CON_I2C_EN_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_CON_I2C_EN_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_CONI2C_ENSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_CON_I2C_EN_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_CON_I2C_EN_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_CON_I2C_EN_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_CONI2C_ENSet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_CON_I2C_EN_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_CON_I2C_EN_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_CON_I2C_EN_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_OAReadRegister32U(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_OA_OFFSET +\
      LOWER_WORD_UPPER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OAReadRegister32L(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_OA_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OAReadRegister32UU(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_OA_OFFSET +\
      LOWER_WORD_UPPER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OAReadRegister32UM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_OA_OFFSET +\
      LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OAReadRegister32LM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_OA_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OAReadRegister32LL(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_OA_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OAWriteRegister32U(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_OA_OFFSET +\
                             LOWER_WORD_UPPER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OAWriteRegister32L(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_OA_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OAWriteRegister32UU(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_OA_OFFSET +\
                             LOWER_WORD_UPPER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OAWriteRegister32UM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_OA_OFFSET +\
                             LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OAWriteRegister32LM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_OA_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OAWriteRegister32LL(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_OA_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OAOARead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_OA_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_OA_OA_LO_16_MASK) >> \
      MSHSI2COCP_I2C_OA_OA_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OAOARead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_OA_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_OA_OA_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_OA_OA_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OAOARead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_OA_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_OA_OA_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_OA_OA_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OAOAGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_OA_OA_LO_16_MASK) >> \
      MSHSI2COCP_I2C_OA_OA_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OAOAGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_OA_OA_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_OA_OA_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OAOAGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_OA_OA_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_OA_OA_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OAOAWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_OA_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_OA_OA_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_OA_OA_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_OA_OA_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OAOAWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_OA_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_OA_OA_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_OA_OA_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_OA_OA_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OAOAWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_OA_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_OA_OA_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_OA_OA_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_OA_OA_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OAOASet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_OA_OA_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_OA_OA_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_OA_OA_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_OAOASet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_OA_OA_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_OA_OA_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_OA_OA_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_OAOASet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_OA_OA_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_OA_OA_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_OA_OA_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_OAMCODERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_OA_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_OA_MCODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_OA_MCODE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OAMCODERead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_OA_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_OA_MCODE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_OA_MCODE_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OAMCODEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_OA_MCODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_OA_MCODE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OAMCODEGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_OA_MCODE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_OA_MCODE_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OAMCODEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_OA_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_OA_MCODE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_OA_MCODE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_OA_MCODE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OAMCODEWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_OA_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_OA_MCODE_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_OA_MCODE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_OA_MCODE_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OAMCODESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_OA_MCODE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_OA_MCODE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_OA_MCODE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_OAMCODESet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_OA_MCODE_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_OA_MCODE_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_OA_MCODE_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SAReadRegister32U(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SA_OFFSET +\
      LOWER_WORD_UPPER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SAReadRegister32L(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SA_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SAReadRegister32UU(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SA_OFFSET +\
      LOWER_WORD_UPPER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SAReadRegister32UM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SA_OFFSET +\
      LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SAReadRegister32LM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SA_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SAReadRegister32LL(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SA_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SAWriteRegister32U(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SA_OFFSET +\
                             LOWER_WORD_UPPER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SAWriteRegister32L(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SA_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SAWriteRegister32UU(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SA_OFFSET +\
                             LOWER_WORD_UPPER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SAWriteRegister32UM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SA_OFFSET +\
                             LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SAWriteRegister32LM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SA_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SAWriteRegister32LL(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SA_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SASARead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SA_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SA_SA_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SA_SA_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SASARead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SA_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SA_SA_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SA_SA_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SASARead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SA_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SA_SA_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SA_SA_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SASAGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_SA_SA_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SA_SA_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SASAGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SA_SA_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SA_SA_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SASAGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SA_SA_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SA_SA_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SASAWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SA_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_SA_SA_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_SA_SA_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SA_SA_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SASAWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SA_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_SA_SA_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_SA_SA_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SA_SA_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SASAWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SA_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_SA_SA_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_SA_SA_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SA_SA_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SASASet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_SA_SA_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_SA_SA_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_SA_SA_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SASASet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_SA_SA_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_SA_SA_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_SA_SA_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SASASet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_SA_SA_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_SA_SA_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_SA_SA_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_PSCReadRegister32U(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_PSC_OFFSET +\
      LOWER_WORD_UPPER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_PSCReadRegister32L(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_PSC_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_PSCReadRegister32UU(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_PSC_OFFSET +\
      LOWER_WORD_UPPER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_PSCReadRegister32UM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_PSC_OFFSET +\
      LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_PSCReadRegister32LM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_PSC_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_PSCReadRegister32LL(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_PSC_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_PSCWriteRegister32U(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_PSC_OFFSET +\
                             LOWER_WORD_UPPER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_PSCWriteRegister32L(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_PSC_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_PSCWriteRegister32UU(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_PSC_OFFSET +\
                             LOWER_WORD_UPPER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_PSCWriteRegister32UM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_PSC_OFFSET +\
                             LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_PSCWriteRegister32LM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_PSC_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_PSCWriteRegister32LL(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_PSC_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_PSCPSCRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_PSC_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_PSC_PSC_LO_16_MASK) >> \
      MSHSI2COCP_I2C_PSC_PSC_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_PSCPSCRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_PSC_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_PSC_PSC_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_PSC_PSC_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_PSCPSCGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_PSC_PSC_LO_16_MASK) >> \
      MSHSI2COCP_I2C_PSC_PSC_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_PSCPSCGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_PSC_PSC_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_PSC_PSC_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_PSCPSCWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_PSC_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_PSC_PSC_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_PSC_PSC_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_PSC_PSC_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_PSCPSCWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_PSC_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_PSC_PSC_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_PSC_PSC_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_PSC_PSC_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_PSCPSCSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_PSC_PSC_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_PSC_PSC_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_PSC_PSC_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_PSCPSCSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_PSC_PSC_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_PSC_PSC_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_PSC_PSC_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SCLLReadRegister32U(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SCLL_OFFSET +\
      LOWER_WORD_UPPER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLLReadRegister32L(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SCLL_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLLReadRegister32UU(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SCLL_OFFSET +\
      LOWER_WORD_UPPER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLLReadRegister32UM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SCLL_OFFSET +\
      LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLLReadRegister32LM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SCLL_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLLReadRegister32LL(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SCLL_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLLWriteRegister32U(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SCLL_OFFSET +\
                             LOWER_WORD_UPPER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SCLLWriteRegister32L(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SCLL_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SCLLWriteRegister32UU(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SCLL_OFFSET +\
                             LOWER_WORD_UPPER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SCLLWriteRegister32UM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SCLL_OFFSET +\
                             LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SCLLWriteRegister32LM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SCLL_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SCLLWriteRegister32LL(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SCLL_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SCLLSCLLRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SCLL_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SCLL_SCLL_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SCLL_SCLL_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLLSCLLRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SCLL_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SCLL_SCLL_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SCLL_SCLL_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLLSCLLGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_SCLL_SCLL_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SCLL_SCLL_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLLSCLLGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SCLL_SCLL_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SCLL_SCLL_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLLSCLLWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SCLL_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_SCLL_SCLL_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_SCLL_SCLL_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SCLL_SCLL_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SCLLSCLLWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SCLL_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_SCLL_SCLL_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_SCLL_SCLL_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SCLL_SCLL_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SCLLSCLLSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_SCLL_SCLL_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_SCLL_SCLL_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_SCLL_SCLL_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SCLLSCLLSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_SCLL_SCLL_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_SCLL_SCLL_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_SCLL_SCLL_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SCLLHSSCLLRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SCLL_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SCLL_HSSCLL_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SCLL_HSSCLL_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLLHSSCLLRead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SCLL_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SCLL_HSSCLL_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SCLL_HSSCLL_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLLHSSCLLGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_SCLL_HSSCLL_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SCLL_HSSCLL_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLLHSSCLLGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SCLL_HSSCLL_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SCLL_HSSCLL_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLLHSSCLLWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SCLL_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_SCLL_HSSCLL_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_SCLL_HSSCLL_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SCLL_HSSCLL_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SCLLHSSCLLWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SCLL_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_SCLL_HSSCLL_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_SCLL_HSSCLL_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SCLL_HSSCLL_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SCLLHSSCLLSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_SCLL_HSSCLL_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_SCLL_HSSCLL_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_SCLL_HSSCLL_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SCLLHSSCLLSet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_SCLL_HSSCLL_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_SCLL_HSSCLL_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_SCLL_HSSCLL_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SCLHReadRegister32U(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SCLH_OFFSET +\
      LOWER_WORD_UPPER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLHReadRegister32L(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SCLH_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLHReadRegister32UU(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SCLH_OFFSET +\
      LOWER_WORD_UPPER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLHReadRegister32UM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SCLH_OFFSET +\
      LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLHReadRegister32LM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SCLH_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLHReadRegister32LL(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SCLH_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLHWriteRegister32U(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SCLH_OFFSET +\
                             LOWER_WORD_UPPER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SCLHWriteRegister32L(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SCLH_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SCLHWriteRegister32UU(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SCLH_OFFSET +\
                             LOWER_WORD_UPPER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SCLHWriteRegister32UM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SCLH_OFFSET +\
                             LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SCLHWriteRegister32LM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SCLH_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SCLHWriteRegister32LL(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SCLH_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SCLHSCLHRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SCLH_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SCLH_SCLH_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SCLH_SCLH_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLHSCLHRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SCLH_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SCLH_SCLH_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SCLH_SCLH_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLHSCLHGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_SCLH_SCLH_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SCLH_SCLH_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLHSCLHGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SCLH_SCLH_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SCLH_SCLH_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLHSCLHWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SCLH_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_SCLH_SCLH_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_SCLH_SCLH_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SCLH_SCLH_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SCLHSCLHWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SCLH_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_SCLH_SCLH_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_SCLH_SCLH_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SCLH_SCLH_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SCLHSCLHSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_SCLH_SCLH_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_SCLH_SCLH_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_SCLH_SCLH_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SCLHSCLHSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_SCLH_SCLH_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_SCLH_SCLH_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_SCLH_SCLH_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SCLHHSSCLHRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SCLH_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SCLH_HSSCLH_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SCLH_HSSCLH_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLHHSSCLHRead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SCLH_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SCLH_HSSCLH_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SCLH_HSSCLH_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLHHSSCLHGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_SCLH_HSSCLH_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SCLH_HSSCLH_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLHHSSCLHGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SCLH_HSSCLH_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SCLH_HSSCLH_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SCLHHSSCLHWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SCLH_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_SCLH_HSSCLH_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_SCLH_HSSCLH_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SCLH_HSSCLH_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SCLHHSSCLHWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SCLH_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_SCLH_HSSCLH_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_SCLH_HSSCLH_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SCLH_HSSCLH_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SCLHHSSCLHSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_SCLH_HSSCLH_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_SCLH_HSSCLH_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_SCLH_HSSCLH_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SCLHHSSCLHSet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_SCLH_HSSCLH_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_SCLH_HSSCLH_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_SCLH_HSSCLH_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTReadRegister32U(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_UPPER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTReadRegister32L(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTReadRegister32UU(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_UPPER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTReadRegister32UM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTReadRegister32LM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTReadRegister32LL(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTWriteRegister32U(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_UPPER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTWriteRegister32L(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTWriteRegister32UU(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_UPPER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTWriteRegister32UM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTWriteRegister32LM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTWriteRegister32LL(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_ORead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_ORead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_OReadIssdaol32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTSDA_Osdaol==(MSHSI2COCPI2C_SYSTESTSDA_OE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_OReadIssdaol32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTSDA_Osdaol==(MSHSI2COCPI2C_SYSTESTSDA_OE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_OReadIssdaoh32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTSDA_Osdaoh==(MSHSI2COCPI2C_SYSTESTSDA_OE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_OReadIssdaoh32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTSDA_Osdaoh==(MSHSI2COCPI2C_SYSTESTSDA_OE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_OGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_OGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_OIssdaol32L(var)\
    (      (MSHSI2COCPI2C_SYSTESTSDA_Osdaol==(MSHSI2COCPI2C_SYSTESTSDA_OE)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_OIssdaol32LL(var)\
    (      (MSHSI2COCPI2C_SYSTESTSDA_Osdaol==(MSHSI2COCPI2C_SYSTESTSDA_OE)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_OIssdaoh32L(var)\
    (      (MSHSI2COCPI2C_SYSTESTSDA_Osdaoh==(MSHSI2COCPI2C_SYSTESTSDA_OE)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_OIssdaoh32LL(var)\
    (      (MSHSI2COCPI2C_SYSTESTSDA_Osdaoh==(MSHSI2COCPI2C_SYSTESTSDA_OE)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_OWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_OWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_OWritesdaol32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSTESTSDA_Osdaol <<\
                               MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_OWritesdaol32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSTESTSDA_Osdaol <<\
                               MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_OWritesdaoh32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSTESTSDA_Osdaoh <<\
                               MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_OWritesdaoh32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSTESTSDA_Osdaoh <<\
                               MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_OSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_OSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_SYSTEST_SDA_O_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_IRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_IRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_IReadIssdail32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTSDA_Isdail==(MSHSI2COCPI2C_SYSTESTSDA_IE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_IReadIssdail32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTSDA_Isdail==(MSHSI2COCPI2C_SYSTESTSDA_IE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_IReadIssdaih32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTSDA_Isdaih==(MSHSI2COCPI2C_SYSTESTSDA_IE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_IReadIssdaih32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTSDA_Isdaih==(MSHSI2COCPI2C_SYSTESTSDA_IE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_IGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_IGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_IIssdail32L(var)\
    (      (MSHSI2COCPI2C_SYSTESTSDA_Isdail==(MSHSI2COCPI2C_SYSTESTSDA_IE)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_IIssdail32LL(var)\
    (      (MSHSI2COCPI2C_SYSTESTSDA_Isdail==(MSHSI2COCPI2C_SYSTESTSDA_IE)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_IIssdaih32L(var)\
    (      (MSHSI2COCPI2C_SYSTESTSDA_Isdaih==(MSHSI2COCPI2C_SYSTESTSDA_IE)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_IIssdaih32LL(var)\
    (      (MSHSI2COCPI2C_SYSTESTSDA_Isdaih==(MSHSI2COCPI2C_SYSTESTSDA_IE)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_IWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_IWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_IWritesdail32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSTESTSDA_Isdail <<\
                               MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_IWritesdail32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSTESTSDA_Isdail <<\
                               MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_IWritesdaih32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSTESTSDA_Isdaih <<\
                               MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_IWritesdaih32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSTESTSDA_Isdaih <<\
                               MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_ISet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSDA_ISet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_SYSTEST_SDA_I_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_ORead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_ORead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_OReadIssclol32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTSCL_Osclol==(MSHSI2COCPI2C_SYSTESTSCL_OE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_OReadIssclol32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTSCL_Osclol==(MSHSI2COCPI2C_SYSTESTSCL_OE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_OReadIsscloh32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTSCL_Oscloh==(MSHSI2COCPI2C_SYSTESTSCL_OE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_OReadIsscloh32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTSCL_Oscloh==(MSHSI2COCPI2C_SYSTESTSCL_OE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_OGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_OGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_OIssclol32L(var)\
    (      (MSHSI2COCPI2C_SYSTESTSCL_Osclol==(MSHSI2COCPI2C_SYSTESTSCL_OE)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_OIssclol32LL(var)\
    (      (MSHSI2COCPI2C_SYSTESTSCL_Osclol==(MSHSI2COCPI2C_SYSTESTSCL_OE)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_OIsscloh32L(var)\
    (      (MSHSI2COCPI2C_SYSTESTSCL_Oscloh==(MSHSI2COCPI2C_SYSTESTSCL_OE)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_OIsscloh32LL(var)\
    (      (MSHSI2COCPI2C_SYSTESTSCL_Oscloh==(MSHSI2COCPI2C_SYSTESTSCL_OE)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_OWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_OWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_OWritesclol32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSTESTSCL_Osclol <<\
                               MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_OWritesclol32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSTESTSCL_Osclol <<\
                               MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_OWritescloh32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSTESTSCL_Oscloh <<\
                               MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_OWritescloh32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSTESTSCL_Oscloh <<\
                               MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_OSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_OSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_SYSTEST_SCL_O_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_IRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_IRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_IReadIssclil32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTSCL_Isclil==(MSHSI2COCPI2C_SYSTESTSCL_IE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_IReadIssclil32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTSCL_Isclil==(MSHSI2COCPI2C_SYSTESTSCL_IE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_IReadIssclih32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTSCL_Isclih==(MSHSI2COCPI2C_SYSTESTSCL_IE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_IReadIssclih32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTSCL_Isclih==(MSHSI2COCPI2C_SYSTESTSCL_IE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_IGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_IGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_IIssclil32L(var)\
    (      (MSHSI2COCPI2C_SYSTESTSCL_Isclil==(MSHSI2COCPI2C_SYSTESTSCL_IE)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_IIssclil32LL(var)\
    (      (MSHSI2COCPI2C_SYSTESTSCL_Isclil==(MSHSI2COCPI2C_SYSTESTSCL_IE)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_IIssclih32L(var)\
    (      (MSHSI2COCPI2C_SYSTESTSCL_Isclih==(MSHSI2COCPI2C_SYSTESTSCL_IE)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_IIssclih32LL(var)\
    (      (MSHSI2COCPI2C_SYSTESTSCL_Isclih==(MSHSI2COCPI2C_SYSTESTSCL_IE)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_IWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_IWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_IWritesclil32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSTESTSCL_Isclil <<\
                               MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_IWritesclil32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSTESTSCL_Isclil <<\
                               MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_IWritesclih32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSTESTSCL_Isclih <<\
                               MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_IWritesclih32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSTESTSCL_Isclih <<\
                               MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_ISet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCL_ISet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_SYSTEST_SCL_I_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCCBE_ORead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCCBE_ORead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCCBE_OReadIssccbol32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTSCCBE_Osccbol==(MSHSI2COCPI2C_SYSTESTSCCBE_OE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCCBE_OReadIssccbol32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTSCCBE_Osccbol==(MSHSI2COCPI2C_SYSTESTSCCBE_OE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCCBE_OReadIssccboh32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTSCCBE_Osccboh==(MSHSI2COCPI2C_SYSTESTSCCBE_OE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCCBE_OReadIssccboh32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTSCCBE_Osccboh==(MSHSI2COCPI2C_SYSTESTSCCBE_OE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCCBE_OGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCCBE_OGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCCBE_OIssccbol32L(var)\
    (      (MSHSI2COCPI2C_SYSTESTSCCBE_Osccbol==(MSHSI2COCPI2C_SYSTESTSCCBE_OE)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCCBE_OIssccbol32LL(var)\
    (      (MSHSI2COCPI2C_SYSTESTSCCBE_Osccbol==(MSHSI2COCPI2C_SYSTESTSCCBE_OE)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCCBE_OIssccboh32L(var)\
    (      (MSHSI2COCPI2C_SYSTESTSCCBE_Osccboh==(MSHSI2COCPI2C_SYSTESTSCCBE_OE)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCCBE_OIssccboh32LL(var)\
    (      (MSHSI2COCPI2C_SYSTESTSCCBE_Osccboh==(MSHSI2COCPI2C_SYSTESTSCCBE_OE)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCCBE_OWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCCBE_OWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCCBE_OWritesccbol32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSTESTSCCBE_Osccbol <<\
                               MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCCBE_OWritesccbol32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSTESTSCCBE_Osccbol <<\
                               MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCCBE_OWritesccboh32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSTESTSCCBE_Osccboh <<\
                               MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCCBE_OWritesccboh32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSTESTSCCBE_Osccboh <<\
                               MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCCBE_OSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSCCBE_OSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_SYSTEST_SCCBE_O_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSSBRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SSB_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SSB_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSSBRead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SSB_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SSB_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSSBReadIsnoaction32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTSSBnoaction==(MSHSI2COCPI2C_SYSTESTSSBE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SSB_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SSB_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSSBReadIsnoaction32LM(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTSSBnoaction==(MSHSI2COCPI2C_SYSTESTSSBE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SSB_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SSB_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSSBReadIssetstatus32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTSSBsetstatus==(MSHSI2COCPI2C_SYSTESTSSBE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SSB_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SSB_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSSBReadIssetstatus32LM(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTSSBsetstatus==(MSHSI2COCPI2C_SYSTESTSSBE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_SSB_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SSB_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSSBGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_SSB_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SSB_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSSBGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_SSB_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SSB_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSSBIsnoaction32L(var)\
    (      (MSHSI2COCPI2C_SYSTESTSSBnoaction==(MSHSI2COCPI2C_SYSTESTSSBE)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_SSB_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SSB_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSSBIsnoaction32LM(var)\
    (      (MSHSI2COCPI2C_SYSTESTSSBnoaction==(MSHSI2COCPI2C_SYSTESTSSBE)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_SSB_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SSB_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSSBIssetstatus32L(var)\
    (      (MSHSI2COCPI2C_SYSTESTSSBsetstatus==(MSHSI2COCPI2C_SYSTESTSSBE)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_SSB_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SSB_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSSBIssetstatus32LM(var)\
    (      (MSHSI2COCPI2C_SYSTESTSSBsetstatus==(MSHSI2COCPI2C_SYSTESTSSBE)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_SSB_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_SSB_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSSBWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SSB_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSTEST_SSB_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSTEST_SSB_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSSBWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SSB_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSTEST_SSB_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSTEST_SSB_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSSBWritenoaction32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSTESTSSBnoaction <<\
                               MSHSI2COCP_I2C_SYSTEST_SSB_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SSB_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSSBWritenoaction32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSTESTSSBnoaction <<\
                               MSHSI2COCP_I2C_SYSTEST_SSB_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SSB_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSSBWritesetstatus32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSTESTSSBsetstatus <<\
                               MSHSI2COCP_I2C_SYSTEST_SSB_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SSB_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSSBWritesetstatus32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSTESTSSBsetstatus <<\
                               MSHSI2COCP_I2C_SYSTEST_SSB_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_SSB_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSSBSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_SYSTEST_SSB_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_SYSTEST_SSB_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_SYSTEST_SSB_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTSSBSet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_SYSTEST_SSB_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_SYSTEST_SSB_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_SYSTEST_SSB_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODERead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEReadIsfunctional32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTTMODEfunctional==(MSHSI2COCPI2C_SYSTESTTMODEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEReadIsfunctional32LM(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTTMODEfunctional==(MSHSI2COCPI2C_SYSTESTTMODEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEReadIsreserved32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTTMODEreserved==(MSHSI2COCPI2C_SYSTESTTMODEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEReadIsreserved32LM(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTTMODEreserved==(MSHSI2COCPI2C_SYSTESTTMODEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEReadIstest32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTTMODEtest==(MSHSI2COCPI2C_SYSTESTTMODEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEReadIstest32LM(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTTMODEtest==(MSHSI2COCPI2C_SYSTESTTMODEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEReadIsloopback32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTTMODEloopback==(MSHSI2COCPI2C_SYSTESTTMODEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEReadIsloopback32LM(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTTMODEloopback==(MSHSI2COCPI2C_SYSTESTTMODEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEIsfunctional32L(var)\
    (      (MSHSI2COCPI2C_SYSTESTTMODEfunctional==(MSHSI2COCPI2C_SYSTESTTMODEE)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEIsfunctional32LM(var)\
    (      (MSHSI2COCPI2C_SYSTESTTMODEfunctional==(MSHSI2COCPI2C_SYSTESTTMODEE)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEIsreserved32L(var)\
    (      (MSHSI2COCPI2C_SYSTESTTMODEreserved==(MSHSI2COCPI2C_SYSTESTTMODEE)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEIsreserved32LM(var)\
    (      (MSHSI2COCPI2C_SYSTESTTMODEreserved==(MSHSI2COCPI2C_SYSTESTTMODEE)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEIstest32L(var)\
    (      (MSHSI2COCPI2C_SYSTESTTMODEtest==(MSHSI2COCPI2C_SYSTESTTMODEE)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEIstest32LM(var)\
    (      (MSHSI2COCPI2C_SYSTESTTMODEtest==(MSHSI2COCPI2C_SYSTESTTMODEE)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEIsloopback32L(var)\
    (      (MSHSI2COCPI2C_SYSTESTTMODEloopback==(MSHSI2COCPI2C_SYSTESTTMODEE)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEIsloopback32LM(var)\
    (      (MSHSI2COCPI2C_SYSTESTTMODEloopback==(MSHSI2COCPI2C_SYSTESTTMODEE)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEWritefunctional32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSTESTTMODEfunctional <<\
                               MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEWritefunctional32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSTESTTMODEfunctional <<\
                               MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEWritereserved32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSTESTTMODEreserved <<\
                               MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEWritereserved32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSTESTTMODEreserved <<\
                               MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEWritetest32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSTESTTMODEtest <<\
                               MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEWritetest32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSTESTTMODEtest <<\
                               MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEWriteloopback32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSTESTTMODEloopback <<\
                               MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODEWriteloopback32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSTESTTMODEloopback <<\
                               MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTTMODESet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_SYSTEST_TMODE_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTFREERead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_FREE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_FREE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTFREERead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_FREE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_FREE_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTFREEReadIsstop32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTFREEstop==(MSHSI2COCPI2C_SYSTESTFREEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_FREE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_FREE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTFREEReadIsstop32LM(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTFREEstop==(MSHSI2COCPI2C_SYSTESTFREEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_FREE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_FREE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTFREEReadIsfree32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTFREEfree==(MSHSI2COCPI2C_SYSTESTFREEE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_FREE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_FREE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTFREEReadIsfree32LM(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTFREEfree==(MSHSI2COCPI2C_SYSTESTFREEE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_FREE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_FREE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTFREEGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_FREE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_FREE_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTFREEGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_FREE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_FREE_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTFREEIsstop32L(var)\
    (      (MSHSI2COCPI2C_SYSTESTFREEstop==(MSHSI2COCPI2C_SYSTESTFREEE)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_FREE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_FREE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTFREEIsstop32LM(var)\
    (      (MSHSI2COCPI2C_SYSTESTFREEstop==(MSHSI2COCPI2C_SYSTESTFREEE)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_FREE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_FREE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTFREEIsfree32L(var)\
    (      (MSHSI2COCPI2C_SYSTESTFREEfree==(MSHSI2COCPI2C_SYSTESTFREEE)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_FREE_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_FREE_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTFREEIsfree32LM(var)\
    (      (MSHSI2COCPI2C_SYSTESTFREEfree==(MSHSI2COCPI2C_SYSTESTFREEE)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_FREE_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_FREE_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTFREEWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_FREE_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSTEST_FREE_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSTEST_FREE_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTFREEWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_FREE_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSTEST_FREE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSTEST_FREE_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTFREEWritestop32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSTESTFREEstop <<\
                               MSHSI2COCP_I2C_SYSTEST_FREE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_FREE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTFREEWritestop32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSTESTFREEstop <<\
                               MSHSI2COCP_I2C_SYSTEST_FREE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_FREE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTFREEWritefree32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSTESTFREEfree <<\
                               MSHSI2COCP_I2C_SYSTEST_FREE_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_FREE_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTFREEWritefree32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSTESTFREEfree <<\
                               MSHSI2COCP_I2C_SYSTEST_FREE_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_FREE_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTFREESet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_SYSTEST_FREE_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_SYSTEST_FREE_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_SYSTEST_FREE_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTFREESet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_SYSTEST_FREE_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_SYSTEST_FREE_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_SYSTEST_FREE_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTST_ENRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTST_ENRead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTST_ENReadIsdisable32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTST_ENdisable==(MSHSI2COCPI2C_SYSTESTST_ENE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTST_ENReadIsdisable32LM(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTST_ENdisable==(MSHSI2COCPI2C_SYSTESTST_ENE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTST_ENReadIsenable32L(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTST_ENenable==(MSHSI2COCPI2C_SYSTESTST_ENE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTST_ENReadIsenable32LM(baseAddress)\
    (      (MSHSI2COCPI2C_SYSTESTST_ENenable==(MSHSI2COCPI2C_SYSTESTST_ENE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SYSTEST_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTST_ENGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTST_ENGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTST_ENIsdisable32L(var)\
    (      (MSHSI2COCPI2C_SYSTESTST_ENdisable==(MSHSI2COCPI2C_SYSTESTST_ENE)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTST_ENIsdisable32LM(var)\
    (      (MSHSI2COCPI2C_SYSTESTST_ENdisable==(MSHSI2COCPI2C_SYSTESTST_ENE)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTST_ENIsenable32L(var)\
    (      (MSHSI2COCPI2C_SYSTESTST_ENenable==(MSHSI2COCPI2C_SYSTESTST_ENE)((((short)(var)) & MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTST_ENIsenable32LM(var)\
    (      (MSHSI2COCPI2C_SYSTESTST_ENenable==(MSHSI2COCPI2C_SYSTESTST_ENE)((((char)(var)) & MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTST_ENWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTST_ENWrite32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTST_ENWritedisable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSTESTST_ENdisable <<\
                               MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTST_ENWritedisable32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSTESTST_ENdisable <<\
                               MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTST_ENWriteenable32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SYSTESTST_ENenable <<\
                               MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTST_ENWriteenable32LM(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SYSTEST_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SYSTESTST_ENenable <<\
                               MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_WORD_LO_MIDDLE_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_WORD_LO_MIDDLE_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTST_ENSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SYSTESTST_ENSet32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_SYSTEST_ST_EN_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATReadRegister32U(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_BUFSTAT_OFFSET +\
      LOWER_WORD_UPPER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATReadRegister32L(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_BUFSTAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATReadRegister32UU(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_BUFSTAT_OFFSET +\
      LOWER_WORD_UPPER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATReadRegister32UM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_BUFSTAT_OFFSET +\
      LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATReadRegister32LM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_BUFSTAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATReadRegister32LL(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_BUFSTAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATTXSTATRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUFSTAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUFSTAT_TXSTAT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_TXSTAT_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATTXSTATRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUFSTAT_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUFSTAT_TXSTAT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_TXSTAT_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATTXSTATGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_BUFSTAT_TXSTAT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_TXSTAT_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATTXSTATGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_BUFSTAT_TXSTAT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_TXSTAT_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATRXSTATRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUFSTAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUFSTAT_RXSTAT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_RXSTAT_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATRXSTATRead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUFSTAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUFSTAT_RXSTAT_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_RXSTAT_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATRXSTATGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_BUFSTAT_RXSTAT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_RXSTAT_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATRXSTATGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_BUFSTAT_RXSTAT_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_RXSTAT_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATFIFODEPTHRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUFSTAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATFIFODEPTHRead32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUFSTAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATFIFODEPTHReadIsb0832L(baseAddress)\
    (      (MSHSI2COCPI2C_BUFSTATFIFODEPTHb08==(MSHSI2COCPI2C_BUFSTATFIFODEPTHE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUFSTAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATFIFODEPTHReadIsb0832LM(baseAddress)\
    (      (MSHSI2COCPI2C_BUFSTATFIFODEPTHb08==(MSHSI2COCPI2C_BUFSTATFIFODEPTHE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUFSTAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATFIFODEPTHReadIsb1632L(baseAddress)\
    (      (MSHSI2COCPI2C_BUFSTATFIFODEPTHb16==(MSHSI2COCPI2C_BUFSTATFIFODEPTHE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUFSTAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATFIFODEPTHReadIsb1632LM(baseAddress)\
    (      (MSHSI2COCPI2C_BUFSTATFIFODEPTHb16==(MSHSI2COCPI2C_BUFSTATFIFODEPTHE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUFSTAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATFIFODEPTHReadIsb3232L(baseAddress)\
    (      (MSHSI2COCPI2C_BUFSTATFIFODEPTHb32==(MSHSI2COCPI2C_BUFSTATFIFODEPTHE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUFSTAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATFIFODEPTHReadIsb3232LM(baseAddress)\
    (      (MSHSI2COCPI2C_BUFSTATFIFODEPTHb32==(MSHSI2COCPI2C_BUFSTATFIFODEPTHE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUFSTAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATFIFODEPTHReadIsb6432L(baseAddress)\
    (      (MSHSI2COCPI2C_BUFSTATFIFODEPTHb64==(MSHSI2COCPI2C_BUFSTATFIFODEPTHE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUFSTAT_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATFIFODEPTHReadIsb6432LM(baseAddress)\
    (      (MSHSI2COCPI2C_BUFSTATFIFODEPTHb64==(MSHSI2COCPI2C_BUFSTATFIFODEPTHE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_BUFSTAT_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATFIFODEPTHGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATFIFODEPTHGet32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATFIFODEPTHIsb0832L(var)\
    (      (MSHSI2COCPI2C_BUFSTATFIFODEPTHb08==(MSHSI2COCPI2C_BUFSTATFIFODEPTHE)((((short)(var)) & MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATFIFODEPTHIsb0832LM(var)\
    (      (MSHSI2COCPI2C_BUFSTATFIFODEPTHb08==(MSHSI2COCPI2C_BUFSTATFIFODEPTHE)((((char)(var)) & MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATFIFODEPTHIsb1632L(var)\
    (      (MSHSI2COCPI2C_BUFSTATFIFODEPTHb16==(MSHSI2COCPI2C_BUFSTATFIFODEPTHE)((((short)(var)) & MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATFIFODEPTHIsb1632LM(var)\
    (      (MSHSI2COCPI2C_BUFSTATFIFODEPTHb16==(MSHSI2COCPI2C_BUFSTATFIFODEPTHE)((((char)(var)) & MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATFIFODEPTHIsb3232L(var)\
    (      (MSHSI2COCPI2C_BUFSTATFIFODEPTHb32==(MSHSI2COCPI2C_BUFSTATFIFODEPTHE)((((short)(var)) & MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATFIFODEPTHIsb3232LM(var)\
    (      (MSHSI2COCPI2C_BUFSTATFIFODEPTHb32==(MSHSI2COCPI2C_BUFSTATFIFODEPTHE)((((char)(var)) & MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATFIFODEPTHIsb6432L(var)\
    (      (MSHSI2COCPI2C_BUFSTATFIFODEPTHb64==(MSHSI2COCPI2C_BUFSTATFIFODEPTHE)((((short)(var)) & MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_16_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_BUFSTATFIFODEPTHIsb6432LM(var)\
    (      (MSHSI2COCPI2C_BUFSTATFIFODEPTHb64==(MSHSI2COCPI2C_BUFSTATFIFODEPTHE)((((char)(var)) & MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_BUFSTAT_FIFODEPTH_LO_WORD_LO_MIDDLE_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_OA1ReadRegister32U(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_OA1_OFFSET +\
      LOWER_WORD_UPPER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA1ReadRegister32L(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_OA1_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA1ReadRegister32UU(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_OA1_OFFSET +\
      LOWER_WORD_UPPER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA1ReadRegister32UM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_OA1_OFFSET +\
      LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA1ReadRegister32LM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_OA1_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA1ReadRegister32LL(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_OA1_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA1WriteRegister32U(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_OA1_OFFSET +\
                             LOWER_WORD_UPPER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA1WriteRegister32L(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_OA1_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA1WriteRegister32UU(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_OA1_OFFSET +\
                             LOWER_WORD_UPPER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA1WriteRegister32UM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_OA1_OFFSET +\
                             LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA1WriteRegister32LM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_OA1_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA1WriteRegister32LL(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_OA1_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA1OA1Read32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_OA1_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_OA1_OA1_LO_16_MASK) >> \
      MSHSI2COCP_I2C_OA1_OA1_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA1OA1Read32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_OA1_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_OA1_OA1_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_OA1_OA1_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA1OA1Read32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_OA1_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_OA1_OA1_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_OA1_OA1_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA1OA1Get32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_OA1_OA1_LO_16_MASK) >> \
      MSHSI2COCP_I2C_OA1_OA1_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA1OA1Get32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_OA1_OA1_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_OA1_OA1_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA1OA1Get32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_OA1_OA1_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_OA1_OA1_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA1OA1Write32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_OA1_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_OA1_OA1_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_OA1_OA1_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_OA1_OA1_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA1OA1Write32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_OA1_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_OA1_OA1_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_OA1_OA1_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_OA1_OA1_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA1OA1Write32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_OA1_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_OA1_OA1_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_OA1_OA1_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_OA1_OA1_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA1OA1Set32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_OA1_OA1_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_OA1_OA1_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_OA1_OA1_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_OA1OA1Set32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_OA1_OA1_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_OA1_OA1_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_OA1_OA1_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_OA1OA1Set32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_OA1_OA1_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_OA1_OA1_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_OA1_OA1_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_OA2ReadRegister32U(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_OA2_OFFSET +\
      LOWER_WORD_UPPER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA2ReadRegister32L(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_OA2_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA2ReadRegister32UU(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_OA2_OFFSET +\
      LOWER_WORD_UPPER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA2ReadRegister32UM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_OA2_OFFSET +\
      LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA2ReadRegister32LM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_OA2_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA2ReadRegister32LL(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_OA2_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA2WriteRegister32U(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_OA2_OFFSET +\
                             LOWER_WORD_UPPER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA2WriteRegister32L(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_OA2_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA2WriteRegister32UU(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_OA2_OFFSET +\
                             LOWER_WORD_UPPER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA2WriteRegister32UM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_OA2_OFFSET +\
                             LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA2WriteRegister32LM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_OA2_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA2WriteRegister32LL(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_OA2_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA2OA2Read32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_OA2_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_OA2_OA2_LO_16_MASK) >> \
      MSHSI2COCP_I2C_OA2_OA2_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA2OA2Read32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_OA2_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_OA2_OA2_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_OA2_OA2_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA2OA2Read32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_OA2_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_OA2_OA2_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_OA2_OA2_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA2OA2Get32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_OA2_OA2_LO_16_MASK) >> \
      MSHSI2COCP_I2C_OA2_OA2_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA2OA2Get32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_OA2_OA2_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_OA2_OA2_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA2OA2Get32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_OA2_OA2_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_OA2_OA2_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA2OA2Write32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_OA2_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_OA2_OA2_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_OA2_OA2_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_OA2_OA2_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA2OA2Write32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_OA2_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_OA2_OA2_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_OA2_OA2_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_OA2_OA2_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA2OA2Write32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_OA2_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_OA2_OA2_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_OA2_OA2_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_OA2_OA2_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA2OA2Set32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_OA2_OA2_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_OA2_OA2_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_OA2_OA2_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_OA2OA2Set32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_OA2_OA2_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_OA2_OA2_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_OA2_OA2_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_OA2OA2Set32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_OA2_OA2_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_OA2_OA2_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_OA2_OA2_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_OA3ReadRegister32U(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_OA3_OFFSET +\
      LOWER_WORD_UPPER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA3ReadRegister32L(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_OA3_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA3ReadRegister32UU(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_OA3_OFFSET +\
      LOWER_WORD_UPPER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA3ReadRegister32UM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_OA3_OFFSET +\
      LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA3ReadRegister32LM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_OA3_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA3ReadRegister32LL(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_OA3_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA3WriteRegister32U(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_OA3_OFFSET +\
                             LOWER_WORD_UPPER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA3WriteRegister32L(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_OA3_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA3WriteRegister32UU(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_OA3_OFFSET +\
                             LOWER_WORD_UPPER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA3WriteRegister32UM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_OA3_OFFSET +\
                             LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA3WriteRegister32LM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_OA3_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA3WriteRegister32LL(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_OA3_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA3OA3Read32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_OA3_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_OA3_OA3_LO_16_MASK) >> \
      MSHSI2COCP_I2C_OA3_OA3_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA3OA3Read32LM(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_OA3_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_OA3_OA3_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_OA3_OA3_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA3OA3Read32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_OA3_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_OA3_OA3_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_OA3_OA3_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA3OA3Get32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_OA3_OA3_LO_16_MASK) >> \
      MSHSI2COCP_I2C_OA3_OA3_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA3OA3Get32LM(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_OA3_OA3_LO_WORD_LO_MIDDLE_8_MASK) >> \
      MSHSI2COCP_I2C_OA3_OA3_LO_WORD_LO_MIDDLE_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA3OA3Get32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_OA3_OA3_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_OA3_OA3_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_OA3OA3Write32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_OA3_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_OA3_OA3_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_OA3_OA3_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_OA3_OA3_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA3OA3Write32LM(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_OA3_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_OA3_OA3_LO_WORD_LO_MIDDLE_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_OA3_OA3_LO_WORD_LO_MIDDLE_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_OA3_OA3_LO_WORD_LO_MIDDLE_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA3OA3Write32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_OA3_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_OA3_OA3_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_OA3_OA3_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_OA3_OA3_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_OA3OA3Set32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_OA3_OA3_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_OA3_OA3_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_OA3_OA3_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_OA3OA3Set32LM(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_OA3_OA3_LO_WORD_LO_MIDDLE_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_OA3_OA3_LO_WORD_LO_MIDDLE_8_OFFSET) &\
      MSHSI2COCP_I2C_OA3_OA3_LO_WORD_LO_MIDDLE_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_OA3OA3Set32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_OA3_OA3_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_OA3_OA3_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_OA3_OA3_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAReadRegister32U(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_UPPER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAReadRegister32L(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAReadRegister32UU(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_UPPER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAReadRegister32UM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAReadRegister32LM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAReadRegister32LL(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA0_ACTRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_ACTOA_OA0_ACT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA0_ACT_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA0_ACTRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_ACTOA_OA0_ACT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA0_ACT_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA0_ACTReadIsinactive32L(baseAddress)\
    (      (MSHSI2COCPI2C_ACTOAOA0_ACTinactive==(MSHSI2COCPI2C_ACTOAOA0_ACTE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_ACTOA_OA0_ACT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA0_ACT_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA0_ACTReadIsinactive32LL(baseAddress)\
    (      (MSHSI2COCPI2C_ACTOAOA0_ACTinactive==(MSHSI2COCPI2C_ACTOAOA0_ACTE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_ACTOA_OA0_ACT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA0_ACT_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA0_ACTReadIsactive32L(baseAddress)\
    (      (MSHSI2COCPI2C_ACTOAOA0_ACTactive==(MSHSI2COCPI2C_ACTOAOA0_ACTE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_ACTOA_OA0_ACT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA0_ACT_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA0_ACTReadIsactive32LL(baseAddress)\
    (      (MSHSI2COCPI2C_ACTOAOA0_ACTactive==(MSHSI2COCPI2C_ACTOAOA0_ACTE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_ACTOA_OA0_ACT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA0_ACT_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA0_ACTGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_ACTOA_OA0_ACT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA0_ACT_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA0_ACTGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_ACTOA_OA0_ACT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA0_ACT_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA0_ACTIsinactive32L(var)\
    (      (MSHSI2COCPI2C_ACTOAOA0_ACTinactive==(MSHSI2COCPI2C_ACTOAOA0_ACTE)((((short)(var)) & MSHSI2COCP_I2C_ACTOA_OA0_ACT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA0_ACT_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA0_ACTIsinactive32LL(var)\
    (      (MSHSI2COCPI2C_ACTOAOA0_ACTinactive==(MSHSI2COCPI2C_ACTOAOA0_ACTE)((((char)(var)) & MSHSI2COCP_I2C_ACTOA_OA0_ACT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA0_ACT_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA0_ACTIsactive32L(var)\
    (      (MSHSI2COCPI2C_ACTOAOA0_ACTactive==(MSHSI2COCPI2C_ACTOAOA0_ACTE)((((short)(var)) & MSHSI2COCP_I2C_ACTOA_OA0_ACT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA0_ACT_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA0_ACTIsactive32LL(var)\
    (      (MSHSI2COCPI2C_ACTOAOA0_ACTactive==(MSHSI2COCPI2C_ACTOAOA0_ACTE)((((char)(var)) & MSHSI2COCP_I2C_ACTOA_OA0_ACT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA0_ACT_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA1_ACTRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_ACTOA_OA1_ACT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA1_ACT_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA1_ACTRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_ACTOA_OA1_ACT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA1_ACT_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA1_ACTReadIsinactive32L(baseAddress)\
    (      (MSHSI2COCPI2C_ACTOAOA1_ACTinactive==(MSHSI2COCPI2C_ACTOAOA1_ACTE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_ACTOA_OA1_ACT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA1_ACT_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA1_ACTReadIsinactive32LL(baseAddress)\
    (      (MSHSI2COCPI2C_ACTOAOA1_ACTinactive==(MSHSI2COCPI2C_ACTOAOA1_ACTE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_ACTOA_OA1_ACT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA1_ACT_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA1_ACTReadIsactive32L(baseAddress)\
    (      (MSHSI2COCPI2C_ACTOAOA1_ACTactive==(MSHSI2COCPI2C_ACTOAOA1_ACTE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_ACTOA_OA1_ACT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA1_ACT_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA1_ACTReadIsactive32LL(baseAddress)\
    (      (MSHSI2COCPI2C_ACTOAOA1_ACTactive==(MSHSI2COCPI2C_ACTOAOA1_ACTE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_ACTOA_OA1_ACT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA1_ACT_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA1_ACTGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_ACTOA_OA1_ACT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA1_ACT_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA1_ACTGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_ACTOA_OA1_ACT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA1_ACT_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA1_ACTIsinactive32L(var)\
    (      (MSHSI2COCPI2C_ACTOAOA1_ACTinactive==(MSHSI2COCPI2C_ACTOAOA1_ACTE)((((short)(var)) & MSHSI2COCP_I2C_ACTOA_OA1_ACT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA1_ACT_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA1_ACTIsinactive32LL(var)\
    (      (MSHSI2COCPI2C_ACTOAOA1_ACTinactive==(MSHSI2COCPI2C_ACTOAOA1_ACTE)((((char)(var)) & MSHSI2COCP_I2C_ACTOA_OA1_ACT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA1_ACT_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA1_ACTIsactive32L(var)\
    (      (MSHSI2COCPI2C_ACTOAOA1_ACTactive==(MSHSI2COCPI2C_ACTOAOA1_ACTE)((((short)(var)) & MSHSI2COCP_I2C_ACTOA_OA1_ACT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA1_ACT_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA1_ACTIsactive32LL(var)\
    (      (MSHSI2COCPI2C_ACTOAOA1_ACTactive==(MSHSI2COCPI2C_ACTOAOA1_ACTE)((((char)(var)) & MSHSI2COCP_I2C_ACTOA_OA1_ACT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA1_ACT_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA2_ACTRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_ACTOA_OA2_ACT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA2_ACT_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA2_ACTRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_ACTOA_OA2_ACT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA2_ACT_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA2_ACTReadIsinactive32L(baseAddress)\
    (      (MSHSI2COCPI2C_ACTOAOA2_ACTinactive==(MSHSI2COCPI2C_ACTOAOA2_ACTE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_ACTOA_OA2_ACT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA2_ACT_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA2_ACTReadIsinactive32LL(baseAddress)\
    (      (MSHSI2COCPI2C_ACTOAOA2_ACTinactive==(MSHSI2COCPI2C_ACTOAOA2_ACTE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_ACTOA_OA2_ACT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA2_ACT_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA2_ACTReadIsactive32L(baseAddress)\
    (      (MSHSI2COCPI2C_ACTOAOA2_ACTactive==(MSHSI2COCPI2C_ACTOAOA2_ACTE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_ACTOA_OA2_ACT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA2_ACT_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA2_ACTReadIsactive32LL(baseAddress)\
    (      (MSHSI2COCPI2C_ACTOAOA2_ACTactive==(MSHSI2COCPI2C_ACTOAOA2_ACTE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_ACTOA_OA2_ACT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA2_ACT_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA2_ACTGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_ACTOA_OA2_ACT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA2_ACT_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA2_ACTGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_ACTOA_OA2_ACT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA2_ACT_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA2_ACTIsinactive32L(var)\
    (      (MSHSI2COCPI2C_ACTOAOA2_ACTinactive==(MSHSI2COCPI2C_ACTOAOA2_ACTE)((((short)(var)) & MSHSI2COCP_I2C_ACTOA_OA2_ACT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA2_ACT_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA2_ACTIsinactive32LL(var)\
    (      (MSHSI2COCPI2C_ACTOAOA2_ACTinactive==(MSHSI2COCPI2C_ACTOAOA2_ACTE)((((char)(var)) & MSHSI2COCP_I2C_ACTOA_OA2_ACT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA2_ACT_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA2_ACTIsactive32L(var)\
    (      (MSHSI2COCPI2C_ACTOAOA2_ACTactive==(MSHSI2COCPI2C_ACTOAOA2_ACTE)((((short)(var)) & MSHSI2COCP_I2C_ACTOA_OA2_ACT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA2_ACT_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA2_ACTIsactive32LL(var)\
    (      (MSHSI2COCPI2C_ACTOAOA2_ACTactive==(MSHSI2COCPI2C_ACTOAOA2_ACTE)((((char)(var)) & MSHSI2COCP_I2C_ACTOA_OA2_ACT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA2_ACT_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA3_ACTRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_ACTOA_OA3_ACT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA3_ACT_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA3_ACTRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_ACTOA_OA3_ACT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA3_ACT_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA3_ACTReadIsinactive32L(baseAddress)\
    (      (MSHSI2COCPI2C_ACTOAOA3_ACTinactive==(MSHSI2COCPI2C_ACTOAOA3_ACTE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_ACTOA_OA3_ACT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA3_ACT_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA3_ACTReadIsinactive32LL(baseAddress)\
    (      (MSHSI2COCPI2C_ACTOAOA3_ACTinactive==(MSHSI2COCPI2C_ACTOAOA3_ACTE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_ACTOA_OA3_ACT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA3_ACT_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA3_ACTReadIsactive32L(baseAddress)\
    (      (MSHSI2COCPI2C_ACTOAOA3_ACTactive==(MSHSI2COCPI2C_ACTOAOA3_ACTE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_ACTOA_OA3_ACT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA3_ACT_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA3_ACTReadIsactive32LL(baseAddress)\
    (      (MSHSI2COCPI2C_ACTOAOA3_ACTactive==(MSHSI2COCPI2C_ACTOAOA3_ACTE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_ACTOA_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_ACTOA_OA3_ACT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA3_ACT_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA3_ACTGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_ACTOA_OA3_ACT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA3_ACT_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA3_ACTGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_ACTOA_OA3_ACT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA3_ACT_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA3_ACTIsinactive32L(var)\
    (      (MSHSI2COCPI2C_ACTOAOA3_ACTinactive==(MSHSI2COCPI2C_ACTOAOA3_ACTE)((((short)(var)) & MSHSI2COCP_I2C_ACTOA_OA3_ACT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA3_ACT_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA3_ACTIsinactive32LL(var)\
    (      (MSHSI2COCPI2C_ACTOAOA3_ACTinactive==(MSHSI2COCPI2C_ACTOAOA3_ACTE)((((char)(var)) & MSHSI2COCP_I2C_ACTOA_OA3_ACT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA3_ACT_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA3_ACTIsactive32L(var)\
    (      (MSHSI2COCPI2C_ACTOAOA3_ACTactive==(MSHSI2COCPI2C_ACTOAOA3_ACTE)((((short)(var)) & MSHSI2COCP_I2C_ACTOA_OA3_ACT_LO_16_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA3_ACT_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_ACTOAOA3_ACTIsactive32LL(var)\
    (      (MSHSI2COCPI2C_ACTOAOA3_ACTactive==(MSHSI2COCPI2C_ACTOAOA3_ACTE)((((char)(var)) & MSHSI2COCP_I2C_ACTOA_OA3_ACT_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_ACTOA_OA3_ACT_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKReadRegister32U(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_UPPER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKReadRegister32L(baseAddress)\
    (\
      RD_MEM_16_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKReadRegister32UU(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_UPPER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKReadRegister32UM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKReadRegister32LM(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKReadRegister32LL(baseAddress)\
    (\
      RD_MEM_8_VOLATILE(((int)(baseAddress))+MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKWriteRegister32U(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_UPPER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKWriteRegister32L(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = ((short)(value));\
    WR_MEM_16_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKWriteRegister32UU(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_UPPER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKWriteRegister32UM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_UPPER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKWriteRegister32LM(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_MIDDLE_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKWriteRegister32LL(baseAddress,  value)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = ((char)(value));\
    WR_MEM_8_VOLATILE(((int)(baseAddress))+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA0_ENRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA0_ENRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA0_ENReadIsunlock32L(baseAddress)\
    (      (MSHSI2COCPI2C_SBLOCKOA0_ENunlock==(MSHSI2COCPI2C_SBLOCKOA0_ENE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA0_ENReadIsunlock32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SBLOCKOA0_ENunlock==(MSHSI2COCPI2C_SBLOCKOA0_ENE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA0_ENReadIslock32L(baseAddress)\
    (      (MSHSI2COCPI2C_SBLOCKOA0_ENlock==(MSHSI2COCPI2C_SBLOCKOA0_ENE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA0_ENReadIslock32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SBLOCKOA0_ENlock==(MSHSI2COCPI2C_SBLOCKOA0_ENE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA0_ENGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA0_ENGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA0_ENIsunlock32L(var)\
    (      (MSHSI2COCPI2C_SBLOCKOA0_ENunlock==(MSHSI2COCPI2C_SBLOCKOA0_ENE)((((short)(var)) & MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA0_ENIsunlock32LL(var)\
    (      (MSHSI2COCPI2C_SBLOCKOA0_ENunlock==(MSHSI2COCPI2C_SBLOCKOA0_ENE)((((char)(var)) & MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA0_ENIslock32L(var)\
    (      (MSHSI2COCPI2C_SBLOCKOA0_ENlock==(MSHSI2COCPI2C_SBLOCKOA0_ENE)((((short)(var)) & MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA0_ENIslock32LL(var)\
    (      (MSHSI2COCPI2C_SBLOCKOA0_ENlock==(MSHSI2COCPI2C_SBLOCKOA0_ENE)((((char)(var)) & MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA0_ENWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA0_ENWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA0_ENWriteunlock32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SBLOCKOA0_ENunlock <<\
                               MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA0_ENWriteunlock32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SBLOCKOA0_ENunlock <<\
                               MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA0_ENWritelock32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SBLOCKOA0_ENlock <<\
                               MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA0_ENWritelock32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SBLOCKOA0_ENlock <<\
                               MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA0_ENSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA0_ENSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_SBLOCK_OA0_EN_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA1_ENRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA1_ENRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA1_ENReadIsunlock32L(baseAddress)\
    (      (MSHSI2COCPI2C_SBLOCKOA1_ENunlock==(MSHSI2COCPI2C_SBLOCKOA1_ENE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA1_ENReadIsunlock32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SBLOCKOA1_ENunlock==(MSHSI2COCPI2C_SBLOCKOA1_ENE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA1_ENReadIslock32L(baseAddress)\
    (      (MSHSI2COCPI2C_SBLOCKOA1_ENlock==(MSHSI2COCPI2C_SBLOCKOA1_ENE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA1_ENReadIslock32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SBLOCKOA1_ENlock==(MSHSI2COCPI2C_SBLOCKOA1_ENE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA1_ENGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA1_ENGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA1_ENIsunlock32L(var)\
    (      (MSHSI2COCPI2C_SBLOCKOA1_ENunlock==(MSHSI2COCPI2C_SBLOCKOA1_ENE)((((short)(var)) & MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA1_ENIsunlock32LL(var)\
    (      (MSHSI2COCPI2C_SBLOCKOA1_ENunlock==(MSHSI2COCPI2C_SBLOCKOA1_ENE)((((char)(var)) & MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA1_ENIslock32L(var)\
    (      (MSHSI2COCPI2C_SBLOCKOA1_ENlock==(MSHSI2COCPI2C_SBLOCKOA1_ENE)((((short)(var)) & MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA1_ENIslock32LL(var)\
    (      (MSHSI2COCPI2C_SBLOCKOA1_ENlock==(MSHSI2COCPI2C_SBLOCKOA1_ENE)((((char)(var)) & MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA1_ENWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA1_ENWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA1_ENWriteunlock32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SBLOCKOA1_ENunlock <<\
                               MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA1_ENWriteunlock32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SBLOCKOA1_ENunlock <<\
                               MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA1_ENWritelock32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SBLOCKOA1_ENlock <<\
                               MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA1_ENWritelock32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SBLOCKOA1_ENlock <<\
                               MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA1_ENSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA1_ENSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_SBLOCK_OA1_EN_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA2_ENRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA2_ENRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA2_ENReadIsunlock32L(baseAddress)\
    (      (MSHSI2COCPI2C_SBLOCKOA2_ENunlock==(MSHSI2COCPI2C_SBLOCKOA2_ENE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA2_ENReadIsunlock32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SBLOCKOA2_ENunlock==(MSHSI2COCPI2C_SBLOCKOA2_ENE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA2_ENReadIslock32L(baseAddress)\
    (      (MSHSI2COCPI2C_SBLOCKOA2_ENlock==(MSHSI2COCPI2C_SBLOCKOA2_ENE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA2_ENReadIslock32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SBLOCKOA2_ENlock==(MSHSI2COCPI2C_SBLOCKOA2_ENE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA2_ENGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA2_ENGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA2_ENIsunlock32L(var)\
    (      (MSHSI2COCPI2C_SBLOCKOA2_ENunlock==(MSHSI2COCPI2C_SBLOCKOA2_ENE)((((short)(var)) & MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA2_ENIsunlock32LL(var)\
    (      (MSHSI2COCPI2C_SBLOCKOA2_ENunlock==(MSHSI2COCPI2C_SBLOCKOA2_ENE)((((char)(var)) & MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA2_ENIslock32L(var)\
    (      (MSHSI2COCPI2C_SBLOCKOA2_ENlock==(MSHSI2COCPI2C_SBLOCKOA2_ENE)((((short)(var)) & MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA2_ENIslock32LL(var)\
    (      (MSHSI2COCPI2C_SBLOCKOA2_ENlock==(MSHSI2COCPI2C_SBLOCKOA2_ENE)((((char)(var)) & MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA2_ENWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA2_ENWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA2_ENWriteunlock32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SBLOCKOA2_ENunlock <<\
                               MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA2_ENWriteunlock32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SBLOCKOA2_ENunlock <<\
                               MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA2_ENWritelock32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SBLOCKOA2_ENlock <<\
                               MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA2_ENWritelock32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SBLOCKOA2_ENlock <<\
                               MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA2_ENSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA2_ENSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_SBLOCK_OA2_EN_LO_WORD_LO_8_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA3_ENRead32L(baseAddress)\
    (\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA3_ENRead32LL(baseAddress)\
    (\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA3_ENReadIsunlock32L(baseAddress)\
    (      (MSHSI2COCPI2C_SBLOCKOA3_ENunlock==(MSHSI2COCPI2C_SBLOCKOA3_ENE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA3_ENReadIsunlock32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SBLOCKOA3_ENunlock==(MSHSI2COCPI2C_SBLOCKOA3_ENE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA3_ENReadIslock32L(baseAddress)\
    (      (MSHSI2COCPI2C_SBLOCKOA3_ENlock==(MSHSI2COCPI2C_SBLOCKOA3_ENE)\
      (((RD_MEM_16_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_16BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA3_ENReadIslock32LL(baseAddress)\
    (      (MSHSI2COCPI2C_SBLOCKOA3_ENlock==(MSHSI2COCPI2C_SBLOCKOA3_ENE)\
      (((RD_MEM_8_VOLATILE(((int)(baseAddress))+(MSHSI2COCP_I2C_SBLOCK_OFFSET +\
      LOWER_WORD_LOWER_8BIT_OFFSET))) &\
      MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA3_ENGet32L(var)\
    (\
      (short)((((short)(var)) & MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_16_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA3_ENGet32LL(var)\
    (\
      (char)((((char)(var)) & MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_WORD_LO_8_OFFSET))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA3_ENIsunlock32L(var)\
    (      (MSHSI2COCPI2C_SBLOCKOA3_ENunlock==(MSHSI2COCPI2C_SBLOCKOA3_ENE)((((short)(var)) & MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA3_ENIsunlock32LL(var)\
    (      (MSHSI2COCPI2C_SBLOCKOA3_ENunlock==(MSHSI2COCPI2C_SBLOCKOA3_ENE)((((char)(var)) & MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA3_ENIslock32L(var)\
    (      (MSHSI2COCPI2C_SBLOCKOA3_ENlock==(MSHSI2COCPI2C_SBLOCKOA3_ENE)((((short)(var)) & MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_16_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_16_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA3_ENIslock32LL(var)\
    (      (MSHSI2COCPI2C_SBLOCKOA3_ENlock==(MSHSI2COCPI2C_SBLOCKOA3_ENE)((((char)(var)) & MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_WORD_LO_8_MASK) >> \
      MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_WORD_LO_8_OFFSET)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA3_ENWrite32L(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short data = RD_MEM_16_VOLATILE(((int)(baseAddress))+offset);\
    short newValue = ((short)(value));\
    data &= ~(MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_16_MASK);\
    newValue <<= MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_16_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_16_MASK;\
    newValue |= data;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA3_ENWrite32LL(baseAddress, value)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char data = RD_MEM_8_VOLATILE(((int)(baseAddress))+offset);\
    char newValue = ((char)(value));\
    data &= ~(MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_WORD_LO_8_MASK);\
    newValue <<= MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_WORD_LO_8_OFFSET;\
    newValue &= MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_WORD_LO_8_MASK;\
    newValue |= data;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, newValue);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA3_ENWriteunlock32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SBLOCKOA3_ENunlock <<\
                               MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA3_ENWriteunlock32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SBLOCKOA3_ENunlock <<\
                               MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA3_ENWritelock32L(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_16BIT_OFFSET;\
    short newValue = (short)MSHSI2COCPI2C_SBLOCKOA3_ENlock <<\
                               MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_16_OFFSET;\
    short data = RD_MEM_16_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_16_MASK);\
    data |= newValue;\
    WR_MEM_16_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA3_ENWritelock32LL(baseAddress)\
{\
    int offset = MSHSI2COCP_I2C_SBLOCK_OFFSET +\
                             LOWER_WORD_LOWER_8BIT_OFFSET;\
    char newValue = (char)MSHSI2COCPI2C_SBLOCKOA3_ENlock <<\
                               MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_WORD_LO_8_OFFSET;\
    char data = RD_MEM_8_VOLATILE((int)(baseAddress)+offset);\
    data &= ~(MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_WORD_LO_8_MASK);\
    data |= newValue;\
    WR_MEM_8_VOLATILE((int)(baseAddress)+offset, data);\
}


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA3_ENSet32L(var, value)\
    (\
      ((((short)(var)) & ~(MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_16_MASK)) |\
      ((((short)(value)) << MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_16_OFFSET) &\
      MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_16_MASK)))


/********************************************************************/


#define MSHSI2COCPI2C_SBLOCKOA3_ENSet32LL(var, value)\
    (\
      ((((char)(var)) & ~(MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_WORD_LO_8_MASK)) |\
      ((((char)(value)) << MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_WORD_LO_8_OFFSET) &\
      MSHSI2COCP_I2C_SBLOCK_OA3_EN_LO_WORD_LO_8_MASK)))


/********************************************************************/






