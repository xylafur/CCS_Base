/*******************************************************************/
/* This GEL file is loaded on the command line of Code Composer    */
/* The StartUp() function is called every time you start           */
/* Code Composer.  You can customize this function to              */
/* initialize wait states or to perform other initialization.      */
/*                                                                 */
/* DRA7xx CortexA15 CPU0 startup                                   */
/*                                                                 */
/*                                                                 */
/*******************************************************************/


#define WR_MEM_32(addr, data)   *(unsigned int*)(addr) =(unsigned int)(data)
#define RD_MEM_32(addr)         *(unsigned int*)(addr)
#define uint32_t                unsigned int



StartUp()
{
    GEL_TextOut("--->>> DRA7xx Cortex A15 Startup Sequence In Progress... <<<---\n");

    /*------------------ Load Common Gel Files -------------------*/
    // Common Startup (Has OnTargetConnect)
    GEL_LoadGel("$(GEL_file_dir)//DRA7xx_startup_common.gel");

    // PRCM config (no OnTargetConnect)
    GEL_LoadGel("$(GEL_file_dir)//DRA7xx_prcm_config.gel");

    // Padconf (no OnTargetConnect)
    GEL_LoadGel("$(GEL_file_dir)//DRA7xx_pad_config.gel");

    // Reset config (no OnTargetConnect)
    GEL_LoadGel("$(GEL_file_dir)//DRA7xx_multicore_reset.gel");

    // DDR config (no OnTargetConnect)
    GEL_LoadGel("$(GEL_file_dir)//DRA7xx_emif_macros.gel");
    GEL_LoadGel("$(GEL_file_dir)//DRA7xx_ddr_config.gel");

    // MLB config (no OnTargetConnect)
    GEL_LoadGel("$(GEL_file_dir)//DRA7xx_mlb_config.gel");

    // PRCM Gel Config (no OnTargetConnect)
    GEL_LoadGel("$(GEL_file_dir)//DRA7xx_PRCM_Get_Config.gel");

    // SMP configuration information (no OnTargetConnect)
    GEL_LoadGel("$(GEL_file_dir)//DRA7xx_SMP_config.gel");

    // Tracing
    // GEL_LoadGel("$(GEL_file_dir)//DRA7xx_stm.gel");
    // GEL_LoadGel("$(GEL_file_dir)//DRA7xx_tpiu.gel");

    /*------------------ Memory Map Config -------------------*/
    GEL_MapOff();
    GEL_MapReset();
    memorymap_init();
    GEL_MapOn();

    GEL_TextOut("--->>> DRA7xx Cortex A15 Startup Sequence DONE! <<<---\n");
}


memorymap_init()
{
    GEL_MapAddStr(0x00000000, 0, 0x20000000, "R|W|AS4", 0);     /* GPMC */
    GEL_MapAddStr(0x20000000, 0, 0x10000000, "R|W|AS4", 0);     /* PCIe */

    GEL_MapAddStr(0x40000000, 0, 0x00038000, "R|AS4", 0);       /* Secure ROM - 220KBytes */
    GEL_MapAddStr(0x40038000, 0, 0x0000C000, "R|AS4", 0);       /* Public ROM - 48KBytes */

    GEL_MapAddStr(0x402F0000, 0, 0x00010000, "R|W|AS4", 0);     /* MPU RAM - 48KBytes */
    GEL_MapAddStr(0x40300000, 0, 0x00080000, "R|W|AS4", 0);     /* OCMRAM1 -  */
    GEL_MapAddStr(0x40400000, 0, 0x00200000, "R|W|AS4", 0);     /* OCMRAM 2+3  */

    // DSP1/2
    GEL_MapAddStr(0x40800000, 0, 0x00808000, "R|W|AS4", 0);     /* FULL DSP1  */
    GEL_MapAddStr(0x41000000, 0, 0x00808000, "R|W|AS4", 0);     /* FULL DSP2  */

    // OCMRAM CBUF
    GEL_MapAddStr(0x41800000, 0, 0x02000000, "R|W|AS4", 0);     /* CBUF  */

    // EVE1-4, edma, tpcc, ...
    GEL_MapAddStr(0x42000000, 0, 0x00400000, "R|W|AS4", 0);     /* EVE1..3 addr space */
    GEL_MapAddStr(0x43300000, 0, 0x00300000, "R|W|AS4", 0);     /* EDMA */
    GEL_MapAddStr(0x43a00000, 0, 0x00040000, "R|W|AS4", 0);     /* OCMCROM */

    // L3MAIN, L4s
    GEL_MapAddStr(0x44000000, 0, 0x01800000, "R|W|AS4", 0);     /* L3 main1 */
    GEL_MapAddStr(0x45800000, 0, 0x00040000, "R|W|AS4", 0);     /* MCASP1 */
    GEL_MapAddStr(0x47000000, 0, 0x01000000, "R|AS4", 0);       /* STM - 16MBytes */

    GEL_MapAddStr(0x48000000, 0, 0x00200000, "R|W|AS4", 0);     /* L4PER1 */
    GEL_MapAddStr(0x48210000, 0, 0x00040000, "R|W|AS4", 0);     /* MPU  */
    GEL_MapAddStr(0x48250000, 0, 0x000A0000, "R|W|AS4", 0);     /* MPU  */
    GEL_MapAddStr(0x48970000, 0, 0x00040000, "R|W|AS4", 0);     /* MPU  */
    GEL_MapAddStr(0x48400000, 0, 0x00C00000, "R|W|AS4", 0);     /* L4PER2+3 */
    GEL_MapAddStr(0x49000000, 0, 0x01000000, "R|W|AS4", 0);     /* OCMCRAM CBUF 2 + 3 */
    GEL_MapAddStr(0x4A000000, 0, 0x00E00000, "R|W|AS4", 0);     /* L4CFG */
    GEL_MapAddStr(0x4AE00000, 0, 0x00200000, "R|W|AS4", 0);     /* L4WKUP */

    GEL_MapAddStr(0x4B200000, 0, 0x00080000, "R|W|AS4", 0);     /* PRUSS */
    GEL_MapAddStr(0x4B300000, 0, 0x00100000, "R|W|AS4", 0);     /* QSPI */

    //emif/DMM, ...
    GEL_MapAddStr(0x4C000000, 0, 0x03000000, "R|W|AS4", 0);     /* EMIF1/2, DMM */
    GEL_MapAddStr(0x50000000, 0, 0x01000000, "R|W|AS4", 0);     /* GPMC */
    GEL_MapAddStr(0x51000000, 0, 0x00800000, "R|W|AS4", 0);     /* PCIESS1 */
    GEL_MapAddStr(0x54000000, 0, 0x00800000, "R|W|AS4", 0);     /* L3INSTR */
    GEL_MapAddStr(0x54800000, 0, 0x00800000, "R|W|AS4", 0);     /* DEBUGSS */
    GEL_MapAddStr(0x54140000, 0, 0x00800000, "R|W|AS4", 0);     /* DEBUGSS CONFIG*/
    GEL_MapAddStr(0x56000000, 0, 0x02000000, "R|W|AS4", 0);     /* GPU */
    GEL_MapAddStr(0x55000000, 0, 0x00800000, "R|W|AS4", 0);     /* IPU2 */
    GEL_MapAddStr(0x58000000, 0, 0x00800000, "R|W|AS4", 0);     /* DSS */
    GEL_MapAddStr(0x58800000, 0, 0x00800000, "R|W|AS4", 0);     /* IPU1 */
    GEL_MapAddStr(0x5a000000, 0, 0x01400000, "R|W|AS4", 0);     /* IVA Global */

    // Space addressing - big memories here
    GEL_MapAddStr(0x5c000000, 0, 0x04000000, "R|W|AS4", 0);     /* QSPI */
    GEL_MapAddStr(0x60000000, 0, 0x20000000, "R|W|AS4", 0);     /* DMM, tiled area */

    GEL_MapAddStr(0x80000000, 0, 0x40000000, "R|W|AS4", 0);     /* DDR Area */

    if (MPU_SMP_Enable)
    {
        GEL_TextOut("DDR mapped as shared with cross triggering for SMP Configrations.\n");
        GEL_TextOut("    Default memory configurations are determined by the SYS/BIOS \n");
        GEL_TextOut("    memory map defined in the ti.platforms.evmDRA7xx platform from\n");
        GEL_TextOut("    <bios_path>/packages/ti/platforms/evmDRA7xx.\n");
        GEL_MapAddStr(0x8B000000, 0, 0x1000000, "R|W|AS4|SH1C|CACHE", 0);     /* MPU Program Memory (16 MB) */
    }
}
