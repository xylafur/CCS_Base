#define WR_MEM_32(addr, data)    *(unsigned int*)(addr) =(unsigned int)(data)
#define RD_MEM_32(addr) 	  	 *(unsigned int*)(addr)
#define uint32_t 			     unsigned int

#define CTRL_MODULE_BASE_ADDR  0x4A002000
#define SYSCFG_PAD_MLBP_SIG_IO_CTRL	(CTRL_MODULE_BASE_ADDR + 0x6C8)
#define SYSCFG_PAD_MLBP_DAT_IO_CTRL	(CTRL_MODULE_BASE_ADDR + 0x6CC)
#define SYSCFG_PAD_MLBP_CLK_BG_CTRL	(CTRL_MODULE_BASE_ADDR + 0x6D0)

menuitem "DRA7xxP Misc Module configurations"
hotmenu MLB_ClkEnable_API()
{
	MLB_ClkEnable();
}

MLB_ClkEnable()
{
	uint32_t reg_val;
    GEL_TextOut("--->>> MLB Configuration is in progress ... <<<---\n");

	/* Enable the L4_PER CLK DOMAIN */
    prcm_set_clkdomain_state(L4PER_CM_CORE, L4PER_CM_CORE__CM_L4PER_CLKSTCTRL, SW_WKUP );
    GEL_TextOut("DEBUG: Enable L4_PER Clock Domain done \n");

    prcm_set_clkdomain_state(L3INIT_CM_CORE, L3INIT_CM_CORE__CM_L3INIT_CLKSTCTRL, SW_WKUP );
    GEL_TextOut("DEBUG: Enable L3_INIT Clock Domain done \n");

	prcm_set_clkdomain_state(L4PER_CM_CORE, L4PER_CM_CORE__CM_L4PER2_CLKSTCTRL, SW_WKUP );
    GEL_TextOut("DEBUG: Enable L4_PER2 Clock Domain done \n");

	prcm_set_clkdomain_state(L4PER_CM_CORE, L4PER_CM_CORE__CM_L4PER3_CLKSTCTRL, SW_WKUP );
    GEL_TextOut("DEBUG: Enable L4_PER3 Clock Domain done \n");

    prcm_set_module_mode(L3INIT_CM_CORE, L3INIT_CM_CORE__CM_L3INIT_MLB_SS_CLKCTRL, MODE_ENABLED, 0x00000000, 0x00000000);
    GEL_TextOut("DEBUG: Enable MLB_SS Clocks done \n");

	reg_val = RD_MEM_32(L3INIT_CM_CORE + L3INIT_CM_CORE__CM_L3INIT_MLB_SS_CLKCTRL);
	if ((reg_val & 0x000F0002) == 0x02)
    {
		GEL_TextOut("DEBUG: MLB_SS is functional & out of standby \n");
	};
	if ((reg_val & 0x000F0002) == 0x40002)
    {
		GEL_TextOut("DEBUG: MLB_SS is functional & in standby \n");
	};
	if ((reg_val & 0x000F0002) == 0x70002)
    {
		GEL_TextOut("ERROR: MLB_SS is not - functional & in standby \n");
	};

	DRA7xxP_IO_MLB_6Pin_Config();
    GEL_TextOut("DEBUG: MLB IO configuration done for 6 pin mode \n");

	DRA7xxP_PAD_MLB_3Pin_Config();
    GEL_TextOut("DEBUG: MLB PAD configuration done for 6 pin mode \n");

    GEL_TextOut("--->>> MLB Configuration is in DONE! ... <<<---\n");
}

DRA7xxP_IO_MLB_6Pin_Config()
{
    //Power ON for SIG TX and RX (bits 4 and 5 - active low)
    //Enable external resistors (bit 3)
	WR_MEM_32(SYSCFG_PAD_MLBP_SIG_IO_CTRL, 0x00000008);

    //Power ON for DAT TX and RX (bits 4 and 5 - active low)
    //Enable external resistors (bit 3)
	WR_MEM_32(SYSCFG_PAD_MLBP_DAT_IO_CTRL, 0x00000008);

    //Configure Trim value for MLB Bandgap (bits 2-7)
	WR_MEM_32(SYSCFG_PAD_MLBP_CLK_BG_CTRL, 0x00000080);
}

DRA7xxP_PAD_MLB_3Pin_Config()
{
	//MLB CLK
    SYSCFG_WR_CFG_PAD (SYSCFG_PAD_MCASP5_ACLKX,
        SYSCFG_PAD_MCASP5_ACLKX_MLB_CLK,
        SYSCFG_PULLUD_ENABLE_DISABLE,
        SYSCFG_PULLTYPE_SELECT_PULLDOWN,
        SYSCFG_INPUT_ENABLE_ENABLE,
        SYSCFG_SLEW_CONTROL_NA,
        SYSCFG_WAKEUP_ENABLE_DISABLE);

    //MLB SIG
    SYSCFG_WR_CFG_PAD (SYSCFG_PAD_MCASP5_AXR0,
        SYSCFG_PAD_MCASP5_AXR0_MLB_SIG,
        SYSCFG_PULLUD_ENABLE_DISABLE,
        SYSCFG_PULLTYPE_SELECT_PULLDOWN,
        SYSCFG_INPUT_ENABLE_ENABLE,
        SYSCFG_SLEW_CONTROL_NA,
        SYSCFG_WAKEUP_ENABLE_DISABLE);

    //MLB DAT
    SYSCFG_WR_CFG_PAD (SYSCFG_PAD_MCASP5_AXR1,
        SYSCFG_PAD_MCASP5_AXR1_MLB_DAT,
        SYSCFG_PULLUD_ENABLE_DISABLE,
        SYSCFG_PULLTYPE_SELECT_PULLDOWN,
        SYSCFG_INPUT_ENABLE_ENABLE,
        SYSCFG_SLEW_CONTROL_NA,
        SYSCFG_WAKEUP_ENABLE_DISABLE);
}
